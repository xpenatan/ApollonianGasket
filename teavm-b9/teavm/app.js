"use strict";
(function(root, module) {
    if (typeof define === 'function' && define.amd) {
        define(['exports'], function(exports)  {
            module(root, exports);
        });
    } else if (typeof exports === 'object' && exports !== null && typeof exports.nodeName !== 'string') {
        module(global, exports);
    } else {
        module(root, root);
    }
}(typeof self !== 'undefined' ? self : this, function($rt_globals, $rt_exports) {
    var $rt_seed = 2463534242;
    function $rt_nextId() {
        var x = $rt_seed;
        x ^= x << 13;
        x ^= x >>> 17;
        x ^= x << 5;
        $rt_seed = x;
        return x;
    }
    function $rt_compare(a, b) {
        return a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1;
    }
    function $rt_isInstance(obj, cls) {
        return obj instanceof $rt_objcls() && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls);
    }
    function $rt_isAssignable(from, to) {
        if (from === to) {
            return true;
        }
        if (to.$meta.item !== null) {
            return from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
        }
        var supertypes = from.$meta.supertypes;
        for (var i = 0;i < supertypes.length;i = i + 1 | 0) {
            if ($rt_isAssignable(supertypes[i], to)) {
                return true;
            }
        }
        return false;
    }
    function $rt_castToInterface(obj, cls) {
        if (obj !== null && !$rt_isInstance(obj, cls)) {
            $rt_throwCCE();
        }
        return obj;
    }
    function $rt_castToClass(obj, cls) {
        if (obj !== null && !(obj instanceof cls)) {
            $rt_throwCCE();
        }
        return obj;
    }
    $rt_globals.Array.prototype.fill = $rt_globals.Array.prototype.fill || function(value, start, end) {
        var len = this.length;
        if (!len) return this;
        start = start | 0;
        var i = start < 0 ? $rt_globals.Math.max(len + start, 0) : $rt_globals.Math.min(start, len);
        end = end === $rt_globals.undefined ? len : end | 0;
        end = end < 0 ? $rt_globals.Math.max(len + end, 0) : $rt_globals.Math.min(end, len);
        for (;i < end;i++) {
            this[i] = value;
        }
        return this;
    };
    function $rt_createArray(cls, sz) {
        var data = new $rt_globals.Array(sz);
        data.fill(null);
        return new $rt_array(cls, data);
    }
    function $rt_createArrayFromData(cls, init) {
        return $rt_wrapArray(cls, init);
    }
    function $rt_wrapArray(cls, data) {
        return new $rt_array(cls, data);
    }
    function $rt_createUnfilledArray(cls, sz) {
        return new $rt_array(cls, new $rt_globals.Array(sz));
    }
    function $rt_createNumericArray(cls, nativeArray) {
        return new $rt_array(cls, nativeArray);
    }
    var $rt_createLongArray;
    var $rt_createLongArrayFromData;
    if (typeof $rt_globals.BigInt64Array !== 'function') {
        $rt_createLongArray = function(sz) {
            var data = new $rt_globals.Array(sz);
            var arr = new $rt_array($rt_longcls(), data);
            data.fill(Long_ZERO);
            return arr;
        };
        $rt_createLongArrayFromData = function(init) {
            return new $rt_array($rt_longcls(), init);
        };
    } else {
        $rt_createLongArray = function(sz) {
            return $rt_createNumericArray($rt_longcls(), new $rt_globals.BigInt64Array(sz));
        };
        $rt_createLongArrayFromData = function(data) {
            var buffer = new $rt_globals.BigInt64Array(data.length);
            buffer.set(data);
            return $rt_createNumericArray($rt_longcls(), buffer);
        };
    }
    function $rt_createCharArray(sz) {
        return $rt_createNumericArray($rt_charcls(), new $rt_globals.Uint16Array(sz));
    }
    function $rt_createCharArrayFromData(data) {
        var buffer = new $rt_globals.Uint16Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_charcls(), buffer);
    }
    function $rt_createByteArray(sz) {
        return $rt_createNumericArray($rt_bytecls(), new $rt_globals.Int8Array(sz));
    }
    function $rt_createByteArrayFromData(data) {
        var buffer = new $rt_globals.Int8Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_bytecls(), buffer);
    }
    function $rt_createShortArray(sz) {
        return $rt_createNumericArray($rt_shortcls(), new $rt_globals.Int16Array(sz));
    }
    function $rt_createShortArrayFromData(data) {
        var buffer = new $rt_globals.Int16Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_shortcls(), buffer);
    }
    function $rt_createIntArray(sz) {
        return $rt_createNumericArray($rt_intcls(), new $rt_globals.Int32Array(sz));
    }
    function $rt_createIntArrayFromData(data) {
        var buffer = new $rt_globals.Int32Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_intcls(), buffer);
    }
    function $rt_createBooleanArray(sz) {
        return $rt_createNumericArray($rt_booleancls(), new $rt_globals.Int8Array(sz));
    }
    function $rt_createBooleanArrayFromData(data) {
        var buffer = new $rt_globals.Int8Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_booleancls(), buffer);
    }
    function $rt_createFloatArray(sz) {
        return $rt_createNumericArray($rt_floatcls(), new $rt_globals.Float32Array(sz));
    }
    function $rt_createFloatArrayFromData(data) {
        var buffer = new $rt_globals.Float32Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_floatcls(), buffer);
    }
    function $rt_createDoubleArray(sz) {
        return $rt_createNumericArray($rt_doublecls(), new $rt_globals.Float64Array(sz));
    }
    function $rt_createDoubleArrayFromData(data) {
        var buffer = new $rt_globals.Float64Array(data.length);
        buffer.set(data);
        return $rt_createNumericArray($rt_doublecls(), buffer);
    }
    function $rt_arraycls(cls) {
        var result = cls.$array;
        if (result === null) {
            var arraycls = {  };
            var name = "[" + cls.$meta.binaryName;
            arraycls.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false, simpleName : null, declaringClass : null, enclosingClass : null };
            arraycls.classObject = null;
            arraycls.$array = null;
            result = arraycls;
            cls.$array = arraycls;
        }
        return result;
    }
    function $rt_createcls() {
        return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
    }
    function $rt_createPrimitiveCls(name, binaryName) {
        var cls = $rt_createcls();
        cls.$meta.primitive = true;
        cls.$meta.name = name;
        cls.$meta.binaryName = binaryName;
        cls.$meta.enum = false;
        cls.$meta.item = null;
        cls.$meta.simpleName = null;
        cls.$meta.declaringClass = null;
        cls.$meta.enclosingClass = null;
        return cls;
    }
    var $rt_booleanclsCache = null;
    function $rt_booleancls() {
        if ($rt_booleanclsCache === null) {
            $rt_booleanclsCache = $rt_createPrimitiveCls("boolean", "Z");
        }
        return $rt_booleanclsCache;
    }
    var $rt_charclsCache = null;
    function $rt_charcls() {
        if ($rt_charclsCache === null) {
            $rt_charclsCache = $rt_createPrimitiveCls("char", "C");
        }
        return $rt_charclsCache;
    }
    var $rt_byteclsCache = null;
    function $rt_bytecls() {
        if ($rt_byteclsCache === null) {
            $rt_byteclsCache = $rt_createPrimitiveCls("byte", "B");
        }
        return $rt_byteclsCache;
    }
    var $rt_shortclsCache = null;
    function $rt_shortcls() {
        if ($rt_shortclsCache === null) {
            $rt_shortclsCache = $rt_createPrimitiveCls("short", "S");
        }
        return $rt_shortclsCache;
    }
    var $rt_intclsCache = null;
    function $rt_intcls() {
        if ($rt_intclsCache === null) {
            $rt_intclsCache = $rt_createPrimitiveCls("int", "I");
        }
        return $rt_intclsCache;
    }
    var $rt_longclsCache = null;
    function $rt_longcls() {
        if ($rt_longclsCache === null) {
            $rt_longclsCache = $rt_createPrimitiveCls("long", "J");
        }
        return $rt_longclsCache;
    }
    var $rt_floatclsCache = null;
    function $rt_floatcls() {
        if ($rt_floatclsCache === null) {
            $rt_floatclsCache = $rt_createPrimitiveCls("float", "F");
        }
        return $rt_floatclsCache;
    }
    var $rt_doubleclsCache = null;
    function $rt_doublecls() {
        if ($rt_doubleclsCache === null) {
            $rt_doubleclsCache = $rt_createPrimitiveCls("double", "D");
        }
        return $rt_doubleclsCache;
    }
    var $rt_voidclsCache = null;
    function $rt_voidcls() {
        if ($rt_voidclsCache === null) {
            $rt_voidclsCache = $rt_createPrimitiveCls("void", "V");
        }
        return $rt_voidclsCache;
    }
    function $rt_throw(ex) {
        throw $rt_exception(ex);
    }
    var $rt_javaExceptionProp = $rt_globals.Symbol("javaException");
    function $rt_exception(ex) {
        var err = ex.$jsException;
        if (!err) {
            var javaCause = $rt_throwableCause(ex);
            var jsCause = javaCause !== null ? javaCause.$jsException : $rt_globals.undefined;
            var cause = typeof jsCause === "object" ? { cause : jsCause } : $rt_globals.undefined;
            err = new JavaError("Java exception thrown", cause);
            if (typeof $rt_globals.Error.captureStackTrace === "function") {
                $rt_globals.Error.captureStackTrace(err);
            }
            err[$rt_javaExceptionProp] = ex;
            ex.$jsException = err;
            $rt_fillStack(err, ex);
        }
        return err;
    }
    function $rt_fillStack(err, ex) {
        if (typeof $rt_decodeStack === "function" && err.stack) {
            var stack = $rt_decodeStack(err.stack);
            var javaStack = $rt_createArray($rt_stecls(), stack.length);
            var elem;
            var noStack = false;
            for (var i = 0;i < stack.length;++i) {
                var element = stack[i];
                elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
                if (elem == null) {
                    noStack = true;
                    break;
                }
                javaStack.data[i] = elem;
            }
            if (!noStack) {
                $rt_setStack(ex, javaStack);
            }
        }
    }
    function $rt_createMultiArray(cls, dimensions) {
        var first = 0;
        for (var i = dimensions.length - 1;i >= 0;i = i - 1 | 0) {
            if (dimensions[i] === 0) {
                first = i;
                break;
            }
        }
        if (first > 0) {
            for (i = 0;i < first;i = i + 1 | 0) {
                cls = $rt_arraycls(cls);
            }
            if (first === dimensions.length - 1) {
                return $rt_createArray(cls, dimensions[first]);
            }
        }
        var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, first));
        var firstDim = dimensions[first] | 0;
        for (i = 0;i < arrays.length;i = i + 1 | 0) {
            arrays[i] = $rt_createArray(cls, firstDim);
        }
        return $rt_createMultiArrayImpl(cls, arrays, dimensions, first);
    }
    function $rt_createByteMultiArray(dimensions) {
        var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
        if (arrays.length === 0) {
            return $rt_createMultiArray($rt_bytecls(), dimensions);
        }
        var firstDim = dimensions[0] | 0;
        for (var i = 0;i < arrays.length;i = i + 1 | 0) {
            arrays[i] = $rt_createByteArray(firstDim);
        }
        return $rt_createMultiArrayImpl($rt_bytecls(), arrays, dimensions);
    }
    function $rt_createCharMultiArray(dimensions) {
        var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
        if (arrays.length === 0) {
            return $rt_createMultiArray($rt_charcls(), dimensions);
        }
        var firstDim = dimensions[0] | 0;
        for (var i = 0;i < arrays.length;i = i + 1 | 0) {
            arrays[i] = $rt_createCharArray(firstDim);
        }
        return $rt_createMultiArrayImpl($rt_charcls(), arrays, dimensions, 0);
    }
    function $rt_createBooleanMultiArray(dimensions) {
        var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
        if (arrays.length === 0) {
            return $rt_createMultiArray($rt_booleancls(), dimensions);
        }
        var firstDim = dimensions[0] | 0;
        for (var i = 0;i < arrays.length;i = i + 1 | 0) {
            arrays[i] = $rt_createBooleanArray(firstDim);
        }
        return $rt_createMultiArrayImpl($rt_booleancls(), arrays, dimensions, 0);
    }
    function $rt_createShortMultiArray(dimensions) {
        var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
        if (arrays.length === 0) {
            return $rt_createMultiArray($rt_shortcls(), dimensions);
        }
        var firstDim = dimensions[0] | 0;
        for (var i = 0;i < arrays.length;i = i + 1 | 0) {
            arrays[i] = $rt_createShortArray(firstDim);
        }
        return $rt_createMultiArrayImpl($rt_shortcls(), arrays, dimensions, 0);
    }
    function $rt_createIntMultiArray(dimensions) {
        var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
        if (arrays.length === 0) {
            return $rt_createMultiArray($rt_intcls(), dimensions);
        }
        var firstDim = dimensions[0] | 0;
        for (var i = 0;i < arrays.length;i = i + 1 | 0) {
            arrays[i] = $rt_createIntArray(firstDim);
        }
        return $rt_createMultiArrayImpl($rt_intcls(), arrays, dimensions, 0);
    }
    function $rt_createLongMultiArray(dimensions) {
        var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
        if (arrays.length === 0) {
            return $rt_createMultiArray($rt_longcls(), dimensions);
        }
        var firstDim = dimensions[0] | 0;
        for (var i = 0;i < arrays.length;i = i + 1 | 0) {
            arrays[i] = $rt_createLongArray(firstDim);
        }
        return $rt_createMultiArrayImpl($rt_longcls(), arrays, dimensions, 0);
    }
    function $rt_createFloatMultiArray(dimensions) {
        var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
        if (arrays.length === 0) {
            return $rt_createMultiArray($rt_floatcls(), dimensions);
        }
        var firstDim = dimensions[0] | 0;
        for (var i = 0;i < arrays.length;i = i + 1 | 0) {
            arrays[i] = $rt_createFloatArray(firstDim);
        }
        return $rt_createMultiArrayImpl($rt_floatcls(), arrays, dimensions, 0);
    }
    function $rt_createDoubleMultiArray(dimensions) {
        var arrays = new $rt_globals.Array($rt_primitiveArrayCount(dimensions, 0));
        if (arrays.length === 0) {
            return $rt_createMultiArray($rt_doublecls(), dimensions);
        }
        var firstDim = dimensions[0] | 0;
        for (var i = 0;i < arrays.length;i = i + 1 | 0) {
            arrays[i] = $rt_createDoubleArray(firstDim);
        }
        return $rt_createMultiArrayImpl($rt_doublecls(), arrays, dimensions, 0);
    }
    function $rt_primitiveArrayCount(dimensions, start) {
        var val = dimensions[start + 1] | 0;
        for (var i = start + 2;i < dimensions.length;i = i + 1 | 0) {
            val = val * (dimensions[i] | 0) | 0;
            if (val === 0) {
                break;
            }
        }
        return val;
    }
    function $rt_createMultiArrayImpl(cls, arrays, dimensions, start) {
        var limit = arrays.length;
        for (var i = start + 1 | 0;i < dimensions.length;i = i + 1 | 0) {
            cls = $rt_arraycls(cls);
            var dim = dimensions[i];
            var index = 0;
            var packedIndex = 0;
            while (index < limit) {
                var arr = $rt_createUnfilledArray(cls, dim);
                for (var j = 0;j < dim;j = j + 1 | 0) {
                    arr.data[j] = arrays[index];
                    index = index + 1 | 0;
                }
                arrays[packedIndex] = arr;
                packedIndex = packedIndex + 1 | 0;
            }
            limit = packedIndex;
        }
        return arrays[0];
    }
    function $rt_assertNotNaN(value) {
        if (typeof value === 'number' && $rt_globals.isNaN(value)) {
            throw "NaN";
        }
        return value;
    }
    function $rt_createOutputFunction(printFunction) {
        var buffer = "";
        var utf8Buffer = 0;
        var utf8Remaining = 0;
        function putCodePoint(ch) {
            if (ch === 0xA) {
                printFunction(buffer);
                buffer = "";
            } else if (ch < 0x10000) {
                buffer += $rt_globals.String.fromCharCode(ch);
            } else {
                ch = ch - 0x10000 | 0;
                var hi = (ch >> 10) + 0xD800;
                var lo = (ch & 0x3FF) + 0xDC00;
                buffer += $rt_globals.String.fromCharCode(hi, lo);
            }
        }
        return function(ch) {
            if ((ch & 0x80) === 0) {
                putCodePoint(ch);
            } else if ((ch & 0xC0) === 0x80) {
                if (utf8Buffer > 0) {
                    utf8Remaining <<= 6;
                    utf8Remaining |= ch & 0x3F;
                    if ( --utf8Buffer === 0) {
                        putCodePoint(utf8Remaining);
                    }
                }
            } else if ((ch & 0xE0) === 0xC0) {
                utf8Remaining = ch & 0x1F;
                utf8Buffer = 1;
            } else if ((ch & 0xF0) === 0xE0) {
                utf8Remaining = ch & 0x0F;
                utf8Buffer = 2;
            } else if ((ch & 0xF8) === 0xF0) {
                utf8Remaining = ch & 0x07;
                utf8Buffer = 3;
            }
        };
    }
    var $rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : typeof $rt_globals.console === "object" ? $rt_createOutputFunction(function(msg) {
        $rt_globals.console.info(msg);
    }) : function() {
    };
    var $rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : typeof $rt_globals.console === "object" ? $rt_createOutputFunction(function(msg) {
        $rt_globals.console.error(msg);
    }) : function() {
    };
    var $rt_packageData = null;
    function $rt_packages(data) {
        var i = 0;
        var packages = new $rt_globals.Array(data.length);
        for (var j = 0;j < data.length;++j) {
            var prefixIndex = data[i++];
            var prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
            packages[j] = prefix + data[i++] + ".";
        }
        $rt_packageData = packages;
    }
    function $rt_metadata(data) {
        var packages = $rt_packageData;
        var i = 0;
        while (i < data.length) {
            var cls = data[i++];
            cls.$meta = {  };
            var m = cls.$meta;
            var className = data[i++];
            m.name = className !== 0 ? className : null;
            if (m.name !== null) {
                var packageIndex = data[i++];
                if (packageIndex >= 0) {
                    m.name = packages[packageIndex] + m.name;
                }
            }
            m.binaryName = "L" + m.name + ";";
            var superclass = data[i++];
            m.superclass = superclass !== 0 ? superclass : null;
            m.supertypes = data[i++];
            if (m.superclass) {
                m.supertypes.push(m.superclass);
                cls.prototype = $rt_globals.Object.create(m.superclass.prototype);
            } else {
                cls.prototype = {  };
            }
            var flags = data[i++];
            m.enum = (flags & 8) !== 0;
            m.flags = flags;
            m.primitive = false;
            m.item = null;
            cls.prototype.constructor = cls;
            cls.classObject = null;
            m.accessLevel = data[i++];
            var innerClassInfo = data[i++];
            if (innerClassInfo === 0) {
                m.simpleName = null;
                m.declaringClass = null;
                m.enclosingClass = null;
            } else {
                var enclosingClass = innerClassInfo[0];
                m.enclosingClass = enclosingClass !== 0 ? enclosingClass : null;
                var declaringClass = innerClassInfo[1];
                m.declaringClass = declaringClass !== 0 ? declaringClass : null;
                var simpleName = innerClassInfo[2];
                m.simpleName = simpleName !== 0 ? simpleName : null;
            }
            var clinit = data[i++];
            cls.$clinit = clinit !== 0 ? clinit : function() {
            };
            var virtualMethods = data[i++];
            if (virtualMethods !== 0) {
                for (var j = 0;j < virtualMethods.length;j += 2) {
                    var name = virtualMethods[j];
                    var func = virtualMethods[j + 1];
                    if (typeof name === 'string') {
                        name = [name];
                    }
                    for (var k = 0;k < name.length;++k) {
                        cls.prototype[name[k]] = func;
                    }
                }
            }
            cls.$array = null;
        }
    }
    function $rt_wrapFunction0(f) {
        return function() {
            return f(this);
        };
    }
    function $rt_wrapFunction1(f) {
        return function(p1) {
            return f(this, p1);
        };
    }
    function $rt_wrapFunction2(f) {
        return function(p1, p2) {
            return f(this, p1, p2);
        };
    }
    function $rt_wrapFunction3(f) {
        return function(p1, p2, p3) {
            return f(this, p1, p2, p3, p3);
        };
    }
    function $rt_wrapFunction4(f) {
        return function(p1, p2, p3, p4) {
            return f(this, p1, p2, p3, p4);
        };
    }
    function $rt_threadStarter(f) {
        return function() {
            var args = $rt_globals.Array.prototype.slice.apply(arguments);
            $rt_startThread(function() {
                f.apply(this, args);
            });
        };
    }
    function $rt_mainStarter(f) {
        return function(args, callback) {
            if (!args) {
                args = [];
            }
            var javaArgs = $rt_createArray($rt_objcls(), args.length);
            for (var i = 0;i < args.length;++i) {
                javaArgs.data[i] = $rt_str(args[i]);
            }
            $rt_startThread(function() {
                f.call(null, javaArgs);
            }, callback);
        };
    }
    var $rt_stringPool_instance;
    function $rt_stringPool(strings) {
        $rt_stringPool_instance = new $rt_globals.Array(strings.length);
        for (var i = 0;i < strings.length;++i) {
            $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
        }
    }
    function $rt_s(index) {
        return $rt_stringPool_instance[index];
    }
    function $rt_eraseClinit(target) {
        return target.$clinit = function() {
        };
    }
    var $rt_numberConversionBuffer = new $rt_globals.ArrayBuffer(16);
    var $rt_numberConversionView = new $rt_globals.DataView($rt_numberConversionBuffer);
    var $rt_numberConversionFloatArray = new $rt_globals.Float32Array($rt_numberConversionBuffer);
    var $rt_numberConversionDoubleArray = new $rt_globals.Float64Array($rt_numberConversionBuffer);
    var $rt_numberConversionIntArray = new $rt_globals.Int32Array($rt_numberConversionBuffer);
    var $rt_doubleToRawLongBits;
    var $rt_longBitsToDouble;
    if (typeof $rt_globals.BigInt !== 'function') {
        $rt_doubleToRawLongBits = function(n) {
            $rt_numberConversionView.setFloat64(0, n, true);
            return new Long($rt_numberConversionView.getInt32(0, true), $rt_numberConversionView.getInt32(4, true));
        };
        $rt_longBitsToDouble = function(n) {
            $rt_numberConversionView.setInt32(0, n.lo, true);
            $rt_numberConversionView.setInt32(4, n.hi, true);
            return $rt_numberConversionView.getFloat64(0, true);
        };
    } else if (typeof $rt_globals.BigInt64Array !== 'function') {
        $rt_doubleToRawLongBits = function(n) {
            $rt_numberConversionView.setFloat64(0, n, true);
            var lo = $rt_numberConversionView.getInt32(0, true);
            var hi = $rt_numberConversionView.getInt32(4, true);
            return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(32, $rt_globals.BigInt(lo)) | $rt_globals.BigInt(hi) << $rt_globals.BigInt(32));
        };
        $rt_longBitsToDouble = function(n) {
            $rt_numberConversionView.setFloat64(0, n, true);
            var lo = $rt_numberConversionView.getInt32(0, true);
            var hi = $rt_numberConversionView.getInt32(4, true);
            return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(32, $rt_globals.BigInt(lo)) | $rt_globals.BigInt(hi) << $rt_globals.BigInt(32));
        };
    } else {
        var $rt_numberConversionLongArray = new $rt_globals.BigInt64Array($rt_numberConversionBuffer);
        $rt_doubleToRawLongBits = function(n) {
            $rt_numberConversionDoubleArray[0] = n;
            return $rt_numberConversionLongArray[0];
        };
        $rt_longBitsToDouble = function(n) {
            $rt_numberConversionLongArray[0] = n;
            return $rt_numberConversionDoubleArray[0];
        };
    }
    function $rt_floatToRawIntBits(n) {
        $rt_numberConversionFloatArray[0] = n;
        return $rt_numberConversionIntArray[0];
    }
    function $rt_intBitsToFloat(n) {
        $rt_numberConversionIntArray[0] = n;
        return $rt_numberConversionFloatArray[0];
    }
    function $rt_equalDoubles(a, b) {
        if (a !== a) {
            return b !== b;
        }
        $rt_numberConversionDoubleArray[0] = a;
        $rt_numberConversionDoubleArray[1] = b;
        return $rt_numberConversionIntArray[0] === $rt_numberConversionIntArray[2] && $rt_numberConversionIntArray[1] === $rt_numberConversionIntArray[3];
    }
    var JavaError;
    if (typeof $rt_globals.Reflect === 'object') {
        var defaultMessage = $rt_globals.Symbol("defaultMessage");
        JavaError = function JavaError(message, cause) {
            var self = $rt_globals.Reflect.construct($rt_globals.Error, [$rt_globals.undefined, cause], JavaError);
            $rt_globals.Object.setPrototypeOf(self, JavaError.prototype);
            self[defaultMessage] = message;
            return self;
        };
        JavaError.prototype = $rt_globals.Object.create($rt_globals.Error.prototype, { constructor : { configurable : true, writable : true, value : JavaError }, message : { get : function() {
            try {
                var javaException = this[$rt_javaExceptionProp];
                if (typeof javaException === 'object') {
                    var javaMessage = $rt_throwableMessage(javaException);
                    if (typeof javaMessage === "object") {
                        return javaMessage !== null ? javaMessage.toString() : null;
                    }
                }
                return this[defaultMessage];
            } catch (e){
                return "Exception occurred trying to extract Java exception message: " + e;
            }
        } } });
    } else {
        JavaError = $rt_globals.Error;
    }
    function $rt_javaException(e) {
        return e instanceof $rt_globals.Error && typeof e[$rt_javaExceptionProp] === 'object' ? e[$rt_javaExceptionProp] : null;
    }
    function $rt_jsException(e) {
        return typeof e.$jsException === 'object' ? e.$jsException : null;
    }
    function $rt_wrapException(err) {
        var ex = err[$rt_javaExceptionProp];
        if (!ex) {
            ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
            err[$rt_javaExceptionProp] = ex;
            ex.$jsException = err;
            $rt_fillStack(err, ex);
        }
        return ex;
    }
    function $dbg_class(obj) {
        var cls = obj.constructor;
        var arrayDegree = 0;
        while (cls.$meta && cls.$meta.item) {
            ++arrayDegree;
            cls = cls.$meta.item;
        }
        var clsName = "";
        if (cls === $rt_booleancls()) {
            clsName = "boolean";
        } else if (cls === $rt_bytecls()) {
            clsName = "byte";
        } else if (cls === $rt_shortcls()) {
            clsName = "short";
        } else if (cls === $rt_charcls()) {
            clsName = "char";
        } else if (cls === $rt_intcls()) {
            clsName = "int";
        } else if (cls === $rt_longcls()) {
            clsName = "long";
        } else if (cls === $rt_floatcls()) {
            clsName = "float";
        } else if (cls === $rt_doublecls()) {
            clsName = "double";
        } else {
            clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
        }
        while (arrayDegree-- > 0) {
            clsName += "[]";
        }
        return clsName;
    }
    function Long(lo, hi) {
        this.lo = lo | 0;
        this.hi = hi | 0;
    }
    Long.prototype.__teavm_class__ = function() {
        return "long";
    };
    function Long_isPositive(a) {
        return (a.hi & 0x80000000) === 0;
    }
    function Long_isNegative(a) {
        return (a.hi & 0x80000000) !== 0;
    }
    var Long_MAX_NORMAL = 1 << 18;
    var Long_ZERO;
    var Long_create;
    var Long_fromInt;
    var Long_fromNumber;
    var Long_toNumber;
    var Long_hi;
    var Long_lo;
    if (typeof $rt_globals.BigInt !== "function") {
        Long.prototype.toString = function() {
            var result = [];
            var n = this;
            var positive = Long_isPositive(n);
            if (!positive) {
                n = Long_neg(n);
            }
            var radix = new Long(10, 0);
            do  {
                var divRem = Long_divRem(n, radix);
                result.push($rt_globals.String.fromCharCode(48 + divRem[1].lo));
                n = divRem[0];
            }while (n.lo !== 0 || n.hi !== 0);
            result = (result.reverse()).join('');
            return positive ? result : "-" + result;
        };
        Long.prototype.valueOf = function() {
            return Long_toNumber(this);
        };
        Long_ZERO = new Long(0, 0);
        Long_fromInt = function(val) {
            return new Long(val,  -(val < 0) | 0);
        };
        Long_fromNumber = function(val) {
            if (val >= 0) {
                return new Long(val | 0, val / 0x100000000 | 0);
            } else {
                return Long_neg(new Long( -val | 0,  -val / 0x100000000 | 0));
            }
        };
        Long_create = function(lo, hi) {
            return new Long(lo, hi);
        };
        Long_toNumber = function(val) {
            return 0x100000000 * val.hi + (val.lo >>> 0);
        };
        Long_hi = function(val) {
            return val.hi;
        };
        Long_lo = function(val) {
            return val.lo;
        };
    } else {
        Long_ZERO = $rt_globals.BigInt(0);
        Long_create = function(lo, hi) {
            return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, $rt_globals.BigInt(lo)) | $rt_globals.BigInt.asUintN(64, $rt_globals.BigInt(hi) << $rt_globals.BigInt(32)));
        };
        Long_fromInt = function(val) {
            return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt(val | 0));
        };
        Long_fromNumber = function(val) {
            return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt(val >= 0 ? $rt_globals.Math.floor(val) : $rt_globals.Math.ceil(val)));
        };
        Long_toNumber = function(val) {
            return $rt_globals.Number(val);
        };
        Long_hi = function(val) {
            return $rt_globals.Number($rt_globals.BigInt.asIntN(64, val >> $rt_globals.BigInt(32))) | 0;
        };
        Long_lo = function(val) {
            return $rt_globals.Number($rt_globals.BigInt.asIntN(32, val)) | 0;
        };
    }
    var $rt_imul = $rt_globals.Math.imul || function(a, b) {
        var ah = a >>> 16 & 0xFFFF;
        var al = a & 0xFFFF;
        var bh = b >>> 16 & 0xFFFF;
        var bl = b & 0xFFFF;
        return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
    };
    var $rt_udiv = function(a, b) {
        return (a >>> 0) / (b >>> 0) >>> 0;
    };
    var $rt_umod = function(a, b) {
        return (a >>> 0) % (b >>> 0) >>> 0;
    };
    var $rt_ucmp = function(a, b) {
        a >>>= 0;
        b >>>= 0;
        return a < b ?  -1 : a > b ? 1 : 0;
    };
    function $rt_checkBounds(index, array) {
        if (index < 0 || index >= array.length) {
            $rt_throwAIOOBE();
        }
        return index;
    }
    function $rt_checkUpperBound(index, array) {
        if (index >= array.length) {
            $rt_throwAIOOBE();
        }
        return index;
    }
    function $rt_checkLowerBound(index) {
        if (index < 0) {
            $rt_throwAIOOBE();
        }
        return index;
    }
    function $rt_classWithoutFields(superclass) {
        if (superclass === 0) {
            return function() {
            };
        }
        if (superclass === void 0) {
            superclass = $rt_objcls();
        }
        return function() {
            superclass.call(this);
        };
    }
    function $rt_setCloneMethod(target, f) {
        target.$clone = f;
    }
    function $rt_cls(cls) {
        return jl_Class_getClass(cls);
    }
    function $rt_str(str) {
        if (str === null) {
            return null;
        }
        var characters = $rt_createCharArray(str.length);
        var charsBuffer = characters.data;
        for (var i = 0; i < str.length; i = (i + 1) | 0) {
            charsBuffer[i] = str.charCodeAt(i) & 0xFFFF;
        }
        return jl_String__init_(characters);
    }
    function $rt_ustr(str) {
        if (str === null) {
            return null;
        }
        var data = str.$characters.data;
        var result = "";
        for (var i = 0; i < data.length; i = (i + 1) | 0) {
            result += String.fromCharCode(data[i]);
        }
        return result;
    }
    function $rt_objcls() { return jl_Object; }
    function $rt_stecls() {
        return jl_StackTraceElement;
    }
    function $rt_throwableMessage(t) {
        return jl_Throwable_getMessage(t);
    }
    function $rt_throwableCause(t) {
        return jl_Throwable_getCause(t);
    }
    function $rt_nullCheck(val) {
        if (val === null) {
            $rt_throw(jl_NullPointerException__init_());
        }
        return val;
    }
    function $rt_intern(str) {
        return str;
    }
    function $rt_getThread() {
        return jl_Thread_currentThread();
    }
    function $rt_setThread(t) {
        return jl_Thread_setCurrentThread(t);
    }
    function $rt_createException(message) {
        return jl_RuntimeException__init_(message);
    }
    function $rt_createStackElement(className, methodName, fileName, lineNumber) {
        return null;
    }
    function $rt_setStack(e, stack) {
        jl_Throwable_setStackTrace(e, stack);
    }
    function $rt_throwAIOOBE() {
    }
    function $rt_throwCCE() {
    }
    var $java = Object.create(null);
    function jl_Object() {
        this.$monitor = null;
        this.$id$ = 0;
    }
    function jl_Object__init_() {
        var var_0 = new jl_Object();
        jl_Object__init_0(var_0);
        return var_0;
    }
    function jl_Object_monitorEnterSync($o) {
        var var$2;
        if ($o.$monitor === null) {
            var$2 = new jl_Object$Monitor;
            jl_Thread_$callClinit();
            var$2.$owner = jl_Thread_currentThread0;
            $o.$monitor = var$2;
        }
        $o = $o.$monitor;
        var$2 = $o.$owner;
        if (var$2 === null) {
            jl_Thread_$callClinit();
            $o.$owner = jl_Thread_currentThread0;
        } else {
            jl_Thread_$callClinit();
            if (var$2 !== jl_Thread_currentThread0) {
                var$2 = new jl_IllegalStateException;
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = $rt_s(0);
                $rt_throw(var$2);
            }
        }
        $o.$count = $o.$count + 1 | 0;
    }
    function jl_Object_monitorExitSync($o) {
        var var$2, var$3, var$4;
        if (!jl_Object_isEmptyMonitor($o)) {
            var$2 = $o.$monitor;
            var$3 = var$2.$owner;
            jl_Thread_$callClinit();
            if (var$3 === jl_Thread_currentThread0) {
                var$4 = var$2.$count - 1 | 0;
                var$2.$count = var$4;
                if (!var$4)
                    var$2.$owner = null;
                jl_Object_isEmptyMonitor($o);
                return;
            }
        }
        $o = new jl_IllegalMonitorStateException;
        $o.$suppressionEnabled = 1;
        $o.$writableStackTrace = 1;
        $rt_throw($o);
    }
    function jl_Object_monitorEnter($o) {
        jl_Object_monitorEnter0($o, 1);
    }
    function jl_Object_monitorEnter0($o, $count) {
        var var$3, var$4, $ptr, $tmp;
        $ptr = 0;
        if ($rt_resuming()) {
            var $thread = $rt_nativeThread();
            $ptr = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();$count = $thread.pop();$o = $thread.pop();
        }
        main: while (true) { switch ($ptr) {
        case 0:
            if ($o.$monitor === null) {
                var$3 = new jl_Object$Monitor;
                jl_Thread_$callClinit();
                var$3.$owner = jl_Thread_currentThread0;
                $o.$monitor = var$3;
            }
            var$3 = $o.$monitor;
            if (var$3.$owner === null) {
                jl_Thread_$callClinit();
                var$3.$owner = jl_Thread_currentThread0;
            }
            var$4 = var$3.$owner;
            jl_Thread_$callClinit();
            if (var$4 === jl_Thread_currentThread0) {
                var$3.$count = var$3.$count + $count | 0;
                return;
            }
            $ptr = 1;
        case 1:
            jl_Object_monitorEnterWait$_asyncCall_$($o, $count);
            if ($rt_suspending()) {
                break main;
            }
            return;
        default: $rt_invalidPointer();
        }}
        $rt_nativeThread().push($o, $count, var$3, var$4, $ptr);
    }
    function jl_Object_monitorEnterWait($o, $count, $callback) {
        var $thread_0, $monitor, var$6;
        jl_Thread_$callClinit();
        $thread_0 = jl_Thread_currentThread0;
        $monitor = $o.$monitor;
        if ($monitor === null) {
            $monitor = new jl_Object$Monitor;
            $monitor.$owner = $thread_0;
            $o.$monitor = $monitor;
            if ($thread_0 !== $thread_0)
                jl_Thread_currentThread0 = $thread_0;
            jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
            $o = $o.$monitor;
            $o.$count = $o.$count + $count | 0;
            $o = null;
            $callback.$realAsyncCallback.$complete($o);
            return;
        }
        if ($monitor.$owner === null) {
            $monitor.$owner = $thread_0;
            if ($thread_0 !== $thread_0)
                jl_Thread_currentThread0 = $thread_0;
            jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
            $o = $o.$monitor;
            $o.$count = $o.$count + $count | 0;
            $o = null;
            $callback.$realAsyncCallback.$complete($o);
            return;
        }
        if ($monitor.$enteringThreads === null)
            $monitor.$enteringThreads = otp_Platform_createQueueJs$js_body$_30();
        $monitor = $monitor.$enteringThreads;
        var$6 = new jl_Object$monitorEnterWait$lambda$_6_0;
        var$6.$_0 = $thread_0;
        var$6.$_1 = $o;
        var$6.$_2 = $count;
        var$6.$_3 = $callback;
        $callback = var$6;
        $monitor.push($callback);
    }
    function jl_Object_monitorExit($o) {
        jl_Object_monitorExit0($o, 1);
    }
    function jl_Object_monitorExit0($o, $count) {
        var $monitor, var$4;
        if (!jl_Object_isEmptyMonitor($o)) {
            $monitor = $o.$monitor;
            var$4 = $monitor.$owner;
            jl_Thread_$callClinit();
            if (var$4 === jl_Thread_currentThread0) {
                $count = $monitor.$count - $count | 0;
                $monitor.$count = $count;
                if ($count > 0)
                    return;
                $monitor.$owner = null;
                $monitor = $monitor.$enteringThreads;
                if ($monitor !== null && !($monitor.length ? 0 : 1)) {
                    $monitor = new jl_Object$monitorExit$lambda$_8_0;
                    $monitor.$_00 = $o;
                    otp_Platform_schedule($monitor, 0);
                } else
                    jl_Object_isEmptyMonitor($o);
                return;
            }
        }
        $o = new jl_IllegalMonitorStateException;
        $o.$suppressionEnabled = 1;
        $o.$writableStackTrace = 1;
        $rt_throw($o);
    }
    function jl_Object_waitForOtherThreads($o) {
        var $monitor, $r, var$4;
        if (!jl_Object_isEmptyMonitor($o)) {
            $monitor = $o.$monitor;
            if ($monitor.$owner === null) {
                $o = $monitor.$enteringThreads;
                if ($o !== null && !($o.length ? 0 : 1)) {
                    $o = $monitor.$enteringThreads.shift();
                    otji_JSWrapper_$callClinit();
                    if ($o !== null && !($o instanceof $rt_objcls()))
                        $o = otji_JSWrapper_wrap($o);
                    $r = $o;
                    $monitor.$enteringThreads = null;
                    $o = $r.$_0;
                    $monitor = $r.$_1;
                    var$4 = $r.$_2;
                    $r = $r.$_3;
                    jl_Thread_$callClinit();
                    if (jl_Thread_currentThread0 !== $o)
                        jl_Thread_currentThread0 = $o;
                    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
                    $monitor = $monitor.$monitor;
                    $monitor.$owner = $o;
                    $monitor.$count = $monitor.$count + var$4 | 0;
                    $o = null;
                    $r.$realAsyncCallback.$complete($o);
                }
                return;
            }
        }
    }
    function jl_Object_isEmptyMonitor($this) {
        var $monitor, var$2;
        $monitor = $this.$monitor;
        if ($monitor === null)
            return 1;
        a: {
            if ($monitor.$owner === null) {
                var$2 = $monitor.$enteringThreads;
                if (!(var$2 !== null && !(var$2.length ? 0 : 1))) {
                    $monitor = $monitor.$notifyListeners;
                    if ($monitor === null)
                        break a;
                    if ($monitor.length ? 0 : 1)
                        break a;
                }
            }
            return 0;
        }
        $this.$monitor = null;
        return 1;
    }
    function jl_Object__init_0($this) {}
    function jl_Object_getClass($this) {
        var var$1, var$2, var$3;
        var$1 = $this.constructor;
        if (var$1 === null)
            var$2 = null;
        else {
            var$2 = var$1.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$1;
                var$3 = var$2;
                var$1.classObject = var$3;
            }
        }
        return var$2;
    }
    function jl_Object_hashCode($this) {
        var var$1, var$2;
        var$1 = $this;
        if (!var$1.$id$) {
            var$2 = $rt_nextId();
            var$1.$id$ = var$2;
        }
        return $this.$id$;
    }
    function jl_Object_equals($this, $other) {
        return $this !== $other ? 0 : 1;
    }
    function jl_Object_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.constructor;
        if (var$1 === null)
            var$2 = null;
        else {
            var$2 = var$1.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$1;
                var$3 = var$2;
                var$1.classObject = var$3;
            }
        }
        if (var$2.$name === null)
            var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
        var$1 = var$2.$name;
        var$3 = $this;
        if (!var$3.$id$) {
            var$2 = $rt_nextId();
            var$3.$id$ = var$2;
        }
        var$2 = otci_IntegerUtil_toUnsignedLogRadixString($this.$id$, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$1);
        var$5 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$5, var$5 + 1 | 0);
        var$3.$buffer.data[var$5] = 64;
        var$4 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
        var$1 = new jl_String;
        var$6 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$5);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$5);
        return var$1;
    }
    function jl_Object_identity($this) {
        var $platformThis, var$2;
        $platformThis = $this;
        if (!$platformThis.$id$) {
            var$2 = $rt_nextId();
            $platformThis.$id$ = var$2;
        }
        return $this.$id$;
    }
    function jl_Object_clone($this) {
        var $result, var$2, var$3;
        if (!$rt_isInstance($this, jl_Cloneable) && $this.constructor.$meta.item === null) {
            $result = new jl_CloneNotSupportedException;
            $result.$suppressionEnabled = 1;
            $result.$writableStackTrace = 1;
            $rt_throw($result);
        }
        $result = otp_Platform_clone($this);
        var$2 = $result;
        var$3 = $rt_nextId();
        var$2.$id$ = var$3;
        return $result;
    }
    function jl_Object_notifyAll($this) {
        var $listeners, $listener, var$3;
        a: {
            $listeners = $this.$monitor;
            if ($listeners !== null) {
                $listener = $listeners.$owner;
                jl_Thread_$callClinit();
                if ($listener === jl_Thread_currentThread0) {
                    var$3 = 1;
                    break a;
                }
            }
            var$3 = 0;
        }
        if (!var$3) {
            $listeners = new jl_IllegalMonitorStateException;
            $listeners.$suppressionEnabled = 1;
            $listeners.$writableStackTrace = 1;
            $rt_throw($listeners);
        }
        $listeners = $listeners.$notifyListeners;
        if ($listeners === null)
            return;
        while (!($listeners.length ? 0 : 1)) {
            $listener = $listeners.shift();
            otji_JSWrapper_$callClinit();
            if ($listener !== null && !($listener instanceof $rt_objcls()))
                $listener = otji_JSWrapper_wrap($listener);
            $listener = $listener;
            if (!$listener.$expired())
                otp_Platform_schedule($listener, 0);
        }
        $this.$monitor.$notifyListeners = null;
    }
    function jl_Object_monitorEnterWait$_asyncCall_$(var$1, var$2) {
        var thread = $rt_nativeThread();
        var javaThread = $rt_getThread();
        if (thread.isResuming()) {
            thread.status = 0;
            var result = thread.attribute;
            if (result instanceof Error) {
                throw result;
            }
            return result;
        }
        var callback = function() {};
        callback.$complete = function(val) {
            thread.attribute = val;
            $rt_setThread(javaThread);
            thread.resume();
        };
        callback.$error = function(e) {
            thread.attribute = $rt_exception(e);
            $rt_setThread(javaThread);
            thread.resume();
        };
        callback = otpp_AsyncCallbackWrapper_create(callback);
        thread.suspend(function() {
            try {
                jl_Object_monitorEnterWait(var$1, var$2, callback);
            } catch($e) {
                callback.$error($rt_exception($e));
            }
        });
        return null;
    }
    var igtgt_TeaVMLauncher = $rt_classWithoutFields();
    var igtgt_TeaVMLauncher_INSTANCE = null;
    function igtgt_TeaVMLauncher_main($args) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        igtgt_TeaVMLauncher_INSTANCE = new igtgt_TeaVMLauncher;
        var$2 = new cbgm_Vector2;
        var$2.$x = 1.0;
        var$2.$y = 0.0;
        cbgm_Vector2_X = var$2;
        var$2 = new cbgm_Vector2;
        var$2.$x = 0.0;
        var$2.$y = 1.0;
        cbgm_Vector2_Y = var$2;
        var$2 = new cbgm_Vector2;
        var$2.$x = 0.0;
        var$2.$y = 0.0;
        cbgm_Vector2_Zero = var$2;
        cbgss_Group_tmp = new cbgm_Vector2;
        cbgss_InputListener_tmpCoords = new cbgm_Vector2;
        cbgssu_ActorGestureListener_tmpCoords = new cbgm_Vector2;
        cbgssu_ActorGestureListener_tmpCoords2 = new cbgm_Vector2;
        cbgssu_DragScrollListener_tmpCoords = new cbgm_Vector2;
        cbgssu_DragAndDrop_tmpVector = new cbgm_Vector2;
        cbgm_Rectangle_tmp = new cbgm_Rectangle;
        cbgm_Rectangle_tmp2 = new cbgm_Rectangle;
        cbgssu_ClickListener_visualPressedDuration = 0.10000000149011612;
        cbgssu_Skin__clinit_();
        jl_Float_TYPE = $rt_cls($rt_floatcls());
        cbgssu_Value$Fixed_cache = $rt_createArray(cbgssu_Value$Fixed, 111);
        cbgssu_Window_tmpPosition = new cbgm_Vector2;
        cbgssu_Window_tmpSize = new cbgm_Vector2;
        cbgu_ObjectMap_dummy = new jl_Object;
        jl_AbstractStringBuilder$Constants__clinit_();
        jl_Integer_TYPE = $rt_cls($rt_intcls());
        otcit_FloatAnalyzer__clinit_();
        jl_Long_TYPE = $rt_cls($rt_longcls());
        jl_Character_TYPE = $rt_cls($rt_charcls());
        jl_Character_characterCache = $rt_createArray(jl_Character, 128);
        var$2 = new jl_Boolean;
        var$2.$value = 1;
        jl_Boolean_TRUE = var$2;
        var$2 = new jl_Boolean;
        var$2.$value = 0;
        jl_Boolean_FALSE = var$2;
        jl_Boolean_TYPE = $rt_cls($rt_booleancls());
        cbgg_Mesh__clinit_();
        cgxgbt_TeaTool_isProd = 1;
        cbgu_StringBuilder__clinit_();
        jur_AbstractSet_counter = 1;
        jlr_Modifier__clinit_();
        jl_Double_TYPE = $rt_cls($rt_doublecls());
        cbgssu_TextField_tmp1 = new cbgm_Vector2;
        cbgssu_TextField_tmp2 = new cbgm_Vector2;
        cbgssu_TextField_tmp3 = new cbgm_Vector2;
        cbgssu_TextField_keyRepeatInitialTime = 0.4000000059604645;
        cbgssu_TextField_keyRepeatTime = 0.10000000149011612;
        cbgssu_SelectBox_temp = new cbgm_Vector2;
        cbgssu_Tooltip_tmp = new cbgm_Vector2;
        cbgssu_Tree_tmp = new cbgm_Vector2;
        cbgm_GeometryUtils_tmp1 = new cbgm_Vector2;
        cbgm_GeometryUtils_tmp2 = new cbgm_Vector2;
        cbgm_GeometryUtils_tmp3 = new cbgm_Vector2;
        cbgm_MathUtils$Sin__clinit_();
        cbgg_Texture__clinit_();
        cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
        cbgggpv_GradientColorValue_temp = $rt_createFloatArray(3);
        igtg_Game_Companion = new igtg_Game$Companion;
        ju_Hashtable_EMPTY_ENUMERATION = new ju_Hashtable$1;
        ju_Hashtable_EMPTY_ITERATOR = new ju_Hashtable$2;
        var$2 = new otcic_StdoutOutputStream;
        var$2.$buffer0 = $rt_createByteArray(1);
        otcic_StdoutOutputStream_INSTANCE = var$2;
        var$2 = new otcic_StderrOutputStream;
        var$2.$buffer0 = $rt_createByteArray(1);
        otcic_StderrOutputStream_INSTANCE = var$2;
        otcit_DoubleAnalyzer__clinit_();
        var$2 = new jnc_CoderResult;
        var$2.$kind = 0;
        var$2.$length0 = 0;
        jnc_CoderResult_UNDERFLOW = var$2;
        var$2 = new jnc_CoderResult;
        var$2.$kind = 1;
        var$2.$length0 = 0;
        jnc_CoderResult_OVERFLOW = var$2;
        cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
        otcit_FloatSynthesizer__clinit_();
        cbggg_MipMapGenerator_useHWMipMap = 1;
        cgxgbtf_FileDB_INSTANCE = null;
        cgxgbtf_HEXCoder__clinit_();
        igtg_Descartes_INSTANCE = new igtg_Descartes;
        if ($args !== null) {
            var$3 = cgxgbt_TeaApplicationConfiguration__init_($rt_s(2));
            var$3.$antialiasing = 1;
            var$3.$width = 900;
            var$3.$height = 900;
            var$3.$storagePrefix = $rt_s(3);
            cgxgbt_TeaApplication__init_(new cgxgbt_TeaApplication, igtg_Game__init_(), var$3);
            return;
        }
        var$3 = new jl_NullPointerException;
        var$2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(4));
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$4 = $rt_cls(kji_Intrinsics).$name;
        $args = var$3.$stackTrace;
        var$5 = $args !== null ? $args.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        $args = var$5.data;
        var$6 = $args.length;
        var$7 = (-1);
        var$8 = 0;
        while (var$8 < var$6) {
            if (jl_String_equals(var$4, jl_StackTraceElement_getClassName($args[var$8])))
                var$7 = var$8;
            var$8 = var$8 + 1 | 0;
        }
        var$8 = var$7 + 1 | 0;
        var$4 = var$5.constructor;
        if (var$4 === null)
            var$2 = null;
        else {
            var$2 = var$4.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$4;
                var$9 = var$2;
                var$4.classObject = var$9;
            }
        }
        var$2 = jlr_Array_newInstance(jl_Class_getComponentType(var$2), var$6 - var$8 | 0);
        var$7 = var$8;
        while (var$7 < var$6) {
            var$2.data[var$7 - var$8 | 0] = $args[var$7];
            var$7 = var$7 + 1 | 0;
        }
        var$3.$stackTrace = var$2.$clone();
        $rt_throw(var$3);
    }
    function igtgt_TeaVMLauncher__clinit_() {
        igtgt_TeaVMLauncher_INSTANCE = new igtgt_TeaVMLauncher;
    }
    var cbgssu_UIUtilsEmu = $rt_classWithoutFields();
    var cbgssu_UIUtilsEmu_isAndroid = 0;
    var cbgssu_UIUtilsEmu_isMac = 0;
    var cbgssu_UIUtilsEmu_isWindows = 0;
    var cbgssu_UIUtilsEmu_isLinux = 0;
    var cbgssu_UIUtilsEmu_isIos = 0;
    function cbgssu_UIUtilsEmu_$callClinit() {
        cbgssu_UIUtilsEmu_$callClinit = $rt_eraseClinit(cbgssu_UIUtilsEmu);
        cbgssu_UIUtilsEmu__clinit_();
    }
    function cbgssu_UIUtilsEmu__clinit_() {
        cbgssu_UIUtilsEmu_isAndroid = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(5));
        cbgssu_UIUtilsEmu_isMac = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(6));
        cbgssu_UIUtilsEmu_isWindows = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(7));
        cbgssu_UIUtilsEmu_isLinux = !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(8)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(9)) ? 0 : 1;
        cbgssu_UIUtilsEmu_isIos = !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(10)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(11)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(12)) ? 0 : 1;
    }
    var cbg_InputProcessor = $rt_classWithoutFields(0);
    var cbg_InputAdapter = $rt_classWithoutFields();
    var cbgu_Disposable = $rt_classWithoutFields(0);
    var cbgss_Stage = $rt_classWithoutFields(cbg_InputAdapter);
    var cbgu_Pool$Poolable = $rt_classWithoutFields(0);
    var cbgss_Event = $rt_classWithoutFields();
    var jl_Comparable = $rt_classWithoutFields(0);
    var ji_Serializable = $rt_classWithoutFields(0);
    function jl_Enum() {
        var a = this; jl_Object.call(a);
        a.$name0 = null;
        a.$ordinal = 0;
    }
    function jl_Enum_ordinal($this) {
        return $this.$ordinal;
    }
    function jl_Enum_toString($this) {
        return $this.$name0;
    }
    var cbgss_Touchable = $rt_classWithoutFields(jl_Enum);
    var cbgss_Touchable_enabled = null;
    var cbgss_Touchable_disabled = null;
    var cbgss_Touchable_childrenOnly = null;
    var cbgss_Touchable_$VALUES = null;
    function cbgss_Touchable_$callClinit() {
        cbgss_Touchable_$callClinit = $rt_eraseClinit(cbgss_Touchable);
        cbgss_Touchable__clinit_();
    }
    function cbgss_Touchable__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new cbgss_Touchable;
        cbgss_Touchable_$callClinit();
        var$1.$name0 = $rt_s(13);
        var$1.$ordinal = 0;
        cbgss_Touchable_enabled = var$1;
        var$2 = new cbgss_Touchable;
        var$2.$name0 = $rt_s(14);
        var$2.$ordinal = 1;
        cbgss_Touchable_disabled = var$2;
        var$3 = new cbgss_Touchable;
        var$3.$name0 = $rt_s(15);
        var$3.$ordinal = 2;
        cbgss_Touchable_childrenOnly = var$3;
        cbgss_Touchable_$VALUES = $rt_createArrayFromData(cbgss_Touchable, [var$1, var$2, var$3]);
    }
    var cbgss_Actor = $rt_classWithoutFields();
    var cbgssu_Cullable = $rt_classWithoutFields(0);
    var cbgss_Group = $rt_classWithoutFields(cbgss_Actor);
    var cbgss_Group_tmp = null;
    function cbgss_Group__clinit_() {
        cbgss_Group_tmp = new cbgm_Vector2;
    }
    var cbgssu_Disableable = $rt_classWithoutFields(0);
    var jl_Iterable = $rt_classWithoutFields(0);
    var cbgssu_Selection = $rt_classWithoutFields();
    var cbgss_EventListener = $rt_classWithoutFields(0);
    var cbgss_InputListener = $rt_classWithoutFields();
    var cbgss_InputListener_tmpCoords = null;
    function cbgss_InputListener__clinit_() {
        cbgss_InputListener_tmpCoords = new cbgm_Vector2;
    }
    var cbgssu_DragListener = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_DragAndDrop$1 = $rt_classWithoutFields(cbgssu_DragListener);
    var cbgssu_FocusListener$FocusEvent$Type = $rt_classWithoutFields(jl_Enum);
    var cbgssu_FocusListener$FocusEvent$Type_keyboard = null;
    var cbgssu_FocusListener$FocusEvent$Type_scroll = null;
    var cbgssu_FocusListener$FocusEvent$Type_$VALUES = null;
    function cbgssu_FocusListener$FocusEvent$Type_$callClinit() {
        cbgssu_FocusListener$FocusEvent$Type_$callClinit = $rt_eraseClinit(cbgssu_FocusListener$FocusEvent$Type);
        cbgssu_FocusListener$FocusEvent$Type__clinit_();
    }
    function cbgssu_FocusListener$FocusEvent$Type__clinit_() {
        var var$1, var$2;
        var$1 = new cbgssu_FocusListener$FocusEvent$Type;
        cbgssu_FocusListener$FocusEvent$Type_$callClinit();
        var$1.$name0 = $rt_s(16);
        var$1.$ordinal = 0;
        cbgssu_FocusListener$FocusEvent$Type_keyboard = var$1;
        var$2 = new cbgssu_FocusListener$FocusEvent$Type;
        var$2.$name0 = $rt_s(17);
        var$2.$ordinal = 1;
        cbgssu_FocusListener$FocusEvent$Type_scroll = var$2;
        cbgssu_FocusListener$FocusEvent$Type_$VALUES = $rt_createArrayFromData(cbgssu_FocusListener$FocusEvent$Type, [var$1, var$2]);
    }
    var cbgssu_Drawable = $rt_classWithoutFields(0);
    var cbgssu_TransformDrawable = $rt_classWithoutFields(0);
    var jl_Runnable = $rt_classWithoutFields(0);
    var cbgu_Timer$Task = $rt_classWithoutFields();
    var cbgssu_DragScrollListener$1 = $rt_classWithoutFields(cbgu_Timer$Task);
    var cbgssu_ArraySelection = $rt_classWithoutFields(cbgssu_Selection);
    var cbgssu_ActorGestureListener = $rt_classWithoutFields();
    var cbgssu_ActorGestureListener_tmpCoords = null;
    var cbgssu_ActorGestureListener_tmpCoords2 = null;
    function cbgssu_ActorGestureListener__clinit_() {
        cbgssu_ActorGestureListener_tmpCoords = new cbgm_Vector2;
        cbgssu_ActorGestureListener_tmpCoords2 = new cbgm_Vector2;
    }
    var cbgssu_DragAndDrop$Source = $rt_classWithoutFields();
    var cbgssu_DragAndDrop$Payload = $rt_classWithoutFields();
    var cbgi_GestureDetector$GestureListener = $rt_classWithoutFields(0);
    var cbgi_GestureDetector$GestureAdapter = $rt_classWithoutFields();
    var cbgssu_ActorGestureListener$1 = $rt_classWithoutFields(cbgi_GestureDetector$GestureAdapter);
    var cbgssu_FocusListener$FocusEvent = $rt_classWithoutFields(cbgss_Event);
    var cbgssu_FocusListener$1 = $rt_classWithoutFields();
    var cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type = null;
    function cbgssu_FocusListener$1_$callClinit() {
        cbgssu_FocusListener$1_$callClinit = $rt_eraseClinit(cbgssu_FocusListener$1);
        cbgssu_FocusListener$1__clinit_();
    }
    function cbgssu_FocusListener$1__clinit_() {
        var var$1, var$2;
        cbgssu_FocusListener$FocusEvent$Type_$callClinit();
        var$1 = $rt_createIntArray((cbgssu_FocusListener$FocusEvent$Type_$VALUES.$clone()).data.length);
        var$2 = var$1.data;
        cbgssu_FocusListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$utils$FocusListener$FocusEvent$Type = var$1;
        var$2[cbgssu_FocusListener$FocusEvent$Type_keyboard.$ordinal] = 1;
        var$2[cbgssu_FocusListener$FocusEvent$Type_scroll.$ordinal] = 2;
    }
    var cbgssu_DragAndDrop$Target = $rt_classWithoutFields();
    var cbgssu_ActorGestureListener$2 = $rt_classWithoutFields();
    var cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = null;
    function cbgssu_ActorGestureListener$2_$callClinit() {
        cbgssu_ActorGestureListener$2_$callClinit = $rt_eraseClinit(cbgssu_ActorGestureListener$2);
        cbgssu_ActorGestureListener$2__clinit_();
    }
    function cbgssu_ActorGestureListener$2__clinit_() {
        var var$1, var$2;
        cbgss_InputEvent$Type_$callClinit();
        var$1 = $rt_createIntArray((cbgss_InputEvent$Type_$VALUES.$clone()).data.length);
        var$2 = var$1.data;
        cbgssu_ActorGestureListener$2_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = var$1;
        var$2[cbgss_InputEvent$Type_touchDown.$ordinal] = 1;
        var$2[cbgss_InputEvent$Type_touchUp.$ordinal] = 2;
        var$2[cbgss_InputEvent$Type_touchDragged.$ordinal] = 3;
    }
    var cbgssu_DragScrollListener$2 = $rt_classWithoutFields(cbgu_Timer$Task);
    var cbgssu_BaseDrawable = $rt_classWithoutFields();
    var cbgssu_NinePatchDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable);
    var cbgssu_UIUtils = $rt_classWithoutFields();
    var cbgssu_UIUtils_isAndroid = 0;
    var cbgssu_UIUtils_isMac = 0;
    var cbgssu_UIUtils_isWindows = 0;
    var cbgssu_UIUtils_isLinux = 0;
    var cbgssu_UIUtils_isIos = 0;
    function cbgssu_UIUtils_$callClinit() {
        cbgssu_UIUtils_$callClinit = $rt_eraseClinit(cbgssu_UIUtils);
        cbgssu_UIUtils__clinit_();
    }
    function cbgssu_UIUtils__clinit_() {
        cbgssu_UIUtils_isAndroid = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(5));
        cbgssu_UIUtils_isMac = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(6));
        cbgssu_UIUtils_isWindows = jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(7));
        cbgssu_UIUtils_isLinux = !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(8)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(9)) ? 0 : 1;
        cbgssu_UIUtils_isIos = !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(10)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(11)) && !jl_String_contains($rt_str($rt_globals.navigator.platform), $rt_s(12)) ? 0 : 1;
    }
    var cbgssu_FocusListener = $rt_classWithoutFields();
    var cbgssu_DragScrollListener = $rt_classWithoutFields(cbgssu_DragListener);
    var cbgssu_DragScrollListener_tmpCoords = null;
    function cbgssu_DragScrollListener__clinit_() {
        cbgssu_DragScrollListener_tmpCoords = new cbgm_Vector2;
    }
    var cbgssu_DragAndDrop = $rt_classWithoutFields();
    var cbgssu_DragAndDrop_tmpVector = null;
    function cbgssu_DragAndDrop__clinit_() {
        cbgssu_DragAndDrop_tmpVector = new cbgm_Vector2;
    }
    var cbgssu_ScissorStack = $rt_classWithoutFields();
    var cbgssu_ScissorStack_scissors = null;
    var cbgssu_ScissorStack_tmp = null;
    var cbgssu_ScissorStack_viewport = null;
    function cbgssu_ScissorStack_$callClinit() {
        cbgssu_ScissorStack_$callClinit = $rt_eraseClinit(cbgssu_ScissorStack);
        cbgssu_ScissorStack__clinit_();
    }
    function cbgssu_ScissorStack__clinit_() {
        var var$1;
        var$1 = new cbgu_Array;
        var$1.$ordered = 1;
        var$1.$items = $rt_createArray(jl_Object, 16);
        cbgssu_ScissorStack_scissors = var$1;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        cbgssu_ScissorStack_tmp = var$1;
        cbgssu_ScissorStack_viewport = new cbgm_Rectangle;
    }
    var cbgssu_ChangeListener = $rt_classWithoutFields();
    var cbgssu_TextureRegionDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable);
    var cbgssu_SpriteDrawable = $rt_classWithoutFields(cbgssu_BaseDrawable);
    var cbgssu_ClickListener = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_ClickListener_visualPressedDuration = 0.0;
    function cbgssu_ClickListener__clinit_() {
        cbgssu_ClickListener_visualPressedDuration = 0.10000000149011612;
    }
    var cbgssu_TiledDrawable = $rt_classWithoutFields(cbgssu_TextureRegionDrawable);
    var cbgssu_ChangeListener$ChangeEvent = $rt_classWithoutFields(cbgss_Event);
    var cbgssu_Layout = $rt_classWithoutFields(0);
    var cbgss_InputEvent = $rt_classWithoutFields(cbgss_Event);
    var cbgss_Stage$TouchFocus = $rt_classWithoutFields();
    var cbgss_InputListener$1 = $rt_classWithoutFields();
    var cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = null;
    function cbgss_InputListener$1_$callClinit() {
        cbgss_InputListener$1_$callClinit = $rt_eraseClinit(cbgss_InputListener$1);
        cbgss_InputListener$1__clinit_();
    }
    function cbgss_InputListener$1__clinit_() {
        var var$1, var$2;
        cbgss_InputEvent$Type_$callClinit();
        var$1 = $rt_createIntArray((cbgss_InputEvent$Type_$VALUES.$clone()).data.length);
        var$2 = var$1.data;
        cbgss_InputListener$1_$SwitchMap$com$badlogic$gdx$scenes$scene2d$InputEvent$Type = var$1;
        var$2[cbgss_InputEvent$Type_keyDown.$ordinal] = 1;
        var$2[cbgss_InputEvent$Type_keyUp.$ordinal] = 2;
        var$2[cbgss_InputEvent$Type_keyTyped.$ordinal] = 3;
        var$2[cbgss_InputEvent$Type_touchDown.$ordinal] = 4;
        var$2[cbgss_InputEvent$Type_touchUp.$ordinal] = 5;
        var$2[cbgss_InputEvent$Type_touchDragged.$ordinal] = 6;
        var$2[cbgss_InputEvent$Type_mouseMoved.$ordinal] = 7;
        var$2[cbgss_InputEvent$Type_scrolled.$ordinal] = 8;
        var$2[cbgss_InputEvent$Type_enter.$ordinal] = 9;
        var$2[cbgss_InputEvent$Type_exit.$ordinal] = 10;
    }
    var cbgss_InputEvent$Type = $rt_classWithoutFields(jl_Enum);
    var cbgss_InputEvent$Type_touchDown = null;
    var cbgss_InputEvent$Type_touchUp = null;
    var cbgss_InputEvent$Type_touchDragged = null;
    var cbgss_InputEvent$Type_mouseMoved = null;
    var cbgss_InputEvent$Type_enter = null;
    var cbgss_InputEvent$Type_exit = null;
    var cbgss_InputEvent$Type_scrolled = null;
    var cbgss_InputEvent$Type_keyDown = null;
    var cbgss_InputEvent$Type_keyUp = null;
    var cbgss_InputEvent$Type_keyTyped = null;
    var cbgss_InputEvent$Type_$VALUES = null;
    function cbgss_InputEvent$Type_$callClinit() {
        cbgss_InputEvent$Type_$callClinit = $rt_eraseClinit(cbgss_InputEvent$Type);
        cbgss_InputEvent$Type__clinit_();
    }
    function cbgss_InputEvent$Type__clinit_() {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$1 = new cbgss_InputEvent$Type;
        cbgss_InputEvent$Type_$callClinit();
        var$1.$name0 = $rt_s(18);
        var$1.$ordinal = 0;
        cbgss_InputEvent$Type_touchDown = var$1;
        var$2 = new cbgss_InputEvent$Type;
        var$2.$name0 = $rt_s(19);
        var$2.$ordinal = 1;
        cbgss_InputEvent$Type_touchUp = var$2;
        var$3 = new cbgss_InputEvent$Type;
        var$3.$name0 = $rt_s(20);
        var$3.$ordinal = 2;
        cbgss_InputEvent$Type_touchDragged = var$3;
        var$4 = new cbgss_InputEvent$Type;
        var$4.$name0 = $rt_s(21);
        var$4.$ordinal = 3;
        cbgss_InputEvent$Type_mouseMoved = var$4;
        var$5 = new cbgss_InputEvent$Type;
        var$5.$name0 = $rt_s(22);
        var$5.$ordinal = 4;
        cbgss_InputEvent$Type_enter = var$5;
        var$6 = new cbgss_InputEvent$Type;
        var$6.$name0 = $rt_s(23);
        var$6.$ordinal = 5;
        cbgss_InputEvent$Type_exit = var$6;
        var$7 = new cbgss_InputEvent$Type;
        var$7.$name0 = $rt_s(24);
        var$7.$ordinal = 6;
        cbgss_InputEvent$Type_scrolled = var$7;
        var$8 = new cbgss_InputEvent$Type;
        var$8.$name0 = $rt_s(25);
        var$8.$ordinal = 7;
        cbgss_InputEvent$Type_keyDown = var$8;
        var$9 = new cbgss_InputEvent$Type;
        var$9.$name0 = $rt_s(26);
        var$9.$ordinal = 8;
        cbgss_InputEvent$Type_keyUp = var$9;
        var$10 = new cbgss_InputEvent$Type;
        var$10.$name0 = $rt_s(27);
        var$10.$ordinal = 9;
        cbgss_InputEvent$Type_keyTyped = var$10;
        cbgss_InputEvent$Type_$VALUES = $rt_createArrayFromData(cbgss_InputEvent$Type, [var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10]);
    }
    var cbgss_Action = $rt_classWithoutFields();
    var cbgssa_DelegateAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_TimeScaleAction = $rt_classWithoutFields(cbgssa_DelegateAction);
    var cbgssa_DelayAction = $rt_classWithoutFields(cbgssa_DelegateAction);
    var cbgssa_TemporalAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_RelativeTemporalAction = $rt_classWithoutFields(cbgssa_TemporalAction);
    var cbgssa_SizeByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
    var cbgssa_EventAction$1 = $rt_classWithoutFields();
    var cbgssa_ParallelAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_SequenceAction = $rt_classWithoutFields(cbgssa_ParallelAction);
    var cbgssa_RemoveListenerAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_AddListenerAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_TouchableAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_Actions = $rt_classWithoutFields();
    var cbgssa_EventAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_CountdownEventAction = $rt_classWithoutFields(cbgssa_EventAction);
    var cbgssa_MoveToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
    var cbgssa_ScaleToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
    var cbgssa_RotateByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
    var cbgssa_VisibleAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_ScaleByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
    var cbgssa_IntAction = $rt_classWithoutFields(cbgssa_TemporalAction);
    var cbgssa_ColorAction = $rt_classWithoutFields(cbgssa_TemporalAction);
    var cbgssa_RunnableAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_SizeToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
    var cbgssa_LayoutAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_RemoveActorAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_AfterAction = $rt_classWithoutFields(cbgssa_DelegateAction);
    var cbgssa_FloatAction = $rt_classWithoutFields(cbgssa_TemporalAction);
    var cbgssa_RemoveAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_MoveByAction = $rt_classWithoutFields(cbgssa_RelativeTemporalAction);
    var cbgssa_RepeatAction = $rt_classWithoutFields(cbgssa_DelegateAction);
    var cbgssa_AddAction = $rt_classWithoutFields(cbgss_Action);
    var cbgssa_RotateToAction = $rt_classWithoutFields(cbgssa_TemporalAction);
    var cbgssa_AlphaAction = $rt_classWithoutFields(cbgssa_TemporalAction);
    var cbgssu_Skin = $rt_classWithoutFields();
    var cbgssu_Skin_defaultTagClasses = null;
    function cbgssu_Skin__clinit_() {
        cbgssu_Skin_defaultTagClasses = $rt_createArrayFromData(jl_Class, [$rt_cls(cbggg_BitmapFont), $rt_cls(cbgg_Color), $rt_cls(cbgssu_Skin$TintedDrawable), $rt_cls(cbgssu_NinePatchDrawable), $rt_cls(cbgssu_SpriteDrawable), $rt_cls(cbgssu_TextureRegionDrawable), $rt_cls(cbgssu_TiledDrawable), $rt_cls(cbgssu_Button$ButtonStyle), $rt_cls(cbgssu_CheckBox$CheckBoxStyle), $rt_cls(cbgssu_ImageButton$ImageButtonStyle), $rt_cls(cbgssu_ImageTextButton$ImageTextButtonStyle), $rt_cls(cbgssu_Label$LabelStyle), $rt_cls(cbgssu_List$ListStyle),
        $rt_cls(cbgssu_ProgressBar$ProgressBarStyle), $rt_cls(cbgssu_ScrollPane$ScrollPaneStyle), $rt_cls(cbgssu_SelectBox$SelectBoxStyle), $rt_cls(cbgssu_Slider$SliderStyle), $rt_cls(cbgssu_SplitPane$SplitPaneStyle), $rt_cls(cbgssu_TextButton$TextButtonStyle), $rt_cls(cbgssu_TextField$TextFieldStyle), $rt_cls(cbgssu_TextTooltip$TextTooltipStyle), $rt_cls(cbgssu_Touchpad$TouchpadStyle), $rt_cls(cbgssu_Tree$TreeStyle), $rt_cls(cbgssu_Window$WindowStyle)]);
    }
    var cbgssu_WidgetGroup = $rt_classWithoutFields(cbgss_Group);
    var cbgssu_Table = $rt_classWithoutFields(cbgssu_WidgetGroup);
    var cbgssu_Table_debugTableColor = null;
    var cbgssu_Table_debugCellColor = null;
    var cbgssu_Table_debugActorColor = null;
    var cbgssu_Table_cellPool = null;
    var cbgssu_Table_backgroundTop = null;
    var cbgssu_Table_backgroundLeft = null;
    var cbgssu_Table_backgroundBottom = null;
    var cbgssu_Table_backgroundRight = null;
    function cbgssu_Table_$callClinit() {
        cbgssu_Table_$callClinit = $rt_eraseClinit(cbgssu_Table);
        cbgssu_Table__clinit_();
    }
    function cbgssu_Table__clinit_() {
        var var$1, var$2;
        var$1 = new cbgg_Color;
        cbgg_Color_$callClinit();
        var$1.$r = 0.0;
        var$1.$g = 0.0;
        var$1.$b = 1.0;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgssu_Table_debugTableColor = var$1;
        var$1 = new cbgg_Color;
        var$1.$r = 1.0;
        var$1.$g = 0.0;
        var$1.$b = 0.0;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgssu_Table_debugCellColor = var$1;
        var$1 = new cbgg_Color;
        var$1.$r = 0.0;
        var$1.$g = 1.0;
        var$1.$b = 0.0;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgssu_Table_debugActorColor = var$1;
        var$1 = new cbgssu_Table$1;
        var$2 = new cbgu_Array;
        var$2.$ordered = 0;
        var$2.$items = $rt_createArray(jl_Object, 16);
        var$1.$freeObjects = var$2;
        var$1.$max = 2147483647;
        cbgssu_Table_cellPool = var$1;
        var$1 = new cbgssu_Table$2;
        cbgssu_Value_$callClinit();
        cbgssu_Table_backgroundTop = var$1;
        cbgssu_Table_backgroundLeft = new cbgssu_Table$3;
        cbgssu_Table_backgroundBottom = new cbgssu_Table$4;
        cbgssu_Table_backgroundRight = new cbgssu_Table$5;
    }
    var cbgssu_Button = $rt_classWithoutFields(cbgssu_Table);
    var cbgssu_TextButton = $rt_classWithoutFields(cbgssu_Button);
    var cbgssu_CheckBox = $rt_classWithoutFields(cbgssu_TextButton);
    var cbgssu_Dialog$1 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_Container = $rt_classWithoutFields(cbgssu_WidgetGroup);
    var cbgu_Json$Serializer = $rt_classWithoutFields(0);
    var cbgu_Json$ReadOnlySerializer = $rt_classWithoutFields();
    var cbgssu_Skin$2 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
    var cbgssu_Widget = $rt_classWithoutFields(cbgss_Actor);
    var cbgssu_Touchpad = $rt_classWithoutFields(cbgssu_Widget);
    var cbgssu_Dialog$4 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_Value = $rt_classWithoutFields();
    var cbgssu_Value_zero = null;
    var cbgssu_Value_minWidth = null;
    var cbgssu_Value_minHeight = null;
    var cbgssu_Value_prefWidth = null;
    var cbgssu_Value_prefHeight = null;
    var cbgssu_Value_maxWidth = null;
    var cbgssu_Value_maxHeight = null;
    function cbgssu_Value_$callClinit() {
        cbgssu_Value_$callClinit = $rt_eraseClinit(cbgssu_Value);
        cbgssu_Value__clinit_();
    }
    function cbgssu_Value__clinit_() {
        var var$1;
        var$1 = new cbgssu_Value$Fixed;
        cbgssu_Value_$callClinit();
        var$1.$value0 = 0.0;
        cbgssu_Value_zero = var$1;
        cbgssu_Value_minWidth = new cbgssu_Value$1;
        cbgssu_Value_minHeight = new cbgssu_Value$2;
        cbgssu_Value_prefWidth = new cbgssu_Value$3;
        cbgssu_Value_prefHeight = new cbgssu_Value$4;
        cbgssu_Value_maxWidth = new cbgssu_Value$5;
        cbgssu_Value_maxHeight = new cbgssu_Value$6;
    }
    var cbgssu_Value$4 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_Value$7 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_TextField$TextFieldClickListener = $rt_classWithoutFields(cbgssu_ClickListener);
    var cbgssu_TextArea$TextAreaListener = $rt_classWithoutFields(cbgssu_TextField$TextFieldClickListener);
    var cbgssu_Table$3 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_SelectBox$SelectBoxScrollPane$2 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_Window = $rt_classWithoutFields(cbgssu_Table);
    var cbgssu_Window_tmpPosition = null;
    var cbgssu_Window_tmpSize = null;
    function cbgssu_Window__clinit_() {
        cbgssu_Window_tmpPosition = new cbgm_Vector2;
        cbgssu_Window_tmpSize = new cbgm_Vector2;
    }
    var cbgssu_Value$9 = $rt_classWithoutFields(cbgssu_Value);
    var cbgm_Shape2D = $rt_classWithoutFields(0);
    var cbgm_Rectangle = $rt_classWithoutFields();
    var cbgm_Rectangle_tmp = null;
    var cbgm_Rectangle_tmp2 = null;
    function cbgm_Rectangle__clinit_() {
        cbgm_Rectangle_tmp = new cbgm_Rectangle;
        cbgm_Rectangle_tmp2 = new cbgm_Rectangle;
    }
    var cbgssu_Table$DebugRect = $rt_classWithoutFields(cbgm_Rectangle);
    var cbgssu_Table$DebugRect_pool = null;
    function cbgssu_Table$DebugRect_$callClinit() {
        cbgssu_Table$DebugRect_$callClinit = $rt_eraseClinit(cbgssu_Table$DebugRect);
        cbgssu_Table$DebugRect__clinit_();
    }
    function cbgssu_Table$DebugRect__init_() {
        var var_0 = new cbgssu_Table$DebugRect();
        cbgssu_Table$DebugRect__init_0(var_0);
        return var_0;
    }
    function cbgssu_Table$DebugRect__init_0($this) {
        cbgssu_Table$DebugRect_$callClinit();
    }
    function cbgssu_Table$DebugRect__clinit_() {
        var var$1, var$2, var$3, var$4, var$5, var$6, $$je;
        cbgu_Pools_$callClinit();
        var$1 = cbgu_Pools_typePools;
        var$2 = cbgu_ObjectMap_locateKey(var$1, $rt_cls(cbgssu_Table$DebugRect));
        var$1 = var$2 < 0 ? null : var$1.$valueTable.data[var$2];
        if (var$1 === null) {
            var$1 = new cbgu_ReflectionPool;
            var$3 = new cbgu_Array;
            var$3.$ordered = 0;
            var$3.$items = $rt_createArray(jl_Object, 4);
            var$1.$freeObjects = var$3;
            var$1.$max = 100;
            a: {
                try {
                    var$3 = cbgur_ClassReflection_getConstructor($rt_cls(cbgssu_Table$DebugRect), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$3 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbgssu_Table$DebugRect), null);
                    cbgur_Constructor_setAccessible(var$3, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$3 = null;
            }
            var$1.$constructor = var$3;
            if (var$3 === null) {
                var$1 = new jl_RuntimeException;
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(28));
                if ($rt_cls(cbgssu_Table$DebugRect).$name === null)
                    $rt_cls(cbgssu_Table$DebugRect).$name = $rt_str($rt_cls(cbgssu_Table$DebugRect).$platformClass.$meta.name);
                var$4 = $rt_cls(cbgssu_Table$DebugRect).$name;
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$4);
                var$4 = new jl_String;
                var$5 = var$3.$buffer;
                var$2 = var$3.$length;
                jl_String_$callClinit();
                var$6 = $rt_createCharArray(var$2);
                var$4.$characters = var$6;
                jl_System_fastArraycopy(var$5, 0, var$6, 0, var$2);
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                var$1.$message = var$4;
                $rt_throw(var$1);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbgssu_Table$DebugRect), var$1);
        }
        cbgssu_Table$DebugRect_pool = var$1;
    }
    var cbgssu_Skin$5 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
    var cbgssu_TextField = $rt_classWithoutFields(cbgssu_Widget);
    var cbgssu_TextField_tmp1 = null;
    var cbgssu_TextField_tmp2 = null;
    var cbgssu_TextField_tmp3 = null;
    var cbgssu_TextField_keyRepeatInitialTime = 0.0;
    var cbgssu_TextField_keyRepeatTime = 0.0;
    function cbgssu_TextField__clinit_() {
        cbgssu_TextField_tmp1 = new cbgm_Vector2;
        cbgssu_TextField_tmp2 = new cbgm_Vector2;
        cbgssu_TextField_tmp3 = new cbgm_Vector2;
        cbgssu_TextField_keyRepeatInitialTime = 0.4000000059604645;
        cbgssu_TextField_keyRepeatTime = 0.10000000149011612;
    }
    var cbgssu_TextArea = $rt_classWithoutFields(cbgssu_TextField);
    var cbgssu_ScrollPane$1 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_TextField$OnscreenKeyboard = $rt_classWithoutFields(0);
    var cbgssu_TextField$DefaultOnscreenKeyboard = $rt_classWithoutFields();
    var cbgssu_Button$ButtonStyle = $rt_classWithoutFields();
    var cbgssu_TextButton$TextButtonStyle = $rt_classWithoutFields(cbgssu_Button$ButtonStyle);
    var cbgssu_ImageTextButton$ImageTextButtonStyle = $rt_classWithoutFields(cbgssu_TextButton$TextButtonStyle);
    var cbgssu_ProgressBar = $rt_classWithoutFields(cbgssu_Widget);
    var cbgssu_Slider = $rt_classWithoutFields(cbgssu_ProgressBar);
    var cbgssu_Tooltip$1 = $rt_classWithoutFields(cbgssu_Container);
    var cbgssu_ScrollPane = $rt_classWithoutFields(cbgssu_WidgetGroup);
    var cbgssu_ImageButton = $rt_classWithoutFields(cbgssu_Button);
    var cbgssu_List = $rt_classWithoutFields(cbgssu_Widget);
    var cbgssu_Table$5 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_TextTooltip$TextTooltipStyle = $rt_classWithoutFields();
    var cbgssu_Dialog$4$1 = $rt_classWithoutFields();
    var cbgssu_Touchpad$1 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_TextField$KeyRepeatTask = $rt_classWithoutFields(cbgu_Timer$Task);
    var cbgssu_ButtonGroup = $rt_classWithoutFields();
    var cbgssu_SplitPane$1 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_Tree$2 = $rt_classWithoutFields(cbgssu_ClickListener);
    var cbgssu_ScrollPane$2 = $rt_classWithoutFields(cbgssu_ActorGestureListener);
    var cbgssu_Value$6 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_Value$5 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_TextField$TextFieldFilter = $rt_classWithoutFields(0);
    var cbgssu_ProgressBar$ProgressBarStyle = $rt_classWithoutFields();
    var cbgssu_Slider$SliderStyle = $rt_classWithoutFields(cbgssu_ProgressBar$ProgressBarStyle);
    var cbgssu_Skin$3 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
    var cbgssu_Dialog$3 = $rt_classWithoutFields(cbgssu_FocusListener);
    var cbgssu_Dialog$2 = $rt_classWithoutFields(cbgssu_ChangeListener);
    var cbgssu_SelectBox$SelectBoxScrollPane$3 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_SelectBox$SelectBoxScrollPane$1 = $rt_classWithoutFields(cbgssu_ClickListener);
    var cbgssu_Table$4 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_Cell = $rt_classWithoutFields();
    var cbgssu_Cell_zerof = null;
    var cbgssu_Cell_onef = null;
    var cbgssu_Cell_zeroi = null;
    var cbgssu_Cell_onei = null;
    var cbgssu_Cell_centeri = null;
    var cbgssu_Cell_topi = null;
    var cbgssu_Cell_bottomi = null;
    var cbgssu_Cell_lefti = null;
    var cbgssu_Cell_righti = null;
    function cbgssu_Cell_$callClinit() {
        cbgssu_Cell_$callClinit = $rt_eraseClinit(cbgssu_Cell);
        cbgssu_Cell__clinit_();
    }
    function cbgssu_Cell__clinit_() {
        var var$1;
        var$1 = new jl_Float;
        var$1.$value1 = 0.0;
        cbgssu_Cell_zerof = var$1;
        var$1 = new jl_Float;
        var$1.$value1 = 1.0;
        cbgssu_Cell_onef = var$1;
        jl_Integer_ensureIntegerCache();
        cbgssu_Cell_zeroi = jl_Integer_integerCache.data[128];
        jl_Integer_ensureIntegerCache();
        var$1 = jl_Integer_integerCache.data[129];
        cbgssu_Cell_onei = var$1;
        cbgssu_Cell_centeri = var$1;
        jl_Integer_ensureIntegerCache();
        cbgssu_Cell_topi = jl_Integer_integerCache.data[130];
        jl_Integer_ensureIntegerCache();
        cbgssu_Cell_bottomi = jl_Integer_integerCache.data[132];
        jl_Integer_ensureIntegerCache();
        cbgssu_Cell_lefti = jl_Integer_integerCache.data[136];
        jl_Integer_ensureIntegerCache();
        cbgssu_Cell_righti = jl_Integer_integerCache.data[144];
    }
    var cbgssu_CheckBox$CheckBoxStyle = $rt_classWithoutFields(cbgssu_TextButton$TextButtonStyle);
    var cbgssu_List$1 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_TooltipManager$2 = $rt_classWithoutFields(cbgu_Timer$Task);
    var cbgssu_Value$1 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_Stack = $rt_classWithoutFields(cbgssu_WidgetGroup);
    var cbgssu_ScrollPane$3 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_Touchpad$TouchpadStyle = $rt_classWithoutFields();
    function cbgssu_Value$Fixed() {
        cbgssu_Value.call(this);
        this.$value0 = 0.0;
    }
    var cbgssu_Value$Fixed_cache = null;
    function cbgssu_Value$Fixed__clinit_() {
        cbgssu_Value$Fixed_cache = $rt_createArray(cbgssu_Value$Fixed, 111);
    }
    var cbgssu_SelectBox$SelectBoxScrollPane = $rt_classWithoutFields(cbgssu_ScrollPane);
    var cbgssu_Value$3 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_SelectBox = $rt_classWithoutFields(cbgssu_Widget);
    var cbgssu_SelectBox_temp = null;
    function cbgssu_SelectBox__clinit_() {
        cbgssu_SelectBox_temp = new cbgm_Vector2;
    }
    var cbgssu_SelectBox$1 = $rt_classWithoutFields(cbgssu_ArraySelection);
    var cbgssu_SplitPane$SplitPaneStyle = $rt_classWithoutFields();
    var cbgssu_Label = $rt_classWithoutFields(cbgssu_Widget);
    var cbgssu_Label_tempColor = null;
    var cbgssu_Label_prefSizeLayout = null;
    function cbgssu_Label_$callClinit() {
        cbgssu_Label_$callClinit = $rt_eraseClinit(cbgssu_Label);
        cbgssu_Label__clinit_();
    }
    function cbgssu_Label__clinit_() {
        var var$1, var$2;
        var$1 = new cbgg_Color;
        cbgg_Color_$callClinit();
        cbgssu_Label_tempColor = var$1;
        var$1 = new cbggg_GlyphLayout;
        cbggg_GlyphLayout_$callClinit();
        var$2 = new cbgu_Array;
        var$2.$ordered = 1;
        var$2.$items = $rt_createArray(jl_Object, 1);
        var$1.$runs = var$2;
        var$2 = new cbgu_IntArray;
        var$2.$ordered0 = 1;
        var$2.$items0 = $rt_createIntArray(2);
        var$1.$colors = var$2;
        cbgssu_Label_prefSizeLayout = var$1;
    }
    var cbgssu_Window$WindowStyle = $rt_classWithoutFields();
    var cbgssu_Value$8 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_Table$2 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_Dialog = $rt_classWithoutFields(cbgssu_Window);
    var cbgssu_Value$2 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_Label$LabelStyle = $rt_classWithoutFields();
    var cbgssu_TooltipManager = $rt_classWithoutFields();
    var cbgssu_Table$Debug = $rt_classWithoutFields(jl_Enum);
    var cbgssu_Table$Debug_none = null;
    var cbgssu_Table$Debug_all = null;
    var cbgssu_Table$Debug_table = null;
    var cbgssu_Table$Debug_cell = null;
    var cbgssu_Table$Debug_actor = null;
    var cbgssu_Table$Debug_$VALUES = null;
    function cbgssu_Table$Debug_$callClinit() {
        cbgssu_Table$Debug_$callClinit = $rt_eraseClinit(cbgssu_Table$Debug);
        cbgssu_Table$Debug__clinit_();
    }
    function cbgssu_Table$Debug__clinit_() {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = new cbgssu_Table$Debug;
        cbgssu_Table$Debug_$callClinit();
        var$1.$name0 = $rt_s(29);
        var$1.$ordinal = 0;
        cbgssu_Table$Debug_none = var$1;
        var$2 = new cbgssu_Table$Debug;
        var$2.$name0 = $rt_s(30);
        var$2.$ordinal = 1;
        cbgssu_Table$Debug_all = var$2;
        var$3 = new cbgssu_Table$Debug;
        var$3.$name0 = $rt_s(31);
        var$3.$ordinal = 2;
        cbgssu_Table$Debug_table = var$3;
        var$4 = new cbgssu_Table$Debug;
        var$4.$name0 = $rt_s(32);
        var$4.$ordinal = 3;
        cbgssu_Table$Debug_cell = var$4;
        var$5 = new cbgssu_Table$Debug;
        var$5.$name0 = $rt_s(33);
        var$5.$ordinal = 4;
        cbgssu_Table$Debug_actor = var$5;
        cbgssu_Table$Debug_$VALUES = $rt_createArrayFromData(cbgssu_Table$Debug, [var$1, var$2, var$3, var$4, var$5]);
    }
    var cbgssu_Value$10 = $rt_classWithoutFields(cbgssu_Value);
    var cbgssu_TextField$1 = $rt_classWithoutFields(cbgu_Timer$Task);
    function cbgu_Pool() {
        var a = this; jl_Object.call(a);
        a.$max = 0;
        a.$peak = 0;
        a.$freeObjects = null;
    }
    function cbgu_Pool_free($this, $object) {
        var var$2, var$3, var$4;
        if ($object === null) {
            $object = new jl_IllegalArgumentException;
            $object.$suppressionEnabled = 1;
            $object.$writableStackTrace = 1;
            $object.$message = $rt_s(34);
            $rt_throw($object);
        }
        var$2 = $this.$freeObjects;
        if (var$2.$size < $this.$max) {
            cbgu_Array_add(var$2, $object);
            var$3 = $this.$peak;
            var$4 = $this.$freeObjects.$size;
            if (var$3 > var$4)
                var$4 = var$3;
            $this.$peak = var$4;
            if ($rt_isInstance($object, cbgu_Pool$Poolable))
                $object.$reset();
        } else if ($rt_isInstance($object, cbgu_Pool$Poolable))
            $object.$reset();
    }
    function cbgu_Pool_freeAll($this, $objects) {
        var $freeObjects, $max, $i, $n, $object, var$7, var$8;
        if ($objects === null) {
            $objects = new jl_IllegalArgumentException;
            $objects.$suppressionEnabled = 1;
            $objects.$writableStackTrace = 1;
            $objects.$message = $rt_s(35);
            $rt_throw($objects);
        }
        $freeObjects = $this.$freeObjects;
        $max = $this.$max;
        $i = 0;
        $n = $objects.$size;
        while ($i < $n) {
            if ($i >= $objects.$size) {
                $object = new jl_IndexOutOfBoundsException;
                $freeObjects = new jl_StringBuilder;
                $freeObjects.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($freeObjects, $freeObjects.$length, $rt_s(36));
                jl_AbstractStringBuilder_insert0($freeObjects, $freeObjects.$length, $i, 10);
                jl_AbstractStringBuilder_insert($freeObjects, $freeObjects.$length, $rt_s(37));
                $max = $objects.$size;
                jl_AbstractStringBuilder_insert0($freeObjects, $freeObjects.$length, $max, 10);
                $objects = new jl_String;
                var$7 = $freeObjects.$buffer;
                $i = $freeObjects.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray($i);
                $objects.$characters = var$8;
                jl_System_fastArraycopy(var$7, 0, var$8, 0, $i);
                $object.$suppressionEnabled = 1;
                $object.$writableStackTrace = 1;
                $object.$message = $objects;
                $rt_throw($object);
            }
            $object = $objects.$items.data[$i];
            if ($object !== null) {
                if ($freeObjects.$size < $max) {
                    cbgu_Array_add($freeObjects, $object);
                    if ($rt_isInstance($object, cbgu_Pool$Poolable))
                        $object.$reset();
                } else if ($rt_isInstance($object, cbgu_Pool$Poolable))
                    $object.$reset();
            }
            $i = $i + 1 | 0;
        }
        $max = $this.$peak;
        $i = $freeObjects.$size;
        if ($max > $i)
            $i = $max;
        $this.$peak = $i;
    }
    var cbgssu_Table$1 = $rt_classWithoutFields(cbgu_Pool);
    var cbgssu_TextField$TextFieldFilter$DigitsOnlyFilter = $rt_classWithoutFields();
    var cbgssu_List$ListStyle = $rt_classWithoutFields();
    var cbgssu_Skin$TintedDrawable = $rt_classWithoutFields();
    var cbgssu_SelectBox$SelectBoxStyle = $rt_classWithoutFields();
    var cbgssu_Tooltip = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_Tooltip_tmp = null;
    function cbgssu_Tooltip__clinit_() {
        cbgssu_Tooltip_tmp = new cbgm_Vector2;
    }
    var cbgssu_TooltipManager$1 = $rt_classWithoutFields(cbgu_Timer$Task);
    var cbgssu_SelectBox$SelectBoxScrollPane$4 = $rt_classWithoutFields(cbgssu_List);
    var cbgssu_TextField$TextFieldListener = $rt_classWithoutFields(0);
    var cbgssu_List$2 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_VerticalGroup = $rt_classWithoutFields(cbgssu_WidgetGroup);
    var cbgssu_SplitPane = $rt_classWithoutFields(cbgssu_WidgetGroup);
    var cbgssu_SelectBox$2 = $rt_classWithoutFields(cbgssu_ClickListener);
    var cbgu_Json = $rt_classWithoutFields();
    var cbgssu_Skin$1 = $rt_classWithoutFields(cbgu_Json);
    var cbgssu_ParticleEffectActor = $rt_classWithoutFields(cbgss_Actor);
    var cbgssu_Window$3 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_ImageTextButton = $rt_classWithoutFields(cbgssu_Button);
    var cbgssu_Slider$1 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_Button$1 = $rt_classWithoutFields(cbgssu_ClickListener);
    var cbgssu_ImageButton$ImageButtonStyle = $rt_classWithoutFields(cbgssu_Button$ButtonStyle);
    var cbgssu_HorizontalGroup = $rt_classWithoutFields(cbgssu_WidgetGroup);
    var cbgssu_TextField$TextFieldStyle = $rt_classWithoutFields();
    var cbgssu_Tree$TreeStyle = $rt_classWithoutFields();
    var cbgssu_Image = $rt_classWithoutFields(cbgssu_Widget);
    var cbgssu_Tree$1 = $rt_classWithoutFields(cbgssu_Selection);
    var cbgssu_Window$2 = $rt_classWithoutFields(cbgss_InputListener);
    var cbgssu_Tree = $rt_classWithoutFields(cbgssu_WidgetGroup);
    var cbgssu_Tree_tmp = null;
    function cbgssu_Tree__clinit_() {
        cbgssu_Tree_tmp = new cbgm_Vector2;
    }
    var cbgssu_TextTooltip = $rt_classWithoutFields(cbgssu_Tooltip);
    var cbgssu_Window$1 = $rt_classWithoutFields(cbgssu_Table);
    var cbgssu_Skin$4 = $rt_classWithoutFields(cbgu_Json$ReadOnlySerializer);
    var cbgssu_Tree$Node = $rt_classWithoutFields();
    var cbgssu_ScrollPane$ScrollPaneStyle = $rt_classWithoutFields();
    var cbgm_Matrix4Emu = $rt_classWithoutFields();
    var cbgm_Matrix4Emu_tmp = null;
    var cbgm_Matrix4Emu_quat = null;
    var cbgm_Matrix4Emu_quat2 = null;
    var cbgm_Matrix4Emu_l_vez = null;
    var cbgm_Matrix4Emu_l_vex = null;
    var cbgm_Matrix4Emu_l_vey = null;
    var cbgm_Matrix4Emu_tmpVec = null;
    var cbgm_Matrix4Emu_tmpMat = null;
    var cbgm_Matrix4Emu_right = null;
    var cbgm_Matrix4Emu_tmpForward = null;
    var cbgm_Matrix4Emu_tmpUp = null;
    function cbgm_Matrix4Emu_$callClinit() {
        cbgm_Matrix4Emu_$callClinit = $rt_eraseClinit(cbgm_Matrix4Emu);
        cbgm_Matrix4Emu__clinit_();
    }
    function cbgm_Matrix4Emu__clinit_() {
        var var$1;
        cbgm_Matrix4Emu_tmp = $rt_createFloatArray(16);
        var$1 = new cbgm_Quaternion;
        cbgm_Quaternion_$callClinit();
        var$1.$x0 = 0.0;
        var$1.$y0 = 0.0;
        var$1.$z = 0.0;
        var$1.$w = 1.0;
        cbgm_Matrix4Emu_quat = var$1;
        var$1 = new cbgm_Quaternion;
        var$1.$x0 = 0.0;
        var$1.$y0 = 0.0;
        var$1.$z = 0.0;
        var$1.$w = 1.0;
        cbgm_Matrix4Emu_quat2 = var$1;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        cbgm_Matrix4Emu_l_vez = var$1;
        cbgm_Matrix4Emu_l_vex = new cbgm_Vector3;
        cbgm_Matrix4Emu_l_vey = new cbgm_Vector3;
        cbgm_Matrix4Emu_tmpVec = new cbgm_Vector3;
        cbgm_Matrix4Emu_tmpMat = cbgm_Matrix4__init_();
        cbgm_Matrix4Emu_right = new cbgm_Vector3;
        cbgm_Matrix4Emu_tmpForward = new cbgm_Vector3;
        cbgm_Matrix4Emu_tmpUp = new cbgm_Vector3;
    }
    var cbgm_Interpolation = $rt_classWithoutFields();
    var cbgm_Interpolation_linear = null;
    var cbgm_Interpolation_smooth = null;
    var cbgm_Interpolation_smooth2 = null;
    var cbgm_Interpolation_smoother = null;
    var cbgm_Interpolation_fade = null;
    var cbgm_Interpolation_pow2 = null;
    var cbgm_Interpolation_pow2In = null;
    var cbgm_Interpolation_slowFast = null;
    var cbgm_Interpolation_pow2Out = null;
    var cbgm_Interpolation_fastSlow = null;
    var cbgm_Interpolation_pow2InInverse = null;
    var cbgm_Interpolation_pow2OutInverse = null;
    var cbgm_Interpolation_pow3 = null;
    var cbgm_Interpolation_pow3In = null;
    var cbgm_Interpolation_pow3Out = null;
    var cbgm_Interpolation_pow3InInverse = null;
    var cbgm_Interpolation_pow3OutInverse = null;
    var cbgm_Interpolation_pow4 = null;
    var cbgm_Interpolation_pow4In = null;
    var cbgm_Interpolation_pow4Out = null;
    var cbgm_Interpolation_pow5 = null;
    var cbgm_Interpolation_pow5In = null;
    var cbgm_Interpolation_pow5Out = null;
    var cbgm_Interpolation_sine = null;
    var cbgm_Interpolation_sineIn = null;
    var cbgm_Interpolation_sineOut = null;
    var cbgm_Interpolation_exp10 = null;
    var cbgm_Interpolation_exp10In = null;
    var cbgm_Interpolation_exp10Out = null;
    var cbgm_Interpolation_exp5 = null;
    var cbgm_Interpolation_exp5In = null;
    var cbgm_Interpolation_exp5Out = null;
    var cbgm_Interpolation_circle = null;
    var cbgm_Interpolation_circleIn = null;
    var cbgm_Interpolation_circleOut = null;
    var cbgm_Interpolation_elastic = null;
    var cbgm_Interpolation_elasticIn = null;
    var cbgm_Interpolation_elasticOut = null;
    var cbgm_Interpolation_swing = null;
    var cbgm_Interpolation_swingIn = null;
    var cbgm_Interpolation_swingOut = null;
    var cbgm_Interpolation_bounce = null;
    var cbgm_Interpolation_bounceIn = null;
    var cbgm_Interpolation_bounceOut = null;
    function cbgm_Interpolation_$callClinit() {
        cbgm_Interpolation_$callClinit = $rt_eraseClinit(cbgm_Interpolation);
        cbgm_Interpolation__clinit_();
    }
    function cbgm_Interpolation__clinit_() {
        var var$1, var$2;
        var$1 = new cbgm_Interpolation$1;
        cbgm_Interpolation_$callClinit();
        cbgm_Interpolation_linear = var$1;
        cbgm_Interpolation_smooth = new cbgm_Interpolation$2;
        cbgm_Interpolation_smooth2 = new cbgm_Interpolation$3;
        var$1 = new cbgm_Interpolation$4;
        cbgm_Interpolation_smoother = var$1;
        cbgm_Interpolation_fade = var$1;
        var$1 = new cbgm_Interpolation$Pow;
        var$1.$power = 2;
        cbgm_Interpolation_pow2 = var$1;
        var$1 = new cbgm_Interpolation$PowIn;
        var$1.$power = 2;
        cbgm_Interpolation_pow2In = var$1;
        cbgm_Interpolation_slowFast = var$1;
        var$1 = new cbgm_Interpolation$PowOut;
        var$1.$power = 2;
        cbgm_Interpolation_pow2Out = var$1;
        cbgm_Interpolation_fastSlow = var$1;
        cbgm_Interpolation_pow2InInverse = new cbgm_Interpolation$5;
        cbgm_Interpolation_pow2OutInverse = new cbgm_Interpolation$6;
        var$1 = new cbgm_Interpolation$Pow;
        var$1.$power = 3;
        cbgm_Interpolation_pow3 = var$1;
        var$1 = new cbgm_Interpolation$PowIn;
        var$1.$power = 3;
        cbgm_Interpolation_pow3In = var$1;
        var$1 = new cbgm_Interpolation$PowOut;
        var$1.$power = 3;
        cbgm_Interpolation_pow3Out = var$1;
        cbgm_Interpolation_pow3InInverse = new cbgm_Interpolation$7;
        cbgm_Interpolation_pow3OutInverse = new cbgm_Interpolation$8;
        var$1 = new cbgm_Interpolation$Pow;
        var$1.$power = 4;
        cbgm_Interpolation_pow4 = var$1;
        var$1 = new cbgm_Interpolation$PowIn;
        var$1.$power = 4;
        cbgm_Interpolation_pow4In = var$1;
        var$1 = new cbgm_Interpolation$PowOut;
        var$1.$power = 4;
        cbgm_Interpolation_pow4Out = var$1;
        var$1 = new cbgm_Interpolation$Pow;
        var$1.$power = 5;
        cbgm_Interpolation_pow5 = var$1;
        var$1 = new cbgm_Interpolation$PowIn;
        var$1.$power = 5;
        cbgm_Interpolation_pow5In = var$1;
        var$1 = new cbgm_Interpolation$PowOut;
        var$1.$power = 5;
        cbgm_Interpolation_pow5Out = var$1;
        cbgm_Interpolation_sine = new cbgm_Interpolation$9;
        cbgm_Interpolation_sineIn = new cbgm_Interpolation$10;
        cbgm_Interpolation_sineOut = new cbgm_Interpolation$11;
        var$1 = new cbgm_Interpolation$Exp;
        var$1.$value2 = 2.0;
        var$1.$power0 = 10.0;
        var$2 = jl_Math_powImpl(2.0, (-10.0));
        var$1.$min = var$2;
        var$1.$scale = 1.0 / (1.0 - var$2);
        cbgm_Interpolation_exp10 = var$1;
        var$1 = new cbgm_Interpolation$ExpIn;
        var$1.$value2 = 2.0;
        var$1.$power0 = 10.0;
        var$2 = jl_Math_powImpl(2.0, (-10.0));
        var$1.$min = var$2;
        var$1.$scale = 1.0 / (1.0 - var$2);
        cbgm_Interpolation_exp10In = var$1;
        var$1 = new cbgm_Interpolation$ExpOut;
        cbgm_Interpolation$Exp__init_(var$1, 2.0, 10.0);
        cbgm_Interpolation_exp10Out = var$1;
        cbgm_Interpolation_exp5 = cbgm_Interpolation$Exp__init_0(2.0, 5.0);
        cbgm_Interpolation_exp5In = cbgm_Interpolation$ExpIn__init_(2.0, 5.0);
        cbgm_Interpolation_exp5Out = cbgm_Interpolation$ExpOut__init_(2.0, 5.0);
        cbgm_Interpolation_circle = cbgm_Interpolation$12__init_();
        cbgm_Interpolation_circleIn = cbgm_Interpolation$13__init_();
        cbgm_Interpolation_circleOut = cbgm_Interpolation$14__init_();
        cbgm_Interpolation_elastic = cbgm_Interpolation$Elastic__init_(2.0, 10.0, 7, 1.0);
        cbgm_Interpolation_elasticIn = cbgm_Interpolation$ElasticIn__init_(2.0, 10.0, 6, 1.0);
        cbgm_Interpolation_elasticOut = cbgm_Interpolation$ElasticOut__init_(2.0, 10.0, 7, 1.0);
        cbgm_Interpolation_swing = cbgm_Interpolation$Swing__init_(1.5);
        cbgm_Interpolation_swingIn = cbgm_Interpolation$SwingIn__init_(2.0);
        cbgm_Interpolation_swingOut = cbgm_Interpolation$SwingOut__init_(2.0);
        cbgm_Interpolation_bounce = cbgm_Interpolation$Bounce__init_(4);
        cbgm_Interpolation_bounceIn = cbgm_Interpolation$BounceIn__init_(4);
        cbgm_Interpolation_bounceOut = cbgm_Interpolation$BounceOut__init_(4);
    }
    function cbgm_Interpolation$SwingIn() {
        cbgm_Interpolation.call(this);
        this.$scale0 = 0.0;
    }
    function cbgm_Interpolation$SwingIn__init_(var_0) {
        var var_1 = new cbgm_Interpolation$SwingIn();
        cbgm_Interpolation$SwingIn__init_0(var_1, var_0);
        return var_1;
    }
    function cbgm_Interpolation$SwingIn__init_0($this, $scale) {
        cbgm_Interpolation_$callClinit();
        $this.$scale0 = $scale;
    }
    var cbgm_Bresenham2 = $rt_classWithoutFields();
    var cbgm_Interpolation$7 = $rt_classWithoutFields(cbgm_Interpolation);
    var cbgm_ConvexHull = $rt_classWithoutFields();
    function cbgm_Interpolation$Pow() {
        cbgm_Interpolation.call(this);
        this.$power = 0;
    }
    var cbgm_Interpolation$PowIn = $rt_classWithoutFields(cbgm_Interpolation$Pow);
    var cbgm_Interpolation$PowOut = $rt_classWithoutFields(cbgm_Interpolation$Pow);
    var cbgm_Path = $rt_classWithoutFields(0);
    var cbgm_BSpline = $rt_classWithoutFields();
    var cbgm_Interpolation$8 = $rt_classWithoutFields(cbgm_Interpolation);
    var cbgm_Polygon = $rt_classWithoutFields();
    var cbgm_Interpolation$4 = $rt_classWithoutFields(cbgm_Interpolation);
    function cbgm_Interpolation$Elastic() {
        var a = this; cbgm_Interpolation.call(a);
        a.$value3 = 0.0;
        a.$power1 = 0.0;
        a.$scale1 = 0.0;
        a.$bounces = 0.0;
    }
    function cbgm_Interpolation$Elastic__init_(var_0, var_1, var_2, var_3) {
        var var_4 = new cbgm_Interpolation$Elastic();
        cbgm_Interpolation$Elastic__init_0(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function cbgm_Interpolation$Elastic__init_0($this, $value, $power, $bounces, $scale) {
        cbgm_Interpolation_$callClinit();
        $this.$value3 = $value;
        $this.$power1 = $power;
        $this.$scale1 = $scale;
        $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
    }
    var cbgm_Interpolation$5 = $rt_classWithoutFields(cbgm_Interpolation);
    var cbgm_Interpolation$2 = $rt_classWithoutFields(cbgm_Interpolation);
    var cbgm_GeometryUtils = $rt_classWithoutFields();
    var cbgm_GeometryUtils_tmp1 = null;
    var cbgm_GeometryUtils_tmp2 = null;
    var cbgm_GeometryUtils_tmp3 = null;
    function cbgm_GeometryUtils__clinit_() {
        cbgm_GeometryUtils_tmp1 = new cbgm_Vector2;
        cbgm_GeometryUtils_tmp2 = new cbgm_Vector2;
        cbgm_GeometryUtils_tmp3 = new cbgm_Vector2;
    }
    var cbgm_Bresenham2$1 = $rt_classWithoutFields(cbgu_Pool);
    var cbgm_Vector = $rt_classWithoutFields(0);
    function cbgm_Vector2() {
        var a = this; jl_Object.call(a);
        a.$x = 0.0;
        a.$y = 0.0;
    }
    var cbgm_Vector2_X = null;
    var cbgm_Vector2_Y = null;
    var cbgm_Vector2_Zero = null;
    function cbgm_Vector2__init_(var_0) {
        var var_1 = new cbgm_Vector2();
        cbgm_Vector2__init_0(var_1, var_0);
        return var_1;
    }
    function cbgm_Vector2__init_0($this, $v) {
        $this.$x = $v.$x;
        $this.$y = $v.$y;
    }
    function cbgm_Vector2_len($this) {
        var var$1, var$2;
        var$1 = $this.$x;
        var$1 = var$1 * var$1;
        var$2 = $this.$y;
        return jl_Math_sqrt(var$1 + var$2 * var$2);
    }
    function cbgm_Vector2_setLength($this, $len) {
        var var$2, var$3;
        $len = $len * $len;
        var$2 = $this.$x;
        var$2 = var$2 * var$2;
        var$3 = $this.$y;
        var$3 = var$2 + var$3 * var$3;
        if (var$3 !== 0.0 && var$3 !== $len) {
            $len = jl_Math_sqrt($len / var$3);
            $this.$x = $this.$x * $len;
            $this.$y = $this.$y * $len;
        }
        return $this;
    }
    function cbgm_Vector2_rotateRad($this, $radians) {
        var var$2, $cos, $sin, $newX, $newY;
        var$2 = $radians;
        $cos = jl_Math_cos(var$2);
        $sin = jl_Math_sin(var$2);
        $radians = $this.$x;
        $newX = $radians * $cos;
        $newY = $this.$y;
        $newX = $newX - $newY * $sin;
        $newY = $radians * $sin + $newY * $cos;
        $this.$x = $newX;
        $this.$y = $newY;
        return $this;
    }
    function cbgm_Vector2__clinit_() {
        var var$1;
        var$1 = new cbgm_Vector2;
        var$1.$x = 1.0;
        var$1.$y = 0.0;
        cbgm_Vector2_X = var$1;
        var$1 = new cbgm_Vector2;
        var$1.$x = 0.0;
        var$1.$y = 1.0;
        cbgm_Vector2_Y = var$1;
        var$1 = new cbgm_Vector2;
        var$1.$x = 0.0;
        var$1.$y = 0.0;
        cbgm_Vector2_Zero = var$1;
    }
    var cbgm_Interpolation$13 = $rt_classWithoutFields(cbgm_Interpolation);
    function cbgm_Interpolation$13__init_() {
        var var_0 = new cbgm_Interpolation$13();
        cbgm_Interpolation$13__init_0(var_0);
        return var_0;
    }
    function cbgm_Interpolation$13__init_0($this) {
        cbgm_Interpolation_$callClinit();
    }
    function cbgm_Interpolation$Exp() {
        var a = this; cbgm_Interpolation.call(a);
        a.$value2 = 0.0;
        a.$power0 = 0.0;
        a.$min = 0.0;
        a.$scale = 0.0;
    }
    function cbgm_Interpolation$Exp__init_0(var_0, var_1) {
        var var_2 = new cbgm_Interpolation$Exp();
        cbgm_Interpolation$Exp__init_(var_2, var_0, var_1);
        return var_2;
    }
    function cbgm_Interpolation$Exp__init_($this, $value, $power) {
        cbgm_Interpolation_$callClinit();
        $this.$value2 = $value;
        $this.$power0 = $power;
        $power = jl_Math_powImpl($value,  -$power);
        $this.$min = $power;
        $this.$scale = 1.0 / (1.0 - $power);
    }
    var cbgm_CumulativeDistribution = $rt_classWithoutFields();
    var cbgm_Interpolation$1 = $rt_classWithoutFields(cbgm_Interpolation);
    var cbgm_Interpolation$ExpOut = $rt_classWithoutFields(cbgm_Interpolation$Exp);
    function cbgm_Interpolation$ExpOut__init_(var_0, var_1) {
        var var_2 = new cbgm_Interpolation$ExpOut();
        cbgm_Interpolation$ExpOut__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbgm_Interpolation$ExpOut__init_0($this, $value, $power) {
        cbgm_Interpolation_$callClinit();
        $this.$value2 = $value;
        $this.$power0 = $power;
        $power = jl_Math_powImpl($value,  -$power);
        $this.$min = $power;
        $this.$scale = 1.0 / (1.0 - $power);
    }
    var cbgm_FloatCounter = $rt_classWithoutFields();
    var cbgm_Plane$PlaneSide = $rt_classWithoutFields(jl_Enum);
    var cbgm_Plane$PlaneSide_OnPlane = null;
    var cbgm_Plane$PlaneSide_Back = null;
    var cbgm_Plane$PlaneSide_Front = null;
    var cbgm_Plane$PlaneSide_$VALUES = null;
    function cbgm_Plane$PlaneSide_$callClinit() {
        cbgm_Plane$PlaneSide_$callClinit = $rt_eraseClinit(cbgm_Plane$PlaneSide);
        cbgm_Plane$PlaneSide__clinit_();
    }
    function cbgm_Plane$PlaneSide__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new cbgm_Plane$PlaneSide;
        cbgm_Plane$PlaneSide_$callClinit();
        var$1.$name0 = $rt_s(38);
        var$1.$ordinal = 0;
        cbgm_Plane$PlaneSide_OnPlane = var$1;
        var$2 = new cbgm_Plane$PlaneSide;
        var$2.$name0 = $rt_s(39);
        var$2.$ordinal = 1;
        cbgm_Plane$PlaneSide_Back = var$2;
        var$3 = new cbgm_Plane$PlaneSide;
        var$3.$name0 = $rt_s(40);
        var$3.$ordinal = 2;
        cbgm_Plane$PlaneSide_Front = var$3;
        cbgm_Plane$PlaneSide_$VALUES = $rt_createArrayFromData(cbgm_Plane$PlaneSide, [var$1, var$2, var$3]);
    }
    var cbgm_Octree = $rt_classWithoutFields();
    var cbgm_Octree_tmp = null;
    function cbgm_Octree_$callClinit() {
        cbgm_Octree_$callClinit = $rt_eraseClinit(cbgm_Octree);
        cbgm_Octree__clinit_();
    }
    function cbgm_Octree__clinit_() {
        var var$1;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        cbgm_Octree_tmp = var$1;
    }
    function cbgm_Interpolation$BounceOut() {
        var a = this; cbgm_Interpolation.call(a);
        a.$widths = null;
        a.$heights = null;
    }
    function cbgm_Interpolation$BounceOut__init_(var_0) {
        var var_1 = new cbgm_Interpolation$BounceOut();
        cbgm_Interpolation$BounceOut__init_0(var_1, var_0);
        return var_1;
    }
    function cbgm_Interpolation$BounceOut__init_0($this, $bounces) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        cbgm_Interpolation_$callClinit();
        if ($bounces >= 2 && $bounces <= 5) {
            a: {
                var$2 = $rt_createFloatArray($bounces);
                $this.$widths = var$2;
                var$3 = $rt_createFloatArray($bounces);
                var$4 = var$3.data;
                $this.$heights = var$3;
                var$4[0] = 1.0;
                switch ($bounces) {
                    case 2:
                        break;
                    case 3:
                        var$3 = var$2.data;
                        var$3[0] = 0.4000000059604645;
                        var$3[1] = 0.4000000059604645;
                        var$3[2] = 0.20000000298023224;
                        var$4[1] = 0.33000001311302185;
                        var$4[2] = 0.10000000149011612;
                        break a;
                    case 4:
                        var$3 = var$2.data;
                        var$3[0] = 0.3400000035762787;
                        var$3[1] = 0.3400000035762787;
                        var$3[2] = 0.20000000298023224;
                        var$3[3] = 0.15000000596046448;
                        var$4[1] = 0.25999999046325684;
                        var$4[2] = 0.10999999940395355;
                        var$4[3] = 0.029999999329447746;
                        break a;
                    case 5:
                        var$3 = var$2.data;
                        var$3[0] = 0.30000001192092896;
                        var$3[1] = 0.30000001192092896;
                        var$3[2] = 0.20000000298023224;
                        var$3[3] = 0.10000000149011612;
                        var$3[4] = 0.10000000149011612;
                        var$4[1] = 0.44999998807907104;
                        var$4[2] = 0.30000001192092896;
                        var$4[3] = 0.15000000596046448;
                        var$4[4] = 0.05999999865889549;
                        break a;
                    default:
                        break a;
                }
                var$3 = var$2.data;
                var$3[0] = 0.6000000238418579;
                var$3[1] = 0.4000000059604645;
                var$4[1] = 0.33000001311302185;
            }
            var$2 = var$2.data;
            var$2[0] = var$2[0] * 2.0;
            return;
        }
        var$5 = new jl_IllegalArgumentException;
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(41));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $bounces, 10);
        var$7 = new jl_String;
        var$2 = var$6.$buffer;
        var$8 = var$6.$length;
        jl_String_$callClinit();
        var$3 = $rt_createCharArray(var$8);
        var$7.$characters = var$3;
        jl_System_fastArraycopy(var$2, 0, var$3, 0, var$8);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$7;
        $rt_throw(var$5);
    }
    var cbgm_Interpolation$BounceIn = $rt_classWithoutFields(cbgm_Interpolation$BounceOut);
    function cbgm_Interpolation$BounceIn__init_(var_0) {
        var var_1 = new cbgm_Interpolation$BounceIn();
        cbgm_Interpolation$BounceIn__init_0(var_1, var_0);
        return var_1;
    }
    function cbgm_Interpolation$BounceIn__init_0($this, $bounces) {
        cbgm_Interpolation$BounceOut__init_0($this, $bounces);
    }
    var cbgm_Interpolation$10 = $rt_classWithoutFields(cbgm_Interpolation);
    var cbgm_Affine2 = $rt_classWithoutFields();
    var cbgm_Interpolation$3 = $rt_classWithoutFields(cbgm_Interpolation);
    function cbgm_Vector4() {
        var a = this; jl_Object.call(a);
        a.$x1 = 0.0;
        a.$y1 = 0.0;
        a.$z0 = 0.0;
        a.$w0 = 0.0;
    }
    var cbgm_Vector4_X = null;
    var cbgm_Vector4_Y = null;
    var cbgm_Vector4_Z = null;
    var cbgm_Vector4_W = null;
    var cbgm_Vector4_Zero = null;
    function cbgm_Vector4_$callClinit() {
        cbgm_Vector4_$callClinit = $rt_eraseClinit(cbgm_Vector4);
        cbgm_Vector4__clinit_();
    }
    function cbgm_Vector4__clinit_() {
        var var$1;
        var$1 = new cbgm_Vector4;
        cbgm_Vector4_$callClinit();
        var$1.$x1 = 1.0;
        var$1.$y1 = 0.0;
        var$1.$z0 = 0.0;
        var$1.$w0 = 0.0;
        cbgm_Vector4_X = var$1;
        var$1 = new cbgm_Vector4;
        var$1.$x1 = 0.0;
        var$1.$y1 = 1.0;
        var$1.$z0 = 0.0;
        var$1.$w0 = 0.0;
        cbgm_Vector4_Y = var$1;
        var$1 = new cbgm_Vector4;
        var$1.$x1 = 0.0;
        var$1.$y1 = 0.0;
        var$1.$z0 = 1.0;
        var$1.$w0 = 0.0;
        cbgm_Vector4_Z = var$1;
        var$1 = new cbgm_Vector4;
        var$1.$x1 = 0.0;
        var$1.$y1 = 0.0;
        var$1.$z0 = 0.0;
        var$1.$w0 = 1.0;
        cbgm_Vector4_W = var$1;
        var$1 = new cbgm_Vector4;
        var$1.$x1 = 0.0;
        var$1.$y1 = 0.0;
        var$1.$z0 = 0.0;
        var$1.$w0 = 0.0;
        cbgm_Vector4_Zero = var$1;
    }
    var cbgm_Interpolation$ElasticIn = $rt_classWithoutFields(cbgm_Interpolation$Elastic);
    function cbgm_Interpolation$ElasticIn__init_(var_0, var_1, var_2, var_3) {
        var var_4 = new cbgm_Interpolation$ElasticIn();
        cbgm_Interpolation$ElasticIn__init_0(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function cbgm_Interpolation$ElasticIn__init_0($this, $value, $power, $bounces, $scale) {
        cbgm_Interpolation_$callClinit();
        $this.$value3 = $value;
        $this.$power1 = $power;
        $this.$scale1 = $scale;
        $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
    }
    function cbgm_Interpolation$Swing() {
        cbgm_Interpolation.call(this);
        this.$scale2 = 0.0;
    }
    function cbgm_Interpolation$Swing__init_(var_0) {
        var var_1 = new cbgm_Interpolation$Swing();
        cbgm_Interpolation$Swing__init_0(var_1, var_0);
        return var_1;
    }
    function cbgm_Interpolation$Swing__init_0($this, $scale) {
        cbgm_Interpolation_$callClinit();
        $this.$scale2 = $scale * 2.0;
    }
    var cbgm_DelaunayTriangulator = $rt_classWithoutFields();
    var cbgm_Polyline = $rt_classWithoutFields();
    var cbgm_Interpolation$6 = $rt_classWithoutFields(cbgm_Interpolation);
    function cbgm_Interpolation$SwingOut() {
        cbgm_Interpolation.call(this);
        this.$scale3 = 0.0;
    }
    function cbgm_Interpolation$SwingOut__init_(var_0) {
        var var_1 = new cbgm_Interpolation$SwingOut();
        cbgm_Interpolation$SwingOut__init_0(var_1, var_0);
        return var_1;
    }
    function cbgm_Interpolation$SwingOut__init_0($this, $scale) {
        cbgm_Interpolation_$callClinit();
        $this.$scale3 = $scale;
    }
    var cbgm_Interpolation$14 = $rt_classWithoutFields(cbgm_Interpolation);
    function cbgm_Interpolation$14__init_() {
        var var_0 = new cbgm_Interpolation$14();
        cbgm_Interpolation$14__init_0(var_0);
        return var_0;
    }
    function cbgm_Interpolation$14__init_0($this) {
        cbgm_Interpolation_$callClinit();
    }
    var cbgm_Interpolation$ElasticOut = $rt_classWithoutFields(cbgm_Interpolation$Elastic);
    function cbgm_Interpolation$ElasticOut__init_(var_0, var_1, var_2, var_3) {
        var var_4 = new cbgm_Interpolation$ElasticOut();
        cbgm_Interpolation$ElasticOut__init_0(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function cbgm_Interpolation$ElasticOut__init_0($this, $value, $power, $bounces, $scale) {
        cbgm_Interpolation_$callClinit();
        $this.$value3 = $value;
        $this.$power1 = $power;
        $this.$scale1 = $scale;
        $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
    }
    var cbgmc_OrientedBoundingBox = $rt_classWithoutFields();
    var cbgmc_OrientedBoundingBox_tempAxes = null;
    var cbgmc_OrientedBoundingBox_tempVertices = null;
    var cbgmc_OrientedBoundingBox_tmpVectors = null;
    function cbgmc_OrientedBoundingBox_$callClinit() {
        cbgmc_OrientedBoundingBox_$callClinit = $rt_eraseClinit(cbgmc_OrientedBoundingBox);
        cbgmc_OrientedBoundingBox__clinit_();
    }
    function cbgmc_OrientedBoundingBox__clinit_() {
        var var$1, var$2, var$3, $i, var$5, var$6;
        cbgmc_OrientedBoundingBox_tempAxes = $rt_createArray(cbgm_Vector3, 15);
        var$1 = $rt_createArray(cbgm_Vector3, 8);
        cbgmc_OrientedBoundingBox_tempVertices = var$1;
        var$2 = $rt_createArray(cbgm_Vector3, 9);
        var$3 = var$2.data;
        cbgmc_OrientedBoundingBox_tmpVectors = var$2;
        $i = 0;
        var$5 = var$3.length;
        while ($i < var$5) {
            var$6 = new cbgm_Vector3;
            cbgm_Vector3_$callClinit();
            var$3[$i] = var$6;
            $i = $i + 1 | 0;
        }
        var$1 = var$1.data;
        $i = 0;
        var$5 = var$1.length;
        while ($i < var$5) {
            var$6 = new cbgm_Vector3;
            cbgm_Vector3_$callClinit();
            var$1[$i] = var$6;
            $i = $i + 1 | 0;
        }
    }
    function cbgmc_BoundingBox() {
        var a = this; jl_Object.call(a);
        a.$min0 = null;
        a.$max0 = null;
        a.$cnt = null;
        a.$dim = null;
    }
    var cbgmc_BoundingBox_tmpVector = null;
    function cbgmc_BoundingBox_$callClinit() {
        cbgmc_BoundingBox_$callClinit = $rt_eraseClinit(cbgmc_BoundingBox);
        cbgmc_BoundingBox__clinit_();
    }
    function cbgmc_BoundingBox_set($this, $minimum, $maximum) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$3 = $this.$min0;
        var$4 = $minimum.$x2;
        var$5 = $maximum.$x2;
        if (var$4 < var$5)
            var$5 = var$4;
        var$4 = $minimum.$y2;
        var$6 = $maximum.$y2;
        if (var$4 < var$6)
            var$6 = var$4;
        var$4 = $minimum.$z1;
        var$7 = $maximum.$z1;
        if (var$4 < var$7)
            var$7 = var$4;
        var$3.$x2 = var$5;
        var$3.$y2 = var$6;
        var$3.$z1 = var$7;
        var$8 = $this.$max0;
        var$4 = $minimum.$x2;
        var$6 = $maximum.$x2;
        if (var$4 > var$6)
            var$6 = var$4;
        var$4 = $minimum.$y2;
        var$7 = $maximum.$y2;
        if (var$4 > var$7)
            var$7 = var$4;
        var$4 = $minimum.$z1;
        var$5 = $maximum.$z1;
        if (var$4 > var$5)
            var$5 = var$4;
        var$8.$x2 = var$6;
        var$8.$y2 = var$7;
        var$8.$z1 = var$5;
        $minimum = $this.$cnt;
        var$7 = var$3.$x2;
        var$9 = var$3.$y2;
        var$10 = var$3.$z1;
        $minimum.$x2 = var$7;
        $minimum.$y2 = var$9;
        $minimum.$z1 = var$10;
        var$4 = var$8.$x2;
        var$5 = var$8.$y2;
        var$6 = var$8.$z1;
        var$7 = var$7 + var$4;
        var$9 = var$9 + var$5;
        var$10 = var$10 + var$6;
        $minimum.$x2 = var$7;
        $minimum.$y2 = var$9;
        $minimum.$z1 = var$10;
        var$5 = var$7 * 0.5;
        var$6 = var$9 * 0.5;
        var$4 = var$10 * 0.5;
        $minimum.$x2 = var$5;
        $minimum.$y2 = var$6;
        $minimum.$z1 = var$4;
        $minimum = $this.$dim;
        var$6 = var$8.$x2;
        var$7 = var$8.$y2;
        var$9 = var$8.$z1;
        $minimum.$x2 = var$6;
        $minimum.$y2 = var$7;
        $minimum.$z1 = var$9;
        var$4 = var$3.$x2;
        var$5 = var$3.$y2;
        var$10 = var$3.$z1;
        var$6 = var$6 - var$4;
        var$4 = var$7 - var$5;
        var$5 = var$9 - var$10;
        $minimum.$x2 = var$6;
        $minimum.$y2 = var$4;
        $minimum.$z1 = var$5;
        return $this;
    }
    function cbgmc_BoundingBox__clinit_() {
        var var$1;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        cbgmc_BoundingBox_tmpVector = var$1;
    }
    function cbgmc_Ray() {
        var a = this; jl_Object.call(a);
        a.$origin = null;
        a.$direction = null;
    }
    var cbgmc_Ray_tmp = null;
    function cbgmc_Ray_$callClinit() {
        cbgmc_Ray_$callClinit = $rt_eraseClinit(cbgmc_Ray);
        cbgmc_Ray__clinit_();
    }
    function cbgmc_Ray__clinit_() {
        var var$1;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        cbgmc_Ray_tmp = var$1;
    }
    var cbgmc_Segment = $rt_classWithoutFields();
    var cbgmc_Sphere = $rt_classWithoutFields();
    var cbgm_Ellipse = $rt_classWithoutFields();
    var cbgm_CatmullRomSpline = $rt_classWithoutFields();
    var cbgm_MathUtils = $rt_classWithoutFields();
    var cbgm_MathUtils_random = null;
    function cbgm_MathUtils_$callClinit() {
        cbgm_MathUtils_$callClinit = $rt_eraseClinit(cbgm_MathUtils);
        cbgm_MathUtils__clinit_();
    }
    function cbgm_MathUtils_sin($radians) {
        cbgm_MathUtils_$callClinit();
        return cbgm_MathUtils$Sin_table.data[($radians * 2607.594482421875 | 0) & 16383];
    }
    function cbgm_MathUtils_cos($radians) {
        cbgm_MathUtils_$callClinit();
        return cbgm_MathUtils$Sin_table.data[(($radians + 1.5707963705062866) * 2607.594482421875 | 0) & 16383];
    }
    function cbgm_MathUtils_nextPowerOfTwo($value) {
        var var$2;
        cbgm_MathUtils_$callClinit();
        if (!$value)
            return 1;
        var$2 = $value + (-1) | 0;
        $value = var$2 | var$2 >> 1;
        $value = $value | $value >> 2;
        $value = $value | $value >> 4;
        $value = $value | $value >> 8;
        return ($value | $value >> 16) + 1 | 0;
    }
    function cbgm_MathUtils__clinit_() {
        var var$1, var$2, var$3, var$4;
        var$1 = new cbgm_RandomXS128;
        var$2 = Long_or(Long_shl(Long_fromInt(4.294967296E9 * $rt_globals.Math.random() + (-2.147483648E9) | 0), 32), Long_fromInt(4.294967296E9 * $rt_globals.Math.random() + (-2.147483648E9) | 0));
        if (Long_eq(var$2, Long_ZERO))
            var$2 = Long_create(0, 2147483648);
        var$3 = Long_mul(Long_xor(var$2, Long_shru(var$2, 33)), Long_create(3981806797, 4283543511));
        var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
        var$4 = Long_xor(var$3, Long_shru(var$3, 33));
        var$3 = Long_mul(Long_xor(var$4, Long_shru(var$4, 33)), Long_create(3981806797, 4283543511));
        var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
        var$3 = Long_xor(var$3, Long_shru(var$3, 33));
        var$1.$seed0 = var$4;
        var$1.$seed1 = var$3;
        cbgm_MathUtils_random = var$1;
    }
    var cbgm_Intersector = $rt_classWithoutFields();
    var cbgm_Intersector_v0 = null;
    var cbgm_Intersector_v1 = null;
    var cbgm_Intersector_v2 = null;
    var cbgm_Intersector_floatArray = null;
    var cbgm_Intersector_floatArray2 = null;
    var cbgm_Intersector_ip = null;
    var cbgm_Intersector_ep1 = null;
    var cbgm_Intersector_ep2 = null;
    var cbgm_Intersector_s = null;
    var cbgm_Intersector_e = null;
    var cbgm_Intersector_v2a = null;
    var cbgm_Intersector_v2b = null;
    var cbgm_Intersector_v2c = null;
    var cbgm_Intersector_v2d = null;
    var cbgm_Intersector_p = null;
    var cbgm_Intersector_i = null;
    var cbgm_Intersector_dir = null;
    var cbgm_Intersector_start = null;
    var cbgm_Intersector_best = null;
    var cbgm_Intersector_tmp = null;
    var cbgm_Intersector_tmp1 = null;
    var cbgm_Intersector_tmp2 = null;
    var cbgm_Intersector_tmp3 = null;
    var cbgm_Intersector_intersection = null;
    function cbgm_Intersector_$callClinit() {
        cbgm_Intersector_$callClinit = $rt_eraseClinit(cbgm_Intersector);
        cbgm_Intersector__clinit_();
    }
    function cbgm_Intersector__clinit_() {
        var var$1, var$2;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        cbgm_Intersector_v0 = var$1;
        cbgm_Intersector_v1 = new cbgm_Vector3;
        cbgm_Intersector_v2 = new cbgm_Vector3;
        var$1 = new cbgu_FloatArray;
        var$1.$ordered1 = 1;
        var$1.$items1 = $rt_createFloatArray(16);
        cbgm_Intersector_floatArray = var$1;
        var$1 = new cbgu_FloatArray;
        var$1.$ordered1 = 1;
        var$1.$items1 = $rt_createFloatArray(16);
        cbgm_Intersector_floatArray2 = var$1;
        cbgm_Intersector_ip = new cbgm_Vector2;
        cbgm_Intersector_ep1 = new cbgm_Vector2;
        cbgm_Intersector_ep2 = new cbgm_Vector2;
        cbgm_Intersector_s = new cbgm_Vector2;
        cbgm_Intersector_e = new cbgm_Vector2;
        cbgm_Intersector_v2a = new cbgm_Vector2;
        cbgm_Intersector_v2b = new cbgm_Vector2;
        cbgm_Intersector_v2c = new cbgm_Vector2;
        cbgm_Intersector_v2d = new cbgm_Vector2;
        var$1 = new cbgm_Plane;
        var$2 = new cbgm_Vector3;
        var$1.$normal = var$2;
        var$1.$d = 0.0;
        var$2.$x2 = 0.0;
        var$2.$y2 = 0.0;
        var$2.$z1 = 0.0;
        var$1.$d = 0.0;
        cbgm_Intersector_p = var$1;
        cbgm_Intersector_i = new cbgm_Vector3;
        cbgm_Intersector_dir = new cbgm_Vector3;
        cbgm_Intersector_start = new cbgm_Vector3;
        cbgm_Intersector_best = new cbgm_Vector3;
        cbgm_Intersector_tmp = new cbgm_Vector3;
        cbgm_Intersector_tmp1 = new cbgm_Vector3;
        cbgm_Intersector_tmp2 = new cbgm_Vector3;
        cbgm_Intersector_tmp3 = new cbgm_Vector3;
        cbgm_Intersector_intersection = new cbgm_Vector3;
    }
    var cbgm_WindowedMean = $rt_classWithoutFields();
    var cbgm_Interpolation$Bounce = $rt_classWithoutFields(cbgm_Interpolation$BounceOut);
    function cbgm_Interpolation$Bounce__init_(var_0) {
        var var_1 = new cbgm_Interpolation$Bounce();
        cbgm_Interpolation$Bounce__init_0(var_1, var_0);
        return var_1;
    }
    function cbgm_Interpolation$Bounce__init_0($this, $bounces) {
        cbgm_Interpolation$BounceOut__init_0($this, $bounces);
    }
    function cbgm_Matrix4() {
        jl_Object.call(this);
        this.$val = null;
    }
    var cbgm_Matrix4_tmp = null;
    var cbgm_Matrix4_quat = null;
    var cbgm_Matrix4_quat2 = null;
    var cbgm_Matrix4_l_vez = null;
    var cbgm_Matrix4_l_vex = null;
    var cbgm_Matrix4_l_vey = null;
    var cbgm_Matrix4_tmpVec = null;
    var cbgm_Matrix4_tmpMat = null;
    var cbgm_Matrix4_right = null;
    var cbgm_Matrix4_tmpForward = null;
    var cbgm_Matrix4_tmpUp = null;
    function cbgm_Matrix4_$callClinit() {
        cbgm_Matrix4_$callClinit = $rt_eraseClinit(cbgm_Matrix4);
        cbgm_Matrix4__clinit_();
    }
    function cbgm_Matrix4__init_() {
        var var_0 = new cbgm_Matrix4();
        cbgm_Matrix4__init_0(var_0);
        return var_0;
    }
    function cbgm_Matrix4__init_0($this) {
        var var$1, var$2;
        cbgm_Matrix4_$callClinit();
        var$1 = $rt_createFloatArray(16);
        var$2 = var$1.data;
        $this.$val = var$1;
        var$2[0] = 1.0;
        var$2[5] = 1.0;
        var$2[10] = 1.0;
        var$2[15] = 1.0;
    }
    function cbgm_Matrix4_set($this, $values) {
        var var$2;
        var$2 = $values.data;
        $values = $this.$val.data;
        $values[0] = var$2[0];
        $values[1] = var$2[1];
        $values[2] = var$2[2];
        $values[3] = var$2[3];
        $values[4] = var$2[4];
        $values[5] = var$2[5];
        $values[6] = var$2[6];
        $values[7] = var$2[7];
        $values[8] = var$2[8];
        $values[9] = var$2[9];
        $values[10] = var$2[10];
        $values[11] = var$2[11];
        $values[12] = var$2[12];
        $values[13] = var$2[13];
        $values[14] = var$2[14];
        $values[15] = var$2[15];
        return $this;
    }
    function cbgm_Matrix4_mul($this, $matrix) {
        var var$2, var$3, var$4, var$5, var$6;
        cbgm_Matrix4_$callClinit();
        var$2 = cbgm_Matrix4_tmp;
        var$3 = var$2.data;
        var$4 = $this.$val.data;
        var$5 = var$4[0];
        var$6 = $matrix.$val.data;
        var$3[0] = var$5 * var$6[0] + var$4[4] * var$6[1] + var$4[8] * var$6[2] + var$4[12] * var$6[3];
        var$3[4] = var$4[0] * var$6[4] + var$4[4] * var$6[5] + var$4[8] * var$6[6] + var$4[12] * var$6[7];
        var$3[8] = var$4[0] * var$6[8] + var$4[4] * var$6[9] + var$4[8] * var$6[10] + var$4[12] * var$6[11];
        var$3[12] = var$4[0] * var$6[12] + var$4[4] * var$6[13] + var$4[8] * var$6[14] + var$4[12] * var$6[15];
        var$3[1] = var$4[1] * var$6[0] + var$4[5] * var$6[1] + var$4[9] * var$6[2] + var$4[13] * var$6[3];
        var$3[5] = var$4[1] * var$6[4] + var$4[5] * var$6[5] + var$4[9] * var$6[6] + var$4[13] * var$6[7];
        var$3[9] = var$4[1] * var$6[8] + var$4[5] * var$6[9] + var$4[9] * var$6[10] + var$4[13] * var$6[11];
        var$3[13] = var$4[1] * var$6[12] + var$4[5] * var$6[13] + var$4[9] * var$6[14] + var$4[13] * var$6[15];
        var$3[2] = var$4[2] * var$6[0] + var$4[6] * var$6[1] + var$4[10] * var$6[2] + var$4[14] * var$6[3];
        var$3[6] = var$4[2] * var$6[4] + var$4[6] * var$6[5] + var$4[10] * var$6[6] + var$4[14] * var$6[7];
        var$3[10] = var$4[2] * var$6[8] + var$4[6] * var$6[9] + var$4[10] * var$6[10] + var$4[14] * var$6[11];
        var$3[14] = var$4[2] * var$6[12] + var$4[6] * var$6[13] + var$4[10] * var$6[14] + var$4[14] * var$6[15];
        var$3[3] = var$4[3] * var$6[0] + var$4[7] * var$6[1] + var$4[11] * var$6[2] + var$4[15] * var$6[3];
        var$3[7] = var$4[3] * var$6[4] + var$4[7] * var$6[5] + var$4[11] * var$6[6] + var$4[15] * var$6[7];
        var$3[11] = var$4[3] * var$6[8] + var$4[7] * var$6[9] + var$4[11] * var$6[10] + var$4[15] * var$6[11];
        var$3[15] = var$4[3] * var$6[12] + var$4[7] * var$6[13] + var$4[11] * var$6[14] + var$4[15] * var$6[15];
        return cbgm_Matrix4_set($this, var$2);
    }
    function cbgm_Matrix4_idt($this) {
        var var$1;
        var$1 = $this.$val.data;
        var$1[0] = 1.0;
        var$1[4] = 0.0;
        var$1[8] = 0.0;
        var$1[12] = 0.0;
        var$1[1] = 0.0;
        var$1[5] = 1.0;
        var$1[9] = 0.0;
        var$1[13] = 0.0;
        var$1[2] = 0.0;
        var$1[6] = 0.0;
        var$1[10] = 1.0;
        var$1[14] = 0.0;
        var$1[3] = 0.0;
        var$1[7] = 0.0;
        var$1[11] = 0.0;
        var$1[15] = 1.0;
        return $this;
    }
    function cbgm_Matrix4_setToOrtho($this, $left, $right, $bottom, $top, $near, $far) {
        var $tx, $x_orth, $ty, $y_orth, $tz, $z_orth, var$13;
        cbgm_Matrix4_idt($this);
        $tx = $right - $left;
        $x_orth = 2.0 / $tx;
        $ty = $top - $bottom;
        $y_orth = 2.0 / $ty;
        $tz = $far - $near;
        $z_orth = (-2.0) / $tz;
        $tx =  -($right + $left) / $tx;
        $ty =  -($top + $bottom) / $ty;
        $tz =  -($far + $near) / $tz;
        var$13 = $this.$val.data;
        var$13[0] = $x_orth;
        var$13[1] = 0.0;
        var$13[2] = 0.0;
        var$13[3] = 0.0;
        var$13[4] = 0.0;
        var$13[5] = $y_orth;
        var$13[6] = 0.0;
        var$13[7] = 0.0;
        var$13[8] = 0.0;
        var$13[9] = 0.0;
        var$13[10] = $z_orth;
        var$13[11] = 0.0;
        var$13[12] = $tx;
        var$13[13] = $ty;
        var$13[14] = $tz;
        var$13[15] = 1.0;
        return $this;
    }
    function cbgm_Matrix4_setToLookAt($this, $direction, $up) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        cbgm_Matrix4_$callClinit();
        var$3 = cbgm_Matrix4_l_vez;
        var$4 = $direction.$x2;
        var$5 = $direction.$y2;
        var$6 = $direction.$z1;
        var$3.$x2 = var$4;
        var$3.$y2 = var$5;
        var$3.$z1 = var$6;
        var$5 = var$4 * var$4 + var$5 * var$5 + var$6 * var$6;
        if (var$5 !== 0.0 && var$5 !== 1.0) {
            var$4 = 1.0 / jl_Math_sqrt(var$5);
            var$5 = var$3.$x2 * var$4;
            var$6 = var$3.$y2 * var$4;
            var$4 = var$3.$z1 * var$4;
            var$3.$x2 = var$5;
            var$3.$y2 = var$6;
            var$3.$z1 = var$4;
        }
        var$3 = cbgm_Matrix4_l_vex;
        var$4 = $direction.$x2;
        var$5 = $direction.$y2;
        var$6 = $direction.$z1;
        var$3.$x2 = var$4;
        var$3.$y2 = var$5;
        var$3.$z1 = var$6;
        var$5 = var$4 * var$4 + var$5 * var$5 + var$6 * var$6;
        if (var$5 !== 0.0 && var$5 !== 1.0) {
            var$4 = 1.0 / jl_Math_sqrt(var$5);
            var$5 = var$3.$x2 * var$4;
            var$6 = var$3.$y2 * var$4;
            var$4 = var$3.$z1 * var$4;
            var$3.$x2 = var$5;
            var$3.$y2 = var$6;
            var$3.$z1 = var$4;
        }
        $direction = cbgm_Vector3_crs(cbgm_Matrix4_l_vex, $up);
        var$4 = $direction.$x2;
        var$4 = var$4 * var$4;
        var$5 = $direction.$y2;
        var$4 = var$4 + var$5 * var$5;
        var$5 = $direction.$z1;
        var$4 = var$4 + var$5 * var$5;
        if (var$4 !== 0.0 && var$4 !== 1.0) {
            var$6 = 1.0 / jl_Math_sqrt(var$4);
            var$7 = $direction.$x2 * var$6;
            var$4 = $direction.$y2 * var$6;
            var$5 = $direction.$z1 * var$6;
            $direction.$x2 = var$7;
            $direction.$y2 = var$4;
            $direction.$z1 = var$5;
        }
        $direction = cbgm_Matrix4_l_vey;
        $up = cbgm_Matrix4_l_vex;
        var$4 = $up.$x2;
        var$5 = $up.$y2;
        var$6 = $up.$z1;
        $direction.$x2 = var$4;
        $direction.$y2 = var$5;
        $direction.$z1 = var$6;
        $direction = cbgm_Vector3_crs($direction, cbgm_Matrix4_l_vez);
        var$4 = $direction.$x2;
        var$4 = var$4 * var$4;
        var$5 = $direction.$y2;
        var$4 = var$4 + var$5 * var$5;
        var$5 = $direction.$z1;
        var$5 = var$4 + var$5 * var$5;
        if (var$5 !== 0.0 && var$5 !== 1.0) {
            var$4 = 1.0 / jl_Math_sqrt(var$5);
            var$5 = $direction.$x2 * var$4;
            var$6 = $direction.$y2 * var$4;
            var$4 = $direction.$z1 * var$4;
            $direction.$x2 = var$5;
            $direction.$y2 = var$6;
            $direction.$z1 = var$4;
        }
        cbgm_Matrix4_idt($this);
        var$8 = $this.$val.data;
        $direction = cbgm_Matrix4_l_vex;
        var$8[0] = $direction.$x2;
        var$8[4] = $direction.$y2;
        var$8[8] = $direction.$z1;
        $direction = cbgm_Matrix4_l_vey;
        var$8[1] = $direction.$x2;
        var$8[5] = $direction.$y2;
        var$8[9] = $direction.$z1;
        $direction = cbgm_Matrix4_l_vez;
        var$8[2] =  -$direction.$x2;
        var$8[6] =  -$direction.$y2;
        var$8[10] =  -$direction.$z1;
        return $this;
    }
    function cbgm_Matrix4_matrix4_mul($mata, $matb) {
        var var$3, $tmp_0, var$5;
        cbgm_Matrix4_$callClinit();
        var$3 = $mata.data;
        $matb = $matb.data;
        $tmp_0 = $rt_createFloatArray(16);
        var$5 = $tmp_0.data;
        var$5[0] = var$3[0] * $matb[0] + var$3[4] * $matb[1] + var$3[8] * $matb[2] + var$3[12] * $matb[3];
        var$5[4] = var$3[0] * $matb[4] + var$3[4] * $matb[5] + var$3[8] * $matb[6] + var$3[12] * $matb[7];
        var$5[8] = var$3[0] * $matb[8] + var$3[4] * $matb[9] + var$3[8] * $matb[10] + var$3[12] * $matb[11];
        var$5[12] = var$3[0] * $matb[12] + var$3[4] * $matb[13] + var$3[8] * $matb[14] + var$3[12] * $matb[15];
        var$5[1] = var$3[1] * $matb[0] + var$3[5] * $matb[1] + var$3[9] * $matb[2] + var$3[13] * $matb[3];
        var$5[5] = var$3[1] * $matb[4] + var$3[5] * $matb[5] + var$3[9] * $matb[6] + var$3[13] * $matb[7];
        var$5[9] = var$3[1] * $matb[8] + var$3[5] * $matb[9] + var$3[9] * $matb[10] + var$3[13] * $matb[11];
        var$5[13] = var$3[1] * $matb[12] + var$3[5] * $matb[13] + var$3[9] * $matb[14] + var$3[13] * $matb[15];
        var$5[2] = var$3[2] * $matb[0] + var$3[6] * $matb[1] + var$3[10] * $matb[2] + var$3[14] * $matb[3];
        var$5[6] = var$3[2] * $matb[4] + var$3[6] * $matb[5] + var$3[10] * $matb[6] + var$3[14] * $matb[7];
        var$5[10] = var$3[2] * $matb[8] + var$3[6] * $matb[9] + var$3[10] * $matb[10] + var$3[14] * $matb[11];
        var$5[14] = var$3[2] * $matb[12] + var$3[6] * $matb[13] + var$3[10] * $matb[14] + var$3[14] * $matb[15];
        var$5[3] = var$3[3] * $matb[0] + var$3[7] * $matb[1] + var$3[11] * $matb[2] + var$3[15] * $matb[3];
        var$5[7] = var$3[3] * $matb[4] + var$3[7] * $matb[5] + var$3[11] * $matb[6] + var$3[15] * $matb[7];
        var$5[11] = var$3[3] * $matb[8] + var$3[7] * $matb[9] + var$3[11] * $matb[10] + var$3[15] * $matb[11];
        var$5[15] = var$3[3] * $matb[12] + var$3[7] * $matb[13] + var$3[11] * $matb[14] + var$3[15] * $matb[15];
        jl_System_fastArraycopy($tmp_0, 0, $mata, 0, 16);
    }
    function cbgm_Matrix4_matrix4_det($val) {
        cbgm_Matrix4_$callClinit();
        $val = $val.data;
        return $val[3] * $val[6] * $val[9] * $val[12] - $val[2] * $val[7] * $val[9] * $val[12] - $val[3] * $val[5] * $val[10] * $val[12] + $val[1] * $val[7] * $val[10] * $val[12] + $val[2] * $val[5] * $val[11] * $val[12] - $val[1] * $val[6] * $val[11] * $val[12] - $val[3] * $val[6] * $val[8] * $val[13] + $val[2] * $val[7] * $val[8] * $val[13] + $val[3] * $val[4] * $val[10] * $val[13] - $val[0] * $val[7] * $val[10] * $val[13] - $val[2] * $val[4] * $val[11] * $val[13] + $val[0] * $val[6] * $val[11] * $val[13]
        + $val[3] * $val[5] * $val[8] * $val[14] - $val[1] * $val[7] * $val[8] * $val[14] - $val[3] * $val[4] * $val[9] * $val[14] + $val[0] * $val[7] * $val[9] * $val[14] + $val[1] * $val[4] * $val[11] * $val[14] - $val[0] * $val[5] * $val[11] * $val[14] - $val[2] * $val[5] * $val[8] * $val[15] + $val[1] * $val[6] * $val[8] * $val[15] + $val[2] * $val[4] * $val[9] * $val[15] - $val[0] * $val[6] * $val[9] * $val[15] - $val[1] * $val[4] * $val[10] * $val[15] + $val[0] * $val[5] * $val[10] * $val[15];
    }
    function cbgm_Matrix4_matrix4_inv($val) {
        var $tmp_0, $l_det, $inv_det;
        cbgm_Matrix4_$callClinit();
        $tmp_0 = $rt_createFloatArray(16);
        $l_det = cbgm_Matrix4_matrix4_det($val);
        if ($l_det === 0.0)
            return 0;
        $tmp_0 = $tmp_0.data;
        $val = $val.data;
        $tmp_0[0] = $val[9] * $val[14] * $val[7] - $val[13] * $val[10] * $val[7] + $val[13] * $val[6] * $val[11] - $val[5] * $val[14] * $val[11] - $val[9] * $val[6] * $val[15] + $val[5] * $val[10] * $val[15];
        $tmp_0[4] = $val[12] * $val[10] * $val[7] - $val[8] * $val[14] * $val[7] - $val[12] * $val[6] * $val[11] + $val[4] * $val[14] * $val[11] + $val[8] * $val[6] * $val[15] - $val[4] * $val[10] * $val[15];
        $tmp_0[8] = $val[8] * $val[13] * $val[7] - $val[12] * $val[9] * $val[7] + $val[12] * $val[5] * $val[11] - $val[4] * $val[13] * $val[11] - $val[8] * $val[5] * $val[15] + $val[4] * $val[9] * $val[15];
        $tmp_0[12] = $val[12] * $val[9] * $val[6] - $val[8] * $val[13] * $val[6] - $val[12] * $val[5] * $val[10] + $val[4] * $val[13] * $val[10] + $val[8] * $val[5] * $val[14] - $val[4] * $val[9] * $val[14];
        $tmp_0[1] = $val[13] * $val[10] * $val[3] - $val[9] * $val[14] * $val[3] - $val[13] * $val[2] * $val[11] + $val[1] * $val[14] * $val[11] + $val[9] * $val[2] * $val[15] - $val[1] * $val[10] * $val[15];
        $tmp_0[5] = $val[8] * $val[14] * $val[3] - $val[12] * $val[10] * $val[3] + $val[12] * $val[2] * $val[11] - $val[0] * $val[14] * $val[11] - $val[8] * $val[2] * $val[15] + $val[0] * $val[10] * $val[15];
        $tmp_0[9] = $val[12] * $val[9] * $val[3] - $val[8] * $val[13] * $val[3] - $val[12] * $val[1] * $val[11] + $val[0] * $val[13] * $val[11] + $val[8] * $val[1] * $val[15] - $val[0] * $val[9] * $val[15];
        $tmp_0[13] = $val[8] * $val[13] * $val[2] - $val[12] * $val[9] * $val[2] + $val[12] * $val[1] * $val[10] - $val[0] * $val[13] * $val[10] - $val[8] * $val[1] * $val[14] + $val[0] * $val[9] * $val[14];
        $tmp_0[2] = $val[5] * $val[14] * $val[3] - $val[13] * $val[6] * $val[3] + $val[13] * $val[2] * $val[7] - $val[1] * $val[14] * $val[7] - $val[5] * $val[2] * $val[15] + $val[1] * $val[6] * $val[15];
        $tmp_0[6] = $val[12] * $val[6] * $val[3] - $val[4] * $val[14] * $val[3] - $val[12] * $val[2] * $val[7] + $val[0] * $val[14] * $val[7] + $val[4] * $val[2] * $val[15] - $val[0] * $val[6] * $val[15];
        $tmp_0[10] = $val[4] * $val[13] * $val[3] - $val[12] * $val[5] * $val[3] + $val[12] * $val[1] * $val[7] - $val[0] * $val[13] * $val[7] - $val[4] * $val[1] * $val[15] + $val[0] * $val[5] * $val[15];
        $tmp_0[14] = $val[12] * $val[5] * $val[2] - $val[4] * $val[13] * $val[2] - $val[12] * $val[1] * $val[6] + $val[0] * $val[13] * $val[6] + $val[4] * $val[1] * $val[14] - $val[0] * $val[5] * $val[14];
        $tmp_0[3] = $val[9] * $val[6] * $val[3] - $val[5] * $val[10] * $val[3] - $val[9] * $val[2] * $val[7] + $val[1] * $val[10] * $val[7] + $val[5] * $val[2] * $val[11] - $val[1] * $val[6] * $val[11];
        $tmp_0[7] = $val[4] * $val[10] * $val[3] - $val[8] * $val[6] * $val[3] + $val[8] * $val[2] * $val[7] - $val[0] * $val[10] * $val[7] - $val[4] * $val[2] * $val[11] + $val[0] * $val[6] * $val[11];
        $tmp_0[11] = $val[8] * $val[5] * $val[3] - $val[4] * $val[9] * $val[3] - $val[8] * $val[1] * $val[7] + $val[0] * $val[9] * $val[7] + $val[4] * $val[1] * $val[11] - $val[0] * $val[5] * $val[11];
        $tmp_0[15] = $val[4] * $val[9] * $val[2] - $val[8] * $val[5] * $val[2] + $val[8] * $val[1] * $val[6] - $val[0] * $val[9] * $val[6] - $val[4] * $val[1] * $val[10] + $val[0] * $val[5] * $val[10];
        $inv_det = 1.0 / $l_det;
        $val[0] = $tmp_0[0] * $inv_det;
        $val[4] = $tmp_0[4] * $inv_det;
        $val[8] = $tmp_0[8] * $inv_det;
        $val[12] = $tmp_0[12] * $inv_det;
        $val[1] = $tmp_0[1] * $inv_det;
        $val[5] = $tmp_0[5] * $inv_det;
        $val[9] = $tmp_0[9] * $inv_det;
        $val[13] = $tmp_0[13] * $inv_det;
        $val[2] = $tmp_0[2] * $inv_det;
        $val[6] = $tmp_0[6] * $inv_det;
        $val[10] = $tmp_0[10] * $inv_det;
        $val[14] = $tmp_0[14] * $inv_det;
        $val[3] = $tmp_0[3] * $inv_det;
        $val[7] = $tmp_0[7] * $inv_det;
        $val[11] = $tmp_0[11] * $inv_det;
        $val[15] = $tmp_0[15] * $inv_det;
        return 1;
    }
    function cbgm_Matrix4_matrix4_proj($mat, $vec, $offset) {
        var var$4, $z, var$6, var$7, var$8, $inv_w, $x, $y;
        cbgm_Matrix4_$callClinit();
        $mat = $mat.data;
        $vec = $vec.data;
        var$4 = $offset + 0 | 0;
        $z = $vec[var$4] * $mat[3];
        var$6 = $offset + 1 | 0;
        var$7 = $z + $vec[var$6] * $mat[7];
        var$8 = $offset + 2 | 0;
        $inv_w = 1.0 / (var$7 + $vec[var$8] * $mat[11] + $mat[15]);
        $x = ($vec[var$4] * $mat[0] + $vec[var$6] * $mat[4] + $vec[var$8] * $mat[8] + $mat[12]) * $inv_w;
        $y = ($vec[var$4] * $mat[1] + $vec[var$6] * $mat[5] + $vec[var$8] * $mat[9] + $mat[13]) * $inv_w;
        $z = ($vec[var$4] * $mat[2] + $vec[var$6] * $mat[6] + $vec[var$8] * $mat[10] + $mat[14]) * $inv_w;
        $vec[var$4] = $x;
        $vec[var$6] = $y;
        $vec[var$8] = $z;
    }
    function cbgm_Matrix4__clinit_() {
        var var$1;
        cbgm_Matrix4_tmp = $rt_createFloatArray(16);
        var$1 = new cbgm_Quaternion;
        cbgm_Quaternion_$callClinit();
        var$1.$x0 = 0.0;
        var$1.$y0 = 0.0;
        var$1.$z = 0.0;
        var$1.$w = 1.0;
        cbgm_Matrix4_quat = var$1;
        var$1 = new cbgm_Quaternion;
        var$1.$x0 = 0.0;
        var$1.$y0 = 0.0;
        var$1.$z = 0.0;
        var$1.$w = 1.0;
        cbgm_Matrix4_quat2 = var$1;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        cbgm_Matrix4_l_vez = var$1;
        cbgm_Matrix4_l_vex = new cbgm_Vector3;
        cbgm_Matrix4_l_vey = new cbgm_Vector3;
        cbgm_Matrix4_tmpVec = new cbgm_Vector3;
        cbgm_Matrix4_tmpMat = cbgm_Matrix4__init_();
        cbgm_Matrix4_right = new cbgm_Vector3;
        cbgm_Matrix4_tmpForward = new cbgm_Vector3;
        cbgm_Matrix4_tmpUp = new cbgm_Vector3;
    }
    var jur_RandomGenerator = $rt_classWithoutFields(0);
    var ju_Random = $rt_classWithoutFields();
    function cbgm_RandomXS128() {
        var a = this; ju_Random.call(a);
        a.$seed0 = Long_ZERO;
        a.$seed1 = Long_ZERO;
    }
    function cbgm_RandomXS128_nextInt($this, $n) {
        var var$2, var$3, var$4, var$5, var$6;
        var$2 = Long_fromInt($n);
        if (Long_le(var$2, Long_ZERO)) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = $rt_s(42);
            $rt_throw(var$3);
        }
        var$4 = Long_sub(var$2, Long_fromInt(1));
        while (true) {
            var$5 = $this.$seed0;
            var$6 = $this.$seed1;
            $this.$seed0 = var$6;
            var$5 = Long_xor(var$5, Long_shl(var$5, 23));
            var$5 = Long_xor(Long_xor(Long_xor(var$5, var$6), Long_shru(var$5, 17)), Long_shru(var$6, 26));
            $this.$seed1 = var$5;
            var$5 = Long_shru(Long_add(var$5, var$6), 1);
            var$6 = Long_rem(var$5, var$2);
            if (Long_ge(Long_add(Long_sub(var$5, var$6), var$4), Long_ZERO))
                break;
        }
        return Long_lo(var$6);
    }
    function cbgm_RandomXS128_setState($this, $seed0, $seed1) {
        $this.$seed0 = $seed0;
        $this.$seed1 = $seed1;
    }
    function cbgm_RandomXS128_getState($this, $seed) {
        return $seed ? $this.$seed1 : $this.$seed0;
    }
    var cbgm_Interpolation$12 = $rt_classWithoutFields(cbgm_Interpolation);
    function cbgm_Interpolation$12__init_() {
        var var_0 = new cbgm_Interpolation$12();
        cbgm_Interpolation$12__init_0(var_0);
        return var_0;
    }
    function cbgm_Interpolation$12__init_0($this) {
        cbgm_Interpolation_$callClinit();
    }
    var cbgm_Interpolation$9 = $rt_classWithoutFields(cbgm_Interpolation);
    function cbgm_Frustum() {
        var a = this; jl_Object.call(a);
        a.$planes = null;
        a.$planePoints = null;
        a.$planePointsArray = null;
    }
    var cbgm_Frustum_clipSpacePlanePoints = null;
    var cbgm_Frustum_clipSpacePlanePointsArray = null;
    var cbgm_Frustum_tmpV = null;
    function cbgm_Frustum_$callClinit() {
        cbgm_Frustum_$callClinit = $rt_eraseClinit(cbgm_Frustum);
        cbgm_Frustum__clinit_();
    }
    function cbgm_Frustum__init_() {
        var var_0 = new cbgm_Frustum();
        cbgm_Frustum__init_0(var_0);
        return var_0;
    }
    function cbgm_Frustum__init_0($this) {
        var var$1, var$2, var$3, var$4, $i, var$6;
        cbgm_Frustum_$callClinit();
        var$1 = $rt_createArray(cbgm_Plane, 6);
        var$2 = var$1.data;
        $this.$planes = var$1;
        var$1 = $rt_createArray(cbgm_Vector3, 8);
        var$3 = var$1.data;
        var$4 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$3[0] = var$4;
        var$3[1] = new cbgm_Vector3;
        var$3[2] = new cbgm_Vector3;
        var$3[3] = new cbgm_Vector3;
        var$3[4] = new cbgm_Vector3;
        var$3[5] = new cbgm_Vector3;
        var$3[6] = new cbgm_Vector3;
        var$3[7] = new cbgm_Vector3;
        $this.$planePoints = var$1;
        $this.$planePointsArray = $rt_createFloatArray(24);
        $i = 0;
        while ($i < 6) {
            var$4 = new cbgm_Plane;
            var$6 = new cbgm_Vector3;
            var$4.$normal = var$6;
            var$4.$d = 0.0;
            var$6.$x2 = 0.0;
            var$6.$y2 = 0.0;
            var$6.$z1 = 0.0;
            var$4.$d = 0.0;
            var$2[$i] = var$4;
            $i = $i + 1 | 0;
        }
    }
    function cbgm_Frustum_update($this, $inverseProjectionView) {
        var var$2, var$3, var$4, $i, var$6, $j, $v, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19;
        cbgm_Frustum_$callClinit();
        var$2 = cbgm_Frustum_clipSpacePlanePointsArray;
        var$3 = var$2.data;
        jl_System_fastArraycopy(var$2, 0, $this.$planePointsArray, 0, var$3.length);
        var$2 = $inverseProjectionView.$val;
        var$4 = $this.$planePointsArray;
        $i = 0;
        cbgm_Matrix4_$callClinit();
        var$6 = 0;
        while (var$6 < 8) {
            cbgm_Matrix4_matrix4_proj(var$2, var$4, $i);
            $i = $i + 3 | 0;
            var$6 = var$6 + 1 | 0;
        }
        $i = 0;
        $j = 0;
        while ($i < 8) {
            $v = $this.$planePoints.data[$i];
            var$2 = $this.$planePointsArray.data;
            var$9 = $j + 1 | 0;
            $v.$x2 = var$2[$j];
            var$6 = var$9 + 1 | 0;
            $v.$y2 = var$2[var$9];
            $j = var$6 + 1 | 0;
            $v.$z1 = var$2[var$6];
            $i = $i + 1 | 0;
        }
        $inverseProjectionView = $this.$planes.data[0];
        var$2 = $this.$planePoints.data;
        $v = var$2[1];
        var$10 = var$2[0];
        var$11 = var$2[2];
        var$12 = $inverseProjectionView.$normal;
        var$13 = $v.$x2;
        var$14 = $v.$y2;
        var$15 = $v.$z1;
        var$12.$x2 = var$13;
        var$12.$y2 = var$14;
        var$12.$z1 = var$15;
        var$16 = var$10.$x2;
        var$17 = var$10.$y2;
        var$18 = var$10.$z1;
        var$16 = var$13 - var$16;
        var$14 = var$14 - var$17;
        var$13 = var$15 - var$18;
        var$12.$x2 = var$16;
        var$12.$y2 = var$14;
        var$12.$z1 = var$13;
        var$15 = var$10.$x2 - var$11.$x2;
        var$17 = var$10.$y2 - var$11.$y2;
        var$18 = var$10.$z1 - var$11.$z1;
        var$19 = var$14 * var$18 - var$13 * var$17;
        var$18 = var$13 * var$15 - var$16 * var$18;
        var$16 = var$16 * var$17 - var$14 * var$15;
        var$12.$x2 = var$19;
        var$12.$y2 = var$18;
        var$12.$z1 = var$16;
        var$15 = var$19 * var$19 + var$18 * var$18 + var$16 * var$16;
        if (var$15 !== 0.0 && var$15 !== 1.0) {
            var$14 = 1.0 / jl_Math_sqrt(var$15);
            var$15 = var$12.$x2 * var$14;
            var$16 = var$12.$y2 * var$14;
            var$14 = var$12.$z1 * var$14;
            var$12.$x2 = var$15;
            var$12.$y2 = var$16;
            var$12.$z1 = var$14;
        }
        var$10 = $inverseProjectionView.$normal;
        $inverseProjectionView.$d =  -($v.$x2 * var$10.$x2 + $v.$y2 * var$10.$y2 + $v.$z1 * var$10.$z1);
        $inverseProjectionView = $this.$planes.data[1];
        var$2 = $this.$planePoints.data;
        $v = var$2[4];
        var$10 = var$2[5];
        var$11 = var$2[7];
        var$12 = $inverseProjectionView.$normal;
        var$17 = $v.$x2;
        var$18 = $v.$y2;
        var$13 = $v.$z1;
        var$12.$x2 = var$17;
        var$12.$y2 = var$18;
        var$12.$z1 = var$13;
        var$14 = var$10.$x2;
        var$15 = var$10.$y2;
        var$16 = var$10.$z1;
        var$14 = var$17 - var$14;
        var$15 = var$18 - var$15;
        var$16 = var$13 - var$16;
        var$12.$x2 = var$14;
        var$12.$y2 = var$15;
        var$12.$z1 = var$16;
        cbgm_Vector3_nor(cbgm_Vector3_crs0(var$12, var$10.$x2 - var$11.$x2, var$10.$y2 - var$11.$y2, var$10.$z1 - var$11.$z1));
        $inverseProjectionView.$d =  -cbgm_Vector3_dot($v, $inverseProjectionView.$normal);
        $inverseProjectionView = $this.$planes.data[2];
        var$2 = $this.$planePoints.data;
        cbgm_Plane_set($inverseProjectionView, var$2[0], var$2[4], var$2[3]);
        $inverseProjectionView = $this.$planes.data[3];
        var$2 = $this.$planePoints.data;
        cbgm_Plane_set($inverseProjectionView, var$2[5], var$2[1], var$2[6]);
        $inverseProjectionView = $this.$planes.data[4];
        var$2 = $this.$planePoints.data;
        cbgm_Plane_set($inverseProjectionView, var$2[2], var$2[3], var$2[6]);
        $inverseProjectionView = $this.$planes.data[5];
        var$2 = $this.$planePoints.data;
        cbgm_Plane_set($inverseProjectionView, var$2[4], var$2[0], var$2[1]);
    }
    function cbgm_Frustum__clinit_() {
        var var$1, var$2, $v, var$4, $j, var$6, var$7, var$8, var$9;
        var$1 = $rt_createArray(cbgm_Vector3, 8);
        var$2 = var$1.data;
        $v = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        $v.$x2 = (-1.0);
        $v.$y2 = (-1.0);
        $v.$z1 = (-1.0);
        var$2[0] = $v;
        $v = new cbgm_Vector3;
        $v.$x2 = 1.0;
        $v.$y2 = (-1.0);
        $v.$z1 = (-1.0);
        var$2[1] = $v;
        $v = new cbgm_Vector3;
        $v.$x2 = 1.0;
        $v.$y2 = 1.0;
        $v.$z1 = (-1.0);
        var$2[2] = $v;
        $v = new cbgm_Vector3;
        $v.$x2 = (-1.0);
        $v.$y2 = 1.0;
        $v.$z1 = (-1.0);
        var$2[3] = $v;
        $v = new cbgm_Vector3;
        $v.$x2 = (-1.0);
        $v.$y2 = (-1.0);
        $v.$z1 = 1.0;
        var$2[4] = $v;
        $v = new cbgm_Vector3;
        $v.$x2 = 1.0;
        $v.$y2 = (-1.0);
        $v.$z1 = 1.0;
        var$2[5] = $v;
        $v = new cbgm_Vector3;
        $v.$x2 = 1.0;
        $v.$y2 = 1.0;
        $v.$z1 = 1.0;
        var$2[6] = $v;
        $v = new cbgm_Vector3;
        $v.$x2 = (-1.0);
        $v.$y2 = 1.0;
        $v.$z1 = 1.0;
        var$2[7] = $v;
        cbgm_Frustum_clipSpacePlanePoints = var$1;
        var$1 = $rt_createFloatArray(24);
        var$4 = var$1.data;
        cbgm_Frustum_clipSpacePlanePointsArray = var$1;
        $j = 0;
        var$6 = var$2.length;
        var$7 = 0;
        while (var$7 < var$6) {
            $v = var$2[var$7];
            var$8 = $j + 1 | 0;
            var$4[$j] = $v.$x2;
            var$9 = var$8 + 1 | 0;
            var$4[var$8] = $v.$y2;
            $j = var$9 + 1 | 0;
            var$4[var$9] = $v.$z1;
            var$7 = var$7 + 1 | 0;
        }
        cbgm_Frustum_tmpV = new cbgm_Vector3;
    }
    function cbgm_Quaternion() {
        var a = this; jl_Object.call(a);
        a.$x0 = 0.0;
        a.$y0 = 0.0;
        a.$z = 0.0;
        a.$w = 0.0;
    }
    var cbgm_Quaternion_tmp1 = null;
    var cbgm_Quaternion_tmp2 = null;
    function cbgm_Quaternion_$callClinit() {
        cbgm_Quaternion_$callClinit = $rt_eraseClinit(cbgm_Quaternion);
        cbgm_Quaternion__clinit_();
    }
    function cbgm_Quaternion__clinit_() {
        var var$1;
        var$1 = new cbgm_Quaternion;
        cbgm_Quaternion_$callClinit();
        var$1.$x0 = 0.0;
        var$1.$y0 = 0.0;
        var$1.$z = 0.0;
        var$1.$w = 0.0;
        cbgm_Quaternion_tmp1 = var$1;
        var$1 = new cbgm_Quaternion;
        var$1.$x0 = 0.0;
        var$1.$y0 = 0.0;
        var$1.$z = 0.0;
        var$1.$w = 0.0;
        cbgm_Quaternion_tmp2 = var$1;
    }
    var cbgm_EarClippingTriangulator = $rt_classWithoutFields();
    var cbgm_Octree$RayCastResult = $rt_classWithoutFields();
    function cbgm_Vector3() {
        var a = this; jl_Object.call(a);
        a.$x2 = 0.0;
        a.$y2 = 0.0;
        a.$z1 = 0.0;
    }
    var cbgm_Vector3_X = null;
    var cbgm_Vector3_Y = null;
    var cbgm_Vector3_Z = null;
    var cbgm_Vector3_Zero = null;
    var cbgm_Vector3_tmpMat = null;
    function cbgm_Vector3_$callClinit() {
        cbgm_Vector3_$callClinit = $rt_eraseClinit(cbgm_Vector3);
        cbgm_Vector3__clinit_();
    }
    function cbgm_Vector3_nor($this) {
        var var$1, $len2, var$3;
        var$1 = $this.$x2;
        var$1 = var$1 * var$1;
        $len2 = $this.$y2;
        var$1 = var$1 + $len2 * $len2;
        $len2 = $this.$z1;
        $len2 = var$1 + $len2 * $len2;
        if ($len2 !== 0.0 && $len2 !== 1.0) {
            var$1 = 1.0 / jl_Math_sqrt($len2);
            $len2 = $this.$x2 * var$1;
            var$3 = $this.$y2 * var$1;
            var$1 = $this.$z1 * var$1;
            $this.$x2 = $len2;
            $this.$y2 = var$3;
            $this.$z1 = var$1;
            return $this;
        }
        return $this;
    }
    function cbgm_Vector3_dot($this, $vector) {
        return $this.$x2 * $vector.$x2 + $this.$y2 * $vector.$y2 + $this.$z1 * $vector.$z1;
    }
    function cbgm_Vector3_crs($this, $vector) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$2 = $this.$y2;
        var$3 = $vector.$z1;
        var$4 = var$2 * var$3;
        var$5 = $this.$z1;
        var$6 = $vector.$y2;
        var$7 = var$4 - var$5 * var$6;
        var$4 = $vector.$x2;
        var$5 = var$5 * var$4;
        var$8 = $this.$x2;
        var$3 = var$5 - var$8 * var$3;
        var$2 = var$8 * var$6 - var$2 * var$4;
        $this.$x2 = var$7;
        $this.$y2 = var$3;
        $this.$z1 = var$2;
        return $this;
    }
    function cbgm_Vector3_crs0($this, $x, $y, $z) {
        var var$4, var$5, var$6, var$7;
        var$4 = $this.$y2;
        var$5 = var$4 * $z;
        var$6 = $this.$z1;
        var$7 = var$5 - var$6 * $y;
        var$6 = var$6 * $x;
        var$5 = $this.$x2;
        $z = var$6 - var$5 * $z;
        $x = var$5 * $y - var$4 * $x;
        $this.$x2 = var$7;
        $this.$y2 = $z;
        $this.$z1 = $x;
        return $this;
    }
    function cbgm_Vector3__clinit_() {
        var var$1;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$1.$x2 = 1.0;
        var$1.$y2 = 0.0;
        var$1.$z1 = 0.0;
        cbgm_Vector3_X = var$1;
        var$1 = new cbgm_Vector3;
        var$1.$x2 = 0.0;
        var$1.$y2 = 1.0;
        var$1.$z1 = 0.0;
        cbgm_Vector3_Y = var$1;
        var$1 = new cbgm_Vector3;
        var$1.$x2 = 0.0;
        var$1.$y2 = 0.0;
        var$1.$z1 = 1.0;
        cbgm_Vector3_Z = var$1;
        var$1 = new cbgm_Vector3;
        var$1.$x2 = 0.0;
        var$1.$y2 = 0.0;
        var$1.$z1 = 0.0;
        cbgm_Vector3_Zero = var$1;
        cbgm_Vector3_tmpMat = cbgm_Matrix4__init_();
    }
    var cbgm_Circle = $rt_classWithoutFields();
    var cbgm_Octree$1 = $rt_classWithoutFields(cbgu_Pool);
    var cbgm_Interpolation$ExpIn = $rt_classWithoutFields(cbgm_Interpolation$Exp);
    function cbgm_Interpolation$ExpIn__init_(var_0, var_1) {
        var var_2 = new cbgm_Interpolation$ExpIn();
        cbgm_Interpolation$ExpIn__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbgm_Interpolation$ExpIn__init_0($this, $value, $power) {
        cbgm_Interpolation_$callClinit();
        $this.$value2 = $value;
        $this.$power0 = $power;
        $power = jl_Math_powImpl($value,  -$power);
        $this.$min = $power;
        $this.$scale = 1.0 / (1.0 - $power);
    }
    var cbgm_Bezier = $rt_classWithoutFields();
    var cbgm_CumulativeDistribution$CumulativeValue = $rt_classWithoutFields();
    var cbgm_GridPoint2 = $rt_classWithoutFields();
    function cbgm_Plane() {
        var a = this; jl_Object.call(a);
        a.$normal = null;
        a.$d = 0.0;
    }
    function cbgm_Plane_set($this, $point1, $point2, $point3) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        var$4 = $this.$normal;
        var$5 = $point1.$x2;
        var$6 = $point1.$y2;
        var$7 = $point1.$z1;
        var$4.$x2 = var$5;
        var$4.$y2 = var$6;
        var$4.$z1 = var$7;
        var$8 = $point2.$x2;
        var$9 = $point2.$y2;
        var$10 = $point2.$z1;
        var$5 = var$5 - var$8;
        var$6 = var$6 - var$9;
        var$10 = var$7 - var$10;
        var$4.$x2 = var$5;
        var$4.$y2 = var$6;
        var$4.$z1 = var$10;
        var$7 = $point2.$x2 - $point3.$x2;
        var$9 = $point2.$y2 - $point3.$y2;
        var$11 = $point2.$z1 - $point3.$z1;
        var$8 = var$6 * var$11 - var$10 * var$9;
        var$10 = var$10 * var$7 - var$5 * var$11;
        var$5 = var$5 * var$9 - var$6 * var$7;
        var$4.$x2 = var$8;
        var$4.$y2 = var$10;
        var$4.$z1 = var$5;
        var$5 = var$8 * var$8 + var$10 * var$10 + var$5 * var$5;
        if (var$5 !== 0.0 && var$5 !== 1.0) {
            var$10 = 1.0 / jl_Math_sqrt(var$5);
            var$5 = var$4.$x2 * var$10;
            var$6 = var$4.$y2 * var$10;
            var$10 = var$4.$z1 * var$10;
            var$4.$x2 = var$5;
            var$4.$y2 = var$6;
            var$4.$z1 = var$10;
        }
        $point2 = $this.$normal;
        $this.$d =  -($point1.$x2 * $point2.$x2 + $point1.$y2 * $point2.$y2 + $point1.$z1 * $point2.$z1);
    }
    var cbgm_Interpolation$11 = $rt_classWithoutFields(cbgm_Interpolation);
    var cbgm_Octree$OctreeNode = $rt_classWithoutFields();
    var cbgm_Intersector$MinimumTranslationVector = $rt_classWithoutFields();
    var cbgm_Intersector$SplitTriangle = $rt_classWithoutFields();
    var cbgm_GridPoint3 = $rt_classWithoutFields();
    var cbgm_Octree$Collider = $rt_classWithoutFields(0);
    var cbgm_Matrix3 = $rt_classWithoutFields();
    var cbgm_MathUtils$Sin = $rt_classWithoutFields();
    var cbgm_MathUtils$Sin_table = null;
    function cbgm_MathUtils$Sin__clinit_() {
        var $i, var$2;
        cbgm_MathUtils$Sin_table = $rt_createFloatArray(16384);
        $i = 0;
        while ($i < 16384) {
            cbgm_MathUtils$Sin_table.data[$i] = jl_Math_sin(($i + 0.5) / 16384.0 * 6.2831854820251465);
            $i = $i + 1 | 0;
        }
        var$2 = cbgm_MathUtils$Sin_table.data;
        var$2[0] = 0.0;
        var$2[4096] = 1.0;
        var$2[8192] = 0.0;
        var$2[12288] = (-1.0);
    }
    function cbggg_GlyphLayout() {
        var a = this; jl_Object.call(a);
        a.$runs = null;
        a.$colors = null;
        a.$glyphCount = 0;
        a.$width0 = 0.0;
        a.$height0 = 0.0;
    }
    var cbggg_GlyphLayout_glyphRunPool = null;
    var cbggg_GlyphLayout_colorStack = null;
    function cbggg_GlyphLayout_$callClinit() {
        cbggg_GlyphLayout_$callClinit = $rt_eraseClinit(cbggg_GlyphLayout);
        cbggg_GlyphLayout__clinit_();
    }
    function cbggg_GlyphLayout__init_() {
        var var_0 = new cbggg_GlyphLayout();
        cbggg_GlyphLayout__init_0(var_0);
        return var_0;
    }
    function cbggg_GlyphLayout__init_1(var_0, var_1) {
        var var_2 = new cbggg_GlyphLayout();
        cbggg_GlyphLayout__init_2(var_2, var_0, var_1);
        return var_2;
    }
    function cbggg_GlyphLayout__init_3(var_0, var_1, var_2, var_3, var_4, var_5) {
        var var_6 = new cbggg_GlyphLayout();
        cbggg_GlyphLayout__init_4(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
        return var_6;
    }
    function cbggg_GlyphLayout__init_5(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
        var var_9 = new cbggg_GlyphLayout();
        cbggg_GlyphLayout__init_6(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
        return var_9;
    }
    function cbggg_GlyphLayout__init_0($this) {
        var var$1;
        cbggg_GlyphLayout_$callClinit();
        var$1 = new cbgu_Array;
        var$1.$ordered = 1;
        var$1.$items = $rt_createArray(jl_Object, 1);
        $this.$runs = var$1;
        var$1 = new cbgu_IntArray;
        var$1.$ordered0 = 1;
        var$1.$items0 = $rt_createIntArray(2);
        $this.$colors = var$1;
    }
    function cbggg_GlyphLayout__init_2($this, $font, $str) {
        var var$3;
        cbggg_GlyphLayout_$callClinit();
        var$3 = new cbgu_Array;
        var$3.$ordered = 1;
        var$3.$items = $rt_createArray(jl_Object, 1);
        $this.$runs = var$3;
        var$3 = new cbgu_IntArray;
        var$3.$ordered0 = 1;
        var$3.$items0 = $rt_createIntArray(2);
        $this.$colors = var$3;
        cbggg_GlyphLayout_setText($this, $font, $str, 0, $str.$length1(), $font.$getColor(), 0.0, 8, 0, null);
    }
    function cbggg_GlyphLayout__init_4($this, $font, $str, $color, $targetWidth, $halign, $wrap) {
        var var$7;
        cbggg_GlyphLayout_$callClinit();
        var$7 = new cbgu_Array;
        var$7.$ordered = 1;
        var$7.$items = $rt_createArray(jl_Object, 1);
        $this.$runs = var$7;
        var$7 = new cbgu_IntArray;
        var$7.$ordered0 = 1;
        var$7.$items0 = $rt_createIntArray(2);
        $this.$colors = var$7;
        cbggg_GlyphLayout_setText($this, $font, $str, 0, $str.$length1(), $color, $targetWidth, $halign, $wrap, null);
    }
    function cbggg_GlyphLayout__init_6($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) {
        var var$10;
        cbggg_GlyphLayout_$callClinit();
        var$10 = new cbgu_Array;
        var$10.$ordered = 1;
        var$10.$items = $rt_createArray(jl_Object, 1);
        $this.$runs = var$10;
        var$10 = new cbgu_IntArray;
        var$10.$ordered0 = 1;
        var$10.$items0 = $rt_createIntArray(2);
        $this.$colors = var$10;
        cbggg_GlyphLayout_setText($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate);
    }
    function cbggg_GlyphLayout_setText($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) {
        var $fontData, $wrapOrTruncate, $currentColor, $markupEnabled, $isLastRun, $y, $down, $lineRun, $lastGlyph, var$19, $runStart, $newline, $runEnd, var$23, $length, $run, $wrapIndex, $runWidth, $i, $glyph;
        cbggg_GlyphLayout_reset($this);
        $fontData = $font.$data;
        if ($start == $end) {
            $this.$height0 = $fontData.$capHeight;
            return;
        }
        if ($wrap)
            $targetWidth = jl_Math_maxImpl($targetWidth, $fontData.$spaceXadvance * 3.0);
        $wrapOrTruncate = !$wrap && $truncate === null ? 0 : 1;
        $currentColor = cbgg_Color_toIntBits($color);
        cbgu_IntArray_add($this.$colors, 0, $currentColor);
        $markupEnabled = $fontData.$markupEnabled;
        if ($markupEnabled)
            cbgu_IntArray_add0(cbggg_GlyphLayout_colorStack, $currentColor);
        $isLastRun = 0;
        $y = 0.0;
        $down = $fontData.$down;
        $lineRun = null;
        $lastGlyph = null;
        var$19 = $currentColor;
        $runStart = $start;
        a: {
            b: while (true) {
                c: {
                    $newline = 0;
                    if ($start == $end) {
                        if ($runStart == $end)
                            break a;
                        $isLastRun = 1;
                        $runEnd = $end;
                    } else {
                        $wrap = $start + 1 | 0;
                        if ($start < 0)
                            break b;
                        var$23 = $str.$characters.data;
                        if ($start >= var$23.length)
                            break b;
                        d: {
                            switch (var$23[$start]) {
                                case 10:
                                    $runEnd = $wrap - 1 | 0;
                                    $newline = 1;
                                    $start = $wrap;
                                    break c;
                                case 91:
                                    if (!$markupEnabled) {
                                        $start = $wrap;
                                        break d;
                                    }
                                    $length = cbggg_GlyphLayout_parseColorMarkup($this, $str, $wrap, $end);
                                    if ($length >= 0) {
                                        $runEnd = $wrap - 1 | 0;
                                        $start = $wrap + ($length + 1 | 0) | 0;
                                        if ($start == $end) {
                                            $isLastRun = 1;
                                            break c;
                                        }
                                        $currentColor = cbgu_IntArray_peek(cbggg_GlyphLayout_colorStack);
                                        break c;
                                    }
                                    if ($length != (-2)) {
                                        $start = $wrap;
                                        break d;
                                    }
                                    $start = $wrap + 1 | 0;
                                    break d;
                                default:
                            }
                            $start = $wrap;
                        }
                        continue b;
                    }
                }
                $color = cbggg_GlyphLayout_glyphRunPool;
                $font = $color.$freeObjects;
                $wrap = $font.$size;
                if (!$wrap)
                    $font = cbgu_ReflectionPool_newObject($color);
                else {
                    if (!$wrap) {
                        $font = new jl_IllegalStateException;
                        $font.$suppressionEnabled = 1;
                        $font.$writableStackTrace = 1;
                        $font.$message = $rt_s(43);
                        $rt_throw($font);
                    }
                    $wrap = $wrap - 1 | 0;
                    $font.$size = $wrap;
                    var$23 = $font.$items.data;
                    $font = var$23[$wrap];
                    var$23[$wrap] = null;
                }
                $run = $font;
                $run.$x3 = 0.0;
                $run.$y3 = $y;
                cbggg_BitmapFont$BitmapFontData_getGlyphs($fontData, $run, $str, $runStart, $runEnd, $lastGlyph);
                $this.$glyphCount = $this.$glyphCount + $run.$glyphs.$size | 0;
                if ($currentColor != var$19) {
                    $font = $this.$colors;
                    $wrap = cbgu_IntArray_get($font, $font.$size0 - 2 | 0);
                    $wrapIndex = $this.$glyphCount;
                    if ($wrap != $wrapIndex) {
                        cbgu_IntArray_add0($this.$colors, $wrapIndex);
                        cbgu_IntArray_add0($this.$colors, $currentColor);
                    } else {
                        $font = $this.$colors;
                        cbgu_IntArray_set($font, $font.$size0 - 1 | 0, $currentColor);
                    }
                    var$19 = $currentColor;
                }
                e: {
                    if (!$run.$glyphs.$size) {
                        cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $run);
                        if ($lineRun === null)
                            break e;
                    } else if ($lineRun !== null) {
                        cbggg_GlyphLayout$GlyphRun_appendRun($lineRun, $run);
                        cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $run);
                    } else {
                        cbgu_Array_add($this.$runs, $run);
                        $lineRun = $run;
                    }
                    if (!$newline && !$isLastRun)
                        $lastGlyph = cbgu_Array_peek($lineRun.$glyphs);
                    else {
                        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $lineRun);
                        $lastGlyph = null;
                    }
                    if ($wrapOrTruncate && $lineRun.$glyphs.$size && !(!$newline && !$isLastRun)) {
                        $runWidth = cbgu_FloatArray_first($lineRun.$xAdvances) + cbgu_FloatArray_get($lineRun.$xAdvances, 1);
                        $i = 2;
                        while ($i < $lineRun.$xAdvances.$size1) {
                            $font = $lineRun.$glyphs;
                            $length = $i - 1 | 0;
                            $glyph = cbgu_Array_get($font, $length);
                            if ($runWidth + ($glyph.$width1 + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight - 9.999999747378752E-5 <= $targetWidth)
                                $runWidth = $runWidth + $lineRun.$xAdvances.$items1.data[$i];
                            else {
                                if ($truncate !== null) {
                                    cbggg_GlyphLayout_truncate($this, $fontData, $lineRun, $targetWidth, $truncate);
                                    break a;
                                }
                                $wrapIndex = cbggg_BitmapFont$BitmapFontData_getWrapIndex($fontData, $lineRun.$glyphs, $i);
                                if (!(!$wrapIndex && $lineRun.$x3 === 0.0) && $wrapIndex < $lineRun.$glyphs.$size)
                                    $length = $wrapIndex;
                                $lineRun = cbggg_GlyphLayout_wrap($this, $fontData, $lineRun, $length);
                                if ($lineRun === null)
                                    break e;
                                cbgu_Array_add($this.$runs, $lineRun);
                                $y = $y + $down;
                                $lineRun.$x3 = 0.0;
                                $lineRun.$y3 = $y;
                                $runWidth = cbgu_FloatArray_first($lineRun.$xAdvances) + cbgu_FloatArray_get($lineRun.$xAdvances, 1);
                                $i = 1;
                            }
                            $i = $i + 1 | 0;
                        }
                    }
                }
                if ($newline) {
                    $lineRun = null;
                    $lastGlyph = null;
                    $y = $runEnd != $runStart ? $y + $down : $y + $down * $fontData.$blankLineScale;
                }
                $runStart = $start;
            }
            $font = new jl_StringIndexOutOfBoundsException;
            $font.$suppressionEnabled = 1;
            $font.$writableStackTrace = 1;
            $rt_throw($font);
        }
        $this.$height0 = $fontData.$capHeight + jl_Math_absImpl($y);
        cbggg_GlyphLayout_calculateWidths($this, $fontData);
        cbggg_GlyphLayout_alignRuns($this, $targetWidth, $halign);
        if ($markupEnabled)
            cbggg_GlyphLayout_colorStack.$size0 = 0;
    }
    function cbggg_GlyphLayout_calculateWidths($this, $fontData) {
        var $width, $run, $runsItems, $i, $n, $xAdvances, $runWidth, $max, $glyph, $glyphs, $ii, $nn;
        $width = 0.0;
        $run = $this.$runs;
        $runsItems = $run.$items;
        $i = 0;
        $n = $run.$size;
        while ($i < $n) {
            $run = $runsItems.data[$i];
            $xAdvances = $run.$xAdvances.$items1.data;
            $runWidth = $run.$x3 + $xAdvances[0];
            $max = 0.0;
            $glyph = $run.$glyphs;
            $glyphs = $glyph.$items;
            $ii = 0;
            $nn = $glyph.$size;
            while ($ii < $nn) {
                $glyph = $glyphs.data[$ii];
                $max = jl_Math_maxImpl($max, $runWidth + ($glyph.$width1 + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight);
                $ii = $ii + 1 | 0;
                $runWidth = $runWidth + $xAdvances[$ii];
            }
            $runWidth = jl_Math_maxImpl($runWidth, $max);
            $max = $run.$x3;
            $runWidth = $runWidth - $max;
            $run.$width2 = $runWidth;
            $width = jl_Math_maxImpl($width, $max + $runWidth);
            $i = $i + 1 | 0;
        }
        $this.$width0 = $width;
    }
    function cbggg_GlyphLayout_alignRuns($this, $targetWidth, $halign) {
        var $center, $run, $runsItems, $i, $n;
        a: {
            if (!($halign & 8)) {
                $center = !($halign & 1) ? 0 : 1;
                $run = $this.$runs;
                $runsItems = $run.$items;
                $i = 0;
                $n = $run.$size;
                while (true) {
                    if ($i >= $n)
                        break a;
                    $run = $runsItems.data[$i];
                    $run.$x3 = $run.$x3 + (!$center ? $targetWidth - $run.$width2 : 0.5 * ($targetWidth - $run.$width2));
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    function cbggg_GlyphLayout_truncate($this, $fontData, $run, $targetWidth, $truncate) {
        var $glyphCount, var$6, $truncateRun, $count, $xAdvances, var$10, var$11, $truncateWidth, $n, $droppedGlyphCount, $i, $width, var$17, var$18, $$je;
        $glyphCount = $run.$glyphs.$size;
        cbggg_GlyphLayout_$callClinit();
        var$6 = cbggg_GlyphLayout_glyphRunPool;
        $truncateRun = var$6.$freeObjects;
        $count = $truncateRun.$size;
        if ($count) {
            if (!$count) {
                $fontData = new jl_IllegalStateException;
                $fontData.$suppressionEnabled = 1;
                $fontData.$writableStackTrace = 1;
                $fontData.$message = $rt_s(43);
                $rt_throw($fontData);
            }
            $count = $count - 1 | 0;
            $truncateRun.$size = $count;
            $xAdvances = $truncateRun.$items.data;
            $truncateRun = $xAdvances[$count];
            $xAdvances[$count] = null;
        } else
            a: {
                try {
                    $truncateRun = cbgur_Constructor_newInstance(var$6.$constructor, null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $run = $$je;
                    } else {
                        throw $$e;
                    }
                }
                $truncate = new cbgu_GdxRuntimeException;
                $fontData = new jl_StringBuilder;
                $fontData.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(44));
                var$10 = var$6.$constructor.$constructor0.$declaringClass;
                if (var$10.$name === null)
                    var$10.$name = $rt_str(var$10.$platformClass.$meta.name);
                var$6 = var$10.$name;
                jl_AbstractStringBuilder_insert($fontData, $fontData.$length, var$6);
                var$6 = new jl_String;
                $xAdvances = $fontData.$buffer;
                $count = $fontData.$length;
                jl_String_$callClinit();
                var$11 = $rt_createCharArray($count);
                var$6.$characters = var$11;
                jl_System_fastArraycopy($xAdvances, 0, var$11, 0, $count);
                $truncate.$suppressionEnabled = 1;
                $truncate.$writableStackTrace = 1;
                $truncate.$message = var$6;
                $truncate.$cause = $run;
                $rt_throw($truncate);
            }
        $truncateRun = $truncateRun;
        cbggg_BitmapFont$BitmapFontData_getGlyphs($fontData, $truncateRun, $truncate, 0, $truncate.$length1(), null);
        $truncateWidth = 0.0;
        var$6 = $truncateRun.$xAdvances;
        $n = var$6.$size1;
        if ($n > 0) {
            var$10 = $truncateRun.$glyphs;
            $droppedGlyphCount = var$10.$size;
            if (!$droppedGlyphCount) {
                $fontData = new jl_IllegalStateException;
                $fontData.$suppressionEnabled = 1;
                $fontData.$writableStackTrace = 1;
                $fontData.$message = $rt_s(43);
                $rt_throw($fontData);
            }
            var$10 = var$10.$items.data[$droppedGlyphCount - 1 | 0];
            if (!var$10.$fixedWidth)
                var$6.$items1.data[$n - 1 | 0] = (var$10.$width1 + var$10.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight;
            $xAdvances = var$6.$items1;
            $i = 1;
            while ($i < $n) {
                $truncateWidth = $truncateWidth + $xAdvances.data[$i];
                $i = $i + 1 | 0;
            }
        }
        $targetWidth = $targetWidth - $truncateWidth;
        $count = 0;
        $width = $run.$x3;
        var$10 = $run.$xAdvances;
        $xAdvances = var$10.$items1;
        b: {
            while (true) {
                if ($count >= var$10.$size1)
                    break b;
                $width = $width + $xAdvances.data[$count];
                if ($width > $targetWidth)
                    break;
                $count = $count + 1 | 0;
            }
        }
        if ($count <= 1) {
            var$17 = $run.$glyphs;
            $xAdvances = var$17.$items;
            $count = 0;
            $droppedGlyphCount = var$17.$size;
            var$18 = null;
            if ($count > $droppedGlyphCount) {
                $fontData = new jl_IllegalArgumentException;
                $fontData.$suppressionEnabled = 1;
                $fontData.$writableStackTrace = 1;
                $rt_throw($fontData);
            }
            while ($count < $droppedGlyphCount) {
                var$11 = $xAdvances.data;
                $n = $count + 1 | 0;
                var$11[$count] = var$18;
                $count = $n;
            }
            var$17.$size = 0;
            var$10.$size1 = 0;
            cbgu_FloatArray_addAll(var$10, var$6.$items1, 0, var$6.$size1);
        } else {
            cbgu_Array_truncate($run.$glyphs, $count - 1 | 0);
            var$6 = $run.$xAdvances;
            if (var$6.$size1 > $count)
                var$6.$size1 = $count;
            cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $run);
            var$6 = $truncateRun.$xAdvances;
            $count = var$6.$size1;
            if ($count > 0)
                cbgu_FloatArray_addAll0($run.$xAdvances, var$6, 1, $count - 1 | 0);
        }
        c: {
            $droppedGlyphCount = $glyphCount - $run.$glyphs.$size | 0;
            if ($droppedGlyphCount > 0) {
                $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
                if ($fontData.$markupEnabled)
                    while (true) {
                        $fontData = $this.$colors;
                        $glyphCount = $fontData.$size0;
                        if ($glyphCount <= 2)
                            break c;
                        if (cbgu_IntArray_get($fontData, $glyphCount - 2 | 0) < $this.$glyphCount)
                            break c;
                        $fontData = $this.$colors;
                        $fontData.$size0 = $fontData.$size0 - 2 | 0;
                    }
            }
        }
        $fontData = $run.$glyphs;
        $run = $truncateRun.$glyphs;
        cbgu_Array_addAll($fontData, $run.$items, 0, $run.$size);
        $this.$glyphCount = $this.$glyphCount + $truncate.$length1() | 0;
        cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $truncateRun);
    }
    function cbggg_GlyphLayout_wrap($this, $fontData, $first, $secondStart) {
        var $glyphs2, $glyphCount, $xAdvances2, $firstEnd, $secondGlyphCount, $firstGlyphCount, $second, var$11, var$12, $droppedGlyphCount, $lastColor, $glyphs1, $xAdvances1, $reductionThreshold, $i, $colorChangeIndex;
        $glyphs2 = $first.$glyphs;
        $glyphCount = $glyphs2.$size;
        $xAdvances2 = $first.$xAdvances;
        $firstEnd = $secondStart;
        a: {
            while (true) {
                if ($firstEnd <= 0)
                    break a;
                $secondGlyphCount = $firstEnd - 1 | 0;
                if ($secondGlyphCount >= $glyphCount)
                    break;
                b: {
                    switch ($glyphs2.$items.data[$secondGlyphCount].$id & 65535) {
                        case 9:
                        case 10:
                        case 13:
                        case 32:
                            break;
                        default:
                            $firstGlyphCount = 0;
                            break b;
                    }
                    $firstGlyphCount = 1;
                }
                if (!$firstGlyphCount)
                    break a;
                $firstEnd = $firstEnd + (-1) | 0;
            }
            $first = new jl_IndexOutOfBoundsException;
            $fontData = new jl_StringBuilder;
            $fontData.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(36));
            jl_AbstractStringBuilder_insert0($fontData, $fontData.$length, $secondGlyphCount, 10);
            jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(37));
            $secondStart = $glyphs2.$size;
            jl_AbstractStringBuilder_insert0($fontData, $fontData.$length, $secondStart, 10);
            $second = new jl_String;
            var$11 = $fontData.$buffer;
            $firstGlyphCount = $fontData.$length;
            jl_String_$callClinit();
            var$12 = $rt_createCharArray($firstGlyphCount);
            $second.$characters = var$12;
            jl_System_fastArraycopy(var$11, 0, var$12, 0, $firstGlyphCount);
            $first.$suppressionEnabled = 1;
            $first.$writableStackTrace = 1;
            $first.$message = $second;
            $rt_throw($first);
        }
        c: {
            while (true) {
                $firstGlyphCount = $rt_compare($secondStart, $glyphCount);
                if ($firstGlyphCount >= 0)
                    break c;
                if ($firstGlyphCount >= 0)
                    break;
                d: {
                    switch ($glyphs2.$items.data[$secondStart].$id & 65535) {
                        case 9:
                        case 10:
                        case 13:
                        case 32:
                            break;
                        default:
                            $secondGlyphCount = 0;
                            break d;
                    }
                    $secondGlyphCount = 1;
                }
                if (!$secondGlyphCount)
                    break c;
                $secondStart = $secondStart + 1 | 0;
            }
            $first = new jl_IndexOutOfBoundsException;
            $fontData = new jl_StringBuilder;
            $fontData.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(36));
            jl_AbstractStringBuilder_insert0($fontData, $fontData.$length, $secondStart, 10);
            jl_AbstractStringBuilder_insert($fontData, $fontData.$length, $rt_s(37));
            $secondStart = $glyphs2.$size;
            jl_AbstractStringBuilder_insert0($fontData, $fontData.$length, $secondStart, 10);
            $second = new jl_String;
            var$11 = $fontData.$buffer;
            $firstGlyphCount = $fontData.$length;
            jl_String_$callClinit();
            var$12 = $rt_createCharArray($firstGlyphCount);
            $second.$characters = var$12;
            jl_System_fastArraycopy(var$11, 0, var$12, 0, $firstGlyphCount);
            $first.$suppressionEnabled = 1;
            $first.$writableStackTrace = 1;
            $first.$message = $second;
            $rt_throw($first);
        }
        $second = null;
        if ($firstGlyphCount >= 0) {
            cbgu_Array_truncate($glyphs2, $firstEnd);
            $glyphCount = $firstEnd + 1 | 0;
            if ($xAdvances2.$size1 > $glyphCount)
                $xAdvances2.$size1 = $glyphCount;
            $droppedGlyphCount = $secondStart - $firstEnd | 0;
            if ($droppedGlyphCount > 0) {
                $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
                if ($fontData.$markupEnabled) {
                    $xAdvances2 = $this.$colors;
                    if (cbgu_IntArray_get($xAdvances2, $xAdvances2.$size0 - 2 | 0) > $this.$glyphCount) {
                        $lastColor = cbgu_IntArray_peek($this.$colors);
                        while (true) {
                            $xAdvances2 = $this.$colors;
                            $secondStart = cbgu_IntArray_get($xAdvances2, $xAdvances2.$size0 - 2 | 0);
                            $firstGlyphCount = $this.$glyphCount;
                            if ($secondStart <= $firstGlyphCount)
                                break;
                            $xAdvances2 = $this.$colors;
                            $xAdvances2.$size0 = $xAdvances2.$size0 - 2 | 0;
                        }
                        $xAdvances2 = $this.$colors;
                        cbgu_IntArray_set($xAdvances2, $xAdvances2.$size0 - 2 | 0, $firstGlyphCount);
                        $xAdvances2 = $this.$colors;
                        cbgu_IntArray_set($xAdvances2, $xAdvances2.$size0 - 1 | 0, $lastColor);
                    }
                }
            }
        } else {
            cbggg_GlyphLayout_$callClinit();
            $glyphs1 = cbggg_GlyphLayout_glyphRunPool;
            $second = $glyphs1.$freeObjects;
            $second = $second.$size ? cbgu_Array_pop($second) : cbgu_ReflectionPool_newObject($glyphs1);
            e: {
                $second = $second;
                $glyphs1 = $second.$glyphs;
                cbgu_Array_addAll0($glyphs1, $glyphs2, 0, $firstEnd);
                cbgu_Array_removeRange($glyphs2, 0, $secondStart - 1 | 0);
                $first.$glyphs = $glyphs1;
                $second.$glyphs = $glyphs2;
                $xAdvances1 = $second.$xAdvances;
                cbgu_FloatArray_addAll0($xAdvances1, $xAdvances2, 0, $firstEnd + 1 | 0);
                cbgu_FloatArray_removeRange($xAdvances2, 1, $secondStart);
                $xAdvances2.$items1.data[0] = ( -(cbgu_Array_first($glyphs2)).$xoffset | 0) * $fontData.$scaleX - $fontData.$padLeft;
                $first.$xAdvances = $xAdvances1;
                $second.$xAdvances = $xAdvances2;
                $firstGlyphCount = $first.$glyphs.$size;
                $secondGlyphCount = $second.$glyphs.$size;
                $droppedGlyphCount = ($glyphCount - $firstGlyphCount | 0) - $secondGlyphCount | 0;
                $secondStart = $this.$glyphCount - $droppedGlyphCount | 0;
                $this.$glyphCount = $secondStart;
                if ($fontData.$markupEnabled && $droppedGlyphCount > 0) {
                    $reductionThreshold = $secondStart - $secondGlyphCount | 0;
                    $i = $this.$colors.$size0 - 2 | 0;
                    while (true) {
                        if ($i < 2)
                            break e;
                        $colorChangeIndex = cbgu_IntArray_get($this.$colors, $i);
                        if ($colorChangeIndex <= $reductionThreshold)
                            break;
                        cbgu_IntArray_set($this.$colors, $i, $colorChangeIndex - $droppedGlyphCount | 0);
                        $i = $i + (-2) | 0;
                    }
                }
            }
        }
        if ($firstEnd)
            cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $first);
        else {
            cbggg_GlyphLayout_$callClinit();
            cbgu_Pool_free(cbggg_GlyphLayout_glyphRunPool, $first);
            cbgu_Array_pop($this.$runs);
        }
        return $second;
    }
    function cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $run) {
        var $last, var$4;
        $last = $run.$glyphs;
        var$4 = $last.$size;
        if (!var$4) {
            $fontData = new jl_IllegalStateException;
            $fontData.$suppressionEnabled = 1;
            $fontData.$writableStackTrace = 1;
            $fontData.$message = $rt_s(43);
            $rt_throw($fontData);
        }
        $last = $last.$items.data[var$4 - 1 | 0];
        if (!$last.$fixedWidth) {
            $run = $run.$xAdvances;
            $run.$items1.data[$run.$size1 - 1 | 0] = ($last.$width1 + $last.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight;
        }
    }
    function cbggg_GlyphLayout_parseColorMarkup($this, $str, $start, $end) {
        var var$4, var$5, var$6, $color, $i, $ch, $ch_0, $i_0, $color_0;
        if ($start == $end)
            return (-1);
        if ($start >= 0) {
            var$4 = $str.$characters;
            var$5 = var$4.data;
            var$6 = var$5.length;
            if ($start < var$6) {
                switch (var$5[$start]) {
                    case 35:
                        $color = 0;
                        $i = $start + 1 | 0;
                        a: {
                            while (true) {
                                if ($i >= $end)
                                    break a;
                                if ($i < 0)
                                    break;
                                if ($i >= var$6)
                                    break;
                                $ch = var$5[$i];
                                if ($ch == 93) {
                                    if ($i < ($start + 2 | 0))
                                        break a;
                                    if ($i <= ($start + 9 | 0)) {
                                        $start = $i - $start | 0;
                                        if ($start < 8)
                                            $color = $color << ((9 - $start | 0) << 2) | 255;
                                        cbggg_GlyphLayout_$callClinit();
                                        $str = cbggg_GlyphLayout_colorStack;
                                        $end = (($color & (-16711936)) >>> 8 | 0) | ($color & 16711935) << 8;
                                        cbgu_IntArray_add0($str, ($end >>> 16 | 0) + ($end << 16) | 0);
                                        return $start;
                                    }
                                    break a;
                                }
                                $ch_0 = ($color << 4) + $ch | 0;
                                if ($ch >= 48 && $ch <= 57)
                                    $color = $ch_0 + (-48) | 0;
                                else if ($ch >= 65 && $ch <= 70)
                                    $color = $ch_0 + (-55) | 0;
                                else {
                                    if ($ch < 97)
                                        break a;
                                    if ($ch > 102)
                                        break a;
                                    $color = $ch_0 + (-87) | 0;
                                }
                                $i = $i + 1 | 0;
                            }
                            $str = new jl_StringIndexOutOfBoundsException;
                            $str.$suppressionEnabled = 1;
                            $str.$writableStackTrace = 1;
                            $rt_throw($str);
                        }
                        return (-1);
                    case 91:
                        break;
                    case 93:
                        cbggg_GlyphLayout_$callClinit();
                        $str = cbggg_GlyphLayout_colorStack;
                        $start = $str.$size0;
                        if ($start > 1)
                            $str.$size0 = $start - 1 | 0;
                        return 0;
                    default:
                        $i_0 = $start + 1 | 0;
                        b: {
                            while ($i_0 < $end) {
                                if ($i_0 < 0)
                                    break b;
                                $i = $rt_compare($i_0, var$6);
                                if ($i >= 0)
                                    break b;
                                if (var$5[$i_0] == 93) {
                                    $end = $rt_compare($start, $i_0);
                                    if ($end > 0) {
                                        $str = new jl_IndexOutOfBoundsException;
                                        $str.$suppressionEnabled = 1;
                                        $str.$writableStackTrace = 1;
                                        $rt_throw($str);
                                    }
                                    if (!$end) {
                                        jl_String_$callClinit();
                                        $str = jl_String_EMPTY;
                                    } else if (!(!$start && !$i)) {
                                        $str = new jl_String;
                                        $end = $i_0 - $start | 0;
                                        jl_String_$callClinit();
                                        var$5 = $rt_createCharArray($end);
                                        $str.$characters = var$5;
                                        jl_System_fastArraycopy(var$4, $start, var$5, 0, $end);
                                    }
                                    cbgg_Colors_$callClinit();
                                    $color_0 = cbgg_Colors_map;
                                    $end = cbgu_ObjectMap_locateKey($color_0, $str);
                                    $color_0 = $end < 0 ? null : $color_0.$valueTable.data[$end];
                                    if ($color_0 === null)
                                        return (-1);
                                    cbggg_GlyphLayout_$callClinit();
                                    cbgu_IntArray_add0(cbggg_GlyphLayout_colorStack, cbgg_Color_toIntBits($color_0));
                                    return $i_0 - $start | 0;
                                }
                                $i_0 = $i_0 + 1 | 0;
                            }
                            return (-1);
                        }
                        $str = new jl_StringIndexOutOfBoundsException;
                        $str.$suppressionEnabled = 1;
                        $str.$writableStackTrace = 1;
                        $rt_throw($str);
                }
                return (-2);
            }
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    function cbggg_GlyphLayout_reset($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        cbggg_GlyphLayout_$callClinit();
        cbgu_Pool_freeAll(cbggg_GlyphLayout_glyphRunPool, $this.$runs);
        var$1 = $this.$runs;
        var$2 = var$1.$items;
        var$3 = 0;
        var$4 = var$1.$size;
        var$5 = null;
        if (var$3 > var$4) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$3 < var$4) {
            var$6 = var$2.data;
            var$7 = var$3 + 1 | 0;
            var$6[var$3] = var$5;
            var$3 = var$7;
        }
        var$1.$size = 0;
        $this.$colors.$size0 = 0;
        $this.$glyphCount = 0;
        $this.$width0 = 0.0;
        $this.$height0 = 0.0;
    }
    function cbggg_GlyphLayout_toString($this) {
        var $buffer, var$2, $n, $i, var$5, var$6, var$7, var$8, var$9;
        if (!$this.$runs.$size)
            return $rt_s(45);
        $buffer = new jl_StringBuilder;
        $buffer.$buffer = $rt_createCharArray(128);
        var$2 = $this.$width0;
        jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$2);
        $n = $buffer.$length;
        jl_AbstractStringBuilder_insertSpace($buffer, $n, $n + 1 | 0);
        $buffer.$buffer.data[$n] = 120;
        var$2 = $this.$height0;
        jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$2);
        $n = $buffer.$length;
        jl_AbstractStringBuilder_insertSpace($buffer, $n, $n + 1 | 0);
        $buffer.$buffer.data[$n] = 10;
        $i = 0;
        $n = $this.$runs.$size;
        while ($i < $n) {
            var$5 = $this.$runs;
            if ($i >= var$5.$size) {
                var$6 = new jl_IndexOutOfBoundsException;
                $buffer = new jl_StringBuilder;
                $buffer.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(36));
                jl_AbstractStringBuilder_insert0($buffer, $buffer.$length, $i, 10);
                jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(37));
                $i = var$5.$size;
                jl_AbstractStringBuilder_insert0($buffer, $buffer.$length, $i, 10);
                var$5 = new jl_String;
                var$7 = $buffer.$buffer;
                $n = $buffer.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray($n);
                var$5.$characters = var$8;
                jl_System_fastArraycopy(var$7, 0, var$8, 0, $n);
                var$6.$suppressionEnabled = 1;
                var$6.$writableStackTrace = 1;
                var$6.$message = var$5;
                $rt_throw(var$6);
            }
            var$5 = cbggg_GlyphLayout$GlyphRun_toString(var$5.$items.data[$i]);
            jl_AbstractStringBuilder_insert($buffer, $buffer.$length, var$5);
            var$9 = $buffer.$length;
            jl_AbstractStringBuilder_insertSpace($buffer, var$9, var$9 + 1 | 0);
            $buffer.$buffer.data[var$9] = 10;
            $i = $i + 1 | 0;
        }
        $i = $buffer.$length - 1 | 0;
        $buffer.$length = $i;
        var$5 = new jl_String;
        var$7 = $buffer.$buffer;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($i);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $i);
        return var$5;
    }
    function cbggg_GlyphLayout__clinit_() {
        var var$1, var$2, var$3, var$4, var$5, var$6, $$je;
        cbgu_Pools_$callClinit();
        var$1 = cbgu_Pools_typePools;
        var$2 = cbgu_ObjectMap_locateKey(var$1, $rt_cls(cbggg_GlyphLayout$GlyphRun));
        var$1 = var$2 < 0 ? null : var$1.$valueTable.data[var$2];
        if (var$1 === null) {
            var$1 = new cbgu_ReflectionPool;
            var$3 = new cbgu_Array;
            var$3.$ordered = 0;
            var$3.$items = $rt_createArray(jl_Object, 4);
            var$1.$freeObjects = var$3;
            var$1.$max = 100;
            a: {
                try {
                    var$3 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout$GlyphRun), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$3 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout$GlyphRun), null);
                    cbgur_Constructor_setAccessible(var$3, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$3 = null;
            }
            var$1.$constructor = var$3;
            if (var$3 === null) {
                var$1 = new jl_RuntimeException;
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(28));
                if ($rt_cls(cbggg_GlyphLayout$GlyphRun).$name === null)
                    $rt_cls(cbggg_GlyphLayout$GlyphRun).$name = $rt_str($rt_cls(cbggg_GlyphLayout$GlyphRun).$platformClass.$meta.name);
                var$4 = $rt_cls(cbggg_GlyphLayout$GlyphRun).$name;
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$4);
                var$4 = new jl_String;
                var$5 = var$3.$buffer;
                var$2 = var$3.$length;
                jl_String_$callClinit();
                var$6 = $rt_createCharArray(var$2);
                var$4.$characters = var$6;
                jl_System_fastArraycopy(var$5, 0, var$6, 0, var$2);
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                var$1.$message = var$4;
                $rt_throw(var$1);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout$GlyphRun), var$1);
        }
        cbggg_GlyphLayout_glyphRunPool = var$1;
        var$4 = new cbgu_IntArray;
        var$4.$ordered0 = 1;
        var$4.$items0 = $rt_createIntArray(4);
        cbggg_GlyphLayout_colorStack = var$4;
    }
    function cbggg_TextureRegion() {
        var a = this; jl_Object.call(a);
        a.$texture = null;
        a.$u = 0.0;
        a.$v = 0.0;
        a.$u2 = 0.0;
        a.$v2 = 0.0;
        a.$regionWidth = 0;
        a.$regionHeight = 0;
    }
    function cbggg_TextureRegion_setRegion($this, $x, $y, $width, $height) {
        var var$5, $invTexWidth, $invTexHeight;
        var$5 = $this.$texture.$data0;
        $invTexWidth = 1.0 / var$5.$width3;
        $invTexHeight = 1.0 / var$5.$height1;
        cbggg_TextureRegion_setRegion0($this, $x * $invTexWidth, $y * $invTexHeight, ($x + $width | 0) * $invTexWidth, ($y + $height | 0) * $invTexHeight);
        if ($width < 0)
            $width =  -$width | 0;
        $this.$regionWidth = $width;
        if ($height < 0)
            $height =  -$height | 0;
        $this.$regionHeight = $height;
    }
    function cbggg_TextureRegion_setRegion0($this, $u, $v, $u2, $v2) {
        var var$5, var$6, var$7, $adjustY, var$9, $adjustX, var$11;
        var$5 = $this.$texture.$data0;
        var$6 = var$5.$width3;
        var$7 = var$5.$height1;
        $adjustY = jl_Math_absImpl($u2 - $u);
        var$9 = var$6;
        $adjustY = $adjustY * var$9;
        $this.$regionWidth = $adjustY + jl_Math_sign($adjustY) * 0.5 | 0;
        $adjustX = jl_Math_absImpl($v2 - $v);
        $adjustY = var$7;
        $adjustX = $adjustX * $adjustY;
        var$11 = $adjustX + jl_Math_sign($adjustX) * 0.5 | 0;
        $this.$regionHeight = var$11;
        if ($this.$regionWidth == 1 && var$11 == 1) {
            $adjustX = 0.25 / var$9;
            $u = $u + $adjustX;
            $u2 = $u2 - $adjustX;
            $adjustY = 0.25 / $adjustY;
            $v = $v + $adjustY;
            $v2 = $v2 - $adjustY;
        }
        $this.$u = $u;
        $this.$v = $v;
        $this.$u2 = $u2;
        $this.$v2 = $v2;
    }
    var cbggg_Sprite = $rt_classWithoutFields(cbggg_TextureRegion);
    function cbggg_BitmapFont() {
        var a = this; jl_Object.call(a);
        a.$data = null;
        a.$regions = null;
        a.$cache = null;
        a.$flipped = 0;
        a.$integer = 0;
        a.$ownsTexture = 0;
    }
    function cbggg_BitmapFont__init_(var_0, var_1, var_2) {
        var var_3 = new cbggg_BitmapFont();
        cbggg_BitmapFont__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function cbggg_BitmapFont__init_0($this, $data, $pageRegions, $integer) {
        var var$4, $n, $i, var$7, var$8, var$9, $file, var$11, var$12, var$13;
        $this.$flipped = $data.$flipped0;
        $this.$data = $data;
        $this.$integer = $integer;
        if ($pageRegions !== null && $pageRegions.$size) {
            $this.$regions = $pageRegions;
            $this.$ownsTexture = 0;
        } else {
            var$4 = $data.$imagePaths;
            if (var$4 === null) {
                $data = new jl_IllegalArgumentException;
                $data.$suppressionEnabled = 1;
                $data.$writableStackTrace = 1;
                $data.$message = $rt_s(46);
                $rt_throw($data);
            }
            $n = var$4.data.length;
            $pageRegions = new cbgu_Array;
            $pageRegions.$ordered = 1;
            $pageRegions.$items = $rt_createArray(jl_Object, $n);
            $this.$regions = $pageRegions;
            $i = 0;
            while ($i < $n) {
                var$7 = $data.$fontFile;
                if (var$7 !== null) {
                    var$8 = cbg_Gdx_files;
                    $pageRegions = $data.$imagePaths.data[$i];
                    var$9 = var$7.$type;
                    $file = cgxgbt_TeaFileHandle__init_(var$8.$preloader, $pageRegions, var$9);
                } else {
                    $pageRegions = cbg_Gdx_files;
                    var$7 = $data.$imagePaths.data[$i];
                    $file = new cgxgbt_TeaFileHandle;
                    var$8 = $pageRegions.$preloader;
                    cbg_Files$FileType_$callClinit();
                    cgxgbt_TeaFileHandle__init_0($file, var$8, var$7, cbg_Files$FileType_Internal);
                }
                $pageRegions = $this.$regions;
                var$7 = new cbggg_TextureRegion;
                var$11 = new cbgg_Texture;
                var$12 = null;
                var$9 = cbggg_FileTextureData__init_($file, cbgg_Pixmap__init_($file), var$12, 0);
                var$8 = cbg_Gdx_gl;
                var$12 = var$8.$gl.createTexture();
                var$13 = var$8.$nextTextureId;
                var$8.$nextTextureId = var$13 + 1 | 0;
                cbgu_IntMap_put(var$8.$textures, var$13, otji_JSWrapper_wrap(var$12));
                cbgg_Texture$TextureFilter_$callClinit();
                $file = cbgg_Texture$TextureFilter_Nearest;
                var$11.$minFilter = $file;
                var$11.$magFilter = $file;
                cbgg_Texture$TextureWrap_$callClinit();
                $file = cbgg_Texture$TextureWrap_ClampToEdge;
                var$11.$uWrap = $file;
                var$11.$vWrap = $file;
                var$11.$anisotropicFilterLevel = 1.0;
                var$11.$glTarget = 3553;
                var$11.$glHandle = var$13;
                cbgg_Texture_load(var$11, var$9);
                $file = cbg_Gdx_app;
                var$8 = cbgg_Texture_managedTextures;
                if ($file === null) {
                    var$8 = var$8.$elementData.data[0];
                    while (var$8 !== null && var$8.$key !== null) {
                        var$8 = var$8.$next;
                    }
                } else {
                    $integer = jl_Object_identity($file);
                    var$4 = var$8.$elementData.data;
                    var$8 = var$4[$integer & (var$4.length - 1 | 0)];
                    while (var$8 !== null && !(var$8.$origKeyHash == $integer && ju_HashMap_areEqualKeys($file, var$8.$key))) {
                        var$8 = var$8.$next;
                    }
                }
                var$8 = var$8 === null ? null : var$8.$value4;
                if (var$8 === null) {
                    var$8 = new cbgu_Array;
                    var$8.$ordered = 1;
                    var$8.$items = $rt_createArray(jl_Object, 16);
                }
                cbgu_Array_add(var$8, var$11);
                ju_HashMap_putImpl(cbgg_Texture_managedTextures, $file, var$8);
                var$7.$texture = var$11;
                $file = var$11.$data0;
                cbggg_TextureRegion_setRegion(var$7, 0, 0, $file.$width3, $file.$height1);
                cbgu_Array_add($pageRegions, var$7);
                $i = $i + 1 | 0;
            }
            $this.$ownsTexture = 1;
        }
        $this.$cache = cbggg_BitmapFontCache__init_($this, $this.$integer);
        cbggg_BitmapFont_load($this, $data);
    }
    function cbggg_BitmapFont_load($this, $data) {
        var var$2, var$3, var$4, $glyph, var$6, $page, var$8, var$9, var$10, var$11;
        var$2 = $data.$glyphs0.data;
        var$3 = var$2.length;
        var$4 = 0;
        a: while (true) {
            if (var$4 >= var$3) {
                $glyph = $data.$missingGlyph;
                if ($glyph !== null) {
                    var$6 = $this.$regions;
                    var$3 = $glyph.$page;
                    if (var$3 >= var$6.$size) {
                        $glyph = new jl_IndexOutOfBoundsException;
                        $data = new jl_StringBuilder;
                        $data.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert($data, $data.$length, $rt_s(36));
                        jl_AbstractStringBuilder_insert0($data, $data.$length, var$3, 10);
                        jl_AbstractStringBuilder_insert($data, $data.$length, $rt_s(37));
                        var$3 = var$6.$size;
                        jl_AbstractStringBuilder_insert0($data, $data.$length, var$3, 10);
                        var$6 = new jl_String;
                        var$2 = $data.$buffer;
                        var$4 = $data.$length;
                        jl_String_$callClinit();
                        $page = $rt_createCharArray(var$4);
                        var$6.$characters = $page;
                        jl_System_fastArraycopy(var$2, 0, $page, 0, var$4);
                        $glyph.$suppressionEnabled = 1;
                        $glyph.$writableStackTrace = 1;
                        $glyph.$message = var$6;
                        $rt_throw($glyph);
                    }
                    cbggg_BitmapFont$BitmapFontData_setGlyphRegion($data, $glyph, var$6.$items.data[var$3]);
                }
                return;
            }
            b: {
                $page = var$2[var$4];
                if ($page !== null) {
                    $page = $page.data;
                    var$8 = $page.length;
                    var$9 = 0;
                    while (true) {
                        if (var$9 >= var$8)
                            break b;
                        $glyph = $page[var$9];
                        if ($glyph !== null) {
                            var$6 = $this.$regions;
                            var$10 = $glyph.$page;
                            if (var$10 >= var$6.$size)
                                break a;
                            cbggg_BitmapFont$BitmapFontData_setGlyphRegion($data, $glyph, var$6.$items.data[var$10]);
                        }
                        var$9 = var$9 + 1 | 0;
                    }
                }
            }
            var$4 = var$4 + 1 | 0;
        }
        $data = new jl_IndexOutOfBoundsException;
        var$11 = new jl_StringBuilder;
        var$11.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(36));
        jl_AbstractStringBuilder_insert0(var$11, var$11.$length, var$10, 10);
        jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(37));
        var$3 = var$6.$size;
        jl_AbstractStringBuilder_insert0(var$11, var$11.$length, var$3, 10);
        $glyph = new jl_String;
        var$2 = var$11.$buffer;
        var$4 = var$11.$length;
        jl_String_$callClinit();
        $page = $rt_createCharArray(var$4);
        $glyph.$characters = $page;
        jl_System_fastArraycopy(var$2, 0, $page, 0, var$4);
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = $glyph;
        $rt_throw($data);
    }
    function cbggg_BitmapFont_dispose($this) {
        var $i, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        a: {
            if ($this.$ownsTexture) {
                $i = 0;
                while (true) {
                    var$2 = $this.$regions;
                    var$3 = $rt_compare($i, var$2.$size);
                    if (var$3 >= 0)
                        break a;
                    if (var$3 >= 0) {
                        var$4 = new jl_IndexOutOfBoundsException;
                        var$5 = new jl_StringBuilder;
                        var$5.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(36));
                        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
                        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(37));
                        $i = var$2.$size;
                        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
                        var$2 = new jl_String;
                        var$6 = var$5.$buffer;
                        var$3 = var$5.$length;
                        jl_String_$callClinit();
                        var$7 = $rt_createCharArray(var$3);
                        var$2.$characters = var$7;
                        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$3);
                        var$4.$suppressionEnabled = 1;
                        var$4.$writableStackTrace = 1;
                        var$4.$message = var$2;
                        $rt_throw(var$4);
                    }
                    var$8 = var$2.$items.data[$i].$texture;
                    var$3 = var$8.$glHandle;
                    if (var$3) {
                        if (var$3) {
                            var$2 = cbg_Gdx_gl;
                            var$5 = cbgu_IntMap_remove(var$2.$textures, var$3);
                            otji_JSWrapper_$callClinit();
                            var$5 = var$5 === null ? null : var$5[$rt_jso_marker] === true ? var$5 : var$5.$js;
                            var$2.$gl.deleteTexture(var$5);
                            var$8.$glHandle = 0;
                        }
                        var$5 = cbgg_Texture_managedTextures;
                        var$2 = cbg_Gdx_app;
                        if (var$2 === null) {
                            var$5 = var$5.$elementData.data[0];
                            while (var$5 !== null && var$5.$key !== null) {
                                var$5 = var$5.$next;
                            }
                        } else {
                            var$9 = var$2;
                            if (!var$9.$id$) {
                                var$4 = $rt_nextId();
                                var$9.$id$ = var$4;
                            }
                            var$3 = var$2.$id$;
                            var$6 = var$5.$elementData.data;
                            var$5 = var$6[var$3 & (var$6.length - 1 | 0)];
                            while (var$5 !== null) {
                                if (var$5.$origKeyHash == var$3) {
                                    var$4 = var$5.$key;
                                    if (var$2 !== var$4 && !(var$2 !== var$4 ? 0 : 1) ? 0 : 1)
                                        break;
                                }
                                var$5 = var$5.$next;
                            }
                        }
                        if ((var$5 === null ? null : var$5.$value4) !== null) {
                            var$2 = cbgg_Texture_managedTextures;
                            var$5 = cbg_Gdx_app;
                            if (var$5 === null) {
                                var$2 = var$2.$elementData.data[0];
                                while (var$2 !== null && var$2.$key !== null) {
                                    var$2 = var$2.$next;
                                }
                            } else {
                                var$4 = var$5;
                                if (!var$4.$id$) {
                                    var$10 = $rt_nextId();
                                    var$4.$id$ = var$10;
                                }
                                var$11 = var$5.$id$;
                                var$6 = var$2.$elementData.data;
                                var$2 = var$6[var$11 & (var$6.length - 1 | 0)];
                                while (var$2 !== null) {
                                    if (var$2.$origKeyHash == var$11) {
                                        var$4 = var$2.$key;
                                        if (var$5 !== var$4 && !(var$5 !== var$4 ? 0 : 1) ? 0 : 1)
                                            break;
                                    }
                                    var$2 = var$2.$next;
                                }
                            }
                            cbgu_Array_removeValue(var$2 === null ? null : var$2.$value4, var$8, 1);
                        }
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    var cbggg_NinePatch = $rt_classWithoutFields();
    var cbggg_NinePatch_tmpDrawColor = null;
    function cbggg_NinePatch_$callClinit() {
        cbggg_NinePatch_$callClinit = $rt_eraseClinit(cbggg_NinePatch);
        cbggg_NinePatch__clinit_();
    }
    function cbggg_NinePatch__clinit_() {
        var var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_$callClinit();
        cbggg_NinePatch_tmpDrawColor = var$1;
    }
    function cbgg_Color() {
        var a = this; jl_Object.call(a);
        a.$r = 0.0;
        a.$g = 0.0;
        a.$b = 0.0;
        a.$a = 0.0;
    }
    var cbgg_Color_WHITE = null;
    var cbgg_Color_LIGHT_GRAY = null;
    var cbgg_Color_GRAY = null;
    var cbgg_Color_DARK_GRAY = null;
    var cbgg_Color_BLACK = null;
    var cbgg_Color_WHITE_FLOAT_BITS = 0.0;
    var cbgg_Color_CLEAR = null;
    var cbgg_Color_BLUE = null;
    var cbgg_Color_NAVY = null;
    var cbgg_Color_ROYAL = null;
    var cbgg_Color_SLATE = null;
    var cbgg_Color_SKY = null;
    var cbgg_Color_CYAN = null;
    var cbgg_Color_TEAL = null;
    var cbgg_Color_GREEN = null;
    var cbgg_Color_CHARTREUSE = null;
    var cbgg_Color_LIME = null;
    var cbgg_Color_FOREST = null;
    var cbgg_Color_OLIVE = null;
    var cbgg_Color_YELLOW = null;
    var cbgg_Color_GOLD = null;
    var cbgg_Color_GOLDENROD = null;
    var cbgg_Color_ORANGE = null;
    var cbgg_Color_BROWN = null;
    var cbgg_Color_TAN = null;
    var cbgg_Color_FIREBRICK = null;
    var cbgg_Color_RED = null;
    var cbgg_Color_SCARLET = null;
    var cbgg_Color_CORAL = null;
    var cbgg_Color_SALMON = null;
    var cbgg_Color_PINK = null;
    var cbgg_Color_MAGENTA = null;
    var cbgg_Color_PURPLE = null;
    var cbgg_Color_VIOLET = null;
    var cbgg_Color_MAROON = null;
    function cbgg_Color_$callClinit() {
        cbgg_Color_$callClinit = $rt_eraseClinit(cbgg_Color);
        cbgg_Color__clinit_();
    }
    function cbgg_Color_clamp($this) {
        var var$1, var$2;
        var$1 = $this.$r;
        if (var$1 < 0.0)
            $this.$r = 0.0;
        else if (var$1 > 1.0)
            $this.$r = 1.0;
        var$2 = $this.$g;
        if (var$2 < 0.0)
            $this.$g = 0.0;
        else if (var$2 > 1.0)
            $this.$g = 1.0;
        var$2 = $this.$b;
        if (var$2 < 0.0)
            $this.$b = 0.0;
        else if (var$2 > 1.0)
            $this.$b = 1.0;
        var$2 = $this.$a;
        if (var$2 < 0.0)
            $this.$a = 0.0;
        else if (var$2 > 1.0)
            $this.$a = 1.0;
        return $this;
    }
    function cbgg_Color_equals($this, $o) {
        var $color, var$3, var$4, var$5;
        if ($this === $o)
            return 1;
        if ($o !== null) {
            $color = $this.constructor;
            if ($color === null)
                var$3 = null;
            else {
                var$3 = $color.classObject;
                if (var$3 === null) {
                    var$3 = new jl_Class;
                    var$3.$platformClass = $color;
                    var$4 = var$3;
                    $color.classObject = var$4;
                }
            }
            var$4 = $o.constructor;
            if (var$4 === null)
                $color = null;
            else {
                $color = var$4.classObject;
                if ($color === null) {
                    $color = new jl_Class;
                    $color.$platformClass = var$4;
                    var$5 = $color;
                    var$4.classObject = var$5;
                }
            }
            if (var$3 === $color) {
                $color = $o;
                return cbgg_Color_toIntBits($this) != cbgg_Color_toIntBits($color) ? 0 : 1;
            }
        }
        return 0;
    }
    function cbgg_Color_hashCode($this) {
        var var$1, $result, var$3;
        var$1 = $this.$r;
        $result = 31 * (var$1 === 0.0 ? 0 : ($rt_globals.isNaN(var$1) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$1)) | 0;
        var$1 = $this.$g;
        $result = 31 * ($result + (var$1 === 0.0 ? 0 : ($rt_globals.isNaN(var$1) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$1)) | 0) | 0;
        var$3 = $this.$b;
        $result = 31 * ($result + (var$3 === 0.0 ? 0 : ($rt_globals.isNaN(var$3) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$3)) | 0) | 0;
        var$3 = $this.$a;
        return $result + (var$3 === 0.0 ? 0 : ($rt_globals.isNaN(var$3) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$3)) | 0;
    }
    function cbgg_Color_toFloatBits($this) {
        return $rt_intBitsToFloat(((255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0) & (-16777217));
    }
    function cbgg_Color_toIntBits($this) {
        return (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0;
    }
    function cbgg_Color_toString($this) {
        var $value, var$2, var$3, var$4, var$5;
        $value = otci_IntegerUtil_toUnsignedLogRadixString((255.0 * $this.$r | 0) << 24 | (255.0 * $this.$g | 0) << 16 | (255.0 * $this.$b | 0) << 8 | 255.0 * $this.$a | 0, 4);
        while ($value.$characters.data.length < 8) {
            var$2 = new jl_StringBuilder;
            var$2.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(47));
            jl_AbstractStringBuilder_insert(var$2, var$2.$length, $value);
            $value = new jl_String;
            var$3 = var$2.$buffer;
            var$4 = var$2.$length;
            jl_String_$callClinit();
            var$5 = $rt_createCharArray(var$4);
            $value.$characters = var$5;
            jl_System_fastArraycopy(var$3, 0, var$5, 0, var$4);
        }
        return $value;
    }
    function cbgg_Color_rgba8888ToColor($color, $value) {
        cbgg_Color_$callClinit();
        $color.$r = (($value & (-16777216)) >>> 24 | 0) / 255.0;
        $color.$g = (($value & 16711680) >>> 16 | 0) / 255.0;
        $color.$b = (($value & 65280) >>> 8 | 0) / 255.0;
        $color.$a = ($value & 255) / 255.0;
    }
    function cbgg_Color__clinit_() {
        var var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_$callClinit();
        var$1.$r = 1.0;
        var$1.$g = 1.0;
        var$1.$b = 1.0;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgg_Color_WHITE = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-1077952513));
        cbgg_Color_LIGHT_GRAY = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, 2139062271);
        cbgg_Color_GRAY = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, 1061109759);
        cbgg_Color_DARK_GRAY = var$1;
        var$1 = new cbgg_Color;
        var$1.$r = 0.0;
        var$1.$g = 0.0;
        var$1.$b = 0.0;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgg_Color_BLACK = var$1;
        cbgg_Color_WHITE_FLOAT_BITS = cbgg_Color_toFloatBits(cbgg_Color_WHITE);
        var$1 = new cbgg_Color;
        var$1.$r = 0.0;
        var$1.$g = 0.0;
        var$1.$b = 0.0;
        var$1.$a = 0.0;
        cbgg_Color_clamp(var$1);
        cbgg_Color_CLEAR = var$1;
        var$1 = new cbgg_Color;
        var$1.$r = 0.0;
        var$1.$g = 0.0;
        var$1.$b = 1.0;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgg_Color_BLUE = var$1;
        var$1 = new cbgg_Color;
        var$1.$r = 0.0;
        var$1.$g = 0.0;
        var$1.$b = 0.5;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgg_Color_NAVY = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, 1097458175);
        cbgg_Color_ROYAL = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, 1887473919);
        cbgg_Color_SLATE = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-2016482305));
        cbgg_Color_SKY = var$1;
        var$1 = new cbgg_Color;
        var$1.$r = 0.0;
        var$1.$g = 1.0;
        var$1.$b = 1.0;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgg_Color_CYAN = var$1;
        var$1 = new cbgg_Color;
        var$1.$r = 0.0;
        var$1.$g = 0.5;
        var$1.$b = 0.5;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgg_Color_TEAL = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, 16711935);
        cbgg_Color_GREEN = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, 2147418367);
        cbgg_Color_CHARTREUSE = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, 852308735);
        cbgg_Color_LIME = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, 579543807);
        cbgg_Color_FOREST = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, 1804477439);
        cbgg_Color_OLIVE = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-65281));
        cbgg_Color_YELLOW = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-2686721));
        cbgg_Color_GOLD = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-626712321));
        cbgg_Color_GOLDENROD = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-5963521));
        cbgg_Color_ORANGE = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-1958407169));
        cbgg_Color_BROWN = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-759919361));
        cbgg_Color_TAN = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-1306385665));
        cbgg_Color_FIREBRICK = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-16776961));
        cbgg_Color_RED = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-13361921));
        cbgg_Color_SCARLET = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-8433409));
        cbgg_Color_CORAL = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-92245249));
        cbgg_Color_SALMON = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-9849601));
        cbgg_Color_PINK = var$1;
        var$1 = new cbgg_Color;
        var$1.$r = 1.0;
        var$1.$g = 0.0;
        var$1.$b = 1.0;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbgg_Color_MAGENTA = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-1608453889));
        cbgg_Color_PURPLE = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-293409025));
        cbgg_Color_VIOLET = var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_rgba8888ToColor(var$1, (-1339006721));
        cbgg_Color_MAROON = var$1;
    }
    function cbgg_GLTexture() {
        var a = this; jl_Object.call(a);
        a.$glTarget = 0;
        a.$glHandle = 0;
        a.$minFilter = null;
        a.$magFilter = null;
        a.$uWrap = null;
        a.$vWrap = null;
        a.$anisotropicFilterLevel = 0.0;
    }
    var cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
    function cbgg_GLTexture_unsafeSetWrap($this, $u, $v, $force) {
        if ($u !== null && !(!$force && $this.$uWrap === $u)) {
            cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10242, $u.$glEnum);
            $this.$uWrap = $u;
        }
        if ($v !== null && !(!$force && $this.$vWrap === $v)) {
            cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10243, $v.$glEnum);
            $this.$vWrap = $v;
        }
    }
    function cbgg_GLTexture_unsafeSetFilter($this, $minFilter, $magFilter, $force) {
        if ($minFilter !== null && !(!$force && $this.$minFilter === $minFilter)) {
            cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, $minFilter.$glEnum0);
            $this.$minFilter = $minFilter;
        }
        if ($magFilter !== null && !(!$force && $this.$magFilter === $magFilter)) {
            cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, $magFilter.$glEnum0);
            $this.$magFilter = $magFilter;
        }
    }
    function cbgg_GLTexture_getMaxAnisotropicFilterLevel() {
        var var$1, var$2, var$3, $buffer, var$5;
        var$1 = cbgg_GLTexture_maxAnisotropicFilterLevel;
        if (var$1 > 0.0)
            return var$1;
        if (!(cbg_Gdx_graphics.$context.getExtension("GL_EXT_texture_filter_anisotropic") === null ? 0 : 1)) {
            cbgg_GLTexture_maxAnisotropicFilterLevel = 1.0;
            return 1.0;
        }
        if (!cgxgbt_TeaTool_isProd) {
            var$2 = $rt_createFloatArray(16);
            var$3 = var$2.data.length;
            $buffer = new jn_FloatBufferOverArray;
            var$5 = 0 + var$3 | 0;
            $buffer.$mark = (-1);
            $buffer.$capacity = var$3;
            $buffer.$limit = var$3;
            $buffer.$position = 0;
            $buffer.$limit = var$5;
            $buffer.$start = 0;
            $buffer.$readOnly = 0;
            $buffer.$array = var$2;
        } else {
            $buffer = new jn_ByteBufferImpl;
            var$2 = $rt_createByteArray(64);
            $buffer.$mark = (-1);
            $buffer.$capacity = 64;
            $buffer.$limit = 64;
            jn_ByteOrder_$callClinit();
            $buffer.$order = jn_ByteOrder_BIG_ENDIAN;
            $buffer.$start0 = 0;
            $buffer.$array0 = var$2;
            $buffer.$position = 0;
            $buffer.$limit = 64;
            $buffer.$direct = 1;
            $buffer.$readOnly0 = 0;
            $buffer.$order = jn_ByteOrder_nativeOrder();
            $buffer = jn_ByteBufferImpl_asFloatBuffer($buffer);
        }
        jn_Buffer_position($buffer, 0);
        jn_Buffer_limit($buffer, $buffer.$capacity);
        cbg_Gdx_gl20.$glGetFloatv(34047, $buffer);
        var$1 = jn_FloatBufferImpl_get($buffer, 0);
        cbgg_GLTexture_maxAnisotropicFilterLevel = var$1;
        return var$1;
    }
    function cbgg_GLTexture_uploadImageData($target, $data, $miplevel) {
        var $tmp_0, $pixmap, $disposePixmap, $type, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15, var$16;
        if ($data === null)
            return;
        if (!$data.$isPrepared)
            cbggg_FileTextureData_prepare($data);
        cbgg_TextureData$TextureDataType_$callClinit();
        if (cbgg_TextureData$TextureDataType_Pixmap === cbgg_TextureData$TextureDataType_Custom) {
            $data = new cbgu_GdxRuntimeException;
            $data.$suppressionEnabled = 1;
            $data.$writableStackTrace = 1;
            $data.$message = $rt_s(48);
            $rt_throw($data);
        }
        if (!$data.$isPrepared) {
            $tmp_0 = new cbgu_GdxRuntimeException;
            $tmp_0.$suppressionEnabled = 1;
            $tmp_0.$writableStackTrace = 1;
            $tmp_0.$message = $rt_s(49);
            $rt_throw($tmp_0);
        }
        $data.$isPrepared = 0;
        $pixmap = $data.$pixmap;
        $data.$pixmap = null;
        $disposePixmap = 1;
        $type = $data.$format;
        $tmp_0 = $pixmap.$nativePixmap;
        if ($tmp_0 === null) {
            cbgg_Pixmap$Format_$callClinit();
            $tmp_0 = cbgg_Pixmap$Format_RGBA8888;
        } else
            $tmp_0 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat($tmp_0.$format0);
        if ($type === $tmp_0)
            $tmp_0 = $pixmap;
        else {
            $tmp_0 = new cbgg_Pixmap;
            $type = $pixmap.$nativePixmap;
            cbgg_Pixmap__init_0($tmp_0, $type === null ? $pixmap.$width4 : $type.$width5, $type === null ? $pixmap.$height2 : $type.$height3, $data.$format);
            cbgg_Pixmap$Blending_$callClinit();
            $type = cbgg_Pixmap$Blending_None;
            $tmp_0.$blending = $type;
            var$8 = $tmp_0.$nativePixmap;
            if (var$8 === null) {
                cbgg_Pixmap_ensureCanvasExists($tmp_0);
                $type = $tmp_0.$context0;
                cbgg_Composite_$callClinit();
                var$8 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$name0);
                $type.globalCompositeOperation = var$8;
            } else {
                var$9 = $type !== $type ? 1 : 0;
                cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47(var$8.$basePtr, var$9);
            }
            var$8 = $pixmap.$nativePixmap;
            $disposePixmap = var$8 === null ? $pixmap.$width4 : var$8.$width5;
            var$10 = var$8 === null ? $pixmap.$height2 : var$8.$height3;
            $type = $tmp_0.$nativePixmap;
            if ($type === null) {
                cbgg_Pixmap_ensureCanvasExists($pixmap);
                cbgg_Pixmap_image($tmp_0, $pixmap.$canvas, 0, 0, $disposePixmap, var$10, 0, 0, $disposePixmap, var$10);
            } else {
                var$11 = var$8.$basePtr;
                var$12 = $type.$basePtr;
                cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$11, var$12, 0, 0, $disposePixmap, var$10, 0, 0, $disposePixmap, var$10);
            }
            if ($pixmap.$disposed) {
                $tmp_0 = new cbgu_GdxRuntimeException;
                $tmp_0.$suppressionEnabled = 1;
                $tmp_0.$writableStackTrace = 1;
                $tmp_0.$message = $rt_s(50);
                $rt_throw($tmp_0);
            }
            cgxgbt_TeaGraphics_$callClinit();
            cbgu_IntMap_remove(cgxgbt_TeaGraphics_pixmaps, $pixmap.$id0);
            $type = $pixmap.$nativePixmap;
            if ($type !== null)
                cbggg_Gdx2DPixmapEmu_free$js_body$_36($type.$basePtr);
            $pixmap.$disposed = 1;
            $disposePixmap = 1;
        }
        cbg_Gdx_gl.$glPixelStorei(3317, 1);
        if ($data.$useMipMaps)
            cbggg_MipMapGenerator_generateMipMap($target, $tmp_0, cbgg_Pixmap_getWidth($tmp_0), cbgg_Pixmap_getHeight($tmp_0));
        else {
            $type = cbg_Gdx_gl;
            $data = $tmp_0.$nativePixmap;
            if ($data === null)
                var$10 = 6408;
            else
                a: {
                    var$9 = $data.$format0;
                    switch (var$9) {
                        case 1:
                            var$10 = 6406;
                            break a;
                        case 2:
                            var$10 = 6410;
                            break a;
                        case 3:
                        case 5:
                            var$10 = 6407;
                            break a;
                        case 4:
                        case 6:
                            var$10 = 6408;
                            break a;
                        default:
                    }
                    $data = new cbgu_GdxRuntimeException;
                    $tmp_0 = new jl_StringBuilder;
                    $tmp_0.$buffer = $rt_createCharArray(16);
                    jl_StringBuilder_insert($tmp_0, $tmp_0.$length, jl_String_toString($rt_s(51)));
                    jl_AbstractStringBuilder_insert0($tmp_0, $tmp_0.$length, var$9, 10);
                    $type = new jl_String;
                    var$13 = $tmp_0.$buffer;
                    $miplevel = $tmp_0.$length;
                    var$14 = $rt_createCharArray($miplevel);
                    $type.$characters = var$14;
                    jl_System_fastArraycopy(var$13, 0, var$14, 0, $miplevel);
                    $data.$suppressionEnabled = 1;
                    $data.$writableStackTrace = 1;
                    $data.$message = $type;
                    $rt_throw($data);
                }
            var$11 = $data === null ? $tmp_0.$width4 : $data.$width5;
            var$15 = $data === null ? $tmp_0.$height2 : $data.$height3;
            var$16 = $data === null ? 6408 : cbggg_Gdx2DPixmapEmu_toGlFormat($data.$format0);
            $data = $tmp_0.$nativePixmap;
            $type.$glTexImage2D($target, $miplevel, var$10, var$11, var$15, 0, var$16, $data === null ? 5121 : cbggg_Gdx2DPixmapEmu_toGlType($data.$format0), cbgg_Pixmap_getPixels($tmp_0));
        }
        if ($disposePixmap)
            cbgg_Pixmap_dispose($tmp_0);
    }
    function cbgg_GLTexture__clinit_() {
        cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
    }
    function cbgg_Texture() {
        cbgg_GLTexture.call(this);
        this.$data0 = null;
    }
    var cbgg_Texture_managedTextures = null;
    function cbgg_Texture_load($this, $data) {
        var var$2, var$3;
        $this.$data0 = $data;
        if (!$data.$isPrepared)
            cbggg_FileTextureData_prepare($data);
        cbg_Gdx_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
        cbgg_GLTexture_uploadImageData(3553, $data, 0);
        cbgg_GLTexture_unsafeSetFilter($this, $this.$minFilter, $this.$magFilter, 1);
        cbgg_GLTexture_unsafeSetWrap($this, $this.$uWrap, $this.$vWrap, 1);
        var$2 = $this.$anisotropicFilterLevel;
        var$3 = cbgg_GLTexture_getMaxAnisotropicFilterLevel();
        if (var$3 !== 1.0) {
            var$2 = jl_Math_minImpl(var$2, var$3);
            cbg_Gdx_gl20.$glTexParameterf(3553, 34046, var$2);
            $this.$anisotropicFilterLevel = var$2;
        }
        cbg_Gdx_gl.$glBindTexture($this.$glTarget, 0);
    }
    function cbgg_Texture_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$1 = $this.$data0;
        if (!(var$1 instanceof cbggg_FileTextureData)) {
            var$1 = $this.constructor;
            if (var$1 === null)
                var$2 = null;
            else {
                var$2 = var$1.classObject;
                if (var$2 === null) {
                    var$2 = new jl_Class;
                    var$2.$platformClass = var$1;
                    var$3 = var$2;
                    var$1.classObject = var$3;
                }
            }
            if (var$2.$name === null)
                var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
            var$1 = var$2.$name;
            var$3 = $this;
            if (!var$3.$id$) {
                var$2 = $rt_nextId();
                var$3.$id$ = var$2;
            }
            var$2 = otci_IntegerUtil_toUnsignedLogRadixString($this.$id$, 4);
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$4 = var$3.$length;
            if (var$1 === null)
                var$1 = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, var$1);
            var$5 = var$3.$length;
            jl_AbstractStringBuilder_insertSpace(var$3, var$5, var$5 + 1 | 0);
            var$3.$buffer.data[var$5] = 64;
            var$4 = var$3.$length;
            if (var$2 === null)
                var$2 = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
            var$1 = new jl_String;
            var$6 = var$3.$buffer;
            var$5 = var$3.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray(var$5);
            var$1.$characters = var$7;
            jl_System_fastArraycopy(var$6, 0, var$7, 0, var$5);
            return var$1;
        }
        var$3 = var$1.constructor;
        if (var$3 === null)
            var$8 = null;
        else {
            var$8 = var$3.classObject;
            if (var$8 === null) {
                var$8 = new jl_Class;
                var$8.$platformClass = var$3;
                var$2 = var$8;
                var$3.classObject = var$2;
            }
        }
        if (var$8.$name === null)
            var$8.$name = $rt_str(var$8.$platformClass.$meta.name);
        var$3 = var$8.$name;
        var$2 = var$1;
        if (!var$2.$id$) {
            var$8 = $rt_nextId();
            var$2.$id$ = var$8;
        }
        var$2 = otci_IntegerUtil_toUnsignedLogRadixString(var$1.$id$, 4);
        var$1 = new jl_StringBuilder;
        var$1.$buffer = $rt_createCharArray(16);
        var$4 = var$1.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$1, var$4, var$3);
        var$5 = var$1.$length;
        jl_AbstractStringBuilder_insertSpace(var$1, var$5, var$5 + 1 | 0);
        var$1.$buffer.data[var$5] = 64;
        var$4 = var$1.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$1, var$4, var$2);
        var$3 = new jl_String;
        var$6 = var$1.$buffer;
        var$5 = var$1.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$5);
        var$3.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$5);
        return var$3;
    }
    function cbgg_Texture__clinit_() {
        var var$1, var$2, var$3, var$4;
        var$1 = new ju_HashMap;
        var$2 = ju_HashMap_calculateCapacity(16);
        var$1.$elementCount = 0;
        var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
        var$4 = var$3.data;
        var$1.$elementData = var$3;
        var$1.$loadFactor = 0.75;
        var$1.$threshold = var$4.length * 0.75 | 0;
        cbgg_Texture_managedTextures = var$1;
    }
    function cbgu_Array() {
        var a = this; jl_Object.call(a);
        a.$items = null;
        a.$size = 0;
        a.$ordered = 0;
        a.$iterable = null;
    }
    function cbgu_Array__init_() {
        var var_0 = new cbgu_Array();
        cbgu_Array__init_0(var_0);
        return var_0;
    }
    function cbgu_Array__init_1(var_0, var_1) {
        var var_2 = new cbgu_Array();
        cbgu_Array__init_2(var_2, var_0, var_1);
        return var_2;
    }
    function cbgu_Array__init_0($this) {
        $this.$ordered = 1;
        $this.$items = $rt_createArray(jl_Object, 16);
    }
    function cbgu_Array__init_2($this, $ordered, $capacity) {
        $this.$ordered = $ordered;
        $this.$items = $rt_createArray(jl_Object, $capacity);
    }
    function cbgu_Array_add($this, $value) {
        var $items, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        $items = $this.$items;
        var$3 = $items.data;
        var$4 = $this.$size;
        if (var$4 != var$3.length)
            var$5 = $items;
        else {
            var$6 = var$4 * 1.75 | 0;
            if (8 > var$6)
                var$6 = 8;
            var$7 = $items.constructor;
            if (var$7 === null)
                var$8 = null;
            else {
                var$8 = var$7.classObject;
                if (var$8 === null) {
                    var$8 = new jl_Class;
                    var$8.$platformClass = var$7;
                    var$5 = var$8;
                    var$7.classObject = var$5;
                }
            }
            var$5 = jl_Class_getComponentType(var$8);
            if (var$5 === null) {
                $value = new jl_NullPointerException;
                $value.$suppressionEnabled = 1;
                $value.$writableStackTrace = 1;
                $rt_throw($value);
            }
            if (var$5 === $rt_cls($rt_voidcls())) {
                $value = new jl_IllegalArgumentException;
                $value.$suppressionEnabled = 1;
                $value.$writableStackTrace = 1;
                $rt_throw($value);
            }
            if (var$6 < 0) {
                $value = new jl_NegativeArraySizeException;
                $value.$suppressionEnabled = 1;
                $value.$writableStackTrace = 1;
                $rt_throw($value);
            }
            var$5 = jlr_Array_newInstanceImpl(var$5.$platformClass, var$6);
            var$9 = var$5.data;
            var$10 = $this.$size;
            var$11 = var$9.length;
            if (var$10 < var$11)
                var$11 = var$10;
            jl_System_arraycopy($items, 0, var$5, 0, var$11);
            $this.$items = var$5;
        }
        var$5 = var$5.data;
        var$6 = $this.$size;
        $this.$size = var$6 + 1 | 0;
        var$5[var$6] = $value;
    }
    function cbgu_Array_addAll1($this, $array) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        var$2 = $array.$items;
        var$3 = $array.$size;
        var$4 = $this.$items;
        var$5 = var$4.data;
        var$6 = $this.$size;
        var$7 = var$6 + var$3 | 0;
        if (var$7 <= var$5.length)
            var$8 = var$4;
        else {
            var$9 = 8;
            if (var$9 <= var$7)
                var$9 = var$7;
            var$6 = var$6 * 1.75 | 0;
            if (var$9 > var$6)
                var$6 = var$9;
            var$8 = var$4.constructor;
            if (var$8 === null)
                $array = null;
            else {
                $array = var$8.classObject;
                if ($array === null) {
                    $array = new jl_Class;
                    $array.$platformClass = var$8;
                    var$10 = $array;
                    var$8.classObject = var$10;
                }
            }
            $array = jl_Class_getComponentType($array);
            if ($array === null) {
                $array = new jl_NullPointerException;
                $array.$suppressionEnabled = 1;
                $array.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($array);
                $rt_throw($array);
            }
            if ($array === $rt_cls($rt_voidcls())) {
                $array = new jl_IllegalArgumentException;
                $array.$suppressionEnabled = 1;
                $array.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($array);
                $rt_throw($array);
            }
            if (var$6 < 0) {
                $array = new jl_NegativeArraySizeException;
                $array.$suppressionEnabled = 1;
                $array.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($array);
                $rt_throw($array);
            }
            var$8 = jlr_Array_newInstanceImpl($array.$platformClass, var$6);
            $array = var$8.data;
            var$9 = $this.$size;
            var$11 = $array.length;
            if (var$9 < var$11)
                var$11 = var$9;
            jl_System_arraycopy(var$4, 0, var$8, 0, var$11);
            $this.$items = var$8;
        }
        jl_System_arraycopy(var$2, 0, var$8, $this.$size, var$3);
        $this.$size = var$7;
    }
    function cbgu_Array_addAll0($this, $array, $start, $count) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
        if (($start + $count | 0) > $array.$size) {
            var$4 = new jl_IllegalArgumentException;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(52));
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $start, 10);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(53));
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $count, 10);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(54));
            $start = $array.$size;
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $start, 10);
            $array = new jl_String;
            var$6 = var$5.$buffer;
            $count = var$5.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray($count);
            $array.$characters = var$7;
            jl_System_fastArraycopy(var$6, 0, var$7, 0, $count);
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = $array;
            $rt_throw(var$4);
        }
        var$6 = $array.$items;
        var$7 = $this.$items;
        var$8 = var$7.data;
        var$9 = $this.$size;
        var$10 = var$9 + $count | 0;
        if (var$10 <= var$8.length)
            $array = var$7;
        else {
            var$11 = 8;
            if (var$11 <= var$10)
                var$11 = var$10;
            var$9 = var$9 * 1.75 | 0;
            if (var$11 > var$9)
                var$9 = var$11;
            var$5 = var$7.constructor;
            if (var$5 === null)
                var$4 = null;
            else {
                var$4 = var$5.classObject;
                if (var$4 === null) {
                    var$4 = new jl_Class;
                    var$4.$platformClass = var$5;
                    var$12 = var$4;
                    var$5.classObject = var$12;
                }
            }
            $array = jl_Class_getComponentType(var$4);
            if ($array === null) {
                $array = new jl_NullPointerException;
                $array.$suppressionEnabled = 1;
                $array.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($array);
                $rt_throw($array);
            }
            if ($array === $rt_cls($rt_voidcls())) {
                $array = new jl_IllegalArgumentException;
                $array.$suppressionEnabled = 1;
                $array.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($array);
                $rt_throw($array);
            }
            if (var$9 < 0) {
                $array = new jl_NegativeArraySizeException;
                $array.$suppressionEnabled = 1;
                $array.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($array);
                $rt_throw($array);
            }
            $array = jlr_Array_newInstanceImpl($array.$platformClass, var$9);
            var$4 = $array.data;
            var$11 = $this.$size;
            var$13 = var$4.length;
            if (var$11 < var$13)
                var$13 = var$11;
            jl_System_arraycopy(var$7, 0, $array, 0, var$13);
            $this.$items = $array;
        }
        jl_System_arraycopy(var$6, $start, $array, $this.$size, $count);
        $this.$size = var$10;
    }
    function cbgu_Array_addAll($this, $array, $start, $count) {
        var $items, var$5, var$6, $sizeNeeded, var$8, var$9, var$10, var$11, var$12;
        $items = $this.$items;
        var$5 = $items.data;
        var$6 = $this.$size;
        $sizeNeeded = var$6 + $count | 0;
        if ($sizeNeeded <= var$5.length)
            var$8 = $items;
        else {
            var$9 = 8;
            if (var$9 <= $sizeNeeded)
                var$9 = $sizeNeeded;
            var$6 = var$6 * 1.75 | 0;
            if (var$9 > var$6)
                var$6 = var$9;
            var$8 = $items.constructor;
            if (var$8 === null)
                var$10 = null;
            else {
                var$10 = var$8.classObject;
                if (var$10 === null) {
                    var$10 = new jl_Class;
                    var$10.$platformClass = var$8;
                    var$11 = var$10;
                    var$8.classObject = var$11;
                }
            }
            var$10 = jl_Class_getComponentType(var$10);
            if (var$10 === null) {
                var$10 = new jl_NullPointerException;
                var$10.$suppressionEnabled = 1;
                var$10.$writableStackTrace = 1;
                $rt_throw(var$10);
            }
            if (var$10 === $rt_cls($rt_voidcls())) {
                var$10 = new jl_IllegalArgumentException;
                var$10.$suppressionEnabled = 1;
                var$10.$writableStackTrace = 1;
                $rt_throw(var$10);
            }
            if (var$6 < 0) {
                var$10 = new jl_NegativeArraySizeException;
                var$10.$suppressionEnabled = 1;
                var$10.$writableStackTrace = 1;
                $rt_throw(var$10);
            }
            var$8 = jlr_Array_newInstanceImpl(var$10.$platformClass, var$6);
            var$10 = var$8.data;
            var$9 = $this.$size;
            var$12 = var$10.length;
            if (var$9 < var$12)
                var$12 = var$9;
            jl_System_arraycopy($items, 0, var$8, 0, var$12);
            $this.$items = var$8;
        }
        jl_System_arraycopy($array, $start, var$8, $this.$size, $count);
        $this.$size = $sizeNeeded;
    }
    function cbgu_Array_get($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if ($index < $this.$size)
            return $this.$items.data[$index];
        var$2 = new jl_IndexOutOfBoundsException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(36));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(37));
        $index = $this.$size;
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$4.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$4;
        $rt_throw(var$2);
    }
    function cbgu_Array_removeValue($this, $value, $identity) {
        var $items, $i, $n;
        a: {
            $items = $this.$items;
            if (!(!$identity && $value !== null)) {
                $i = 0;
                $n = $this.$size;
                while ($i < $n) {
                    if ($items.data[$i] === $value) {
                        cbgu_Array_removeIndex($this, $i);
                        return 1;
                    }
                    $i = $i + 1 | 0;
                }
            } else {
                $i = 0;
                $n = $this.$size;
                while (true) {
                    if ($i >= $n)
                        break a;
                    if ($value.$equals($items.data[$i])) {
                        cbgu_Array_removeIndex($this, $i);
                        return 1;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
        return 0;
    }
    function cbgu_Array_removeIndex($this, $index) {
        var var$2, $items, var$4, $value, var$6, var$7, var$8;
        var$2 = $this.$size;
        if ($index < var$2) {
            $items = $this.$items;
            var$4 = $items.data;
            $value = var$4[$index];
            var$6 = var$2 - 1 | 0;
            $this.$size = var$6;
            if (!$this.$ordered)
                var$4[$index] = var$4[var$6];
            else
                jl_System_fastArraycopy($items, $index + 1 | 0, $items, $index, var$6 - $index | 0);
            var$4[$this.$size] = null;
            return $value;
        }
        $value = new jl_IndexOutOfBoundsException;
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(36));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(37));
        var$2 = $this.$size;
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, var$2, 10);
        var$8 = new jl_String;
        var$4 = var$7.$buffer;
        $index = var$7.$length;
        jl_String_$callClinit();
        $items = $rt_createCharArray($index);
        var$8.$characters = $items;
        jl_System_fastArraycopy(var$4, 0, $items, 0, $index);
        $value.$suppressionEnabled = 1;
        $value.$writableStackTrace = 1;
        $value.$message = var$8;
        $rt_throw($value);
    }
    function cbgu_Array_removeRange($this, $start, $end) {
        var $n, var$4, var$5, $count, var$7, $items, var$9, $lastIndex, $i;
        $n = $this.$size;
        if ($end >= $n) {
            var$4 = new jl_IndexOutOfBoundsException;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(55));
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $end, 10);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(37));
            $count = $this.$size;
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $count, 10);
            var$7 = new jl_String;
            $items = var$5.$buffer;
            $end = var$5.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray($end);
            var$7.$characters = var$9;
            jl_System_fastArraycopy($items, 0, var$9, 0, $end);
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = var$7;
            $rt_throw(var$4);
        }
        if ($start > $end) {
            var$4 = new jl_IndexOutOfBoundsException;
            var$7 = new jl_StringBuilder;
            var$7.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(56));
            jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $start, 10);
            jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(57));
            jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $end, 10);
            var$5 = new jl_String;
            $items = var$7.$buffer;
            $end = var$7.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray($end);
            var$5.$characters = var$9;
            jl_System_fastArraycopy($items, 0, var$9, 0, $end);
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = var$5;
            $rt_throw(var$4);
        }
        $items = $this.$items;
        $count = ($end - $start | 0) + 1 | 0;
        $lastIndex = $n - $count | 0;
        if ($this.$ordered) {
            $end = $start + $count | 0;
            jl_System_fastArraycopy($items, $end, $items, $start, $n - $end | 0);
        } else {
            $i = $end + 1 | 0;
            if ($lastIndex > $i)
                $i = $lastIndex;
            jl_System_fastArraycopy($items, $i, $items, $start, $n - $i | 0);
        }
        $i = $lastIndex;
        while ($i < $n) {
            $items.data[$i] = null;
            $i = $i + 1 | 0;
        }
        $this.$size = $lastIndex;
    }
    function cbgu_Array_pop($this) {
        var var$1, var$2, var$3, $item;
        var$1 = $this.$size;
        if (var$1) {
            var$2 = var$1 - 1 | 0;
            $this.$size = var$2;
            var$3 = $this.$items.data;
            $item = var$3[var$2];
            var$3[var$2] = null;
            return $item;
        }
        $item = new jl_IllegalStateException;
        $item.$suppressionEnabled = 1;
        $item.$writableStackTrace = 1;
        $item.$message = $rt_s(43);
        $rt_throw($item);
    }
    function cbgu_Array_peek($this) {
        var var$1, var$2;
        var$1 = $this.$size;
        if (var$1)
            return $this.$items.data[var$1 - 1 | 0];
        var$2 = new jl_IllegalStateException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(43);
        $rt_throw(var$2);
    }
    function cbgu_Array_first($this) {
        var var$1;
        if ($this.$size)
            return $this.$items.data[0];
        var$1 = new jl_IllegalStateException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(43);
        $rt_throw(var$1);
    }
    function cbgu_Array_clear($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$items;
        var$2 = 0;
        var$3 = $this.$size;
        var$4 = null;
        if (var$2 > var$3) {
            var$4 = new jl_IllegalArgumentException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        while (var$2 < var$3) {
            var$5 = var$1.data;
            var$6 = var$2 + 1 | 0;
            var$5[var$2] = var$4;
            var$2 = var$6;
        }
        $this.$size = 0;
    }
    function cbgu_Array_ensureCapacity($this, $additionalCapacity) {
        var var$2, var$3, var$4, var$5, var$6, var$7, $sizeNeeded, var$9;
        if ($additionalCapacity < 0) {
            var$2 = new jl_IllegalArgumentException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
            jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $additionalCapacity, 10);
            var$4 = new jl_String;
            var$5 = var$3.$buffer;
            var$6 = var$3.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray(var$6);
            var$4.$characters = var$7;
            jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$4;
            $rt_throw(var$2);
        }
        var$6 = $this.$size;
        $sizeNeeded = var$6 + $additionalCapacity | 0;
        var$5 = $this.$items;
        if ($sizeNeeded > var$5.data.length) {
            if (8 > $sizeNeeded)
                $sizeNeeded = 8;
            $additionalCapacity = var$6 * 1.75 | 0;
            if ($sizeNeeded > $additionalCapacity)
                $additionalCapacity = $sizeNeeded;
            var$3 = var$5.constructor;
            if (var$3 === null)
                var$2 = null;
            else {
                var$2 = var$3.classObject;
                if (var$2 === null) {
                    var$2 = new jl_Class;
                    var$2.$platformClass = var$3;
                    var$4 = var$2;
                    var$3.classObject = var$4;
                }
            }
            var$2 = jl_Class_getComponentType(var$2);
            if (var$2 === null) {
                var$2 = new jl_NullPointerException;
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                $rt_throw(var$2);
            }
            if (var$2 === $rt_cls($rt_voidcls())) {
                var$2 = new jl_IllegalArgumentException;
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                $rt_throw(var$2);
            }
            if ($additionalCapacity < 0) {
                var$2 = new jl_NegativeArraySizeException;
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                $rt_throw(var$2);
            }
            var$3 = jlr_Array_newInstanceImpl(var$2.$platformClass, $additionalCapacity);
            var$2 = var$3.data;
            $sizeNeeded = $this.$size;
            var$9 = var$2.length;
            if ($sizeNeeded < var$9)
                var$9 = $sizeNeeded;
            jl_System_arraycopy(var$5, 0, var$3, 0, var$9);
            $this.$items = var$3;
        }
        return $this.$items;
    }
    function cbgu_Array_iterator($this) {
        var var$1;
        if (cbgu_Collections_allocateIterators) {
            var$1 = new cbgu_Array$ArrayIterator;
            var$1.$valid = 1;
            var$1.$array1 = $this;
            var$1.$allowRemove = 1;
            return var$1;
        }
        if ($this.$iterable === null) {
            var$1 = new cbgu_Array$ArrayIterable;
            var$1.$array2 = $this;
            var$1.$allowRemove0 = 1;
            $this.$iterable = var$1;
        }
        return cbgu_Array$ArrayIterable_iterator($this.$iterable);
    }
    function cbgu_Array_truncate($this, $newSize) {
        var var$2, $i, var$4, var$5, var$6, var$7, var$8;
        if ($newSize >= 0) {
            var$2 = $this.$size;
            if (var$2 <= $newSize)
                return;
            $i = $newSize;
            while ($i < var$2) {
                $this.$items.data[$i] = null;
                $i = $i + 1 | 0;
            }
            $this.$size = $newSize;
            return;
        }
        var$4 = new jl_IllegalArgumentException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(59));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $newSize, 10);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        var$2 = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$2);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, var$2);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$6;
        $rt_throw(var$4);
    }
    function cbgu_Array_hashCode($this) {
        var $items, $h, $i, $n, var$5, $item, var$7;
        if ($this.$ordered) {
            $items = $this.$items;
            $h = 1;
            $i = 0;
            $n = $this.$size;
            while ($i < $n) {
                var$5 = $items.data;
                $h = $h * 31 | 0;
                $item = var$5[$i];
                if ($item !== null)
                    $h = $h + $item.$hashCode() | 0;
                $i = $i + 1 | 0;
            }
            return $h;
        }
        $item = $this;
        if (!$item.$id$) {
            var$7 = $rt_nextId();
            $item.$id$ = var$7;
        }
        return $this.$id$;
    }
    function cbgu_Array_equals($this, $object) {
        var $array, $n, $items1, $items2, $i, var$7, $o1, $o2;
        if ($object === $this)
            return 1;
        if (!$this.$ordered)
            return 0;
        if (!($object instanceof cbgu_Array))
            return 0;
        $array = $object;
        if (!$array.$ordered)
            return 0;
        $n = $this.$size;
        if ($n != $array.$size)
            return 0;
        $items1 = $this.$items;
        $items2 = $array.$items;
        $i = 0;
        a: {
            while ($i < $n) {
                b: {
                    var$7 = $items2.data;
                    $o1 = $items1.data[$i];
                    $o2 = var$7[$i];
                    if ($o1 !== null) {
                        if ($o1.$equals($o2))
                            break b;
                        else
                            break a;
                    }
                    if ($o2 !== null)
                        break a;
                }
                $i = $i + 1 | 0;
            }
            return 1;
        }
        return 0;
    }
    function cbgu_Array_toString($this) {
        var $items, $buffer, var$3, var$4, var$5, var$6, var$7, var$8, var$9, $i;
        if (!$this.$size)
            return $rt_s(60);
        $items = $this.$items;
        $buffer = new cbgu_StringBuilder;
        var$3 = $rt_createCharArray(32);
        var$4 = var$3.data;
        $buffer.$chars = var$3;
        var$5 = $buffer.$length2;
        if (var$5 == var$4.length)
            cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
        $items = $items.data;
        var$4 = $buffer.$chars.data;
        var$6 = $buffer.$length2;
        $buffer.$length2 = var$6 + 1 | 0;
        var$4[var$6] = 91;
        var$7 = $items[0];
        if (var$7 === null)
            cbgu_StringBuilder_appendNull($buffer);
        else {
            var$7 = var$7.$toString();
            if (var$7 === null)
                cbgu_StringBuilder_appendNull($buffer);
            else {
                var$8 = var$7.$characters.data.length;
                var$9 = $buffer.$length2 + var$8 | 0;
                if (var$9 > $buffer.$chars.data.length)
                    cbgu_StringBuilder_enlargeBuffer($buffer, var$9);
                jl_String_getChars(var$7, 0, var$8, $buffer.$chars, $buffer.$length2);
                $buffer.$length2 = var$9;
            }
        }
        $i = 1;
        while ($i < $this.$size) {
            var$8 = $rt_s(61).$characters.data.length;
            var$9 = $buffer.$length2 + var$8 | 0;
            if (var$9 > $buffer.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($buffer, var$9);
            jl_String_getChars($rt_s(61), 0, var$8, $buffer.$chars, $buffer.$length2);
            $buffer.$length2 = var$9;
            var$7 = $items[$i];
            if (var$7 === null)
                cbgu_StringBuilder_appendNull($buffer);
            else {
                var$7 = var$7.$toString();
                if (var$7 === null)
                    cbgu_StringBuilder_appendNull($buffer);
                else {
                    var$6 = var$7.$characters.data.length;
                    var$8 = $buffer.$length2 + var$6 | 0;
                    if (var$8 > $buffer.$chars.data.length)
                        cbgu_StringBuilder_enlargeBuffer($buffer, var$8);
                    jl_String_getChars(var$7, 0, var$6, $buffer.$chars, $buffer.$length2);
                    $buffer.$length2 = var$8;
                }
            }
            $i = $i + 1 | 0;
        }
        var$5 = $buffer.$length2;
        if (var$5 == $buffer.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
        $items = $buffer.$chars;
        var$4 = $items.data;
        var$6 = $buffer.$length2;
        var$5 = var$6 + 1 | 0;
        $buffer.$length2 = var$5;
        var$4[var$6] = 93;
        if (!var$5)
            $buffer = $rt_s(45);
        else {
            $buffer = new jl_String;
            jl_String_$callClinit();
            var$4 = $rt_createCharArray(var$5);
            $buffer.$characters = var$4;
            jl_System_fastArraycopy($items, 0, var$4, 0, var$5);
        }
        return $buffer;
    }
    function cbgu_ObjectMap() {
        var a = this; jl_Object.call(a);
        a.$size2 = 0;
        a.$keyTable = null;
        a.$valueTable = null;
        a.$loadFactor0 = 0.0;
        a.$threshold0 = 0;
        a.$shift = 0;
        a.$mask = 0;
        a.$values1 = null;
        a.$values2 = null;
        a.$keys1 = null;
        a.$keys2 = null;
    }
    var cbgu_ObjectMap_dummy = null;
    function cbgu_ObjectMap__init_(var_0, var_1) {
        var var_2 = new cbgu_ObjectMap();
        cbgu_ObjectMap__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbgu_ObjectMap__init_0($this, $initialCapacity, $loadFactor) {
        var $tableSize, var$4, var$5, var$6, var$7, var$8;
        if ($loadFactor > 0.0 && $loadFactor < 1.0) {
            $this.$loadFactor0 = $loadFactor;
            $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
            $this.$threshold0 = $tableSize * $loadFactor | 0;
            $initialCapacity = $tableSize - 1 | 0;
            $this.$mask = $initialCapacity;
            $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
            $this.$keyTable = $rt_createArray(jl_Object, $tableSize);
            $this.$valueTable = $rt_createArray(jl_Object, $tableSize);
            return;
        }
        var$4 = new jl_IllegalArgumentException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(62));
        jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $loadFactor);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $tableSize = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($tableSize);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $tableSize);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$6;
        $rt_throw(var$4);
    }
    function cbgu_ObjectMap_locateKey($this, $key) {
        var $other, $keyTable, $i;
        if ($key === null) {
            $other = new jl_IllegalArgumentException;
            $other.$suppressionEnabled = 1;
            $other.$writableStackTrace = 1;
            $other.$message = $rt_s(63);
            $rt_throw($other);
        }
        $keyTable = $this.$keyTable;
        $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift));
        while (true) {
            $other = $keyTable.data[$i];
            if ($other === null)
                return  -($i + 1 | 0) | 0;
            if ($other.$equals($key))
                break;
            $i = ($i + 1 | 0) & $this.$mask;
        }
        return $i;
    }
    function cbgu_ObjectMap_put($this, $key, $value) {
        var $i, var$4, $oldValue;
        $i = cbgu_ObjectMap_locateKey($this, $key);
        if ($i >= 0) {
            var$4 = $this.$valueTable.data;
            $oldValue = var$4[$i];
            var$4[$i] = $value;
            return $oldValue;
        }
        $i =  -($i + 1 | 0) | 0;
        var$4 = $this.$keyTable.data;
        var$4[$i] = $key;
        $this.$valueTable.data[$i] = $value;
        $i = $this.$size2 + 1 | 0;
        $this.$size2 = $i;
        if ($i >= $this.$threshold0)
            cbgu_ObjectMap_resize($this, var$4.length << 1);
        return null;
    }
    function cbgu_ObjectMap_get($this, $key) {
        var $i;
        $i = cbgu_ObjectMap_locateKey($this, $key);
        return $i < 0 ? null : $this.$valueTable.data[$i];
    }
    function cbgu_ObjectMap_remove($this, $key) {
        var $i, $keyTable, var$4, $oldValue, $mask, $next, $valueTable, $placement;
        $i = cbgu_ObjectMap_locateKey($this, $key);
        if ($i < 0)
            return null;
        $keyTable = $this.$keyTable;
        var$4 = $this.$valueTable.data;
        $oldValue = var$4[$i];
        $mask = $this.$mask;
        $next = ($i + 1 | 0) & $mask;
        while (true) {
            $valueTable = $keyTable.data;
            $key = $valueTable[$next];
            if ($key === null)
                break;
            $placement = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift));
            if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
                $valueTable[$i] = $key;
                var$4[$i] = var$4[$next];
                $i = $next;
            }
            $next = ($next + 1 | 0) & $mask;
        }
        $valueTable[$i] = null;
        var$4[$i] = null;
        $this.$size2 = $this.$size2 - 1 | 0;
        return $oldValue;
    }
    function cbgu_ObjectMap_containsKey($this, $key) {
        return cbgu_ObjectMap_locateKey($this, $key) < 0 ? 0 : 1;
    }
    function cbgu_ObjectMap_resize($this, $newSize) {
        var $oldCapacity, $i, $oldKeyTable, $oldValueTable, $key, var$7, var$8, var$9;
        a: {
            $oldCapacity = $this.$keyTable.data.length;
            $this.$threshold0 = $newSize * $this.$loadFactor0 | 0;
            $i = $newSize - 1 | 0;
            $this.$mask = $i;
            $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt($i));
            $oldKeyTable = $this.$keyTable;
            $oldValueTable = $this.$valueTable;
            $this.$keyTable = $rt_createArray(jl_Object, $newSize);
            $this.$valueTable = $rt_createArray(jl_Object, $newSize);
            if ($this.$size2 > 0) {
                $i = 0;
                while (true) {
                    if ($i >= $oldCapacity)
                        break a;
                    $key = $oldKeyTable.data[$i];
                    if ($key !== null) {
                        var$7 = $oldValueTable.data[$i];
                        var$8 = $this.$keyTable;
                        $newSize = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode()), Long_create(2135587861, 2654435769)), $this.$shift));
                        while (true) {
                            var$9 = var$8.data;
                            if (var$9[$newSize] === null)
                                break;
                            $newSize = ($newSize + 1 | 0) & $this.$mask;
                        }
                        var$9[$newSize] = $key;
                        $this.$valueTable.data[$newSize] = var$7;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    function cbgu_ObjectMap_values($this) {
        var var$1;
        if (cbgu_Collections_allocateIterators) {
            var$1 = new cbgu_ObjectMap$Values;
            var$1.$valid0 = 1;
            var$1.$map = $this;
            cbgu_ObjectMap$Values_reset(var$1);
            return var$1;
        }
        if ($this.$values1 === null) {
            var$1 = new cbgu_ObjectMap$Values;
            var$1.$valid0 = 1;
            var$1.$map = $this;
            cbgu_ObjectMap$Values_reset(var$1);
            $this.$values1 = var$1;
            var$1 = new cbgu_ObjectMap$Values;
            var$1.$valid0 = 1;
            var$1.$map = $this;
            cbgu_ObjectMap$Values_reset(var$1);
            $this.$values2 = var$1;
        }
        var$1 = $this.$values1;
        if (!var$1.$valid0) {
            cbgu_ObjectMap$Values_reset(var$1);
            var$1 = $this.$values1;
            var$1.$valid0 = 1;
            $this.$values2.$valid0 = 0;
            return var$1;
        }
        cbgu_ObjectMap$Values_reset($this.$values2);
        var$1 = $this.$values2;
        var$1.$valid0 = 1;
        $this.$values1.$valid0 = 0;
        return var$1;
    }
    function cbgu_ObjectMap_keys($this) {
        var var$1;
        if (cbgu_Collections_allocateIterators) {
            var$1 = new cbgu_ObjectMap$Keys;
            var$1.$valid0 = 1;
            var$1.$map = $this;
            cbgu_ObjectMap$Keys_reset(var$1);
            return var$1;
        }
        if ($this.$keys1 === null) {
            var$1 = new cbgu_ObjectMap$Keys;
            var$1.$valid0 = 1;
            var$1.$map = $this;
            cbgu_ObjectMap$Keys_reset(var$1);
            $this.$keys1 = var$1;
            var$1 = new cbgu_ObjectMap$Keys;
            var$1.$valid0 = 1;
            var$1.$map = $this;
            cbgu_ObjectMap$Keys_reset(var$1);
            $this.$keys2 = var$1;
        }
        var$1 = $this.$keys1;
        if (!var$1.$valid0) {
            cbgu_ObjectMap$Keys_reset(var$1);
            var$1 = $this.$keys1;
            var$1.$valid0 = 1;
            $this.$keys2.$valid0 = 0;
            return var$1;
        }
        cbgu_ObjectMap$Keys_reset($this.$keys2);
        var$1 = $this.$keys2;
        var$1.$valid0 = 1;
        $this.$keys1.$valid0 = 0;
        return var$1;
    }
    function cbgu_ObjectMap__clinit_() {
        cbgu_ObjectMap_dummy = new jl_Object;
    }
    var cbgu_OrderedMap = $rt_classWithoutFields(cbgu_ObjectMap);
    var cbgu_Queue = $rt_classWithoutFields();
    function cbgg_VertexAttribute() {
        var a = this; jl_Object.call(a);
        a.$usage = 0;
        a.$numComponents = 0;
        a.$normalized = 0;
        a.$type0 = 0;
        a.$offset = 0;
        a.$alias = null;
        a.$unit = 0;
        a.$usageIndex = 0;
    }
    function cbgg_VertexAttribute_equals($this, $obj) {
        if (!($obj instanceof cbgg_VertexAttribute))
            return 0;
        return cbgg_VertexAttribute_equals0($this, $obj);
    }
    function cbgg_VertexAttribute_equals0($this, $other) {
        return $other !== null && $this.$usage == $other.$usage && $this.$numComponents == $other.$numComponents && $this.$type0 == $other.$type0 && $this.$normalized == $other.$normalized && jl_String_equals($this.$alias, $other.$alias) && $this.$unit == $other.$unit ? 1 : 0;
    }
    function cbgg_VertexAttribute_hashCode($this) {
        var var$1, var$2, var$3, $result, var$5, var$6;
        a: {
            var$1 = 541 * ((541 * (($this.$usageIndex << 8) + ($this.$unit & 255) | 0) | 0) + $this.$numComponents | 0) | 0;
            var$2 = $this.$alias;
            if (!var$2.$hashCode0) {
                var$3 = var$2.$characters.data;
                $result = var$3.length;
                var$5 = 0;
                while (true) {
                    if (var$5 >= $result)
                        break a;
                    var$6 = var$3[var$5];
                    var$2.$hashCode0 = (31 * var$2.$hashCode0 | 0) + var$6 | 0;
                    var$5 = var$5 + 1 | 0;
                }
            }
        }
        return var$1 + var$2.$hashCode0 | 0;
    }
    var cbgggm_Node = $rt_classWithoutFields();
    var cbgggm_NodePart = $rt_classWithoutFields();
    var cbgggm_NodeKeyframe = $rt_classWithoutFields();
    var cbgggm_Animation = $rt_classWithoutFields();
    var cbgggm_MeshPart = $rt_classWithoutFields();
    var cbgggm_MeshPart_bounds = null;
    function cbgggm_MeshPart_$callClinit() {
        cbgggm_MeshPart_$callClinit = $rt_eraseClinit(cbgggm_MeshPart);
        cbgggm_MeshPart__clinit_();
    }
    function cbgggm_MeshPart__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new cbgmc_BoundingBox;
        cbgmc_BoundingBox_$callClinit();
        var$2 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$1.$min0 = var$2;
        var$3 = new cbgm_Vector3;
        var$1.$max0 = var$3;
        var$1.$cnt = new cbgm_Vector3;
        var$1.$dim = new cbgm_Vector3;
        var$2.$x2 = 0.0;
        var$2.$y2 = 0.0;
        var$2.$z1 = 0.0;
        var$3.$x2 = 0.0;
        var$3.$y2 = 0.0;
        var$3.$z1 = 0.0;
        cbgmc_BoundingBox_set(var$1, var$2, var$3);
        cbgggm_MeshPart_bounds = var$1;
    }
    var cbgggmd_ModelAnimation = $rt_classWithoutFields();
    var cbgggmd_ModelMesh = $rt_classWithoutFields();
    var cbgggmd_ModelMaterial = $rt_classWithoutFields();
    var cbgggmd_ModelNodePart = $rt_classWithoutFields();
    var cbgggmd_ModelNode = $rt_classWithoutFields();
    var cbgggmd_ModelMeshPart = $rt_classWithoutFields();
    var cbgggmd_ModelData = $rt_classWithoutFields();
    var cbgggmd_ModelTexture = $rt_classWithoutFields();
    var cbgggmd_ModelNodeKeyframe = $rt_classWithoutFields();
    var cbgggmd_ModelNodeAnimation = $rt_classWithoutFields();
    var cbgggmd_ModelMaterial$MaterialType = $rt_classWithoutFields(jl_Enum);
    var cbgggmd_ModelMaterial$MaterialType_Lambert = null;
    var cbgggmd_ModelMaterial$MaterialType_Phong = null;
    var cbgggmd_ModelMaterial$MaterialType_$VALUES = null;
    function cbgggmd_ModelMaterial$MaterialType_$callClinit() {
        cbgggmd_ModelMaterial$MaterialType_$callClinit = $rt_eraseClinit(cbgggmd_ModelMaterial$MaterialType);
        cbgggmd_ModelMaterial$MaterialType__clinit_();
    }
    function cbgggmd_ModelMaterial$MaterialType__clinit_() {
        var var$1, var$2;
        var$1 = new cbgggmd_ModelMaterial$MaterialType;
        cbgggmd_ModelMaterial$MaterialType_$callClinit();
        var$1.$name0 = $rt_s(64);
        var$1.$ordinal = 0;
        cbgggmd_ModelMaterial$MaterialType_Lambert = var$1;
        var$2 = new cbgggmd_ModelMaterial$MaterialType;
        var$2.$name0 = $rt_s(65);
        var$2.$ordinal = 1;
        cbgggmd_ModelMaterial$MaterialType_Phong = var$2;
        cbgggmd_ModelMaterial$MaterialType_$VALUES = $rt_createArrayFromData(cbgggmd_ModelMaterial$MaterialType, [var$1, var$2]);
    }
    var cbgggm_NodeAnimation = $rt_classWithoutFields();
    var cbg_Net = $rt_classWithoutFields(0);
    var cbgm_MapObject = $rt_classWithoutFields();
    var cbgmo_RectangleMapObject = $rt_classWithoutFields(cbgm_MapObject);
    var cbgmo_PolygonMapObject = $rt_classWithoutFields(cbgm_MapObject);
    var cbgmo_CircleMapObject = $rt_classWithoutFields(cbgm_MapObject);
    var cbgmo_PolylineMapObject = $rt_classWithoutFields(cbgm_MapObject);
    var cbgmo_EllipseMapObject = $rt_classWithoutFields(cbgm_MapObject);
    var cbgmo_TextureMapObject = $rt_classWithoutFields(cbgm_MapObject);
    var cbgmto_TiledMapTileMapObject = $rt_classWithoutFields(cbgmo_TextureMapObject);
    var cbgggp_ResourceData$Configurable = $rt_classWithoutFields(0);
    var cbgggp_ParticleEffect = $rt_classWithoutFields();
    var cbgu_Json$Serializable = $rt_classWithoutFields(0);
    var cbgggp_ParticleController = $rt_classWithoutFields();
    var cbgggp_ResourceData = $rt_classWithoutFields();
    var cbgggp_ParallelArray = $rt_classWithoutFields();
    var cbgggpv_ParticleValue = $rt_classWithoutFields();
    var cbgggpv_NumericValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
    var cbgggpv_SpawnShapeValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
    var cbgggpv_PrimitiveSpawnShapeValue = $rt_classWithoutFields(cbgggpv_SpawnShapeValue);
    var cbgggpv_PrimitiveSpawnShapeValue_TMP_V1 = null;
    function cbgggpv_PrimitiveSpawnShapeValue_$callClinit() {
        cbgggpv_PrimitiveSpawnShapeValue_$callClinit = $rt_eraseClinit(cbgggpv_PrimitiveSpawnShapeValue);
        cbgggpv_PrimitiveSpawnShapeValue__clinit_();
    }
    function cbgggpv_PrimitiveSpawnShapeValue__clinit_() {
        var var$1;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        cbgggpv_PrimitiveSpawnShapeValue_TMP_V1 = var$1;
    }
    var cbgggpv_MeshSpawnShapeValue$Triangle = $rt_classWithoutFields();
    var cbgggpv_PointSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
    var cbgggpv_RectangleSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
    var cbgggpv_GradientColorValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
    var cbgggpv_GradientColorValue_temp = null;
    function cbgggpv_GradientColorValue__clinit_() {
        cbgggpv_GradientColorValue_temp = $rt_createFloatArray(3);
    }
    var cbgggpv_RangedNumericValue = $rt_classWithoutFields(cbgggpv_ParticleValue);
    var cbgggpv_ScaledNumericValue = $rt_classWithoutFields(cbgggpv_RangedNumericValue);
    var cbgggpv_EllipseSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
    var cbgggpv_MeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_SpawnShapeValue);
    var cbgggpv_WeightMeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_MeshSpawnShapeValue);
    var cbgggpv_LineSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
    var cbgggpv_CylinderSpawnShapeValue = $rt_classWithoutFields(cbgggpv_PrimitiveSpawnShapeValue);
    var cbgggpv_UnweightedMeshSpawnShapeValue = $rt_classWithoutFields(cbgggpv_MeshSpawnShapeValue);
    var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide = $rt_classWithoutFields(jl_Enum);
    var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both = null;
    var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top = null;
    var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom = null;
    var cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$VALUES = null;
    function cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit() {
        cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit = $rt_eraseClinit(cbgggpv_PrimitiveSpawnShapeValue$SpawnSide);
        cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__clinit_();
    }
    function cbgggpv_PrimitiveSpawnShapeValue$SpawnSide__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
        cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit();
        var$1.$name0 = $rt_s(66);
        var$1.$ordinal = 0;
        cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_both = var$1;
        var$2 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
        var$2.$name0 = $rt_s(67);
        var$2.$ordinal = 1;
        cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_top = var$2;
        var$3 = new cbgggpv_PrimitiveSpawnShapeValue$SpawnSide;
        var$3.$name0 = $rt_s(68);
        var$3.$ordinal = 2;
        cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_bottom = var$3;
        cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$VALUES = $rt_createArrayFromData(cbgggpv_PrimitiveSpawnShapeValue$SpawnSide, [var$1, var$2, var$3]);
    }
    var cbgggp_ParticleControllerComponent = $rt_classWithoutFields();
    var cbgggpe_Emitter = $rt_classWithoutFields(cbgggp_ParticleControllerComponent);
    var cbgggpe_RegularEmitter = $rt_classWithoutFields(cbgggpe_Emitter);
    var cbgggpe_RegularEmitter$EmissionMode = $rt_classWithoutFields(jl_Enum);
    var cbgggpe_RegularEmitter$EmissionMode_Enabled = null;
    var cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd = null;
    var cbgggpe_RegularEmitter$EmissionMode_Disabled = null;
    var cbgggpe_RegularEmitter$EmissionMode_$VALUES = null;
    function cbgggpe_RegularEmitter$EmissionMode_$callClinit() {
        cbgggpe_RegularEmitter$EmissionMode_$callClinit = $rt_eraseClinit(cbgggpe_RegularEmitter$EmissionMode);
        cbgggpe_RegularEmitter$EmissionMode__clinit_();
    }
    function cbgggpe_RegularEmitter$EmissionMode__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new cbgggpe_RegularEmitter$EmissionMode;
        cbgggpe_RegularEmitter$EmissionMode_$callClinit();
        var$1.$name0 = $rt_s(69);
        var$1.$ordinal = 0;
        cbgggpe_RegularEmitter$EmissionMode_Enabled = var$1;
        var$2 = new cbgggpe_RegularEmitter$EmissionMode;
        var$2.$name0 = $rt_s(70);
        var$2.$ordinal = 1;
        cbgggpe_RegularEmitter$EmissionMode_EnabledUntilCycleEnd = var$2;
        var$3 = new cbgggpe_RegularEmitter$EmissionMode;
        var$3.$name0 = $rt_s(71);
        var$3.$ordinal = 2;
        cbgggpe_RegularEmitter$EmissionMode_Disabled = var$3;
        cbgggpe_RegularEmitter$EmissionMode_$VALUES = $rt_createArrayFromData(cbgggpe_RegularEmitter$EmissionMode, [var$1, var$2, var$3]);
    }
    var cbgggpi_Influencer = $rt_classWithoutFields(cbgggp_ParticleControllerComponent);
    var cbgggpi_ParticleControllerInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
    var cbgggpi_RegionInfluencer$AspectTextureRegion = $rt_classWithoutFields();
    var cbgggpi_DynamicsModifier = $rt_classWithoutFields(cbgggpi_Influencer);
    var cbgggpi_DynamicsModifier_TMP_V1 = null;
    var cbgggpi_DynamicsModifier_TMP_V2 = null;
    var cbgggpi_DynamicsModifier_TMP_V3 = null;
    var cbgggpi_DynamicsModifier_TMP_Q = null;
    function cbgggpi_DynamicsModifier_$callClinit() {
        cbgggpi_DynamicsModifier_$callClinit = $rt_eraseClinit(cbgggpi_DynamicsModifier);
        cbgggpi_DynamicsModifier__clinit_();
    }
    function cbgggpi_DynamicsModifier__clinit_() {
        var var$1;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        cbgggpi_DynamicsModifier_TMP_V1 = var$1;
        cbgggpi_DynamicsModifier_TMP_V2 = new cbgm_Vector3;
        cbgggpi_DynamicsModifier_TMP_V3 = new cbgm_Vector3;
        var$1 = new cbgm_Quaternion;
        cbgm_Quaternion_$callClinit();
        var$1.$x0 = 0.0;
        var$1.$y0 = 0.0;
        var$1.$z = 0.0;
        var$1.$w = 1.0;
        cbgggpi_DynamicsModifier_TMP_Q = var$1;
    }
    var cbgggpi_DynamicsModifier$Strength = $rt_classWithoutFields(cbgggpi_DynamicsModifier);
    var cbgggpi_DynamicsModifier$Angular = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
    var cbgggpi_DynamicsModifier$Rotational3D = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular);
    var cbgggpi_ColorInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
    var cbgggpi_ColorInfluencer$Random = $rt_classWithoutFields(cbgggpi_ColorInfluencer);
    var cbgggpi_DynamicsInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
    var cbgggpi_RegionInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
    var cbgggpi_RegionInfluencer$Single = $rt_classWithoutFields(cbgggpi_RegionInfluencer);
    var cbgggpi_ModelInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
    var cbgggpi_DynamicsModifier$Rotational2D = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
    var cbgggpi_DynamicsModifier$BrownianAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
    var cbgggpi_SimpleInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
    var cbgggpi_ScaleInfluencer = $rt_classWithoutFields(cbgggpi_SimpleInfluencer);
    var cbgggpi_RegionInfluencer$Random = $rt_classWithoutFields(cbgggpi_RegionInfluencer);
    var cbgggpi_DynamicsModifier$TangentialAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular);
    var cbgggpi_ParticleControllerFinalizerInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
    var cbgggpi_RegionInfluencer$Animated = $rt_classWithoutFields(cbgggpi_RegionInfluencer);
    var cbgggpi_SpawnInfluencer = $rt_classWithoutFields(cbgggpi_Influencer);
    var cbgggpi_DynamicsModifier$FaceDirection = $rt_classWithoutFields(cbgggpi_DynamicsModifier);
    var cbgggpi_ParticleControllerInfluencer$Random$ParticleControllerPool = $rt_classWithoutFields(cbgu_Pool);
    var cbgggpi_ModelInfluencer$Random$ModelInstancePool = $rt_classWithoutFields(cbgu_Pool);
    var cbgggpi_DynamicsModifier$CentripetalAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Strength);
    var cbgggpi_ModelInfluencer$Single = $rt_classWithoutFields(cbgggpi_ModelInfluencer);
    var cbgggpi_ParticleControllerInfluencer$Random = $rt_classWithoutFields(cbgggpi_ParticleControllerInfluencer);
    var cbgggpi_ParticleControllerInfluencer$Single = $rt_classWithoutFields(cbgggpi_ParticleControllerInfluencer);
    var cbgggpi_ModelInfluencer$Random = $rt_classWithoutFields(cbgggpi_ModelInfluencer);
    var cbgggpi_DynamicsModifier$PolarAcceleration = $rt_classWithoutFields(cbgggpi_DynamicsModifier$Angular);
    var cbgggpi_ColorInfluencer$Single = $rt_classWithoutFields(cbgggpi_ColorInfluencer);
    var cbgggpr_ParticleControllerRenderer = $rt_classWithoutFields(cbgggp_ParticleControllerComponent);
    var cbgggpr_PointSpriteRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
    var cbgggpr_ParticleControllerRenderData = $rt_classWithoutFields();
    var cbgggpr_BillboardControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData);
    var cbgggpr_ModelInstanceRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
    var cbgggpr_ParticleControllerControllerRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
    var cbgggpr_PointSpriteControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData);
    var cbgggpr_BillboardRenderer = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderer);
    var cbgggpr_ModelInstanceControllerRenderData = $rt_classWithoutFields(cbgggpr_ParticleControllerRenderData);
    var jlr_AnnotatedElement = $rt_classWithoutFields(0);
    var jlr_Type = $rt_classWithoutFields(0);
    function jl_Class() {
        var a = this; jl_Object.call(a);
        a.$name = null;
        a.$platformClass = null;
        a.$declaredConstructors = null;
    }
    var jl_Class_reflectionInitialized = 0;
    function jl_Class__init_(var_0) {
        var var_1 = new jl_Class();
        jl_Class__init_0(var_1, var_0);
        return var_1;
    }
    function jl_Class__init_0($this, $platformClass) {
        var var$2;
        $this.$platformClass = $platformClass;
        var$2 = $this;
        $platformClass.classObject = var$2;
    }
    function jl_Class_getClass($cls) {
        var $result, var$3;
        if ($cls === null)
            return null;
        $result = $cls.classObject;
        if ($result === null) {
            $result = new jl_Class;
            $result.$platformClass = $cls;
            var$3 = $result;
            $cls.classObject = var$3;
        }
        return $result;
    }
    function jl_Class_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = (!($this.$platformClass.$meta.flags & 2) ? 0 : 1) ? $rt_s(72) : !($this.$platformClass.$meta.primitive ? 1 : 0) ? $rt_s(73) : $rt_s(45);
        if ($this.$name === null)
            $this.$name = $rt_str($this.$platformClass.$meta.name);
        var$2 = $this.$name;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
        var$4 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
        var$1 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        return var$1;
    }
    function jl_Class_getPlatformClass($this) {
        return $this.$platformClass;
    }
    function jl_Class_getComponentType($this) {
        var var$1, var$2, var$3;
        var$1 = $this.$platformClass.$meta.item;
        if (var$1 === null)
            var$2 = null;
        else {
            var$2 = var$1.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$1;
                var$3 = var$2;
                var$1.classObject = var$3;
            }
        }
        return var$2;
    }
    function jl_Class_createMetadata() {
        cbgssu_Table$DebugRect.$meta.methods = [
            {
                name : "<init>",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbgssu_Table$DebugRect__init_0(obj );
                    return null;
                }
            }, {
                name : "<clinit>",
                modifiers : 512,
                accessLevel : 0,
                parameterTypes : [],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbgssu_Table$DebugRect_$callClinit();
                    cbgssu_Table$DebugRect__clinit_();
                    return null;
                }
            }];
        cbggg_GlyphLayout$GlyphRun.$meta.methods = [
            {
                name : "<init>",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout$GlyphRun__init_(obj );
                    return null;
                }
            }, {
                name : "appendRun",
                modifiers : 0,
                accessLevel : 0,
                parameterTypes : [cbggg_GlyphLayout$GlyphRun],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout$GlyphRun_appendRun(obj , args[0]);
                    return null;
                }
            }, {
                name : "reset",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout$GlyphRun_reset(obj );
                    return null;
                }
            }, {
                name : "toString",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [],
                returnType : jl_String,
                callable : function(obj, args) {
                    return cbggg_GlyphLayout$GlyphRun_toString(obj );
                }
            }];
        cbggg_GlyphLayout.$meta.methods = [
            {
                name : "<init>",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout__init_0(obj );
                    return null;
                }
            }, {
                name : "<init>",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout__init_2(obj , args[0], args[1]);
                    return null;
                }
            }, {
                name : "<init>",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls()],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout__init_4(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                    return null;
                }
            }, {
                name : "<init>",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls(), $rt_intcls(), cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls(), jl_String],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout__init_6(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                    return null;
                }
            }, {
                name : "setText",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [cbggg_BitmapFont, jl_CharSequence],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout_setText0(obj , args[0], args[1]);
                    return null;
                }
            }, {
                name : "setText",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [cbggg_BitmapFont, jl_CharSequence, cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls()],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout_setText1(obj , args[0], args[1], args[2], jl_Float_floatValue(args[3]), jl_Integer_intValue(args[4]), jl_Boolean_booleanValue(args[5]));
                    return null;
                }
            }, {
                name : "setText",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [cbggg_BitmapFont, jl_CharSequence, $rt_intcls(), $rt_intcls(), cbgg_Color, $rt_floatcls(), $rt_intcls(), $rt_booleancls(), jl_String],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout_setText(obj , args[0], args[1], jl_Integer_intValue(args[2]), jl_Integer_intValue(args[3]), args[4], jl_Float_floatValue(args[5]), jl_Integer_intValue(args[6]), jl_Boolean_booleanValue(args[7]), args[8]);
                    return null;
                }
            }, {
                name : "calculateWidths",
                modifiers : 0,
                accessLevel : 1,
                parameterTypes : [cbggg_BitmapFont$BitmapFontData],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout_calculateWidths(obj , args[0]);
                    return null;
                }
            }, {
                name : "alignRuns",
                modifiers : 0,
                accessLevel : 1,
                parameterTypes : [$rt_floatcls(), $rt_intcls()],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout_alignRuns(obj , jl_Float_floatValue(args[0]), jl_Integer_intValue(args[1]));
                    return null;
                }
            }, {
                name : "truncate",
                modifiers : 0,
                accessLevel : 1,
                parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_floatcls(), jl_String],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout_truncate(obj , args[0], args[1], jl_Float_floatValue(args[2]), args[3]);
                    return null;
                }
            }, {
                name : "wrap",
                modifiers : 0,
                accessLevel : 1,
                parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun, $rt_intcls()],
                returnType : cbggg_GlyphLayout$GlyphRun,
                callable : function(obj, args) {
                    return cbggg_GlyphLayout_wrap(obj , args[0], args[1], jl_Integer_intValue(args[2]));
                }
            }, {
                name : "setLastGlyphXAdvance",
                modifiers : 0,
                accessLevel : 1,
                parameterTypes : [cbggg_BitmapFont$BitmapFontData, cbggg_GlyphLayout$GlyphRun],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout_setLastGlyphXAdvance(obj , args[0], args[1]);
                    return null;
                }
            }, {
                name : "getGlyphWidth",
                modifiers : 0,
                accessLevel : 1,
                parameterTypes : [cbggg_BitmapFont$Glyph, cbggg_BitmapFont$BitmapFontData],
                returnType : $rt_floatcls(),
                callable : function(obj, args) {
                    return cbggg_GlyphLayout_getGlyphWidth(obj , args[0], args[1]);
                }
            }, {
                name : "getLineOffset",
                modifiers : 0,
                accessLevel : 1,
                parameterTypes : [cbgu_Array, cbggg_BitmapFont$BitmapFontData],
                returnType : $rt_floatcls(),
                callable : function(obj, args) {
                    return cbggg_GlyphLayout_getLineOffset(obj , args[0], args[1]);
                }
            }, {
                name : "parseColorMarkup",
                modifiers : 0,
                accessLevel : 1,
                parameterTypes : [jl_CharSequence, $rt_intcls(), $rt_intcls()],
                returnType : $rt_intcls(),
                callable : function(obj, args) {
                    return cbggg_GlyphLayout_parseColorMarkup(obj , args[0], jl_Integer_intValue(args[1]), jl_Integer_intValue(args[2]));
                }
            }, {
                name : "reset",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout_reset(obj );
                    return null;
                }
            }, {
                name : "toString",
                modifiers : 0,
                accessLevel : 3,
                parameterTypes : [],
                returnType : jl_String,
                callable : function(obj, args) {
                    return cbggg_GlyphLayout_toString(obj );
                }
            }, {
                name : "<clinit>",
                modifiers : 512,
                accessLevel : 0,
                parameterTypes : [],
                returnType : $rt_voidcls(),
                callable : function(obj, args) {
                    cbggg_GlyphLayout_$callClinit();
                    cbggg_GlyphLayout__clinit_();
                    return null;
                }
            }];
    }
    function jl_Class_getDeclaredConstructors($this) {
        var $jsMethods, $count, $i, var$4, $jsMethod, $jsParameterTypes, $parameterTypes, var$8, $j, var$10, var$11, var$12, var$13;
        if (!($this.$platformClass.$meta.primitive ? 1 : 0) && !($this.$platformClass.$meta.item === null ? 0 : 1)) {
            if ($this.$declaredConstructors === null) {
                if (!jl_Class_reflectionInitialized) {
                    jl_Class_reflectionInitialized = 1;
                    jl_Class_createMetadata();
                }
                $jsMethods = $this.$platformClass.$meta.methods;
                $this.$declaredConstructors = $rt_createArray(jlr_Constructor, $jsMethods.length);
                $count = 0;
                $i = 0;
                while ($i < $jsMethods.length) {
                    var$4 = $jsMethods[$i];
                    $jsMethod = var$4 === null ? null : !(var$4 instanceof $rt_objcls()) ? var$4 : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
                    if (jl_String_equals($rt_str($jsMethod.name), $rt_s(74))) {
                        $jsParameterTypes = $jsMethod.parameterTypes;
                        $parameterTypes = $rt_createArray(jl_Class, $jsParameterTypes.length);
                        var$8 = $parameterTypes.data;
                        $j = 0;
                        var$10 = var$8.length;
                        while ($j < var$10) {
                            var$11 = $jsParameterTypes[$j];
                            if (var$11 === null)
                                var$4 = null;
                            else {
                                var$4 = var$11.classObject;
                                if (var$4 === null) {
                                    var$4 = new jl_Class;
                                    var$4.$platformClass = var$11;
                                    var$12 = var$4;
                                    var$11.classObject = var$12;
                                }
                            }
                            var$8[$j] = var$4;
                            $j = $j + 1 | 0;
                        }
                        var$8 = $this.$declaredConstructors.data;
                        $j = $count + 1 | 0;
                        var$4 = new jlr_Constructor;
                        $jsParameterTypes = $rt_str($jsMethod.name);
                        var$10 = $jsMethod.modifiers;
                        var$13 = $jsMethod.accessLevel;
                        $jsMethod = otji_JS_functionAsObject($jsMethod.callable, "call");
                        var$4.$declaringClass = $this;
                        var$4.$name1 = $jsParameterTypes;
                        var$4.$modifiers = var$10;
                        var$4.$accessLevel = var$13;
                        var$4.$parameterTypes = $parameterTypes;
                        var$4.$callable = $jsMethod;
                        var$8[$count] = var$4;
                        $count = $j;
                    }
                    $i = $i + 1 | 0;
                }
                $parameterTypes = $this.$declaredConstructors;
                var$4 = $parameterTypes.constructor;
                if (var$4 === null)
                    $jsParameterTypes = null;
                else {
                    $jsParameterTypes = var$4.classObject;
                    if ($jsParameterTypes === null) {
                        $jsParameterTypes = new jl_Class;
                        $jsParameterTypes.$platformClass = var$4;
                        $jsMethods = $jsParameterTypes;
                        var$4.classObject = $jsMethods;
                    }
                }
                var$4 = jl_Class_getComponentType($jsParameterTypes);
                if (var$4 === null) {
                    var$4 = new jl_NullPointerException;
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    $rt_throw(var$4);
                }
                if (var$4 === $rt_cls($rt_voidcls())) {
                    var$4 = new jl_IllegalArgumentException;
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    $rt_throw(var$4);
                }
                if ($count < 0) {
                    var$4 = new jl_NegativeArraySizeException;
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    $rt_throw(var$4);
                }
                $parameterTypes = $parameterTypes.data;
                $jsMethod = jlr_Array_newInstanceImpl(var$4.$platformClass, $count);
                $i = $parameterTypes.length;
                if ($count < $i)
                    $i = $count;
                $count = 0;
                while ($count < $i) {
                    $jsMethod.data[$count] = $parameterTypes[$count];
                    $count = $count + 1 | 0;
                }
                $this.$declaredConstructors = $jsMethod;
            }
            return $this.$declaredConstructors.$clone();
        }
        return $rt_createArray(jlr_Constructor, 0);
    }
    function jl_Class_getConstructors($this) {
        var $declaredConstructors, var$2, $constructors, var$4, $sz, var$6, $constructor, var$8, var$9, var$10;
        $declaredConstructors = (jl_Class_getDeclaredConstructors($this)).data;
        var$2 = $declaredConstructors.length;
        $constructors = $rt_createArray(jlr_Constructor, var$2);
        var$4 = $constructors.data;
        $sz = 0;
        var$6 = 0;
        while (var$6 < var$2) {
            $constructor = $declaredConstructors[var$6];
            if (!(otcir_Flags_getModifiers($constructor.$modifiers, $constructor.$accessLevel) & 1) ? 0 : 1) {
                var$8 = $sz + 1 | 0;
                var$4[$sz] = $constructor;
                $sz = var$8;
            }
            var$6 = var$6 + 1 | 0;
        }
        var$2 = var$4.length;
        var$8 = $rt_compare($sz, var$2);
        if (var$8 < 0) {
            var$9 = $constructors.constructor;
            if (var$9 === null)
                $constructor = null;
            else {
                $constructor = var$9.classObject;
                if ($constructor === null) {
                    $constructor = new jl_Class;
                    $constructor.$platformClass = var$9;
                    var$10 = $constructor;
                    var$9.classObject = var$10;
                }
            }
            var$9 = jl_Class_getComponentType($constructor);
            if (var$9 === null) {
                $constructor = new jl_NullPointerException;
                $constructor.$suppressionEnabled = 1;
                $constructor.$writableStackTrace = 1;
                $rt_throw($constructor);
            }
            if (var$9 === $rt_cls($rt_voidcls())) {
                $constructor = new jl_IllegalArgumentException;
                $constructor.$suppressionEnabled = 1;
                $constructor.$writableStackTrace = 1;
                $rt_throw($constructor);
            }
            if ($sz < 0) {
                $constructor = new jl_NegativeArraySizeException;
                $constructor.$suppressionEnabled = 1;
                $constructor.$writableStackTrace = 1;
                $rt_throw($constructor);
            }
            var$10 = jlr_Array_newInstanceImpl(var$9.$platformClass, $sz);
            if (var$8 < 0)
                var$2 = $sz;
            $sz = 0;
            while ($sz < var$2) {
                var$10.data[$sz] = var$4[$sz];
                $sz = $sz + 1 | 0;
            }
            $constructors = var$10;
        }
        return $constructors;
    }
    function jl_Class_getDeclaredConstructor($this, $parameterTypes) {
        var var$2, var$3, var$4, $constructor;
        var$2 = (jl_Class_getDeclaredConstructors($this)).data;
        var$3 = var$2.length;
        var$4 = 0;
        while (true) {
            if (var$4 >= var$3) {
                $constructor = new jl_NoSuchMethodException;
                $constructor.$suppressionEnabled = 1;
                $constructor.$writableStackTrace = 1;
                $rt_throw($constructor);
            }
            $constructor = var$2[var$4];
            if (ju_Arrays_equals($constructor.$parameterTypes.$clone(), $parameterTypes))
                break;
            var$4 = var$4 + 1 | 0;
        }
        return $constructor;
    }
    function jl_Class_getConstructor($this, $parameterTypes) {
        var var$2, var$3, var$4, $constructor, var$6;
        var$2 = (jl_Class_getDeclaredConstructors($this)).data;
        var$3 = var$2.length;
        var$4 = 0;
        while (true) {
            if (var$4 >= var$3) {
                $constructor = new jl_NoSuchMethodException;
                $constructor.$suppressionEnabled = 1;
                $constructor.$writableStackTrace = 1;
                $rt_throw($constructor);
            }
            $constructor = var$2[var$4];
            var$6 = !(otcir_Flags_getModifiers($constructor.$modifiers, $constructor.$accessLevel) & 1) ? 0 : 1;
            if (var$6 && ju_Arrays_equals($constructor.$parameterTypes.$clone(), $parameterTypes))
                break;
            var$4 = var$4 + 1 | 0;
        }
        return $constructor;
    }
    var otji_JS = $rt_classWithoutFields();
    function otji_JS_unwrapByteArray($array) {
        var $result, var$3, $i, var$5, var$6;
        if ($array === null)
            return null;
        $result = $rt_createByteArray($array.length);
        var$3 = $result.data;
        $i = 0;
        var$5 = var$3.length;
        while ($i < var$5) {
            var$6 = $array[$i];
            var$3[$i] = var$6 === null ? null : !(var$6 instanceof $rt_objcls()) ? var$6 : var$6[$rt_jso_marker] === true ? var$6 : var$6.$js;
            $i = $i + 1 | 0;
        }
        return $result;
    }
    function otji_JS_function(var$1, var$2) {
        var name = 'jso$functor$' + var$2;
        if (!var$1[name]) {
            var fn = function() {
                return var$1[var$2].apply(var$1, arguments);
            };
            var$1[name] = function() {
                return fn;
            };
        }
        return var$1[name]();
    }
    function otji_JS_functionAsObject(var$1, var$2) {
        if (typeof var$1 !== "function") return var$1;
        var result = {};
        result[var$2] = var$1;
        return result;
    }
    var otp_Platform = $rt_classWithoutFields();
    function otp_Platform_clone(var$1) {
        var copy = new var$1.constructor();
        for (var field in var$1) {
            if (!var$1.hasOwnProperty(field)) {
                continue;
            }
            copy[field] = var$1[field];
        }
        return copy;
    }
    function otp_Platform_isAssignable($from, $to) {
        var $supertypes, $i;
        if ($from === $to)
            return 1;
        $supertypes = $from.$meta.supertypes;
        $i = 0;
        while ($i < $supertypes.length) {
            if (otp_Platform_isAssignable($supertypes[$i], $to))
                return 1;
            $i = $i + 1 | 0;
        }
        return 0;
    }
    function otp_Platform_startThread(var$1) {
        return setTimeout(function() {
            $rt_threadStarter(otp_Platform_launchThread)(var$1);
        }, 0);
    }
    function otp_Platform_launchThread($runnable) {
        $runnable.$run();
    }
    function otp_Platform_schedule(var$1, var$2) {
        return setTimeout(function() {
            otp_Platform_launchThread(var$1);
        }, var$2);
    }
    function otp_Platform_getArrayItem($cls) {
        return $cls.$meta.item;
    }
    function otp_Platform_getName($cls) {
        return $rt_str($cls.$meta.name);
    }
    function otp_Platform_createQueueJs$js_body$_30() {
        return [];
    }
    function jl_Throwable() {
        var a = this; jl_Object.call(a);
        a.$message = null;
        a.$cause = null;
        a.$suppressionEnabled = 0;
        a.$writableStackTrace = 0;
        a.$stackTrace = null;
    }
    function jl_Throwable__init_() {
        var var_0 = new jl_Throwable();
        jl_Throwable__init_0(var_0);
        return var_0;
    }
    function jl_Throwable__init_1(var_0) {
        var var_1 = new jl_Throwable();
        jl_Throwable__init_2(var_1, var_0);
        return var_1;
    }
    function jl_Throwable__init_3(var_0, var_1) {
        var var_2 = new jl_Throwable();
        jl_Throwable__init_4(var_2, var_0, var_1);
        return var_2;
    }
    function jl_Throwable__init_0($this) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
    }
    function jl_Throwable__init_2($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    function jl_Throwable__init_4($this, $message, $cause) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
        $this.$cause = $cause;
    }
    function jl_Throwable_fillInStackTrace($this) {
        return $this;
    }
    function jl_Throwable_getMessage($this) {
        return $this.$message;
    }
    function jl_Throwable_getLocalizedMessage($this) {
        return $this.$getMessage();
    }
    function jl_Throwable_getCause($this) {
        var var$1;
        var$1 = $this.$cause;
        if (var$1 === $this)
            var$1 = null;
        return var$1;
    }
    function jl_Throwable_printStackTrace($this) {
        var var$1, var$2;
        if (jl_System_errCache === null) {
            var$1 = new ji_PrintStream;
            var$1.$out = otcic_StderrOutputStream_INSTANCE;
            var$2 = new jl_StringBuilder;
            var$2.$buffer = $rt_createCharArray(16);
            var$1.$sb = var$2;
            var$1.$buffer1 = $rt_createCharArray(32);
            var$1.$autoFlush = 0;
            jnci_UTF8Charset_$callClinit();
            var$1.$charset = jnci_UTF8Charset_INSTANCE;
            jl_System_errCache = var$1;
        }
        jl_Throwable_printStackTrace0($this, jl_System_errCache);
    }
    function jl_Throwable_printStackTrace0($this, $stream) {
        var var$2, $element, var$4, $message, var$6, var$7, var$8, var$9, var$10;
        var$2 = $this.constructor;
        if (var$2 === null)
            $element = null;
        else {
            $element = var$2.classObject;
            if ($element === null) {
                $element = new jl_Class;
                $element.$platformClass = var$2;
                var$4 = $element;
                var$2.classObject = var$4;
            }
        }
        if ($element.$name === null)
            $element.$name = $rt_str($element.$platformClass.$meta.name);
        var$4 = $element.$name;
        var$2 = $stream.$sb;
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, var$4);
        ji_PrintStream_printSB($stream);
        $message = $this.$getMessage();
        if ($message !== null) {
            var$2 = new jl_StringBuilder;
            var$2.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(75));
            jl_AbstractStringBuilder_insert(var$2, var$2.$length, $message);
            var$4 = new jl_String;
            var$6 = var$2.$buffer;
            var$7 = var$2.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray(var$7);
            var$4.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
            var$2 = $stream.$sb;
            jl_AbstractStringBuilder_insert(var$2, var$2.$length, var$4);
            ji_PrintStream_printSB($stream);
        }
        a: {
            var$6 = $stream.$buffer1;
            var$6.data[0] = 10;
            ji_PrintStream_print($stream, var$6, 0, 1);
            var$6 = $this.$stackTrace;
            if (var$6 !== null) {
                var$6 = var$6.data;
                var$9 = var$6.length;
                var$10 = 0;
                while (true) {
                    if (var$10 >= var$9)
                        break a;
                    $element = var$6[var$10];
                    var$2 = $stream.$sb;
                    jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(76));
                    ji_PrintStream_printSB($stream);
                    var$4 = $stream.$sb;
                    jl_AbstractStringBuilder_insert(var$4, var$4.$length, $element === null ? $rt_s(1) : $element.$toString());
                    var$7 = var$4.$length;
                    jl_AbstractStringBuilder_insertSpace(var$4, var$7, var$7 + 1 | 0);
                    var$4.$buffer.data[var$7] = 10;
                    ji_PrintStream_printSB($stream);
                    var$10 = var$10 + 1 | 0;
                }
            }
        }
        var$2 = $this.$cause;
        if (var$2 !== null && var$2 !== $this) {
            var$4 = $stream.$sb;
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(77));
            ji_PrintStream_printSB($stream);
            jl_Throwable_printStackTrace0($this.$cause, $stream);
        }
    }
    function jl_Throwable_getStackTrace($this) {
        var var$1;
        var$1 = $this.$stackTrace;
        return var$1 !== null ? var$1.$clone() : $rt_createArray(jl_StackTraceElement, 0);
    }
    function jl_Throwable_setStackTrace($this, $stackTrace) {
        $this.$stackTrace = $stackTrace.$clone();
    }
    var jl_Exception = $rt_classWithoutFields(jl_Throwable);
    function jl_Exception__init_() {
        var var_0 = new jl_Exception();
        jl_Exception__init_0(var_0);
        return var_0;
    }
    function jl_Exception__init_1(var_0, var_1) {
        var var_2 = new jl_Exception();
        jl_Exception__init_2(var_2, var_0, var_1);
        return var_2;
    }
    function jl_Exception__init_3(var_0) {
        var var_1 = new jl_Exception();
        jl_Exception__init_4(var_1, var_0);
        return var_1;
    }
    function jl_Exception__init_0($this) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
    }
    function jl_Exception__init_2($this, $message, $cause) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
        $this.$cause = $cause;
    }
    function jl_Exception__init_4($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    var jl_RuntimeException = $rt_classWithoutFields(jl_Exception);
    function jl_RuntimeException__init_0() {
        var var_0 = new jl_RuntimeException();
        jl_RuntimeException__init_1(var_0);
        return var_0;
    }
    function jl_RuntimeException__init_(var_0) {
        var var_1 = new jl_RuntimeException();
        jl_RuntimeException__init_2(var_1, var_0);
        return var_1;
    }
    function jl_RuntimeException__init_1($this) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
    }
    function jl_RuntimeException__init_2($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    var jl_ClassCastException = $rt_classWithoutFields(jl_RuntimeException);
    var jl_CharSequence = $rt_classWithoutFields(0);
    function jl_String() {
        var a = this; jl_Object.call(a);
        a.$characters = null;
        a.$hashCode0 = 0;
    }
    var jl_String_EMPTY_CHARS = null;
    var jl_String_EMPTY = null;
    var jl_String_CASE_INSENSITIVE_ORDER = null;
    function jl_String_$callClinit() {
        jl_String_$callClinit = $rt_eraseClinit(jl_String);
        jl_String__clinit_();
    }
    function jl_String__init_(var_0) {
        var var_1 = new jl_String();
        jl_String__init_0(var_1, var_0);
        return var_1;
    }
    function jl_String__init_1(var_0, var_1, var_2) {
        var var_3 = new jl_String();
        jl_String__init_2(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jl_String__init_3(var_0, var_1, var_2) {
        var var_3 = new jl_String();
        jl_String__init_4(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jl_String__init_0($this, $characters) {
        var var$2, var$3;
        jl_String_$callClinit();
        var$2 = $characters.data.length;
        var$3 = $rt_createCharArray(var$2);
        $this.$characters = var$3;
        jl_System_fastArraycopy($characters, 0, var$3, 0, var$2);
    }
    function jl_String__init_2($this, $value, $offset, $count) {
        var var$4;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray($count);
        $this.$characters = var$4;
        jl_System_fastArraycopy($value, $offset, var$4, 0, $count);
    }
    function jl_String__init_4($this, $codePoints, $offset, $count) {
        var var$4, var$5, $charCount, $i, var$8, $codePoint, var$10, var$11;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray($count * 2 | 0);
        var$5 = var$4.data;
        $this.$characters = var$4;
        $charCount = 0;
        $i = 0;
        while ($i < $count) {
            var$4 = $codePoints.data;
            var$8 = $offset + 1 | 0;
            $codePoint = var$4[$offset];
            if ($codePoint < 65536) {
                var$10 = $charCount + 1 | 0;
                var$5[$charCount] = $codePoint & 65535;
            } else {
                var$11 = $charCount + 1 | 0;
                var$5[$charCount] = (55296 | ($codePoint - 65536 | 0) >> 10 & 1023) & 65535;
                var$10 = var$11 + 1 | 0;
                var$5[var$11] = (56320 | $codePoint & 1023) & 65535;
            }
            $i = $i + 1 | 0;
            $offset = var$8;
            $charCount = var$10;
        }
        $offset = var$5.length;
        $count = $rt_compare($charCount, $offset);
        if ($count < 0) {
            $codePoints = $rt_createCharArray($charCount);
            if ($count < 0)
                $offset = $charCount;
            var$4 = $codePoints.data;
            $count = 0;
            while ($count < $offset) {
                var$4[$count] = var$5[$count];
                $count = $count + 1 | 0;
            }
            $this.$characters = $codePoints;
        }
    }
    function jl_String_charAt($this, $index) {
        var var$2, var$3;
        if ($index >= 0) {
            var$2 = $this.$characters.data;
            if ($index < var$2.length)
                return var$2[$index];
        }
        var$3 = new jl_StringIndexOutOfBoundsException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    function jl_String_length($this) {
        return $this.$characters.data.length;
    }
    function jl_String_getChars($this, $srcBegin, $srcEnd, $dst, $dstBegin) {
        var var$5, var$6, var$7, var$8;
        if ($srcBegin >= 0 && $srcBegin <= $srcEnd) {
            var$5 = $this.$characters;
            if ($srcEnd <= var$5.data.length && $dstBegin >= 0) {
                var$6 = $dst.data;
                var$7 = $srcEnd - $srcBegin | 0;
                if (($dstBegin + var$7 | 0) <= var$6.length) {
                    jl_System_fastArraycopy(var$5, $srcBegin, $dst, $dstBegin, var$7);
                    return;
                }
            }
        }
        var$8 = new jl_IndexOutOfBoundsException;
        var$8.$suppressionEnabled = 1;
        var$8.$writableStackTrace = 1;
        $rt_throw(var$8);
    }
    function jl_String_startsWith($this, $prefix, $toffset) {
        var var$3, var$4, var$5, var$6, var$7, $i, var$9;
        var$3 = $prefix.$characters.data;
        var$4 = var$3.length;
        var$5 = $toffset + var$4 | 0;
        var$6 = $this.$characters.data;
        var$7 = var$6.length;
        if (var$5 > var$7)
            return 0;
        $i = 0;
        a: {
            b: {
                while (true) {
                    var$5 = $rt_compare($i, var$4);
                    if (var$5 >= 0)
                        break;
                    if ($i < 0)
                        break a;
                    if (var$5 >= 0)
                        break a;
                    var$9 = var$3[$i];
                    var$5 = $toffset + 1 | 0;
                    if ($toffset < 0)
                        break b;
                    if ($toffset >= var$7)
                        break b;
                    if (var$9 != var$6[$toffset])
                        return 0;
                    $i = $i + 1 | 0;
                    $toffset = var$5;
                }
                return 1;
            }
            $prefix = new jl_StringIndexOutOfBoundsException;
            $prefix.$suppressionEnabled = 1;
            $prefix.$writableStackTrace = 1;
            $rt_throw($prefix);
        }
        $prefix = new jl_StringIndexOutOfBoundsException;
        $prefix.$suppressionEnabled = 1;
        $prefix.$writableStackTrace = 1;
        $rt_throw($prefix);
    }
    function jl_String_startsWith0($this, $prefix) {
        if ($this === $prefix)
            return 1;
        return jl_String_startsWith($this, $prefix, 0);
    }
    function jl_String_endsWith($this, $suffix) {
        var var$2, var$3, var$4, var$5, $j, $i, var$8, var$9;
        if ($this === $suffix)
            return 1;
        var$2 = $suffix.$characters.data;
        var$3 = var$2.length;
        var$4 = $this.$characters.data;
        var$5 = var$4.length;
        if (var$3 > var$5)
            return 0;
        $j = 0;
        $i = var$5 - var$3 | 0;
        a: {
            b: {
                while (true) {
                    var$8 = $rt_compare($i, var$5);
                    if (var$8 >= 0)
                        break;
                    if ($i < 0)
                        break a;
                    if (var$8 >= 0)
                        break a;
                    var$9 = var$4[$i];
                    var$8 = $j + 1 | 0;
                    if ($j < 0)
                        break b;
                    if ($j >= var$3)
                        break b;
                    if (var$9 != var$2[$j])
                        return 0;
                    $i = $i + 1 | 0;
                    $j = var$8;
                }
                return 1;
            }
            $suffix = new jl_StringIndexOutOfBoundsException;
            $suffix.$suppressionEnabled = 1;
            $suffix.$writableStackTrace = 1;
            $rt_throw($suffix);
        }
        $suffix = new jl_StringIndexOutOfBoundsException;
        $suffix.$suppressionEnabled = 1;
        $suffix.$writableStackTrace = 1;
        $rt_throw($suffix);
    }
    function jl_String_indexOf($this, $ch, $i) {
        var $bmpChar, var$4, $hi, $lo;
        if (0 > $i)
            $i = 0;
        if ($ch < 65536) {
            $bmpChar = $ch & 65535;
            while (true) {
                var$4 = $this.$characters.data;
                if ($i >= var$4.length)
                    return (-1);
                if (var$4[$i] == $bmpChar)
                    break;
                $i = $i + 1 | 0;
            }
            return $i;
        }
        $hi = (55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535;
        $lo = (56320 | $ch & 1023) & 65535;
        while (true) {
            var$4 = $this.$characters.data;
            if ($i >= (var$4.length - 1 | 0))
                return (-1);
            if (var$4[$i] == $hi && var$4[$i + 1 | 0] == $lo)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    function jl_String_indexOf0($this, $ch) {
        return jl_String_indexOf($this, $ch, 0);
    }
    function jl_String_lastIndexOf($this, $ch, $fromIndex) {
        var var$3, $i, $bmpChar, $hi, $lo;
        var$3 = $this.$characters.data;
        $i = var$3.length - 1 | 0;
        if ($fromIndex < $i)
            $i = $fromIndex;
        if ($ch < 65536) {
            $bmpChar = $ch & 65535;
            while (true) {
                if ($i < 0)
                    return (-1);
                if (var$3[$i] == $bmpChar)
                    break;
                $i = $i + (-1) | 0;
            }
            return $i;
        }
        $hi = (55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535;
        $lo = (56320 | $ch & 1023) & 65535;
        while (true) {
            if ($i < 1)
                return (-1);
            if (var$3[$i] == $lo) {
                $ch = $i - 1 | 0;
                if (var$3[$ch] == $hi)
                    break;
            }
            $i = $i + (-1) | 0;
        }
        return $ch;
    }
    function jl_String_indexOf1($this, $str, $i) {
        var var$3, var$4, var$5, var$6, $toIndex, $j, var$9, var$10, var$11;
        if (0 > $i)
            $i = 0;
        var$3 = $this.$characters.data;
        var$4 = var$3.length;
        var$5 = $str.$characters.data;
        var$6 = var$5.length;
        $toIndex = var$4 - var$6 | 0;
        a: {
            b: {
                c: while (true) {
                    if ($i > $toIndex)
                        return (-1);
                    $j = 0;
                    while (true) {
                        var$9 = $rt_compare($j, var$6);
                        if (var$9 >= 0)
                            break c;
                        var$10 = $i + $j | 0;
                        if (var$10 < 0)
                            break a;
                        if (var$10 >= var$4)
                            break a;
                        var$11 = var$3[var$10];
                        if ($j < 0)
                            break b;
                        if (var$9 >= 0)
                            break b;
                        if (var$11 != var$5[$j])
                            break;
                        $j = $j + 1 | 0;
                    }
                    $i = $i + 1 | 0;
                }
                return $i;
            }
            $str = new jl_StringIndexOutOfBoundsException;
            $str.$suppressionEnabled = 1;
            $str.$writableStackTrace = 1;
            $rt_throw($str);
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    function jl_String_indexOf2($this, $str) {
        return jl_String_indexOf1($this, $str, 0);
    }
    function jl_String_lastIndexOf0($this, $str, $fromIndex) {
        var var$3, var$4, var$5, var$6, $i, $j, var$9, var$10;
        var$3 = $this.$characters.data;
        var$4 = var$3.length;
        var$5 = $str.$characters.data;
        var$6 = var$5.length;
        $i = var$4 - var$6 | 0;
        if ($fromIndex < $i)
            $i = $fromIndex;
        a: {
            b: {
                c: while (true) {
                    if ($i < 0)
                        return (-1);
                    $j = 0;
                    while (true) {
                        var$9 = $rt_compare($j, var$6);
                        if (var$9 >= 0)
                            break c;
                        var$10 = $i + $j | 0;
                        if (var$10 < 0)
                            break a;
                        if (var$10 >= var$4)
                            break a;
                        var$10 = var$3[var$10];
                        if ($j < 0)
                            break b;
                        if (var$9 >= 0)
                            break b;
                        if (var$10 != var$5[$j])
                            break;
                        $j = $j + 1 | 0;
                    }
                    $i = $i + (-1) | 0;
                }
                return $i;
            }
            $str = new jl_StringIndexOutOfBoundsException;
            $str.$suppressionEnabled = 1;
            $str.$writableStackTrace = 1;
            $rt_throw($str);
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    function jl_String_substring($this, $beginIndex, $endIndex) {
        var var$3, var$4, var$5, var$6;
        var$3 = $rt_compare($beginIndex, $endIndex);
        if (var$3 > 0) {
            var$4 = new jl_IndexOutOfBoundsException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        if (!var$3) {
            jl_String_$callClinit();
            return jl_String_EMPTY;
        }
        if (!$beginIndex && $endIndex == $this.$characters.data.length)
            return $this;
        var$4 = new jl_String;
        var$5 = $this.$characters;
        $endIndex = $endIndex - $beginIndex | 0;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray($endIndex);
        var$4.$characters = var$6;
        jl_System_fastArraycopy(var$5, $beginIndex, var$6, 0, $endIndex);
        return var$4;
    }
    function jl_String_substring0($this, $beginIndex) {
        var var$2, var$3, var$4, var$5, var$6;
        var$2 = $this.$characters;
        var$3 = var$2.data.length;
        var$4 = $rt_compare($beginIndex, var$3);
        if (var$4 > 0) {
            var$5 = new jl_IndexOutOfBoundsException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            $rt_throw(var$5);
        }
        if (!var$4) {
            jl_String_$callClinit();
            $this = jl_String_EMPTY;
        } else if (!(!$beginIndex && var$3 == var$3)) {
            $this = new jl_String;
            var$4 = var$3 - $beginIndex | 0;
            jl_String_$callClinit();
            var$6 = $rt_createCharArray(var$4);
            $this.$characters = var$6;
            jl_System_fastArraycopy(var$2, $beginIndex, var$6, 0, var$4);
        }
        return $this;
    }
    function jl_String_subSequence($this, $beginIndex, $endIndex) {
        var var$3, var$4, var$5, var$6;
        var$3 = $rt_compare($beginIndex, $endIndex);
        if (var$3 > 0) {
            var$4 = new jl_IndexOutOfBoundsException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        if (!var$3) {
            jl_String_$callClinit();
            var$4 = jl_String_EMPTY;
        } else if (!$beginIndex && $endIndex == $this.$characters.data.length)
            var$4 = $this;
        else {
            var$4 = new jl_String;
            var$5 = $this.$characters;
            $endIndex = $endIndex - $beginIndex | 0;
            jl_String_$callClinit();
            var$6 = $rt_createCharArray($endIndex);
            var$4.$characters = var$6;
            jl_System_fastArraycopy(var$5, $beginIndex, var$6, 0, $endIndex);
        }
        return var$4;
    }
    function jl_String_contains($this, $s) {
        var var$2, var$3, var$4, var$5, $sz, $i, $j, var$9, var$10;
        var$2 = $this.$characters.data;
        var$3 = var$2.length;
        var$4 = $s.$characters.data;
        var$5 = var$4.length;
        $sz = var$3 - var$5 | 0;
        $i = 0;
        a: {
            b: {
                while ($i <= $sz) {
                    $j = 0;
                    while (true) {
                        var$9 = $rt_compare($j, var$5);
                        if (var$9 >= 0)
                            return 1;
                        var$10 = $i + $j | 0;
                        if (var$10 < 0)
                            break a;
                        if (var$10 >= var$3)
                            break a;
                        var$10 = var$2[var$10];
                        if ($j < 0)
                            break b;
                        if (var$9 >= 0)
                            break b;
                        if (var$10 != var$4[$j])
                            break;
                        $j = $j + 1 | 0;
                    }
                    $i = $i + 1 | 0;
                }
                return 0;
            }
            $s = new jl_StringIndexOutOfBoundsException;
            $s.$suppressionEnabled = 1;
            $s.$writableStackTrace = 1;
            $rt_throw($s);
        }
        $s = new jl_StringIndexOutOfBoundsException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $rt_throw($s);
    }
    function jl_String_replace($this, $target, $replacement) {
        var $sb, $sz, $i, var$6, var$7, var$8, var$9, $j, var$11, var$12;
        $sb = new jl_StringBuilder;
        $sb.$buffer = $rt_createCharArray(16);
        $sz = $this.$characters.data.length - $target.$characters.data.length | 0;
        $i = 0;
        a: {
            b: {
                c: while (true) {
                    if ($i > $sz) {
                        var$6 = $this.$characters;
                        var$7 = var$6.data.length;
                        var$8 = $rt_compare($i, var$7);
                        if (var$8 > 0) {
                            $target = new jl_IndexOutOfBoundsException;
                            $target.$suppressionEnabled = 1;
                            $target.$writableStackTrace = 1;
                            $rt_throw($target);
                        }
                        if (!var$8) {
                            jl_String_$callClinit();
                            $this = jl_String_EMPTY;
                        } else if (!(!$i && var$7 == var$7)) {
                            $this = new jl_String;
                            var$8 = var$7 - $i | 0;
                            jl_String_$callClinit();
                            var$9 = $rt_createCharArray(var$8);
                            $this.$characters = var$9;
                            jl_System_fastArraycopy(var$6, $i, var$9, 0, var$8);
                        }
                        var$8 = $sb.$length;
                        if ($this === null)
                            $this = $rt_s(1);
                        jl_AbstractStringBuilder_insert($sb, var$8, $this);
                        $target = new jl_String;
                        var$9 = $sb.$buffer;
                        var$7 = $sb.$length;
                        jl_String_$callClinit();
                        var$6 = $rt_createCharArray(var$7);
                        $target.$characters = var$6;
                        jl_System_fastArraycopy(var$9, 0, var$6, 0, var$7);
                        return $target;
                    }
                    $j = 0;
                    d: {
                        while (true) {
                            var$9 = $target.$characters.data;
                            var$11 = $rt_compare($j, var$9.length);
                            if (var$11 >= 0)
                                break;
                            var$8 = $i + $j | 0;
                            if (var$8 < 0)
                                break b;
                            var$6 = $this.$characters.data;
                            var$7 = var$6.length;
                            if (var$8 >= var$7)
                                break b;
                            var$12 = var$6[var$8];
                            if ($j < 0)
                                break c;
                            if (var$11 >= 0)
                                break c;
                            if (var$12 != var$9[$j]) {
                                if ($i < 0)
                                    break a;
                                if ($i >= var$7)
                                    break a;
                                var$7 = var$6[$i];
                                var$8 = $sb.$length;
                                jl_AbstractStringBuilder_insertSpace($sb, var$8, var$8 + 1 | 0);
                                $sb.$buffer.data[var$8] = var$7;
                                break d;
                            }
                            $j = $j + 1 | 0;
                        }
                        jl_AbstractStringBuilder_insert($sb, $sb.$length, $replacement === null ? $rt_s(1) : $replacement);
                        $i = $i + ($target.$characters.data.length - 1 | 0) | 0;
                    }
                    $i = $i + 1 | 0;
                }
                $target = new jl_StringIndexOutOfBoundsException;
                $target.$suppressionEnabled = 1;
                $target.$writableStackTrace = 1;
                $rt_throw($target);
            }
            $target = new jl_StringIndexOutOfBoundsException;
            $target.$suppressionEnabled = 1;
            $target.$writableStackTrace = 1;
            $rt_throw($target);
        }
        $target = new jl_StringIndexOutOfBoundsException;
        $target.$suppressionEnabled = 1;
        $target.$writableStackTrace = 1;
        $rt_throw($target);
    }
    function jl_String_trim($this) {
        var $lower, var$2, var$3, var$4, $upper, var$6, var$7;
        $lower = 0;
        var$2 = $this.$characters;
        var$3 = var$2.data;
        var$4 = var$3.length;
        $upper = var$4 - 1 | 0;
        a: {
            while (true) {
                if ($lower > $upper)
                    break a;
                if ($lower < 0)
                    break;
                if ($lower >= var$4)
                    break;
                if (var$3[$lower] > 32)
                    break a;
                $lower = $lower + 1 | 0;
            }
            var$6 = new jl_StringIndexOutOfBoundsException;
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            $rt_throw(var$6);
        }
        b: {
            while (true) {
                if ($lower > $upper)
                    break b;
                if ($upper < 0)
                    break;
                if ($upper >= var$4)
                    break;
                if (var$3[$upper] > 32)
                    break b;
                $upper = $upper + (-1) | 0;
            }
            var$6 = new jl_StringIndexOutOfBoundsException;
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            $rt_throw(var$6);
        }
        var$7 = $upper + 1 | 0;
        $upper = $rt_compare($lower, var$7);
        if ($upper > 0) {
            var$6 = new jl_IndexOutOfBoundsException;
            var$6.$suppressionEnabled = 1;
            var$6.$writableStackTrace = 1;
            $rt_throw(var$6);
        }
        if (!$upper) {
            jl_String_$callClinit();
            $this = jl_String_EMPTY;
        } else if (!(!$lower && var$7 == var$4)) {
            $this = new jl_String;
            var$7 = var$7 - $lower | 0;
            jl_String_$callClinit();
            var$3 = $rt_createCharArray(var$7);
            $this.$characters = var$3;
            jl_System_fastArraycopy(var$2, $lower, var$3, 0, var$7);
        }
        return $this;
    }
    function jl_String_toString($this) {
        return $this;
    }
    function jl_String_equals($this, $other) {
        var var$2, var$3, var$4, var$5, $i, var$7, var$8;
        if ($this === $other)
            return 1;
        if (!($other instanceof jl_String))
            return 0;
        var$2 = $other.$characters.data;
        var$3 = var$2.length;
        var$4 = $this.$characters.data;
        var$5 = var$4.length;
        if (var$3 != var$5)
            return 0;
        $i = 0;
        a: {
            b: {
                while (true) {
                    var$7 = $rt_compare($i, var$3);
                    if (var$7 >= 0)
                        break;
                    if ($i < 0)
                        break a;
                    if ($i >= var$5)
                        break a;
                    var$8 = var$4[$i];
                    if ($i < 0)
                        break b;
                    if (var$7 >= 0)
                        break b;
                    if (var$8 != var$2[$i])
                        return 0;
                    $i = $i + 1 | 0;
                }
                return 1;
            }
            $other = new jl_StringIndexOutOfBoundsException;
            $other.$suppressionEnabled = 1;
            $other.$writableStackTrace = 1;
            $rt_throw($other);
        }
        $other = new jl_StringIndexOutOfBoundsException;
        $other.$suppressionEnabled = 1;
        $other.$writableStackTrace = 1;
        $rt_throw($other);
    }
    function jl_String_getBytes($this, $charsetName) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, $$je;
        if ($charsetName === null) {
            $charsetName = new jl_IllegalArgumentException;
            $charsetName.$suppressionEnabled = 1;
            $charsetName.$writableStackTrace = 1;
            $charsetName.$message = $rt_s(78);
            $rt_throw($charsetName);
        }
        jnc_Charset_checkCanonicalName($charsetName);
        jnc_Charset$Charsets_$callClinit();
        var$2 = jnc_Charset$Charsets_value;
        var$3 = jl_String_toUpperCase($charsetName);
        if (var$3 === null) {
            var$2 = var$2.$elementData.data[0];
            while (var$2 !== null && var$2.$key !== null) {
                var$2 = var$2.$next;
            }
        } else {
            a: {
                if (!var$3.$hashCode0) {
                    var$4 = var$3.$characters.data;
                    var$5 = var$4.length;
                    var$6 = 0;
                    while (true) {
                        if (var$6 >= var$5)
                            break a;
                        var$7 = var$4[var$6];
                        var$3.$hashCode0 = (31 * var$3.$hashCode0 | 0) + var$7 | 0;
                        var$6 = var$6 + 1 | 0;
                    }
                }
            }
            var$7 = var$3.$hashCode0;
            var$4 = var$2.$elementData.data;
            var$2 = var$4[var$7 & (var$4.length - 1 | 0)];
            while (var$2 !== null) {
                if (var$2.$origKeyHash == var$7) {
                    var$8 = var$2.$key;
                    if (var$3 !== var$8 && !jl_String_equals(var$3, var$8) ? 0 : 1)
                        break;
                }
                var$2 = var$2.$next;
            }
        }
        var$2 = var$2 === null ? null : var$2.$value4;
        if (var$2 === null) {
            var$2 = new jnc_UnsupportedCharsetException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$charsetName = $charsetName;
            $rt_throw(var$2);
        }
        var$4 = $this.$characters;
        var$6 = var$4.data.length;
        $charsetName = new jn_CharBufferOverArray;
        var$9 = 0 + var$6 | 0;
        $charsetName.$mark = (-1);
        $charsetName.$capacity = var$6;
        $charsetName.$limit = var$6;
        $charsetName.$position = 0;
        $charsetName.$limit = var$9;
        $charsetName.$start1 = 0;
        $charsetName.$readOnly1 = 0;
        $charsetName.$array3 = var$4;
        b: {
            try {
                var$3 = var$2.$newEncoder();
                jnc_CodingErrorAction_$callClinit();
                $charsetName = jnc_CharsetEncoder_encode(jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(var$3, jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), $charsetName);
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jnc_CharacterCodingException) {
                    var$2 = $$je;
                } else {
                    throw $$e;
                }
            }
            var$3 = new jl_AssertionError;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = $rt_s(79);
            var$3.$cause = var$2;
            $rt_throw(var$3);
        }
        var$7 = $charsetName.$position;
        if (!var$7 && $charsetName.$limit == $charsetName.$capacity)
            var$4 = $charsetName.$array0;
        else {
            var$4 = $rt_createByteArray($charsetName.$limit - var$7 | 0);
            jn_ByteBuffer_get($charsetName, var$4, 0, var$4.data.length);
        }
        return var$4;
    }
    function jl_String_hashCode($this) {
        var var$1, var$2, var$3, $c;
        a: {
            if (!$this.$hashCode0) {
                var$1 = $this.$characters.data;
                var$2 = var$1.length;
                var$3 = 0;
                while (true) {
                    if (var$3 >= var$2)
                        break a;
                    $c = var$1[var$3];
                    $this.$hashCode0 = (31 * $this.$hashCode0 | 0) + $c | 0;
                    var$3 = var$3 + 1 | 0;
                }
            }
        }
        return $this.$hashCode0;
    }
    function jl_String_toLowerCase($this) {
        var var$1, var$2, $hasCharsToTransform, $hasSurrogates, var$5, $c, var$7;
        var$1 = $this.$characters.data;
        var$2 = var$1.length;
        if (var$2 ? 0 : 1)
            return $this;
        $hasCharsToTransform = 0;
        $hasSurrogates = 0;
        var$5 = 0;
        a: {
            while (var$5 < var$2) {
                $c = var$1[var$5];
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                }
                if ((jl_Character_mapChar(jl_Character_lowerCaseMapping, $c) & 65535) != $c) {
                    $hasCharsToTransform = 1;
                    break a;
                }
                var$7 = $c & 64512;
                $c = var$7 != 55296 ? 0 : 1;
                if (!$c && !(var$7 != 56320 ? 0 : 1) ? 0 : 1)
                    $hasSurrogates = 1;
                var$5 = var$5 + 1 | 0;
            }
        }
        if (!$hasCharsToTransform)
            return $this;
        return !$hasSurrogates ? jl_String_toLowerCaseChars($this) : jl_String_toLowerCaseCodePoints($this);
    }
    function jl_String_toLowerCaseChars($this) {
        var $chars, var$2, $i, var$4, var$5, var$6;
        $chars = $rt_createCharArray($this.$characters.data.length);
        var$2 = $chars.data;
        $i = 0;
        while (true) {
            var$4 = $this.$characters.data;
            if ($i >= var$4.length)
                break;
            var$5 = var$4[$i];
            if (jl_Character_lowerCaseMapping === null) {
                if (jl_Character_$$metadata$$0 === null)
                    jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
            }
            var$2[$i] = jl_Character_mapChar(jl_Character_lowerCaseMapping, var$5) & 65535;
            $i = $i + 1 | 0;
        }
        var$6 = new jl_String;
        jl_String_$callClinit();
        var$5 = var$2.length;
        var$2 = $rt_createCharArray(var$5);
        var$6.$characters = var$2;
        jl_System_fastArraycopy($chars, 0, var$2, 0, var$5);
        return var$6;
    }
    function jl_String_toLowerCaseCodePoints($this) {
        var $codePoints, var$2, $codePointCount, $i, var$5, var$6, var$7;
        $codePoints = $rt_createIntArray($this.$characters.data.length);
        var$2 = $codePoints.data;
        $codePointCount = 0;
        $i = 0;
        while (true) {
            var$5 = $this.$characters.data;
            var$6 = var$5.length;
            if ($i >= var$6)
                break;
            a: {
                if ($i != (var$6 - 1 | 0) && ((var$5[$i] & 64512) != 55296 ? 0 : 1)) {
                    var$6 = $i + 1 | 0;
                    if ((var$5[var$6] & 64512) != 56320 ? 0 : 1) {
                        var$7 = $codePointCount + 1 | 0;
                        $i = ((var$5[$i] & 1023) << 10 | var$5[var$6] & 1023) + 65536 | 0;
                        if (jl_Character_lowerCaseMapping === null) {
                            if (jl_Character_$$metadata$$0 === null)
                                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                        }
                        var$2[$codePointCount] = jl_Character_mapChar(jl_Character_lowerCaseMapping, $i);
                        $codePointCount = var$7;
                        break a;
                    }
                }
                var$7 = $codePointCount + 1 | 0;
                var$6 = var$5[$i];
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                }
                var$2[$codePointCount] = jl_Character_mapChar(jl_Character_lowerCaseMapping, var$6) & 65535;
                $codePointCount = var$7;
                var$6 = $i;
            }
            $i = var$6 + 1 | 0;
        }
        return jl_String__init_3($codePoints, 0, $codePointCount);
    }
    function jl_String_toUpperCase($this) {
        var var$1, var$2, $hasCharsToTransform, $hasSurrogates, var$5, $c, var$7;
        var$1 = $this.$characters.data;
        var$2 = var$1.length;
        if (var$2 ? 0 : 1)
            return $this;
        $hasCharsToTransform = 0;
        $hasSurrogates = 0;
        var$5 = 0;
        a: {
            while (var$5 < var$2) {
                $c = var$1[var$5];
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                }
                if ((jl_Character_mapChar(jl_Character_upperCaseMapping, $c) & 65535) != $c) {
                    $hasCharsToTransform = 1;
                    break a;
                }
                var$7 = $c & 64512;
                $c = var$7 != 55296 ? 0 : 1;
                if (!$c && !(var$7 != 56320 ? 0 : 1) ? 0 : 1)
                    $hasSurrogates = 1;
                var$5 = var$5 + 1 | 0;
            }
        }
        if (!$hasCharsToTransform)
            return $this;
        return !$hasSurrogates ? jl_String_toUpperCaseChars($this) : jl_String_toUpperCaseCodePoints($this);
    }
    function jl_String_toUpperCaseChars($this) {
        var $chars, var$2, $i, var$4, var$5, var$6;
        $chars = $rt_createCharArray($this.$characters.data.length);
        var$2 = $chars.data;
        $i = 0;
        while (true) {
            var$4 = $this.$characters.data;
            if ($i >= var$4.length)
                break;
            var$5 = var$4[$i];
            if (jl_Character_upperCaseMapping === null) {
                if (jl_Character_$$metadata$$1 === null)
                    jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
            }
            var$2[$i] = jl_Character_mapChar(jl_Character_upperCaseMapping, var$5) & 65535;
            $i = $i + 1 | 0;
        }
        var$6 = new jl_String;
        jl_String_$callClinit();
        var$5 = var$2.length;
        var$2 = $rt_createCharArray(var$5);
        var$6.$characters = var$2;
        jl_System_fastArraycopy($chars, 0, var$2, 0, var$5);
        return var$6;
    }
    function jl_String_toUpperCaseCodePoints($this) {
        var $codePoints, var$2, $codePointCount, $i, var$5, var$6, var$7;
        $codePoints = $rt_createIntArray($this.$characters.data.length);
        var$2 = $codePoints.data;
        $codePointCount = 0;
        $i = 0;
        while (true) {
            var$5 = $this.$characters.data;
            var$6 = var$5.length;
            if ($i >= var$6)
                break;
            a: {
                if ($i != (var$6 - 1 | 0) && ((var$5[$i] & 64512) != 55296 ? 0 : 1)) {
                    var$6 = $i + 1 | 0;
                    if ((var$5[var$6] & 64512) != 56320 ? 0 : 1) {
                        var$7 = $codePointCount + 1 | 0;
                        $i = ((var$5[$i] & 1023) << 10 | var$5[var$6] & 1023) + 65536 | 0;
                        if (jl_Character_upperCaseMapping === null) {
                            if (jl_Character_$$metadata$$1 === null)
                                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                        }
                        var$2[$codePointCount] = jl_Character_mapChar(jl_Character_upperCaseMapping, $i);
                        $codePointCount = var$7;
                        break a;
                    }
                }
                var$7 = $codePointCount + 1 | 0;
                var$6 = var$5[$i];
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                }
                var$2[$codePointCount] = jl_Character_mapChar(jl_Character_upperCaseMapping, var$6) & 65535;
                $codePointCount = var$7;
                var$6 = $i;
            }
            $i = var$6 + 1 | 0;
        }
        return jl_String__init_3($codePoints, 0, $codePointCount);
    }
    function jl_String_split($this, $regex) {
        return jur_Pattern_split(jur_Pattern_compile($regex, 0), $this, 0);
    }
    function jl_String_split0($this, $regex, $limit) {
        return jur_Pattern_split(jur_Pattern_compile($regex, 0), $this, $limit);
    }
    function jl_String_replaceAll($this, $regex, $replacement) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
        $regex = jur_Matcher__init_(jur_Pattern_compile($regex, 0), $this);
        var$3 = new jl_StringBuffer;
        var$3.$buffer = $rt_createCharArray(16);
        $regex.$leftBound = 0;
        var$4 = $regex.$string;
        var$5 = var$4.$characters.data.length;
        $regex.$rightBound = var$5;
        var$6 = $regex.$matchResult;
        var$6.$valid1 = 0;
        var$6.$mode = 2;
        var$7 = var$6.$groupBounds.data;
        var$8 = 0;
        var$9 = var$7.length;
        if (var$8 > var$9) {
            $regex = new jl_IllegalArgumentException;
            jl_Throwable__init_0($regex);
            $rt_throw($regex);
        }
        while (var$8 < var$9) {
            var$10 = var$8 + 1 | 0;
            var$7[var$8] = (-1);
            var$8 = var$10;
        }
        var$7 = var$6.$consumers.data;
        var$11 = 0;
        var$8 = var$7.length;
        if (var$11 > var$8) {
            $regex = new jl_IllegalArgumentException;
            jl_Throwable__init_0($regex);
            $rt_throw($regex);
        }
        while (var$11 < var$8) {
            var$9 = var$11 + 1 | 0;
            var$7[var$11] = (-1);
            var$11 = var$9;
        }
        var$6.$string0 = var$4;
        var$6.$leftBound0 = 0;
        var$6.$rightBound0 = var$5;
        var$6.$startIndex = 0;
        $regex.$appendPos = 0;
        $regex.$replacement = null;
        var$6.$previousMatch = (-1);
        while (true) {
            if (!jur_Matcher_find($regex)) {
                $replacement = $regex.$string;
                var$10 = $regex.$appendPos;
                var$12 = $replacement.$characters;
                var$11 = var$12.data.length;
                var$13 = $rt_compare(var$10, var$11);
                if (var$13 > 0) {
                    $regex = new jl_IndexOutOfBoundsException;
                    $regex.$suppressionEnabled = 1;
                    $regex.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace($regex);
                    $rt_throw($regex);
                }
                if (!var$13) {
                    jl_String_$callClinit();
                    $replacement = jl_String_EMPTY;
                } else if (!(!var$10 && var$11 == var$11)) {
                    $replacement = new jl_String;
                    var$13 = var$11 - var$10 | 0;
                    jl_String_$callClinit();
                    var$7 = $rt_createCharArray(var$13);
                    $replacement.$characters = var$7;
                    jl_System_fastArraycopy(var$12, var$10, var$7, 0, var$13);
                }
                var$11 = $replacement.$characters.data.length;
                jl_StringBuffer_insert(var$3, var$3.$length, $replacement, 0, var$11);
                $regex = new jl_String;
                var$7 = var$3.$buffer;
                var$13 = var$3.$length;
                jl_String_$callClinit();
                var$12 = $rt_createCharArray(var$13);
                $regex.$characters = var$12;
                jl_System_fastArraycopy(var$7, 0, var$12, 0, var$13);
                return $regex;
            }
            $regex.$processedRepl = jur_Matcher_processReplacement($regex, $replacement);
            var$4 = $regex.$string;
            var$8 = $regex.$appendPos;
            var$6 = $regex.$matchResult;
            if (!var$6.$valid1)
                break;
            if (0 >= var$6.$groupCount) {
                $regex = new jl_IndexOutOfBoundsException;
                jl_String_$callClinit();
                $replacement = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_($replacement);
                jl_AbstractStringBuilder_append($replacement, 0);
                var$3 = new jl_String;
                var$7 = $replacement.$buffer;
                var$13 = $replacement.$length;
                var$12 = $rt_createCharArray(var$13);
                var$3.$characters = var$12;
                jl_System_fastArraycopy(var$7, 0, var$12, 0, var$13);
                $regex.$suppressionEnabled = 1;
                $regex.$writableStackTrace = 1;
                $regex.$message = var$3;
                $rt_throw($regex);
            }
            var$11 = var$6.$groupBounds.data[0];
            var$10 = $rt_compare(var$8, var$11);
            if (var$10 > 0) {
                $regex = new jl_IndexOutOfBoundsException;
                $regex.$suppressionEnabled = 1;
                $regex.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($regex);
                $rt_throw($regex);
            }
            if (!var$10) {
                jl_String_$callClinit();
                var$6 = jl_String_EMPTY;
            } else if (!var$8 && var$11 == var$4.$characters.data.length)
                var$6 = var$4;
            else {
                var$6 = new jl_String;
                var$7 = var$4.$characters;
                var$10 = var$11 - var$8 | 0;
                jl_String_$callClinit();
                var$12 = $rt_createCharArray(var$10);
                var$6.$characters = var$12;
                jl_System_fastArraycopy(var$7, var$8, var$12, 0, var$10);
            }
            var$8 = var$6.$characters.data.length;
            jl_StringBuffer_insert(var$3, var$3.$length, var$6, 0, var$8);
            var$4 = $regex.$processedRepl;
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$4);
            var$4 = $regex.$matchResult;
            jur_MatchResultImpl_checkGroup(var$4, 0);
            $regex.$appendPos = var$4.$groupBounds.data[1];
        }
        $regex = new jl_IllegalStateException;
        jl_Exception__init_0($regex);
        $rt_throw($regex);
    }
    function jl_String__clinit_() {
        var var$1, var$2;
        var$1 = $rt_createCharArray(0);
        jl_String_EMPTY_CHARS = var$1;
        var$2 = new jl_String;
        jl_String_$callClinit();
        var$2.$characters = var$1;
        jl_String_EMPTY = var$2;
        jl_String_CASE_INSENSITIVE_ORDER = new jl_String$_clinit_$lambda$_93_0;
    }
    var jl_Error = $rt_classWithoutFields(jl_Throwable);
    var jl_LinkageError = $rt_classWithoutFields(jl_Error);
    var jl_NoClassDefFoundError = $rt_classWithoutFields(jl_LinkageError);
    var jl_Number = $rt_classWithoutFields();
    function jl_Integer() {
        jl_Number.call(this);
        this.$value5 = 0;
    }
    var jl_Integer_TYPE = null;
    var jl_Integer_integerCache = null;
    function jl_Integer_toString($i, $radix) {
        var var$3;
        if (!($radix >= 2 && $radix <= 36))
            $radix = 10;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        return (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $i, $radix)).$toString();
    }
    function jl_Integer_parseInt($s, $radix) {
        if ($s !== null)
            return jl_Integer_parseIntImpl($s, 0, $s.$characters.data.length, $radix);
        $s = new jl_NumberFormatException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $s.$message = $rt_s(80);
        $rt_throw($s);
    }
    function jl_Integer_parseIntImpl($s, $beginIndex, $endIndex, $radix) {
        var var$5, $negative, var$7, var$8, $value, var$10, $digit, var$12, var$13, var$14, var$15, var$16;
        var$5 = $rt_compare($beginIndex, $endIndex);
        if (!var$5) {
            $s = new jl_NumberFormatException;
            $s.$suppressionEnabled = 1;
            $s.$writableStackTrace = 1;
            $s.$message = $rt_s(81);
            $rt_throw($s);
        }
        if ($radix >= 2 && $radix <= 36) {
            $negative = 0;
            if ($beginIndex >= 0) {
                var$7 = $s.$characters.data;
                if ($beginIndex < var$7.length) {
                    a: {
                        switch (var$7[$beginIndex]) {
                            case 43:
                                var$8 = $beginIndex + 1 | 0;
                                break a;
                            case 45:
                                $negative = 1;
                                var$8 = $beginIndex + 1 | 0;
                                break a;
                            default:
                        }
                        var$8 = $beginIndex;
                    }
                    $value = 0;
                    if (var$8 == $endIndex) {
                        $s = new jl_NumberFormatException;
                        $s.$suppressionEnabled = 1;
                        $s.$writableStackTrace = 1;
                        $rt_throw($s);
                    }
                    b: {
                        while (var$8 < $endIndex) {
                            var$10 = var$8 + 1 | 0;
                            if (var$8 < 0)
                                break b;
                            var$7 = $s.$characters.data;
                            if (var$8 >= var$7.length)
                                break b;
                            $digit = jl_Character_getNumericValue(var$7[var$8]);
                            if ($digit < 0) {
                                var$12 = new jl_NumberFormatException;
                                if (var$5 > 0) {
                                    $s = new jl_IndexOutOfBoundsException;
                                    $s.$suppressionEnabled = 1;
                                    $s.$writableStackTrace = 1;
                                    $rt_throw($s);
                                }
                                if (!var$5) {
                                    jl_String_$callClinit();
                                    var$13 = jl_String_EMPTY;
                                } else if (!$beginIndex && $endIndex == $s.$characters.data.length)
                                    var$13 = $s;
                                else {
                                    var$13 = new jl_String;
                                    var$7 = $s.$characters;
                                    $endIndex = $endIndex - $beginIndex | 0;
                                    jl_String_$callClinit();
                                    var$14 = $rt_createCharArray($endIndex);
                                    var$13.$characters = var$14;
                                    jl_System_fastArraycopy(var$7, $beginIndex, var$14, 0, $endIndex);
                                }
                                $s = new jl_StringBuilder;
                                $s.$buffer = $rt_createCharArray(16);
                                jl_AbstractStringBuilder_insert($s, $s.$length, $rt_s(82));
                                $beginIndex = $s.$length;
                                if (var$13 === null)
                                    var$13 = $rt_s(1);
                                jl_AbstractStringBuilder_insert($s, $beginIndex, var$13);
                                var$15 = new jl_String;
                                var$7 = $s.$buffer;
                                $endIndex = $s.$length;
                                jl_String_$callClinit();
                                var$14 = $rt_createCharArray($endIndex);
                                var$15.$characters = var$14;
                                jl_System_fastArraycopy(var$7, 0, var$14, 0, $endIndex);
                                var$12.$suppressionEnabled = 1;
                                var$12.$writableStackTrace = 1;
                                var$12.$message = var$15;
                                $rt_throw(var$12);
                            }
                            if ($digit >= $radix) {
                                var$12 = new jl_NumberFormatException;
                                var$16 = jl_String_substring($s, $beginIndex, $endIndex);
                                $s = new jl_StringBuilder;
                                $s.$buffer = $rt_createCharArray(16);
                                jl_AbstractStringBuilder_insert($s, $s.$length, $rt_s(83));
                                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0($s, $radix), $rt_s(75)), var$16);
                                jl_NumberFormatException__init_(var$12, jl_StringBuilder_toString($s));
                                $rt_throw(var$12);
                            }
                            $value = $rt_imul($radix, $value) + $digit | 0;
                            if ($value < 0) {
                                if (var$10 == $endIndex && $value == (-2147483648) && $negative)
                                    return (-2147483648);
                                var$12 = new jl_NumberFormatException;
                                $s = jl_String_subSequence($s, $beginIndex, $endIndex);
                                var$15 = jl_StringBuilder__init_();
                                jl_StringBuilder_append(jl_StringBuilder_append(var$15, $rt_s(84)), $s);
                                jl_NumberFormatException__init_(var$12, jl_StringBuilder_toString(var$15));
                                $rt_throw(var$12);
                            }
                            var$8 = var$10;
                        }
                        if ($negative)
                            $value =  -$value | 0;
                        return $value;
                    }
                    $s = new jl_StringIndexOutOfBoundsException;
                    $s.$suppressionEnabled = 1;
                    $s.$writableStackTrace = 1;
                    $rt_throw($s);
                }
            }
            $s = new jl_StringIndexOutOfBoundsException;
            $s.$suppressionEnabled = 1;
            $s.$writableStackTrace = 1;
            $rt_throw($s);
        }
        $s = new jl_NumberFormatException;
        var$12 = new jl_StringBuilder;
        var$12.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$12, var$12.$length, $rt_s(85));
        jl_AbstractStringBuilder_insert0(var$12, var$12.$length, $radix, 10);
        var$15 = new jl_String;
        var$7 = var$12.$buffer;
        $endIndex = var$12.$length;
        jl_String_$callClinit();
        var$14 = $rt_createCharArray($endIndex);
        var$15.$characters = var$14;
        jl_System_fastArraycopy(var$7, 0, var$14, 0, $endIndex);
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $s.$message = var$15;
        $rt_throw($s);
    }
    function jl_Integer_parseInt0($s) {
        if ($s !== null)
            return jl_Integer_parseIntImpl($s, 0, $s.$characters.data.length, 10);
        $s = new jl_NumberFormatException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $s.$message = $rt_s(80);
        $rt_throw($s);
    }
    function jl_Integer_valueOf($i) {
        var var$2;
        if ($i >= (-128) && $i <= 127) {
            jl_Integer_ensureIntegerCache();
            return jl_Integer_integerCache.data[$i + 128 | 0];
        }
        var$2 = new jl_Integer;
        var$2.$value5 = $i;
        return var$2;
    }
    function jl_Integer_ensureIntegerCache() {
        var var$1, var$2, $j, var$4, var$5;
        a: {
            if (jl_Integer_integerCache === null) {
                var$1 = $rt_createArray(jl_Integer, 256);
                var$2 = var$1.data;
                jl_Integer_integerCache = var$1;
                $j = 0;
                var$4 = var$2.length;
                while (true) {
                    if ($j >= var$4)
                        break a;
                    var$5 = new jl_Integer;
                    var$5.$value5 = $j - 128 | 0;
                    var$2[$j] = var$5;
                    $j = $j + 1 | 0;
                }
            }
        }
    }
    function jl_Integer_intValue($this) {
        return $this.$value5;
    }
    function jl_Integer_floatValue($this) {
        return $this.$value5;
    }
    function jl_Integer_toString0($this) {
        var var$1, var$2;
        var$1 = $this.$value5;
        var$2 = new jl_AbstractStringBuilder;
        var$2.$buffer = $rt_createCharArray(20);
        return (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
    }
    function jl_Integer_hashCode($this) {
        return $this.$value5;
    }
    function jl_Integer_equals($this, $other) {
        if ($this === $other)
            return 1;
        return $other instanceof jl_Integer && $other.$value5 == $this.$value5 ? 1 : 0;
    }
    function jl_Integer_numberOfLeadingZeros($i) {
        var $n, var$3;
        if (!$i)
            return 32;
        $n = 0;
        var$3 = $i >>> 16 | 0;
        if (var$3)
            $n = 16;
        else
            var$3 = $i;
        $i = var$3 >>> 8 | 0;
        if (!$i)
            $i = var$3;
        else
            $n = $n | 8;
        var$3 = $i >>> 4 | 0;
        if (!var$3)
            var$3 = $i;
        else
            $n = $n | 4;
        $i = var$3 >>> 2 | 0;
        if (!$i)
            $i = var$3;
        else
            $n = $n | 2;
        if ($i >>> 1 | 0)
            $n = $n | 1;
        return (32 - $n | 0) - 1 | 0;
    }
    function jl_Integer_numberOfTrailingZeros($i) {
        var $n, var$3;
        if (!$i)
            return 32;
        $n = 0;
        var$3 = $i << 16;
        if (var$3)
            $n = 16;
        else
            var$3 = $i;
        $i = var$3 << 8;
        if (!$i)
            $i = var$3;
        else
            $n = $n | 8;
        var$3 = $i << 4;
        if (!var$3)
            var$3 = $i;
        else
            $n = $n | 4;
        $i = var$3 << 2;
        if (!$i)
            $i = var$3;
        else
            $n = $n | 2;
        if ($i << 1)
            $n = $n | 1;
        return (32 - $n | 0) - 1 | 0;
    }
    function jl_Integer__clinit_() {
        jl_Integer_TYPE = $rt_cls($rt_intcls());
    }
    function jl_AbstractStringBuilder() {
        var a = this; jl_Object.call(a);
        a.$buffer = null;
        a.$length = 0;
    }
    function jl_AbstractStringBuilder__init_0() {
        var var_0 = new jl_AbstractStringBuilder();
        jl_AbstractStringBuilder__init_(var_0);
        return var_0;
    }
    function jl_AbstractStringBuilder__init_1(var_0) {
        var var_1 = new jl_AbstractStringBuilder();
        jl_AbstractStringBuilder__init_2(var_1, var_0);
        return var_1;
    }
    function jl_AbstractStringBuilder__init_($this) {
        $this.$buffer = $rt_createCharArray(16);
    }
    function jl_AbstractStringBuilder__init_2($this, $capacity) {
        $this.$buffer = $rt_createCharArray($capacity);
    }
    function jl_AbstractStringBuilder_append0($this, $obj) {
        jl_AbstractStringBuilder_insert($this, $this.$length, $obj === null ? $rt_s(1) : $obj.$toString());
        return $this;
    }
    function jl_AbstractStringBuilder_append1($this, $string) {
        return $this.$insert($this.$length, $string);
    }
    function jl_AbstractStringBuilder_insert($this, $index, $string) {
        var $i, $i_0, var$5, var$6, var$7, var$8;
        if ($index >= 0) {
            $i = $this.$length;
            if ($index <= $i) {
                if ($string === null)
                    $string = $rt_s(1);
                else if ($string.$characters.data.length ? 0 : 1)
                    return $this;
                $this.$ensureCapacity($i + $string.$characters.data.length | 0);
                $i = $this.$length;
                $i_0 = $i - 1 | 0;
                while ($i_0 >= $index) {
                    var$5 = $this.$buffer.data;
                    var$5[$i_0 + $string.$characters.data.length | 0] = var$5[$i_0];
                    $i_0 = $i_0 + (-1) | 0;
                }
                var$5 = $string.$characters.data;
                var$6 = var$5.length;
                $this.$length = $i + var$6 | 0;
                $i = 0;
                a: {
                    while (true) {
                        $i_0 = $rt_compare($i, var$6);
                        if ($i_0 >= 0)
                            break;
                        var$7 = $this.$buffer;
                        var$8 = $index + 1 | 0;
                        if ($i < 0)
                            break a;
                        if ($i_0 >= 0)
                            break a;
                        var$7.data[$index] = var$5[$i];
                        $i = $i + 1 | 0;
                        $index = var$8;
                    }
                    return $this;
                }
                $string = new jl_StringIndexOutOfBoundsException;
                $string.$suppressionEnabled = 1;
                $string.$writableStackTrace = 1;
                $rt_throw($string);
            }
        }
        $string = new jl_StringIndexOutOfBoundsException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    function jl_AbstractStringBuilder_append($this, $value) {
        return jl_AbstractStringBuilder_insert0($this, $this.$length, $value, 10);
    }
    function jl_AbstractStringBuilder_insert0($this, $target, $value, $radix) {
        var $positive, var$5, var$6, $pos, $sz, $posLimit, var$10;
        $positive = 1;
        if ($value < 0) {
            $positive = 0;
            $value =  -$value | 0;
        }
        a: {
            if ($rt_ucmp($value, $radix) < 0) {
                if ($positive)
                    jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
                else {
                    jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                    var$5 = $this.$buffer.data;
                    var$6 = $target + 1 | 0;
                    var$5[$target] = 45;
                    $target = var$6;
                }
                $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
            } else {
                $pos = 1;
                $sz = 1;
                $posLimit = $rt_udiv((-1), $radix);
                b: {
                    while (true) {
                        var$10 = $rt_imul($pos, $radix);
                        if ($rt_ucmp(var$10, $value) > 0) {
                            var$10 = $pos;
                            break b;
                        }
                        $sz = $sz + 1 | 0;
                        if ($rt_ucmp(var$10, $posLimit) > 0)
                            break;
                        $pos = var$10;
                    }
                }
                if (!$positive)
                    $sz = $sz + 1 | 0;
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
                if ($positive)
                    $positive = $target;
                else {
                    var$5 = $this.$buffer.data;
                    $positive = $target + 1 | 0;
                    var$5[$target] = 45;
                }
                while (true) {
                    if (!var$10)
                        break a;
                    var$5 = $this.$buffer.data;
                    $target = $positive + 1 | 0;
                    var$5[$positive] = jl_Character_forDigit($rt_udiv($value, var$10), $radix);
                    $value = $rt_umod($value, var$10);
                    var$10 = $rt_udiv(var$10, $radix);
                    $positive = $target;
                }
            }
        }
        return $this;
    }
    function jl_AbstractStringBuilder_insert2($this, $target, $value, $radix) {
        var $positive, var$5, var$6, var$7, $sz, $pos, $posLimit, var$11;
        $positive = 1;
        if (Long_lt($value, Long_ZERO)) {
            $positive = 0;
            $value = Long_neg($value);
        }
        a: {
            var$5 = Long_fromInt($radix);
            if (jl_Long_compareUnsigned($value, var$5) < 0) {
                if ($positive)
                    jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
                else {
                    jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                    var$6 = $this.$buffer.data;
                    var$7 = $target + 1 | 0;
                    var$6[$target] = 45;
                    $target = var$7;
                }
                $this.$buffer.data[$target] = jl_Character_forDigit(Long_lo($value), $radix);
            } else {
                $sz = 1;
                $pos = Long_fromInt(1);
                $posLimit = jl_Long_divideUnsigned(Long_fromInt(-1), var$5);
                b: {
                    while (true) {
                        var$11 = Long_mul($pos, var$5);
                        if (jl_Long_compareUnsigned(var$11, $value) > 0) {
                            var$11 = $pos;
                            break b;
                        }
                        $sz = $sz + 1 | 0;
                        if (jl_Long_compareUnsigned(var$11, $posLimit) > 0)
                            break;
                        $pos = var$11;
                    }
                }
                if (!$positive)
                    $sz = $sz + 1 | 0;
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
                if ($positive)
                    $positive = $target;
                else {
                    var$6 = $this.$buffer.data;
                    $positive = $target + 1 | 0;
                    var$6[$target] = 45;
                }
                while (true) {
                    if (Long_eq(var$11, Long_ZERO))
                        break a;
                    var$6 = $this.$buffer.data;
                    $target = $positive + 1 | 0;
                    var$6[$positive] = jl_Character_forDigit(Long_lo((jl_Long_divideUnsigned($value, var$11))), $radix);
                    $value = jl_Long_remainderUnsigned($value, var$11);
                    var$11 = jl_Long_divideUnsigned(var$11, var$5);
                    $positive = $target;
                }
            }
        }
        return $this;
    }
    function jl_AbstractStringBuilder_append2($this, $value) {
        jl_AbstractStringBuilder_insert1($this, $this.$length, $value);
        return $this;
    }
    function jl_AbstractStringBuilder_insert1($this, $target, $value) {
        var $mantissa, var$4, $number, $exp, $negative, $intPart, $sz, $digits, $zeros, $leadingZeros, $leadingZero, $pos, $intDigit, $i;
        $mantissa = $rt_compare($value, 0.0);
        if (!$mantissa) {
            if (1.0 / $value === Infinity) {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
                var$4 = $this.$buffer.data;
                $mantissa = $target + 1 | 0;
                var$4[$target] = 48;
                $target = $mantissa + 1 | 0;
                var$4[$mantissa] = 46;
                var$4[$target] = 48;
                return $this;
            }
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 45;
            $target = $mantissa + 1 | 0;
            var$4[$mantissa] = 48;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 46;
            var$4[$mantissa] = 48;
            return $this;
        }
        if ($rt_globals.isNaN($value) ? 1 : 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
            var$4 = $this.$buffer.data;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 78;
            $target = $mantissa + 1 | 0;
            var$4[$mantissa] = 97;
            var$4[$target] = 78;
            return $this;
        }
        if (!$rt_globals.isFinite($value) ? 1 : 0) {
            if ($mantissa > 0) {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
                $mantissa = $target;
            } else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
                var$4 = $this.$buffer.data;
                $mantissa = $target + 1 | 0;
                var$4[$target] = 45;
            }
            var$4 = $this.$buffer.data;
            $target = $mantissa + 1 | 0;
            var$4[$mantissa] = 73;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 110;
            $target = $mantissa + 1 | 0;
            var$4[$mantissa] = 102;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 105;
            $target = $mantissa + 1 | 0;
            var$4[$mantissa] = 110;
            $mantissa = $target + 1 | 0;
            var$4[$target] = 105;
            $target = $mantissa + 1 | 0;
            var$4[$mantissa] = 116;
            var$4[$target] = 121;
            return $this;
        }
        $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
        otcit_FloatAnalyzer_analyze($value, $number);
        $mantissa = $number.$mantissa;
        $exp = $number.$exponent;
        $negative = $number.$sign0;
        $intPart = 1;
        $sz = 1;
        if ($negative)
            $sz = 2;
        $digits = 9;
        $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
        if ($zeros > 0)
            $digits = $digits - $zeros | 0;
        $leadingZeros = 0;
        $leadingZero = 0;
        if ($exp < 7 && $exp >= (-3)) {
            if ($exp >= 0) {
                $intPart = $exp + 1 | 0;
                $digits = jl_Math_max($digits, $intPart + 1 | 0);
                $exp = 0;
            } else {
                $intPart = 0;
                $leadingZeros = ( -$exp | 0) - 1 | 0;
                $leadingZero = 1;
                $sz = $sz + 1 | 0;
                $exp = 0;
            }
        }
        if ($exp) {
            $sz = $sz + 2 | 0;
            if (!($exp > (-10) && $exp < 10))
                $sz = $sz + 1 | 0;
            if ($exp < 0)
                $sz = $sz + 1 | 0;
        }
        if ($exp && $digits == $intPart)
            $digits = $digits + 1 | 0;
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + ($sz + ($digits + $leadingZeros | 0) | 0) | 0);
        if (!$negative)
            $negative = $target;
        else {
            var$4 = $this.$buffer.data;
            $negative = $target + 1 | 0;
            var$4[$target] = 45;
        }
        $pos = 100000000;
        if ($leadingZero) {
            var$4 = $this.$buffer.data;
            $target = $negative + 1 | 0;
            var$4[$negative] = 48;
            $negative = $target + 1 | 0;
            var$4[$target] = 46;
            while (true) {
                $target = $leadingZeros + (-1) | 0;
                if ($leadingZeros <= 0)
                    break;
                $intDigit = $negative + 1 | 0;
                var$4[$negative] = 48;
                $leadingZeros = $target;
                $negative = $intDigit;
            }
        }
        $i = 0;
        while ($i < $digits) {
            if ($pos <= 0)
                $intDigit = 0;
            else {
                $intDigit = $mantissa / $pos | 0;
                $mantissa = $mantissa % $pos | 0;
            }
            var$4 = $this.$buffer.data;
            $target = $negative + 1 | 0;
            var$4[$negative] = (48 + $intDigit | 0) & 65535;
            $intPart = $intPart + (-1) | 0;
            if ($intPart)
                $negative = $target;
            else {
                $negative = $target + 1 | 0;
                var$4[$target] = 46;
            }
            $pos = $pos / 10 | 0;
            $i = $i + 1 | 0;
        }
        if ($exp) {
            var$4 = $this.$buffer.data;
            $target = $negative + 1 | 0;
            var$4[$negative] = 69;
            if ($exp >= 0)
                $mantissa = $target;
            else {
                $exp =  -$exp | 0;
                $mantissa = $target + 1 | 0;
                var$4[$target] = 45;
            }
            if ($exp < 10)
                $intDigit = $mantissa;
            else {
                $intDigit = $mantissa + 1 | 0;
                var$4[$mantissa] = (48 + ($exp / 10 | 0) | 0) & 65535;
            }
            var$4[$intDigit] = (48 + ($exp % 10 | 0) | 0) & 65535;
        }
        return $this;
    }
    function jl_AbstractStringBuilder_insert3($this, $target, $value) {
        var $intDigit, var$4, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, $leadingZeros, $leadingZero, $pos, $i;
        $intDigit = $rt_compare($value, 0.0);
        if (!$intDigit) {
            if (1.0 / $value === Infinity) {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
                var$4 = $this.$buffer.data;
                $intDigit = $target + 1 | 0;
                var$4[$target] = 48;
                $target = $intDigit + 1 | 0;
                var$4[$intDigit] = 46;
                var$4[$target] = 48;
                return $this;
            }
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
            var$4 = $this.$buffer.data;
            $intDigit = $target + 1 | 0;
            var$4[$target] = 45;
            $target = $intDigit + 1 | 0;
            var$4[$intDigit] = 48;
            $intDigit = $target + 1 | 0;
            var$4[$target] = 46;
            var$4[$intDigit] = 48;
            return $this;
        }
        if ($rt_globals.isNaN($value) ? 1 : 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
            var$4 = $this.$buffer.data;
            $intDigit = $target + 1 | 0;
            var$4[$target] = 78;
            $target = $intDigit + 1 | 0;
            var$4[$intDigit] = 97;
            var$4[$target] = 78;
            return $this;
        }
        if (!$rt_globals.isFinite($value) ? 1 : 0) {
            if ($intDigit > 0) {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
                $intDigit = $target;
            } else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
                var$4 = $this.$buffer.data;
                $intDigit = $target + 1 | 0;
                var$4[$target] = 45;
            }
            var$4 = $this.$buffer.data;
            $target = $intDigit + 1 | 0;
            var$4[$intDigit] = 73;
            $intDigit = $target + 1 | 0;
            var$4[$target] = 110;
            $target = $intDigit + 1 | 0;
            var$4[$intDigit] = 102;
            $intDigit = $target + 1 | 0;
            var$4[$target] = 105;
            $target = $intDigit + 1 | 0;
            var$4[$intDigit] = 110;
            $intDigit = $target + 1 | 0;
            var$4[$target] = 105;
            $target = $intDigit + 1 | 0;
            var$4[$intDigit] = 116;
            var$4[$target] = 121;
            return $this;
        }
        $number = jl_AbstractStringBuilder$Constants_doubleAnalysisResult;
        otcit_DoubleAnalyzer_analyze($value, $number);
        $mantissa = $number.$mantissa0;
        $exp = $number.$exponent0;
        $negative = $number.$sign1;
        $intPart = 1;
        $sz = 1;
        if ($negative)
            $sz = 2;
        $digits = 18;
        $zeros = jl_AbstractStringBuilder_trailingDecimalZeros0($mantissa);
        if ($zeros > 0)
            $digits = $digits - $zeros | 0;
        $leadingZeros = 0;
        $leadingZero = 0;
        if ($exp < 7 && $exp >= (-3)) {
            if ($exp >= 0) {
                $intPart = $exp + 1 | 0;
                $digits = jl_Math_max($digits, $intPart + 1 | 0);
                $exp = 0;
            } else {
                $intPart = 0;
                $leadingZeros = ( -$exp | 0) - 1 | 0;
                $leadingZero = 1;
                $sz = $sz + 1 | 0;
                $exp = 0;
            }
        }
        if ($exp) {
            $sz = $sz + 2 | 0;
            if (!($exp > (-10) && $exp < 10))
                $sz = $sz + 1 | 0;
            if (!($exp > (-100) && $exp < 100))
                $sz = $sz + 1 | 0;
            if ($exp < 0)
                $sz = $sz + 1 | 0;
        }
        if ($exp && $digits == $intPart)
            $digits = $digits + 1 | 0;
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + ($sz + ($digits + $leadingZeros | 0) | 0) | 0);
        if (!$negative)
            $sz = $target;
        else {
            var$4 = $this.$buffer.data;
            $sz = $target + 1 | 0;
            var$4[$target] = 45;
        }
        $pos = Long_create(1569325056, 23283064);
        if ($leadingZero) {
            var$4 = $this.$buffer.data;
            $target = $sz + 1 | 0;
            var$4[$sz] = 48;
            $sz = $target + 1 | 0;
            var$4[$target] = 46;
            while (true) {
                $target = $leadingZeros + (-1) | 0;
                if ($leadingZeros <= 0)
                    break;
                $intDigit = $sz + 1 | 0;
                var$4[$sz] = 48;
                $leadingZeros = $target;
                $sz = $intDigit;
            }
        }
        $i = 0;
        while ($i < $digits) {
            if (Long_le($pos, Long_ZERO))
                $intDigit = 0;
            else {
                $intDigit = Long_lo(Long_div($mantissa, $pos));
                $mantissa = Long_rem($mantissa, $pos);
            }
            var$4 = $this.$buffer.data;
            $target = $sz + 1 | 0;
            var$4[$sz] = (48 + $intDigit | 0) & 65535;
            $intPart = $intPart + (-1) | 0;
            if ($intPart)
                $sz = $target;
            else {
                $sz = $target + 1 | 0;
                var$4[$target] = 46;
            }
            $pos = Long_div($pos, Long_fromInt(10));
            $i = $i + 1 | 0;
        }
        if ($exp) {
            var$4 = $this.$buffer.data;
            $negative = $sz + 1 | 0;
            var$4[$sz] = 69;
            if ($exp >= 0)
                $intDigit = $negative;
            else {
                $exp =  -$exp | 0;
                $intDigit = $negative + 1 | 0;
                var$4[$negative] = 45;
            }
            if ($exp >= 100) {
                $target = $intDigit + 1 | 0;
                var$4[$intDigit] = (48 + ($exp / 100 | 0) | 0) & 65535;
                $exp = $exp % 100 | 0;
                $negative = $target + 1 | 0;
                var$4[$target] = (48 + ($exp / 10 | 0) | 0) & 65535;
            } else if ($exp < 10)
                $negative = $intDigit;
            else {
                $negative = $intDigit + 1 | 0;
                var$4[$intDigit] = (48 + ($exp / 10 | 0) | 0) & 65535;
            }
            var$4[$negative] = (48 + ($exp % 10 | 0) | 0) & 65535;
        }
        return $this;
    }
    function jl_AbstractStringBuilder_trailingDecimalZeros($n) {
        var $result, $zeros, var$4;
        if (!($n % 1000000000 | 0))
            return 9;
        $result = 0;
        $zeros = 1;
        if (!($n % 100000000 | 0)) {
            $result = 8;
            $zeros = 100000000;
        }
        var$4 = $zeros * 10000 | 0;
        if ($n % var$4 | 0)
            var$4 = $zeros;
        else
            $result = $result | 4;
        $zeros = var$4 * 100 | 0;
        if ($n % $zeros | 0)
            $zeros = var$4;
        else
            $result = $result | 2;
        if (!($n % ($zeros * 10 | 0) | 0))
            $result = $result | 1;
        return $result;
    }
    function jl_AbstractStringBuilder_trailingDecimalZeros0($n) {
        var $zeros, $result, $bit, var$5, $i;
        $zeros = Long_fromInt(1);
        $result = 0;
        $bit = 16;
        var$5 = jl_AbstractStringBuilder$Constants_longLogPowersOfTen.data;
        $i = var$5.length - 1 | 0;
        while ($i >= 0) {
            if (Long_eq(Long_rem($n, Long_mul($zeros, var$5[$i])), Long_ZERO)) {
                $result = $result | $bit;
                $zeros = Long_mul($zeros, var$5[$i]);
            }
            $bit = $bit >>> 1 | 0;
            $i = $i + (-1) | 0;
        }
        return $result;
    }
    function jl_AbstractStringBuilder_append3($this, $c) {
        return $this.$insert3($this.$length, $c);
    }
    function jl_AbstractStringBuilder_insert4($this, $index, $c) {
        jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
        $this.$buffer.data[$index] = $c;
        return $this;
    }
    function jl_AbstractStringBuilder_insert5($this, $index, $obj) {
        jl_AbstractStringBuilder_insert($this, $index, $obj === null ? $rt_s(1) : $obj.$toString());
        return $this;
    }
    function jl_AbstractStringBuilder_ensureCapacity($this, $capacity) {
        var var$2, var$3, $newLength, var$5, var$6, var$7;
        var$2 = $this.$buffer.data;
        var$3 = var$2.length;
        if (var$3 >= $capacity)
            return;
        if (var$3 >= 1073741823)
            $newLength = 2147483647;
        else {
            var$5 = var$3 * 2 | 0;
            $newLength = 5;
            if (var$5 > $newLength)
                $newLength = var$5;
            if ($capacity > $newLength)
                $newLength = $capacity;
        }
        var$6 = $rt_createCharArray($newLength);
        if ($newLength < var$3)
            var$3 = $newLength;
        var$7 = var$6.data;
        $capacity = 0;
        while ($capacity < var$3) {
            var$7[$capacity] = var$2[$capacity];
            $capacity = $capacity + 1 | 0;
        }
        $this.$buffer = var$6;
    }
    function jl_AbstractStringBuilder_toString($this) {
        var var$1, var$2, var$3, var$4;
        var$1 = new jl_String;
        var$2 = $this.$buffer;
        var$3 = $this.$length;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray(var$3);
        var$1.$characters = var$4;
        jl_System_fastArraycopy(var$2, 0, var$4, 0, var$3);
        return var$1;
    }
    function jl_AbstractStringBuilder_insert6($this, $index, $s, $i, $end) {
        var var$5, var$6, var$7;
        if ($i <= $end && $end <= $s.$characters.data.length && $i >= 0) {
            jl_AbstractStringBuilder_insertSpace($this, $index, ($index + $end | 0) - $i | 0);
            a: {
                while ($i < $end) {
                    var$5 = $this.$buffer;
                    var$6 = $index + 1 | 0;
                    if ($i < 0)
                        break a;
                    var$7 = $s.$characters.data;
                    if ($i >= var$7.length)
                        break a;
                    var$5.data[$index] = var$7[$i];
                    $i = $i + 1 | 0;
                    $index = var$6;
                }
                return $this;
            }
            $s = new jl_StringIndexOutOfBoundsException;
            $s.$suppressionEnabled = 1;
            $s.$writableStackTrace = 1;
            $rt_throw($s);
        }
        $s = new jl_IndexOutOfBoundsException;
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $rt_throw($s);
    }
    function jl_AbstractStringBuilder_insert7($this, $index, $chars, $offset, $len) {
        var var$5, var$6, var$7, var$8;
        jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
        var$5 = $len + $offset | 0;
        while ($offset < var$5) {
            var$6 = $chars.data;
            var$7 = $this.$buffer.data;
            $len = $index + 1 | 0;
            var$8 = $offset + 1 | 0;
            var$7[$index] = var$6[$offset];
            $index = $len;
            $offset = var$8;
        }
        return $this;
    }
    function jl_AbstractStringBuilder_deleteCharAt($this, $i) {
        var var$2, var$3, $i_0, var$5;
        if ($i >= 0) {
            var$2 = $this.$length;
            if ($i < var$2) {
                var$2 = var$2 - 1 | 0;
                $this.$length = var$2;
                while ($i < var$2) {
                    var$3 = $this.$buffer.data;
                    $i_0 = $i + 1 | 0;
                    var$3[$i] = var$3[$i_0];
                    $i = $i_0;
                }
                return $this;
            }
        }
        var$5 = new jl_StringIndexOutOfBoundsException;
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        $rt_throw(var$5);
    }
    function jl_AbstractStringBuilder_delete($this, $start, $end) {
        var var$3, var$4, $sz, $i, var$7, var$8;
        if ($start >= 0) {
            var$3 = $rt_compare($start, $end);
            if (var$3 <= 0) {
                var$4 = $this.$length;
                if ($start <= var$4) {
                    if (!var$3)
                        return $this;
                    if ($end > var$4)
                        $end = var$4;
                    $sz = var$4 - $end | 0;
                    $this.$length = var$4 - ($end - $start | 0) | 0;
                    $i = 0;
                    while ($i < $sz) {
                        var$7 = $this.$buffer.data;
                        var$4 = $start + 1 | 0;
                        var$3 = $end + 1 | 0;
                        var$7[$start] = var$7[$end];
                        $i = $i + 1 | 0;
                        $start = var$4;
                        $end = var$3;
                    }
                    return $this;
                }
            }
        }
        var$8 = new jl_StringIndexOutOfBoundsException;
        var$8.$suppressionEnabled = 1;
        var$8.$writableStackTrace = 1;
        $rt_throw(var$8);
    }
    function jl_AbstractStringBuilder_insertSpace($this, $start, $end) {
        var var$3, $sz, $i, var$6;
        var$3 = $this.$length;
        $sz = var$3 - $start | 0;
        $this.$ensureCapacity((var$3 + $end | 0) - $start | 0);
        $i = $sz - 1 | 0;
        while ($i >= 0) {
            var$6 = $this.$buffer.data;
            var$6[$end + $i | 0] = var$6[$start + $i | 0];
            $i = $i + (-1) | 0;
        }
        $this.$length = $this.$length + ($end - $start | 0) | 0;
    }
    var jl_Appendable = $rt_classWithoutFields(0);
    var jl_StringBuilder = $rt_classWithoutFields(jl_AbstractStringBuilder);
    function jl_StringBuilder__init_() {
        var var_0 = new jl_StringBuilder();
        jl_StringBuilder__init_0(var_0);
        return var_0;
    }
    function jl_StringBuilder__init_0($this) {
        $this.$buffer = $rt_createCharArray(16);
    }
    function jl_StringBuilder_append($this, $obj) {
        jl_AbstractStringBuilder_insert($this, $this.$length, $obj === null ? $rt_s(1) : $obj.$toString());
        return $this;
    }
    function jl_StringBuilder_append1($this, $string) {
        jl_AbstractStringBuilder_insert($this, $this.$length, $string);
        return $this;
    }
    function jl_StringBuilder_append0($this, $value) {
        jl_AbstractStringBuilder_insert0($this, $this.$length, $value, 10);
        return $this;
    }
    function jl_StringBuilder_append2($this, $c) {
        var var$2;
        var$2 = $this.$length;
        jl_AbstractStringBuilder_insertSpace($this, var$2, var$2 + 1 | 0);
        $this.$buffer.data[var$2] = $c;
        return $this;
    }
    function jl_StringBuilder_insert0($this, $index, $obj) {
        jl_AbstractStringBuilder_insert($this, $index, $obj === null ? $rt_s(1) : $obj.$toString());
        return $this;
    }
    function jl_StringBuilder_insert1($this, $index, $c) {
        jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
        $this.$buffer.data[$index] = $c;
        return $this;
    }
    function jl_StringBuilder_delete($this, $start, $end) {
        jl_AbstractStringBuilder_delete($this, $start, $end);
        return $this;
    }
    function jl_StringBuilder_insert2($this, $index, $string) {
        jl_AbstractStringBuilder_insert($this, $index, $string);
        return $this;
    }
    function jl_StringBuilder_subSequence($this, var$1, var$2) {
        var var$3, var$4, var$5;
        if (var$1 <= var$2 && var$1 >= 0 && var$2 <= $this.$length) {
            var$3 = new jl_String;
            var$4 = $this.$buffer;
            var$2 = var$2 - var$1 | 0;
            jl_String_$callClinit();
            var$5 = $rt_createCharArray(var$2);
            var$3.$characters = var$5;
            jl_System_fastArraycopy(var$4, var$1, var$5, 0, var$2);
            return var$3;
        }
        var$3 = new jl_IndexOutOfBoundsException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        $rt_throw(var$3);
    }
    function jl_StringBuilder_insert3($this, var$1, var$2, var$3, var$4) {
        var var$5, var$6, var$7, var$8;
        jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + var$4 | 0);
        var$5 = var$4 + var$3 | 0;
        while (var$3 < var$5) {
            var$6 = var$2.data;
            var$7 = $this.$buffer.data;
            var$4 = var$1 + 1 | 0;
            var$8 = var$3 + 1 | 0;
            var$7[var$1] = var$6[var$3];
            var$1 = var$4;
            var$3 = var$8;
        }
        return $this;
    }
    function jl_StringBuilder_append3($this, var$1, var$2, var$3) {
        var var$4, var$5, var$6, var$7, var$8;
        var$4 = $this.$length;
        jl_AbstractStringBuilder_insertSpace($this, var$4, var$4 + var$3 | 0);
        var$5 = var$3 + var$2 | 0;
        while (var$2 < var$5) {
            var$6 = var$1.data;
            var$7 = $this.$buffer.data;
            var$3 = var$4 + 1 | 0;
            var$8 = var$2 + 1 | 0;
            var$7[var$4] = var$6[var$2];
            var$4 = var$3;
            var$2 = var$8;
        }
        return $this;
    }
    function jl_StringBuilder_length($this) {
        return $this.$length;
    }
    function jl_StringBuilder_toString($this) {
        var var$1, var$2, var$3, var$4;
        var$1 = new jl_String;
        var$2 = $this.$buffer;
        var$3 = $this.$length;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray(var$3);
        var$1.$characters = var$4;
        jl_System_fastArraycopy(var$2, 0, var$4, 0, var$3);
        return var$1;
    }
    function jl_StringBuilder_ensureCapacity($this, var$1) {
        jl_AbstractStringBuilder_ensureCapacity($this, var$1);
    }
    function jl_StringBuilder_insert4($this, var$1, var$2) {
        jl_AbstractStringBuilder_insert($this, var$1, var$2 === null ? $rt_s(1) : var$2.$toString());
        return $this;
    }
    function jl_StringBuilder_insert5($this, var$1, var$2) {
        jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + 1 | 0);
        $this.$buffer.data[var$1] = var$2;
        return $this;
    }
    function jl_StringBuilder_insert($this, var$1, var$2) {
        jl_AbstractStringBuilder_insert($this, var$1, var$2);
        return $this;
    }
    var jl_IncompatibleClassChangeError = $rt_classWithoutFields(jl_LinkageError);
    var jl_NoSuchFieldError = $rt_classWithoutFields(jl_IncompatibleClassChangeError);
    function jl_NoSuchFieldError__init_(var_0) {
        var var_1 = new jl_NoSuchFieldError();
        jl_NoSuchFieldError__init_0(var_1, var_0);
        return var_1;
    }
    function jl_NoSuchFieldError__init_0($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    var jl_NoSuchMethodError = $rt_classWithoutFields(jl_IncompatibleClassChangeError);
    function jl_NoSuchMethodError__init_(var_0) {
        var var_1 = new jl_NoSuchMethodError();
        jl_NoSuchMethodError__init_0(var_1, var_0);
        return var_1;
    }
    function jl_NoSuchMethodError__init_0($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    var kji_Intrinsics = $rt_classWithoutFields();
    function kji_Intrinsics_throwUninitializedPropertyAccessException($propertyName) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(86));
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $propertyName);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(87));
        $propertyName = new jl_String;
        var$3 = var$2.$buffer;
        var$4 = var$2.$length;
        jl_String_$callClinit();
        var$5 = $rt_createCharArray(var$4);
        $propertyName.$characters = var$5;
        jl_System_fastArraycopy(var$3, 0, var$5, 0, var$4);
        var$2 = new k_UninitializedPropertyAccessException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $propertyName;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $propertyName = $rt_cls(kji_Intrinsics).$name;
        var$3 = var$2.$stackTrace;
        var$5 = var$3 !== null ? var$3.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$3 = var$5.data;
        var$4 = var$3.length;
        var$6 = (-1);
        var$7 = 0;
        while (var$7 < var$4) {
            if (jl_String_equals($propertyName, jl_StackTraceElement_getClassName(var$3[var$7])))
                var$6 = var$7;
            var$7 = var$7 + 1 | 0;
        }
        var$8 = var$6 + 1 | 0;
        var$9 = var$5.constructor;
        if (var$9 === null)
            $propertyName = null;
        else {
            $propertyName = var$9.classObject;
            if ($propertyName === null) {
                $propertyName = new jl_Class;
                $propertyName.$platformClass = var$9;
                var$10 = $propertyName;
                var$9.classObject = var$10;
            }
        }
        var$11 = $propertyName.$platformClass.$meta.item;
        if (var$11 === null)
            var$9 = null;
        else {
            var$9 = var$11.classObject;
            if (var$9 === null) {
                var$9 = new jl_Class;
                var$9.$platformClass = var$11;
                $propertyName = var$9;
                var$11.classObject = $propertyName;
            }
        }
        var$6 = var$4 - var$8 | 0;
        if (var$9 === null) {
            $propertyName = new jl_NullPointerException;
            jl_Throwable__init_0($propertyName);
            $rt_throw($propertyName);
        }
        if (var$9 === $rt_cls($rt_voidcls())) {
            $propertyName = new jl_IllegalArgumentException;
            jl_Throwable__init_0($propertyName);
            $rt_throw($propertyName);
        }
        if (var$6 < 0) {
            $propertyName = new jl_NegativeArraySizeException;
            jl_Throwable__init_0($propertyName);
            $rt_throw($propertyName);
        }
        var$10 = jlr_Array_newInstanceImpl(var$9.$platformClass, var$6);
        var$6 = var$8;
        while (var$6 < var$4) {
            var$10.data[var$6 - var$8 | 0] = var$3[var$6];
            var$6 = var$6 + 1 | 0;
        }
        var$2.$stackTrace = var$10.$clone();
        $rt_throw(var$2);
    }
    function kji_Intrinsics_checkNotNullExpressionValue($value, $expression) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($value !== null)
            return;
        var$3 = new jl_NullPointerException;
        $value = new jl_StringBuilder;
        $value.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($value, $value.$length, $expression);
        jl_AbstractStringBuilder_insert($value, $value.$length, $rt_s(88));
        $expression = new jl_String;
        var$4 = $value.$buffer;
        var$5 = $value.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        $expression.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = $expression;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $value = $rt_cls(kji_Intrinsics).$name;
        var$4 = var$3.$stackTrace;
        var$6 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$4 = var$6.data;
        var$5 = var$4.length;
        var$7 = (-1);
        var$8 = 0;
        while (var$8 < var$5) {
            if (jl_String_equals($value, jl_StackTraceElement_getClassName(var$4[var$8])))
                var$7 = var$8;
            var$8 = var$8 + 1 | 0;
        }
        var$8 = var$7 + 1 | 0;
        var$9 = var$6.constructor;
        if (var$9 === null)
            var$10 = null;
        else {
            var$10 = var$9.classObject;
            if (var$10 === null) {
                var$10 = new jl_Class;
                var$10.$platformClass = var$9;
                $value = var$10;
                var$9.classObject = $value;
            }
        }
        var$10 = var$10.$platformClass.$meta.item;
        if (var$10 === null)
            $expression = null;
        else {
            $expression = var$10.classObject;
            if ($expression === null) {
                $expression = new jl_Class;
                $expression.$platformClass = var$10;
                $value = $expression;
                var$10.classObject = $value;
            }
        }
        var$7 = var$5 - var$8 | 0;
        if ($expression === null) {
            $value = new jl_NullPointerException;
            $value.$suppressionEnabled = 1;
            $value.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($value);
            $rt_throw($value);
        }
        if ($expression === $rt_cls($rt_voidcls())) {
            $value = new jl_IllegalArgumentException;
            $value.$suppressionEnabled = 1;
            $value.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($value);
            $rt_throw($value);
        }
        if (var$7 < 0) {
            $value = new jl_NegativeArraySizeException;
            $value.$suppressionEnabled = 1;
            $value.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($value);
            $rt_throw($value);
        }
        var$9 = jlr_Array_newInstanceImpl($expression.$platformClass, var$7);
        var$7 = var$8;
        while (var$7 < var$5) {
            var$9.data[var$7 - var$8 | 0] = var$4[var$7];
            var$7 = var$7 + 1 | 0;
        }
        var$3.$stackTrace = var$9.$clone();
        $rt_throw(var$3);
    }
    function kji_Intrinsics_checkNotNullParameter($value, $paramName) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        if ($value !== null)
            return;
        $value = new jl_NullPointerException;
        $paramName = kji_Intrinsics_createParameterIsNullExceptionMessage($paramName);
        $value.$suppressionEnabled = 1;
        $value.$writableStackTrace = 1;
        $value.$message = $paramName;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $paramName = $rt_cls(kji_Intrinsics).$name;
        var$3 = $value.$stackTrace;
        var$4 = var$3 !== null ? var$3.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$3 = var$4.data;
        var$5 = var$3.length;
        var$6 = (-1);
        var$7 = 0;
        while (var$7 < var$5) {
            if (jl_String_equals($paramName, jl_StackTraceElement_getClassName(var$3[var$7])))
                var$6 = var$7;
            var$7 = var$7 + 1 | 0;
        }
        var$7 = var$6 + 1 | 0;
        var$8 = var$4.constructor;
        if (var$8 === null)
            var$9 = null;
        else {
            var$9 = var$8.classObject;
            if (var$9 === null) {
                var$9 = new jl_Class;
                var$9.$platformClass = var$8;
                $paramName = var$9;
                var$8.classObject = $paramName;
            }
        }
        $paramName = jl_Class_getComponentType(var$9);
        var$6 = var$5 - var$7 | 0;
        if ($paramName === null) {
            $value = new jl_NullPointerException;
            jl_Throwable__init_0($value);
            $rt_throw($value);
        }
        if ($paramName === $rt_cls($rt_voidcls())) {
            $value = new jl_IllegalArgumentException;
            jl_Throwable__init_0($value);
            $rt_throw($value);
        }
        if (var$6 < 0) {
            $value = new jl_NegativeArraySizeException;
            jl_Throwable__init_0($value);
            $rt_throw($value);
        }
        var$8 = jlr_Array_newInstanceImpl($paramName.$platformClass, var$6);
        var$6 = var$7;
        while (var$6 < var$5) {
            var$8.data[var$6 - var$7 | 0] = var$3[var$6];
            var$6 = var$6 + 1 | 0;
        }
        $value.$stackTrace = var$8.$clone();
        $rt_throw($value);
    }
    function kji_Intrinsics_throwParameterIsNullNPE($paramName) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$2 = new jl_NullPointerException;
        $paramName = kji_Intrinsics_createParameterIsNullExceptionMessage($paramName);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $paramName;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $paramName = $rt_cls(kji_Intrinsics).$name;
        var$3 = var$2.$stackTrace;
        var$4 = var$3 !== null ? var$3.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$3 = var$4.data;
        var$5 = var$3.length;
        var$6 = (-1);
        var$7 = 0;
        while (var$7 < var$5) {
            if (jl_String_equals($paramName, jl_StackTraceElement_getClassName(var$3[var$7])))
                var$6 = var$7;
            var$7 = var$7 + 1 | 0;
        }
        var$8 = var$6 + 1 | 0;
        var$9 = var$4.constructor;
        if (var$9 === null)
            $paramName = null;
        else {
            $paramName = var$9.classObject;
            if ($paramName === null) {
                $paramName = new jl_Class;
                $paramName.$platformClass = var$9;
                var$10 = $paramName;
                var$9.classObject = var$10;
            }
        }
        $paramName = jl_Class_getComponentType($paramName);
        var$6 = var$5 - var$8 | 0;
        if ($paramName === null) {
            $paramName = new jl_NullPointerException;
            $paramName.$suppressionEnabled = 1;
            $paramName.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($paramName);
            $rt_throw($paramName);
        }
        if ($paramName === $rt_cls($rt_voidcls())) {
            $paramName = new jl_IllegalArgumentException;
            $paramName.$suppressionEnabled = 1;
            $paramName.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($paramName);
            $rt_throw($paramName);
        }
        if (var$6 < 0) {
            $paramName = new jl_NegativeArraySizeException;
            $paramName.$suppressionEnabled = 1;
            $paramName.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($paramName);
            $rt_throw($paramName);
        }
        var$10 = jlr_Array_newInstanceImpl($paramName.$platformClass, var$6);
        var$6 = var$8;
        while (var$6 < var$5) {
            var$10.data[var$6 - var$8 | 0] = var$3[var$6];
            var$6 = var$6 + 1 | 0;
        }
        var$2.$stackTrace = var$10.$clone();
        $rt_throw(var$2);
    }
    function kji_Intrinsics_createParameterIsNullExceptionMessage($paramName) {
        var $stackTraceElements, $thisClassName, $i, $caller, $className, $methodName, var$8, var$9;
        jl_Thread_$callClinit();
        $stackTraceElements = $rt_createArray(jl_StackTraceElement, 0);
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $stackTraceElements = $stackTraceElements.data;
        $thisClassName = $rt_cls(kji_Intrinsics).$name;
        $i = 0;
        while (!(jl_StackTraceElement_getClassName($stackTraceElements[$i])).$equals($thisClassName)) {
            $i = $i + 1 | 0;
        }
        while ((jl_StackTraceElement_getClassName($stackTraceElements[$i])).$equals($thisClassName)) {
            $i = $i + 1 | 0;
        }
        $caller = $stackTraceElements[$i];
        $className = jl_StackTraceElement_getClassName($caller);
        $methodName = jl_StackTraceElement_getMethodName($caller);
        $caller = new jl_StringBuilder;
        $caller.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($caller, $caller.$length, $rt_s(89));
        jl_AbstractStringBuilder_insert($caller, $caller.$length, $className);
        jl_AbstractStringBuilder_insert($caller, $caller.$length, $rt_s(90));
        jl_AbstractStringBuilder_insert($caller, $caller.$length, $methodName);
        jl_AbstractStringBuilder_insert($caller, $caller.$length, $rt_s(91));
        jl_AbstractStringBuilder_insert($caller, $caller.$length, $paramName);
        $paramName = new jl_String;
        $stackTraceElements = $caller.$buffer;
        var$8 = $caller.$length;
        var$9 = $rt_createCharArray(var$8);
        $paramName.$characters = var$9;
        jl_System_fastArraycopy($stackTraceElements, 0, var$9, 0, var$8);
        return $paramName;
    }
    function kji_Intrinsics_sanitizeStackTrace($throwable) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$2 = $rt_cls(kji_Intrinsics).$name;
        var$3 = $throwable.$stackTrace;
        var$4 = var$3 !== null ? var$3.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$3 = var$4.data;
        var$5 = var$3.length;
        var$6 = (-1);
        var$7 = 0;
        while (var$7 < var$5) {
            if (jl_String_equals(var$2, jl_StackTraceElement_getClassName(var$3[var$7])))
                var$6 = var$7;
            var$7 = var$7 + 1 | 0;
        }
        var$7 = var$6 + 1 | 0;
        var$8 = var$4.constructor;
        if (var$8 === null)
            var$9 = null;
        else {
            var$9 = var$8.classObject;
            if (var$9 === null) {
                var$9 = new jl_Class;
                var$9.$platformClass = var$8;
                var$10 = var$9;
                var$8.classObject = var$10;
            }
        }
        var$2 = jl_Class_getComponentType(var$9);
        var$6 = var$5 - var$7 | 0;
        if (var$2 === null) {
            $throwable = new jl_NullPointerException;
            $throwable.$suppressionEnabled = 1;
            $throwable.$writableStackTrace = 1;
            $rt_throw($throwable);
        }
        if (var$2 === $rt_cls($rt_voidcls())) {
            $throwable = new jl_IllegalArgumentException;
            $throwable.$suppressionEnabled = 1;
            $throwable.$writableStackTrace = 1;
            $rt_throw($throwable);
        }
        if (var$6 < 0) {
            $throwable = new jl_NegativeArraySizeException;
            $throwable.$suppressionEnabled = 1;
            $throwable.$writableStackTrace = 1;
            $rt_throw($throwable);
        }
        var$8 = jlr_Array_newInstanceImpl(var$2.$platformClass, var$6);
        var$6 = var$7;
        while (var$6 < var$5) {
            var$8.data[var$6 - var$7 | 0] = var$3[var$6];
            var$6 = var$6 + 1 | 0;
        }
        $throwable.$stackTrace = var$8.$clone();
        return $throwable;
    }
    function kji_Intrinsics_sanitizeStackTrace0($throwable, $classNameToDrop) {
        var $newStackTrace, $stackTrace, $size, $lastIntrinsic, $i, var$8, var$9;
        $newStackTrace = $throwable.$stackTrace;
        $stackTrace = $newStackTrace !== null ? $newStackTrace.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        $newStackTrace = $stackTrace.data;
        $size = $newStackTrace.length;
        $lastIntrinsic = (-1);
        $i = 0;
        while ($i < $size) {
            if (jl_String_equals($classNameToDrop, jl_StackTraceElement_getClassName($newStackTrace[$i])))
                $lastIntrinsic = $i;
            $i = $i + 1 | 0;
        }
        $i = $lastIntrinsic + 1 | 0;
        var$8 = $stackTrace.constructor;
        if (var$8 === null)
            $classNameToDrop = null;
        else {
            $classNameToDrop = var$8.classObject;
            if ($classNameToDrop === null) {
                $classNameToDrop = new jl_Class;
                $classNameToDrop.$platformClass = var$8;
                var$9 = $classNameToDrop;
                var$8.classObject = var$9;
            }
        }
        $classNameToDrop = jl_Class_getComponentType($classNameToDrop);
        $lastIntrinsic = $size - $i | 0;
        if ($classNameToDrop === null) {
            $throwable = new jl_NullPointerException;
            $throwable.$suppressionEnabled = 1;
            $throwable.$writableStackTrace = 1;
            $rt_throw($throwable);
        }
        if ($classNameToDrop === $rt_cls($rt_voidcls())) {
            $throwable = new jl_IllegalArgumentException;
            $throwable.$suppressionEnabled = 1;
            $throwable.$writableStackTrace = 1;
            $rt_throw($throwable);
        }
        if ($lastIntrinsic < 0) {
            $throwable = new jl_NegativeArraySizeException;
            $throwable.$suppressionEnabled = 1;
            $throwable.$writableStackTrace = 1;
            $rt_throw($throwable);
        }
        $classNameToDrop = jlr_Array_newInstanceImpl($classNameToDrop.$platformClass, $lastIntrinsic);
        $lastIntrinsic = $i;
        while ($lastIntrinsic < $size) {
            $classNameToDrop.data[$lastIntrinsic - $i | 0] = $newStackTrace[$lastIntrinsic];
            $lastIntrinsic = $lastIntrinsic + 1 | 0;
        }
        $throwable.$stackTrace = $classNameToDrop.$clone();
        return $throwable;
    }
    function cgxgbt_TeaApplicationConfiguration() {
        var a = this; jl_Object.call(a);
        a.$useGL30 = 0;
        a.$useGLArrayBuffer = 0;
        a.$useNativePixmap = 0;
        a.$windowListener = null;
        a.$preloadAssets = 0;
        a.$storagePrefix = null;
        a.$showDownloadLogs = 0;
        a.$canvasID = null;
        a.$width = 0;
        a.$height = 0;
        a.$padHorizontal = 0;
        a.$padVertical = 0;
        a.$stencil = 0;
        a.$antialiasing = 0;
        a.$alpha = 0;
        a.$premultipliedAlpha = 0;
        a.$preserveDrawingBuffer = 0;
        a.$useDebugGL = 0;
        a.$usePhysicalPixels = 0;
    }
    function cgxgbt_TeaApplicationConfiguration__init_(var_0) {
        var var_1 = new cgxgbt_TeaApplicationConfiguration();
        cgxgbt_TeaApplicationConfiguration__init_0(var_1, var_0);
        return var_1;
    }
    function cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication($this) {
        return !$this.$width && !$this.$height ? 1 : 0;
    }
    function cgxgbt_TeaApplicationConfiguration__init_0($this, $canvasID) {
        $this.$useGL30 = 0;
        $this.$useGLArrayBuffer = 1;
        $this.$useNativePixmap = 0;
        $this.$preloadAssets = 1;
        $this.$storagePrefix = $rt_s(45);
        $this.$showDownloadLogs = 0;
        $this.$width = (-1);
        $this.$height = (-1);
        $this.$padHorizontal = 0;
        $this.$padVertical = 0;
        $this.$stencil = 0;
        $this.$antialiasing = 0;
        $this.$alpha = 0;
        $this.$premultipliedAlpha = 0;
        $this.$preserveDrawingBuffer = 0;
        $this.$useDebugGL = 0;
        $this.$usePhysicalPixels = 1;
        $this.$canvasID = $canvasID;
    }
    var cbg_Application = $rt_classWithoutFields(0);
    function cgxgbt_TeaApplication() {
        var a = this; jl_Object.call(a);
        a.$graphics = null;
        a.$input = null;
        a.$files = null;
        a.$net = null;
        a.$audio = null;
        a.$config = null;
        a.$queueAppListener = null;
        a.$appListener = null;
        a.$lifecycleListeners = null;
        a.$window = null;
        a.$initState = null;
        a.$lastWidth = 0;
        a.$lastHeight = 0;
        a.$logger = null;
        a.$logLevel = 0;
        a.$preloader0 = null;
        a.$prefs = null;
        a.$clipboard = null;
        a.$runnables = null;
        a.$runnablesHelper = null;
        a.$hostPageBaseURL = null;
    }
    var cgxgbt_TeaApplication_agentInfo = null;
    function cgxgbt_TeaApplication__init_0(var_0, var_1) {
        var var_2 = new cgxgbt_TeaApplication();
        cgxgbt_TeaApplication__init_(var_2, var_0, var_1);
        return var_2;
    }
    function cgxgbt_TeaApplication__init_($this, $appListener, $config) {
        var var$3;
        var$3 = new cbgu_Array;
        var$3.$ordered = 1;
        var$3.$items = $rt_createArray(jl_Object, 4);
        $this.$lifecycleListeners = var$3;
        cgxgbt_TeaApplication$AppState_$callClinit();
        $this.$initState = cgxgbt_TeaApplication$AppState_LOAD_ASSETS;
        $this.$lastWidth = (-1);
        $this.$lastHeight = 1;
        $this.$logLevel = 1;
        $this.$prefs = cbgu_ObjectMap__init_(51, 0.800000011920929);
        var$3 = new cbgu_Array;
        var$3.$ordered = 1;
        var$3.$items = $rt_createArray(jl_Object, 16);
        $this.$runnables = var$3;
        var$3 = new cbgu_Array;
        var$3.$ordered = 1;
        var$3.$items = $rt_createArray(jl_Object, 16);
        $this.$runnablesHelper = var$3;
        cgxgbtdi_TeaWindow_$callClinit();
        $this.$window = cgxgbtdi_TeaWindow_TEA_WINDOW;
        $this.$config = $config;
        $this.$queueAppListener = $appListener;
        cgxgbt_TeaApplication_init($this);
    }
    function cgxgbt_TeaApplication_init($this) {
        var var$1, var$2, var$3, $indexQM, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
        cgxgbt_TeaApplication_agentInfo = cgxgbta_TeaWebAgent_createAgent$js_body$_1();
        jl_System_initPropertiesIfNeeded();
        ju_Hashtable_put(jl_System_properties, $rt_s(92), $rt_s(45));
        var$1 = $rt_str(cgxgbt_TeaApplication_agentInfo.userAgent);
        jl_System_initPropertiesIfNeeded();
        ju_Hashtable_put(jl_System_properties, $rt_s(93), var$1);
        if (cgxgbt_TeaApplication_agentInfo.windows ? 1 : 0) {
            jl_System_initPropertiesIfNeeded();
            ju_Hashtable_put(jl_System_properties, $rt_s(94), $rt_s(95));
        } else if (cgxgbt_TeaApplication_agentInfo.macOS ? 1 : 0)
            jl_System_setProperty($rt_s(94), $rt_s(96));
        else if (!(cgxgbt_TeaApplication_agentInfo.linux ? 1 : 0))
            jl_System_setProperty($rt_s(94), $rt_s(97));
        else
            jl_System_setProperty($rt_s(94), $rt_s(8));
        var$2 = new cgxgbtp_AssetDownloadImpl;
        var$3 = $this.$config.$showDownloadLogs;
        var$2.$useBrowserCache = 0;
        var$2.$useInlineBase64 = 0;
        var$2.$showLogs = 1;
        var$2.$showLogs = var$3;
        cgxgbtp_AssetDownloader_instance = var$2;
        cgxgbtdi_TeaWindow_$callClinit();
        var$1 = $rt_str(cgxgbtdi_TeaWindow_TEA_WINDOW.$window0.location.href);
        $this.$hostPageBaseURL = var$1;
        if (jl_String_contains(var$1, $rt_s(98))) {
            var$2 = jl_String_replace($this.$hostPageBaseURL, $rt_s(99), $rt_s(45));
            $this.$hostPageBaseURL = var$2;
            $this.$hostPageBaseURL = jl_String_replace(var$2, $rt_s(100), $rt_s(45));
        }
        $indexQM = jl_String_indexOf($this.$hostPageBaseURL, 63, 0);
        if ($indexQM >= 0)
            $this.$hostPageBaseURL = jl_String_substring($this.$hostPageBaseURL, 0, $indexQM);
        var$2 = $this.$config;
        cgxgbt_TeaTool_useGLArrayBuffer = var$2.$useGLArrayBuffer;
        var$1 = cgxgbt_TeaGraphics__init_(var$2);
        $this.$graphics = var$1;
        var$2 = cgxgbtp_Preloader__init_($this.$hostPageBaseURL, var$1.$canvas0, $this);
        $this.$preloader0 = var$2;
        var$3 = $this.$config.$preloadAssets;
        var$5 = cgxgbtp_AssetDownloader_instance;
        var$6 = var$2.$baseUrl;
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        var$8 = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, var$8, var$6);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(101));
        var$9 = new jl_String;
        var$10 = var$7.$buffer;
        var$11 = var$7.$length;
        var$12 = $rt_createCharArray(var$11);
        var$9.$characters = var$12;
        jl_System_fastArraycopy(var$10, 0, var$12, 0, var$11);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, var$9);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(102));
        var$7 = new jl_String;
        var$12 = var$6.$buffer;
        var$13 = var$6.$length;
        var$10 = $rt_createCharArray(var$13);
        var$7.$characters = var$10;
        jl_System_fastArraycopy(var$12, 0, var$10, 0, var$13);
        cgxgbtp_AssetDownloadImpl_loadText(var$5, 1, var$7, cgxgbtp_Preloader$4__init_(var$2, $rt_s(102), var$3));
        $this.$input = cgxgbt_TeaInput__init_($this.$graphics.$canvas0);
        $this.$files = cgxgbt_TeaFiles__init_($this.$preloader0);
        $this.$net = cgxgbt_TeaNet__init_();
        $this.$logger = cgxgbt_TeaApplicationLogger__init_();
        $this.$clipboard = cgxgbt_TeaClipboard__init_();
        if ($this.$config.$useNativePixmap)
            cgxgbt_TeaApplication_initGdx($this);
        cbg_Gdx_app = $this;
        var$2 = $this.$graphics;
        cbg_Gdx_graphics = var$2;
        cbg_Gdx_gl = cgxgbt_TeaGraphics_getGL20(var$2);
        cbg_Gdx_gl20 = cgxgbt_TeaGraphics_getGL20($this.$graphics);
        cbg_Gdx_gl30 = cgxgbt_TeaGraphics_getGL30($this.$graphics);
        cbg_Gdx_input = $this.$input;
        cbg_Gdx_files = $this.$files;
        cbg_Gdx_net = $this.$net;
        var$2 = cgxgbt_DefaultTeaAudio__init_();
        $this.$audio = var$2;
        cbg_Gdx_audio = var$2;
        var$2 = cgxgbtdi_TeaWindow_getDocument($this.$window);
        var$6 = cgxgbt_TeaApplication$1__init_($this);
        var$2.addEventListener("visibilitychange", otji_JS_function(var$6, "handleEvent"));
        cgxgbtdi_TeaWindow_requestAnimationFrame($this.$window, $this);
        if (cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication($this.$config))
            cgxgbtdi_TeaWindow_addEventListener($this.$window, $rt_s(103), cgxgbt_TeaApplication$2__init_($this));
    }
    function cgxgbt_TeaApplication_run($this) {
        var $state, $queue, $element, $total, $percentage, $progressBar, $t, $$je;
        $state = $this.$initState;
        a: {
            try {
                b: {
                    cgxgbt_TeaApplication$4_$callClinit();
                    switch (cgxgbt_TeaApplication$4_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal($state)]) {
                        case 1:
                            $queue = cgxgbtp_AssetDownloadImpl_getQueue(cgxgbtp_AssetDownloader_getInstance());
                            if (!$queue) {
                                cgxgbt_TeaApplication$AppState_$callClinit();
                                $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
                                $element = $rt_globals.window.document.getElementById("progress");
                                if ($element !== null)
                                    $element.style.setProperty("display", "none");
                                break b;
                            }
                            $total = $this.$preloader0.$assetTotal;
                            if ($total > 0) {
                                $percentage = 25 + ((75 * ($total - $queue | 0) | 0) / $total | 0) | 0;
                                $progressBar = $rt_globals.window.document.getElementById("progress-bar");
                                if ($progressBar !== null) {
                                    $element = $progressBar.style;
                                    $progressBar = jl_StringBuilder__init_();
                                    jl_StringBuilder_append2(jl_StringBuilder_append0($progressBar, $percentage), 37);
                                    $t = jl_StringBuilder_toString($progressBar);
                                    $element.setProperty("width", $rt_ustr($t));
                                }
                            }
                            break b;
                        case 2:
                            break;
                        default:
                            break b;
                    }
                    if ($this.$queueAppListener !== null) {
                        $state = $this.$appListener;
                        if ($state !== null) {
                            ka_KtxGame_pause($state);
                            ka_KtxGame_dispose($this.$appListener);
                        }
                        cgxgbt_TeaInput_setInputProcessor($this.$input, null);
                        cgxgbt_TeaInput_reset($this.$input);
                        cbgu_Array_clear($this.$runnables);
                        $this.$appListener = $this.$queueAppListener;
                        $this.$queueAppListener = null;
                        cgxgbt_TeaApplication$AppState_$callClinit();
                        $this.$initState = cgxgbt_TeaApplication$AppState_APP_CREATE;
                        $this.$graphics.$frameId = Long_ZERO;
                    }
                    cgxgbt_TeaApplication_step($this, $this.$appListener);
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                    $t = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            $state = $this.$window;
            $state.$runnable = $this;
            $rt_globals.requestAnimationFrame(otji_JS_function($state, "onAnimationFrame"));
            return;
        }
        if (jl_System_errCache === null) {
            $element = new ji_PrintStream;
            $element.$out = otcic_StderrOutputStream_INSTANCE;
            $state = new jl_StringBuilder;
            $state.$buffer = $rt_createCharArray(16);
            $element.$sb = $state;
            $element.$buffer1 = $rt_createCharArray(32);
            $element.$autoFlush = 0;
            jnci_UTF8Charset_$callClinit();
            $element.$charset = jnci_UTF8Charset_INSTANCE;
            jl_System_errCache = $element;
        }
        jl_Throwable_printStackTrace0($t, jl_System_errCache);
        $rt_throw($t);
    }
    function cgxgbt_TeaApplication_step($this, $appListener) {
        var var$2, var$3, $resizeBypass, var$5, var$6, $i, var$8;
        cgxgbt_TeaGraphics_update($this.$graphics);
        var$2 = cbg_Gdx_graphics.$canvas0.width;
        var$3 = cbg_Gdx_graphics.$canvas0.height;
        $resizeBypass = 0;
        var$5 = $this.$initState;
        cgxgbt_TeaApplication$AppState_$callClinit();
        if (var$5 === cgxgbt_TeaApplication$AppState_APP_CREATE) {
            $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
            cbg_Gdx_app.$logLevel = 3;
            var$6 = new igtg_FirstScreen;
            igtg_FirstScreen_$callClinit();
            var$6.$fps = igtg_FrameRate__init_();
            if (cbgu_ObjectMap_containsKey($appListener.$screens, $rt_cls(igtg_FirstScreen))) {
                $appListener = new cbgu_GdxRuntimeException;
                var$6 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$6);
                cbgu_GdxRuntimeException__init_($appListener, jl_StringBuilder_toString(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append1(var$6, $rt_s(104)), $rt_cls(igtg_FirstScreen)), 46)));
                $rt_throw($appListener);
            }
            cbgu_ObjectMap_put($appListener.$screens, $rt_cls(igtg_FirstScreen), var$6);
            ka_KtxGame_setScreen($appListener, $rt_cls(igtg_FirstScreen));
            ka_KtxGame_resume($appListener);
            $resizeBypass = 1;
        }
        if (!(var$2 == $this.$lastWidth && var$3 == $this.$lastHeight && !$resizeBypass)) {
            $this.$lastWidth = var$2;
            $this.$lastHeight = var$3;
            cbg_Gdx_gl.$glViewport(0, 0, var$2, var$3);
            ka_KtxGame_resize($appListener, var$2, var$3);
        }
        cbgu_Array_addAll1($this.$runnablesHelper, $this.$runnables);
        cbgu_Array_clear($this.$runnables);
        $i = 0;
        while (true) {
            var$6 = $this.$runnablesHelper;
            if ($i >= var$6.$size)
                break;
            (cbgu_Array_get(var$6, $i)).$run();
            $i = $i + 1 | 0;
        }
        cbgu_Array_clear(var$6);
        var$6 = $this.$graphics;
        var$8 = Long_add(var$6.$frameId, Long_fromInt(1));
        var$6.$frameId = var$8;
        if (Long_gt(var$8, Long_fromInt(60)))
            ka_KtxGame_render($appListener);
        cgxgbt_TeaInput_reset($this.$input);
    }
    function cgxgbt_TeaApplication_error($this, $tag, $message, $exception) {
        var var$4, var$5, var$6, var$7, var$8, var$9;
        if ($this.$logLevel >= 1) {
            if (jl_System_errCache === null) {
                var$4 = new ji_PrintStream;
                var$4.$out = otcic_StderrOutputStream_INSTANCE;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                var$4.$sb = var$5;
                var$4.$buffer1 = $rt_createCharArray(32);
                var$4.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                var$4.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_errCache = var$4;
            }
            var$4 = jl_System_errCache;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            var$6 = var$5.$length;
            if ($tag === null)
                $tag = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$5, var$6, $tag);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(75));
            var$6 = var$5.$length;
            if ($message === null)
                $message = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$5, var$6, $message);
            $tag = new jl_String;
            var$7 = var$5.$buffer;
            var$8 = var$5.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray(var$8);
            $tag.$characters = var$9;
            jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
            $message = var$4.$sb;
            jl_AbstractStringBuilder_insert($message, $message.$length, $tag);
            var$6 = $message.$length;
            jl_AbstractStringBuilder_insertSpace($message, var$6, var$6 + 1 | 0);
            $message.$buffer.data[var$6] = 10;
            ji_PrintStream_printSB(var$4);
            if (jl_System_errCache === null) {
                $message = new ji_PrintStream;
                $message.$out = otcic_StderrOutputStream_INSTANCE;
                $tag = new jl_StringBuilder;
                $tag.$buffer = $rt_createCharArray(16);
                $message.$sb = $tag;
                $message.$buffer1 = $rt_createCharArray(32);
                $message.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                $message.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_errCache = $message;
            }
            jl_Throwable_printStackTrace0($exception, jl_System_errCache);
        }
    }
    function cgxgbt_TeaApplication_initGdx($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$1 = $this.$preloader0;
        var$2 = new cgxgbt_TeaApplication$3;
        var$2.$this$0 = $this;
        var$3 = cgxgbtp_AssetDownloader_instance;
        var$1 = var$1.$baseUrl;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        var$5 = var$4.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, var$5, var$1);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(101));
        var$1 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$1.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$1);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(105));
        var$9 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        var$8 = $rt_createCharArray(var$7);
        var$9.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        cgxgbtp_AssetDownloadImpl_loadScript(var$3, 1, var$9, var$2);
    }
    var cbg_ApplicationListener = $rt_classWithoutFields(0);
    var ka_KtxApplicationAdapter = $rt_classWithoutFields(0);
    function ka_KtxGame() {
        var a = this; jl_Object.call(a);
        a.$clearScreen = 0;
        a.$screens = null;
        a.$currentScreen = null;
    }
    function ka_KtxGame_render($this) {
        if ($this.$clearScreen) {
            cbg_Gdx_gl.$glClearColor(0.0, 0.0, 0.0, 1.0);
            cbg_Gdx_gl.$glClear(16640);
        }
        $this.$currentScreen.$render0(cbg_Gdx_graphics.$deltaTime);
    }
    function ka_KtxGame_resize($this, $width, $height) {
        $this.$currentScreen.$resize0($width, $height);
    }
    function ka_KtxGame_pause($this) {
        $this.$currentScreen.$pause();
    }
    function ka_KtxGame_resume($this) {
        $this.$currentScreen.$resume();
    }
    function ka_KtxGame_setScreen($this, $type) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($type !== null) {
            $this.$currentScreen.$hide();
            var$2 = cbgu_ObjectMap_get($this.$screens, $type);
            if (var$2 !== null) {
                $this.$currentScreen = var$2;
                var$2.$resize0(cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics), cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics));
                $this.$currentScreen.$show();
                return;
            }
            var$3 = new cbgu_GdxRuntimeException;
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_2(var$2, 16);
            jl_AbstractStringBuilder_append1(var$2, $rt_s(106));
            jl_AbstractStringBuilder_append0(var$2, $type);
            cbgu_GdxRuntimeException__init_(var$3, jl_StringBuilder_toString(jl_StringBuilder_append2(var$2, 46)));
            $rt_throw(var$3);
        }
        $type = new jl_NullPointerException;
        var$2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(107));
        $type.$suppressionEnabled = 1;
        $type.$writableStackTrace = 1;
        $type.$message = var$2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$2 = $rt_cls(kji_Intrinsics).$name;
        var$4 = $type.$stackTrace;
        var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$4 = var$5.data;
        var$6 = var$4.length;
        var$7 = (-1);
        var$8 = 0;
        while (var$8 < var$6) {
            if (jl_String_equals(var$2, jl_StackTraceElement_getClassName(var$4[var$8])))
                var$7 = var$8;
            var$8 = var$8 + 1 | 0;
        }
        var$8 = var$7 + 1 | 0;
        var$3 = var$5.constructor;
        if (var$3 === null)
            var$2 = null;
        else {
            var$2 = var$3.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                jl_Object__init_0(var$2);
                var$2.$platformClass = var$3;
                var$9 = var$2;
                var$3.classObject = var$9;
            }
        }
        var$10 = var$2.$platformClass.$meta.item;
        if (var$10 === null)
            var$3 = null;
        else {
            var$3 = var$10.classObject;
            if (var$3 === null) {
                var$3 = new jl_Class;
                jl_Object__init_0(var$3);
                var$3.$platformClass = var$10;
                var$2 = var$3;
                var$10.classObject = var$2;
            }
        }
        var$7 = var$6 - var$8 | 0;
        if (var$3 === null) {
            $type = new jl_NullPointerException;
            jl_Exception__init_0($type);
            $rt_throw($type);
        }
        if (var$3 === $rt_cls($rt_voidcls())) {
            $type = new jl_IllegalArgumentException;
            jl_Exception__init_0($type);
            $rt_throw($type);
        }
        if (var$7 < 0) {
            $type = new jl_NegativeArraySizeException;
            jl_Exception__init_0($type);
            $rt_throw($type);
        }
        var$2 = jlr_Array_newInstanceImpl(var$3.$platformClass, var$7);
        var$7 = var$8;
        while (var$7 < var$6) {
            var$2.data[var$7 - var$8 | 0] = var$4[var$7];
            var$7 = var$7 + 1 | 0;
        }
        $type.$stackTrace = var$2.$clone();
        $rt_throw($type);
    }
    function ka_KtxGame_dispose($this) {
        var $$this$forEach$iv, var$2, var$3, $it, var$5, $element$iv, $exception, var$8, var$9, var$10, $$je;
        $$this$forEach$iv = cbgu_ObjectMap_values($this.$screens);
        if ($$this$forEach$iv !== null) {
            while (true) {
                var$2 = $$this$forEach$iv.$valid0;
                if (!var$2) {
                    $$this$forEach$iv = new cbgu_GdxRuntimeException;
                    $$this$forEach$iv.$suppressionEnabled = 1;
                    $$this$forEach$iv.$writableStackTrace = 1;
                    $$this$forEach$iv.$message = $rt_s(108);
                    $rt_throw($$this$forEach$iv);
                }
                var$3 = $$this$forEach$iv.$hasNext;
                if (!var$3)
                    break;
                if (!var$3) {
                    $it = new ju_NoSuchElementException;
                    $it.$suppressionEnabled = 1;
                    $it.$writableStackTrace = 1;
                    $rt_throw($it);
                }
                if (!var$2) {
                    $$this$forEach$iv = new cbgu_GdxRuntimeException;
                    $$this$forEach$iv.$suppressionEnabled = 1;
                    $$this$forEach$iv.$writableStackTrace = 1;
                    $$this$forEach$iv.$message = $rt_s(108);
                    $rt_throw($$this$forEach$iv);
                }
                $it = $$this$forEach$iv.$map;
                var$5 = $it.$valueTable.data;
                var$2 = $$this$forEach$iv.$nextIndex;
                $element$iv = var$5[var$2];
                $$this$forEach$iv.$currentIndex = var$2;
                var$5 = $it.$keyTable.data;
                var$3 = var$5.length;
                a: {
                    while (true) {
                        var$2 = $$this$forEach$iv.$nextIndex + 1 | 0;
                        $$this$forEach$iv.$nextIndex = var$2;
                        if (var$2 >= var$3)
                            break;
                        if (var$5[var$2] === null)
                            continue;
                        else {
                            $$this$forEach$iv.$hasNext = 1;
                            break a;
                        }
                    }
                    $$this$forEach$iv.$hasNext = 0;
                }
                $it = $element$iv;
                b: {
                    try {
                        igtg_FirstScreen_dispose($it);
                        break b;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $exception = $$je;
                        } else {
                            throw $$e;
                        }
                    }
                    if ($it === null) {
                        $it = new jl_NullPointerException;
                        $it.$suppressionEnabled = 1;
                        $it.$writableStackTrace = 1;
                        if ($rt_cls(kji_Intrinsics).$name === null)
                            $rt_cls(kji_Intrinsics).$name = otp_Platform_getName($rt_cls(kji_Intrinsics).$platformClass);
                        $rt_throw(kji_Intrinsics_sanitizeStackTrace0($it, $rt_cls(kji_Intrinsics).$name));
                    }
                    ka_KtxGame_onScreenDisposalError($this, $it, $exception);
                }
            }
            return;
        }
        $exception = new jl_NullPointerException;
        $$this$forEach$iv = new jl_StringBuilder;
        $$this$forEach$iv.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($$this$forEach$iv, $$this$forEach$iv.$length, $rt_s(109));
        jl_AbstractStringBuilder_insert($$this$forEach$iv, $$this$forEach$iv.$length, $rt_s(88));
        $it = new jl_String;
        var$5 = $$this$forEach$iv.$buffer;
        var$3 = $$this$forEach$iv.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$3);
        $it.$characters = var$8;
        jl_System_fastArraycopy(var$5, 0, var$8, 0, var$3);
        $exception.$suppressionEnabled = 1;
        $exception.$writableStackTrace = 1;
        $exception.$message = $it;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $$this$forEach$iv = $rt_cls(kji_Intrinsics).$name;
        var$5 = $exception.$stackTrace;
        var$8 = var$5 !== null ? var$5.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$5 = var$8.data;
        var$3 = var$5.length;
        var$9 = (-1);
        var$2 = 0;
        while (var$2 < var$3) {
            if (jl_String_equals($$this$forEach$iv, jl_StackTraceElement_getClassName(var$5[var$2])))
                var$9 = var$2;
            var$2 = var$2 + 1 | 0;
        }
        var$2 = var$9 + 1 | 0;
        $$this$forEach$iv = var$8.constructor;
        if ($$this$forEach$iv === null)
            $it = null;
        else {
            $it = $$this$forEach$iv.classObject;
            if ($it === null) {
                $it = new jl_Class;
                $it.$platformClass = $$this$forEach$iv;
                $element$iv = $it;
                $$this$forEach$iv.classObject = $element$iv;
            }
        }
        $element$iv = $it.$platformClass.$meta.item;
        if ($element$iv === null)
            $$this$forEach$iv = null;
        else {
            $$this$forEach$iv = $element$iv.classObject;
            if ($$this$forEach$iv === null) {
                $$this$forEach$iv = new jl_Class;
                $$this$forEach$iv.$platformClass = $element$iv;
                var$10 = $$this$forEach$iv;
                $element$iv.classObject = var$10;
            }
        }
        var$9 = var$3 - var$2 | 0;
        if ($$this$forEach$iv === null) {
            $it = new jl_NullPointerException;
            jl_Throwable__init_0($it);
            $rt_throw($it);
        }
        if ($$this$forEach$iv === $rt_cls($rt_voidcls())) {
            $it = new jl_IllegalArgumentException;
            jl_Throwable__init_0($it);
            $rt_throw($it);
        }
        if (var$9 < 0) {
            $it = new jl_NegativeArraySizeException;
            jl_Throwable__init_0($it);
            $rt_throw($it);
        }
        $element$iv = jlr_Array_newInstanceImpl($$this$forEach$iv.$platformClass, var$9);
        var$9 = var$2;
        while (var$9 < var$3) {
            $element$iv.data[var$9 - var$2 | 0] = var$5[var$9];
            var$9 = var$9 + 1 | 0;
        }
        $exception.$stackTrace = $element$iv.$clone();
        $rt_throw($exception);
    }
    function ka_KtxGame_onScreenDisposalError($this, $screen, $exception) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        if ($screen !== null) {
            if ($exception !== null) {
                var$3 = cbg_Gdx_app;
                var$4 = new jl_StringBuilder;
                var$4.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_append1(var$4, $rt_s(110));
                jl_AbstractStringBuilder_append0(var$4, jl_Object_getClass($screen));
                cgxgbt_TeaApplication_error(var$3, $rt_s(111), jl_StringBuilder_toString(jl_StringBuilder_append1(var$4, $rt_s(112))), $exception);
                return;
            }
            $screen = new jl_NullPointerException;
            $exception = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(113));
            $screen.$suppressionEnabled = 1;
            $screen.$writableStackTrace = 1;
            $screen.$message = $exception;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            var$4 = $rt_cls(kji_Intrinsics).$name;
            var$5 = $screen.$stackTrace;
            var$6 = var$5 !== null ? var$5.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$5 = var$6.data;
            var$7 = var$5.length;
            var$8 = (-1);
            var$9 = 0;
            while (var$9 < var$7) {
                if (jl_String_equals(var$4, jl_StackTraceElement_getClassName(var$5[var$9])))
                    var$8 = var$9;
                var$9 = var$9 + 1 | 0;
            }
            var$10 = var$8 + 1 | 0;
            var$4 = var$6.constructor;
            if (var$4 === null)
                $exception = null;
            else {
                $exception = var$4.classObject;
                if ($exception === null) {
                    $exception = new jl_Class;
                    jl_Object__init_0($exception);
                    $exception.$platformClass = var$4;
                    var$3 = $exception;
                    var$4.classObject = var$3;
                }
            }
            var$11 = $exception.$platformClass.$meta.item;
            if (var$11 === null)
                $exception = null;
            else {
                $exception = var$11.classObject;
                if ($exception === null) {
                    $exception = new jl_Class;
                    jl_Object__init_0($exception);
                    $exception.$platformClass = var$11;
                    var$4 = $exception;
                    var$11.classObject = var$4;
                }
            }
            $exception = jlr_Array_newInstance($exception, var$7 - var$10 | 0);
            var$8 = var$10;
            while (var$8 < var$7) {
                $exception.data[var$8 - var$10 | 0] = var$5[var$8];
                var$8 = var$8 + 1 | 0;
            }
            $screen.$stackTrace = $exception.$clone();
            $rt_throw($screen);
        }
        $screen = new jl_NullPointerException;
        $exception = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(114));
        $screen.$suppressionEnabled = 1;
        $screen.$writableStackTrace = 1;
        $screen.$message = $exception;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$4 = $rt_cls(kji_Intrinsics).$name;
        var$5 = $screen.$stackTrace;
        var$6 = var$5 !== null ? var$5.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$5 = var$6.data;
        var$8 = var$5.length;
        var$9 = (-1);
        var$10 = 0;
        while (var$10 < var$8) {
            if (jl_String_equals(var$4, jl_StackTraceElement_getClassName(var$5[var$10])))
                var$9 = var$10;
            var$10 = var$10 + 1 | 0;
        }
        var$10 = var$9 + 1 | 0;
        var$4 = var$6.constructor;
        if (var$4 === null)
            $exception = null;
        else {
            $exception = var$4.classObject;
            if ($exception === null) {
                $exception = new jl_Class;
                jl_Object__init_0($exception);
                $exception.$platformClass = var$4;
                var$3 = $exception;
                var$4.classObject = var$3;
            }
        }
        var$11 = $exception.$platformClass.$meta.item;
        if (var$11 === null)
            var$4 = null;
        else {
            var$4 = var$11.classObject;
            if (var$4 === null) {
                var$4 = new jl_Class;
                jl_Object__init_0(var$4);
                var$4.$platformClass = var$11;
                $exception = var$4;
                var$11.classObject = $exception;
            }
        }
        var$9 = var$8 - var$10 | 0;
        if (var$4 === null) {
            $screen = new jl_NullPointerException;
            jl_Exception__init_0($screen);
            $rt_throw($screen);
        }
        if (var$4 === $rt_cls($rt_voidcls())) {
            $screen = new jl_IllegalArgumentException;
            jl_Exception__init_0($screen);
            $rt_throw($screen);
        }
        if (var$9 < 0) {
            $screen = new jl_NegativeArraySizeException;
            jl_Exception__init_0($screen);
            $rt_throw($screen);
        }
        var$3 = jlr_Array_newInstanceImpl(var$4.$platformClass, var$9);
        var$9 = var$10;
        while (var$9 < var$8) {
            var$3.data[var$9 - var$10 | 0] = var$5[var$9];
            var$9 = var$9 + 1 | 0;
        }
        $screen.$stackTrace = var$3.$clone();
        $rt_throw($screen);
    }
    var igtg_Game = $rt_classWithoutFields(ka_KtxGame);
    var igtg_Game_Companion = null;
    function igtg_Game__init_() {
        var var_0 = new igtg_Game();
        igtg_Game__init_0(var_0);
        return var_0;
    }
    function igtg_Game__init_0($this) {
        $this.$clearScreen = 1;
        $this.$screens = cbgu_ObjectMap__init_(51, 0.800000011920929);
        $this.$currentScreen = new ka_GameKt$emptyScreen$1;
    }
    function igtg_Game__clinit_() {
        igtg_Game_Companion = new igtg_Game$Companion;
    }
    var jl_System = $rt_classWithoutFields();
    var jl_System_outCache = null;
    var jl_System_errCache = null;
    var jl_System_properties = null;
    function jl_System_arraycopy($src, $srcPos, $dest, $destPos, $length) {
        var var$6, $elem, $targetType, $srcType, $srcArray, $i, var$12, var$13, var$14, var$15;
        if ($src !== null && $dest !== null) {
            if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
                a: {
                    b: {
                        if ($src !== $dest) {
                            var$6 = $src.constructor;
                            if (var$6 === null)
                                $elem = null;
                            else {
                                $elem = var$6.classObject;
                                if ($elem === null) {
                                    $elem = new jl_Class;
                                    $elem.$platformClass = var$6;
                                    $targetType = $elem;
                                    var$6.classObject = $targetType;
                                }
                            }
                            $srcType = jl_Class_getComponentType($elem);
                            var$6 = $dest.constructor;
                            if (var$6 === null)
                                $elem = null;
                            else {
                                $elem = var$6.classObject;
                                if ($elem === null) {
                                    $elem = new jl_Class;
                                    $elem.$platformClass = var$6;
                                    $targetType = $elem;
                                    var$6.classObject = $targetType;
                                }
                            }
                            $targetType = jl_Class_getComponentType($elem);
                            if ($srcType !== null && $targetType !== null) {
                                if ($srcType === $targetType)
                                    break b;
                                if (!($srcType.$platformClass.$meta.primitive ? 1 : 0) && !($targetType.$platformClass.$meta.primitive ? 1 : 0)) {
                                    $srcArray = $src;
                                    $i = 0;
                                    var$12 = $srcPos;
                                    while ($i < $length) {
                                        var$13 = $srcArray.data;
                                        var$14 = var$12 + 1 | 0;
                                        var$6 = var$13[var$12];
                                        var$15 = $targetType.$platformClass;
                                        if (!(var$6 !== null && !(typeof var$6.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable(var$6.constructor, var$15) ? 1 : 0)) {
                                            jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                            $src = new jl_ArrayStoreException;
                                            $src.$suppressionEnabled = 1;
                                            $src.$writableStackTrace = 1;
                                            $rt_throw($src);
                                        }
                                        $i = $i + 1 | 0;
                                        var$12 = var$14;
                                    }
                                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                    return;
                                }
                                if (!($srcType.$platformClass.$meta.primitive ? 1 : 0))
                                    break a;
                                if ($targetType.$platformClass.$meta.primitive ? 1 : 0)
                                    break b;
                                else
                                    break a;
                            }
                            $src = new jl_ArrayStoreException;
                            $src.$suppressionEnabled = 1;
                            $src.$writableStackTrace = 1;
                            $rt_throw($src);
                        }
                    }
                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                    return;
                }
                $src = new jl_ArrayStoreException;
                $src.$suppressionEnabled = 1;
                $src.$writableStackTrace = 1;
                $rt_throw($src);
            }
            $src = new jl_IndexOutOfBoundsException;
            $src.$suppressionEnabled = 1;
            $src.$writableStackTrace = 1;
            $rt_throw($src);
        }
        $dest = new jl_NullPointerException;
        $dest.$suppressionEnabled = 1;
        $dest.$writableStackTrace = 1;
        $dest.$message = $rt_s(115);
        $rt_throw($dest);
    }
    function jl_System_fastArraycopy($src, $srcPos, $dest, $destPos, $length) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src) && ($destPos + $length | 0) <= jlr_Array_getLength($dest)) {
            jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
            return;
        }
        $src = new jl_IndexOutOfBoundsException;
        $src.$suppressionEnabled = 1;
        $src.$writableStackTrace = 1;
        $rt_throw($src);
    }
    function jl_System_doArrayCopy(var$1, var$2, var$3, var$4, var$5) {
        if (var$5 === 0) {
            return; 
        } else if (typeof var$1.data.buffer !== 'undefined') {
            var$3.data.set(var$1.data.subarray(var$2, var$2 + var$5), var$4);
        } else if (var$1 !== var$3 || var$4 < var$2) {
            for (var i = 0; i < var$5; i = (i + 1) | 0) {
                var$3.data[var$4++] = var$1.data[var$2++];
            }
        } else {
            var$2 = (var$2 + var$5) | 0;
            var$4 = (var$4 + var$5) | 0;
            for (var i = 0; i < var$5; i = (i + 1) | 0) {
                var$3.data[--var$4] = var$1.data[--var$2];
            }
        }
    }
    function jl_System_currentTimeMillis() {
        return Long_fromNumber(new Date().getTime());
    }
    function jl_System_initPropertiesIfNeeded() {
        var $defaults, var$2;
        if (jl_System_properties === null) {
            $defaults = new ju_Properties;
            ju_Hashtable__init_($defaults, 11);
            ju_Hashtable_put($defaults, $rt_s(116), $rt_s(117));
            ju_Hashtable_put($defaults, $rt_s(94), $rt_s(118));
            ju_Hashtable_put($defaults, $rt_s(119), $rt_s(120));
            ju_Hashtable_put($defaults, $rt_s(121), $rt_s(122));
            ju_Hashtable_put($defaults, $rt_s(123), $rt_s(124));
            ju_Hashtable_put($defaults, $rt_s(125), $rt_s(126));
            ju_Hashtable_put($defaults, $rt_s(127), $rt_s(117));
            ju_Hashtable_put($defaults, $rt_s(128), $rt_s(120));
            var$2 = new ju_Properties;
            ju_Hashtable__init_(var$2, 11);
            var$2.$defaults = $defaults;
            jl_System_properties = var$2;
        }
    }
    function jl_System_setProperty($key, $value) {
        jl_System_initPropertiesIfNeeded();
        return ju_Hashtable_put(jl_System_properties, $key, $value);
    }
    var otci_IntegerUtil = $rt_classWithoutFields();
    function otci_IntegerUtil_toUnsignedLogRadixString($value, $radixLog2) {
        var $radix, $mask, $sz, $chars, var$7, $pos, $target, $target_0, var$11;
        if (!$value)
            return $rt_s(47);
        $radix = 1 << $radixLog2;
        $mask = $radix - 1 | 0;
        $sz = (((32 - jl_Integer_numberOfLeadingZeros($value) | 0) + $radixLog2 | 0) - 1 | 0) / $radixLog2 | 0;
        $chars = $rt_createCharArray($sz);
        var$7 = $chars.data;
        $pos = $rt_imul($sz - 1 | 0, $radixLog2);
        $target = 0;
        while ($pos >= 0) {
            $target_0 = $target + 1 | 0;
            var$7[$target] = jl_Character_forDigit(($value >>> $pos | 0) & $mask, $radix);
            $pos = $pos - $radixLog2 | 0;
            $target = $target_0;
        }
        var$11 = new jl_String;
        jl_String_$callClinit();
        $radixLog2 = var$7.length;
        var$7 = $rt_createCharArray($radixLog2);
        var$11.$characters = var$7;
        jl_System_fastArraycopy($chars, 0, var$7, 0, $radixLog2);
        return var$11;
    }
    var igtg_Game$Companion = $rt_classWithoutFields();
    var cgxgbt_TeaApplication$AppState = $rt_classWithoutFields(jl_Enum);
    var cgxgbt_TeaApplication$AppState_LOAD_ASSETS = null;
    var cgxgbt_TeaApplication$AppState_APP_CREATE = null;
    var cgxgbt_TeaApplication$AppState_APP_LOOP = null;
    var cgxgbt_TeaApplication$AppState_$VALUES = null;
    function cgxgbt_TeaApplication$AppState_$callClinit() {
        cgxgbt_TeaApplication$AppState_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$AppState);
        cgxgbt_TeaApplication$AppState__clinit_();
    }
    function cgxgbt_TeaApplication$AppState__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new cgxgbt_TeaApplication$AppState;
        cgxgbt_TeaApplication$AppState_$callClinit();
        var$1.$name0 = $rt_s(129);
        var$1.$ordinal = 0;
        cgxgbt_TeaApplication$AppState_LOAD_ASSETS = var$1;
        var$2 = new cgxgbt_TeaApplication$AppState;
        var$2.$name0 = $rt_s(130);
        var$2.$ordinal = 1;
        cgxgbt_TeaApplication$AppState_APP_CREATE = var$2;
        var$3 = new cgxgbt_TeaApplication$AppState;
        var$3.$name0 = $rt_s(131);
        var$3.$ordinal = 2;
        cgxgbt_TeaApplication$AppState_APP_LOOP = var$3;
        cgxgbt_TeaApplication$AppState_$VALUES = $rt_createArrayFromData(cgxgbt_TeaApplication$AppState, [var$1, var$2, var$3]);
    }
    var cgxgbtd_WindowWrapper = $rt_classWithoutFields(0);
    var otj_JSObject = $rt_classWithoutFields(0);
    var otjb_AnimationFrameCallback = $rt_classWithoutFields(0);
    function cgxgbtdi_TeaWindow() {
        var a = this; jl_Object.call(a);
        a.$window0 = null;
        a.$runnable = null;
    }
    var cgxgbtdi_TeaWindow_TEA_WINDOW = null;
    function cgxgbtdi_TeaWindow_$callClinit() {
        cgxgbtdi_TeaWindow_$callClinit = $rt_eraseClinit(cgxgbtdi_TeaWindow);
        cgxgbtdi_TeaWindow__clinit_();
    }
    function cgxgbtdi_TeaWindow_getDocument($this) {
        return $this.$window0.document;
    }
    function cgxgbtdi_TeaWindow_requestAnimationFrame($this, $runnable) {
        $this.$runnable = $runnable;
        $rt_globals.requestAnimationFrame(otji_JS_function($this, "onAnimationFrame"));
    }
    function cgxgbtdi_TeaWindow_addEventListener($this, $type, $listener) {
        var $eListener;
        $eListener = otji_JS_functionAsObject($listener, "handleEvent");
        $this.$window0.addEventListener($rt_ustr($type), otji_JS_function($eListener, "handleEvent"));
    }
    function cgxgbtdi_TeaWindow__clinit_() {
        var var$1;
        var$1 = new cgxgbtdi_TeaWindow;
        cgxgbtdi_TeaWindow_$callClinit();
        var$1.$window0 = $rt_globals.window;
        cgxgbtdi_TeaWindow_TEA_WINDOW = var$1;
    }
    function cgxgbtdi_TeaWindow_onAnimationFrame$exported$0(var$0, var$1) {
        var var$2;
        var$1;
        var$2 = var$0.$runnable;
        var$0.$runnable = null;
        cgxgbt_TeaApplication_run(var$2);
    }
    var cgxgbtu_TeaNavigator = $rt_classWithoutFields();
    var cbgu_Pools = $rt_classWithoutFields();
    var cbgu_Pools_typePools = null;
    function cbgu_Pools_$callClinit() {
        cbgu_Pools_$callClinit = $rt_eraseClinit(cbgu_Pools);
        cbgu_Pools__clinit_();
    }
    function cbgu_Pools_freeAll($objects, $samePool) {
        var $pool, $i, $n, $object, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
        cbgu_Pools_$callClinit();
        if ($objects === null) {
            $pool = new jl_IllegalArgumentException;
            $pool.$suppressionEnabled = 1;
            $pool.$writableStackTrace = 1;
            $pool.$message = $rt_s(35);
            $rt_throw($pool);
        }
        $pool = null;
        $i = 0;
        $n = $objects.$size;
        while ($i < $n) {
            if ($i >= $objects.$size) {
                $object = new jl_IndexOutOfBoundsException;
                $pool = new jl_StringBuilder;
                $pool.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($pool, $pool.$length, $rt_s(36));
                jl_AbstractStringBuilder_insert0($pool, $pool.$length, $i, 10);
                jl_AbstractStringBuilder_insert($pool, $pool.$length, $rt_s(37));
                $samePool = $objects.$size;
                jl_AbstractStringBuilder_insert0($pool, $pool.$length, $samePool, 10);
                $objects = new jl_String;
                var$7 = $pool.$buffer;
                $i = $pool.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray($i);
                $objects.$characters = var$8;
                jl_System_fastArraycopy(var$7, 0, var$8, 0, $i);
                $object.$suppressionEnabled = 1;
                $object.$writableStackTrace = 1;
                $object.$message = $objects;
                $rt_throw($object);
            }
            a: {
                $object = $objects.$items.data[$i];
                if ($object !== null) {
                    if ($pool === null) {
                        $pool = cbgu_Pools_typePools;
                        var$9 = $object.constructor;
                        if (var$9 === null)
                            var$10 = null;
                        else {
                            var$10 = var$9.classObject;
                            if (var$10 === null) {
                                var$10 = new jl_Class;
                                var$10.$platformClass = var$9;
                                var$11 = var$10;
                                var$9.classObject = var$11;
                            }
                        }
                        var$12 = cbgu_ObjectMap_locateKey($pool, var$10);
                        $pool = var$12 < 0 ? null : $pool.$valueTable.data[var$12];
                        if ($pool === null)
                            break a;
                    }
                    var$10 = $pool.$freeObjects;
                    if (var$10.$size < $pool.$max) {
                        cbgu_Array_add(var$10, $object);
                        var$13 = $pool.$peak;
                        var$14 = $pool.$freeObjects.$size;
                        if (var$13 > var$14)
                            var$14 = var$13;
                        $pool.$peak = var$14;
                        if ($rt_isInstance($object, cbgu_Pool$Poolable))
                            $object.$reset();
                    } else if ($rt_isInstance($object, cbgu_Pool$Poolable))
                        $object.$reset();
                    if (!$samePool)
                        $pool = null;
                }
            }
            $i = $i + 1 | 0;
        }
    }
    function cbgu_Pools__clinit_() {
        cbgu_Pools_typePools = cbgu_ObjectMap__init_(51, 0.800000011920929);
    }
    function jl_Float() {
        jl_Number.call(this);
        this.$value1 = 0.0;
    }
    var jl_Float_TYPE = null;
    function jl_Float_floatValue($this) {
        return $this.$value1;
    }
    function jl_Float_valueOf($d) {
        var var$2;
        var$2 = new jl_Float;
        var$2.$value1 = $d;
        return var$2;
    }
    function jl_Float_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$value1;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert1(var$2, var$2.$length, var$1);
        var$3 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$3.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$3;
    }
    function jl_Float_equals($this, $other) {
        var var$2, var$3, var$4;
        if ($this === $other)
            return 1;
        a: {
            if ($other instanceof jl_Float) {
                var$2 = $this.$value1;
                var$3 = $other.$value1;
                if (var$2 !== var$2 ? (var$3 === var$3 ? 0 : 1) : $rt_floatToRawIntBits(var$2) != $rt_floatToRawIntBits(var$3) ? 0 : 1) {
                    var$4 = 1;
                    break a;
                }
            }
            var$4 = 0;
        }
        return var$4;
    }
    function jl_Float_hashCode($this) {
        var var$1;
        var$1 = $this.$value1;
        return ($rt_globals.isNaN(var$1) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$1);
    }
    function jl_Float_parseFloat($string) {
        var var$2, $negativeExp, $start, var$5, $negative, $c, $mantissa, $exp, $mantissaPos, $hasOneDigit, var$12, $numExp;
        var$2 = $string.$characters.data;
        $negativeExp = var$2.length;
        if ($negativeExp ? 0 : 1) {
            $string = new jl_NumberFormatException;
            $string.$suppressionEnabled = 1;
            $string.$writableStackTrace = 1;
            $rt_throw($string);
        }
        $start = 0;
        while ($start >= 0 && $start < $negativeExp) {
            if (var$2[$start] > 32) {
                var$5 = $negativeExp;
                while (true) {
                    $negative = var$5 - 1 | 0;
                    if ($negative < 0)
                        break;
                    if ($negative >= $negativeExp)
                        break;
                    if (var$2[$negative] > 32) {
                        $negative = 0;
                        if (jl_String_charAt($string, $start) == 45) {
                            $start = $start + 1 | 0;
                            $negative = 1;
                        } else if (jl_String_charAt($string, $start) == 43)
                            $start = $start + 1 | 0;
                        if ($start == var$5) {
                            $string = new jl_NumberFormatException;
                            $string.$suppressionEnabled = 1;
                            $string.$writableStackTrace = 1;
                            $rt_throw($string);
                        }
                        a: {
                            $c = jl_String_charAt($string, $start);
                            $mantissa = 0;
                            $exp = (-1);
                            $mantissaPos = 100000000;
                            $hasOneDigit = 0;
                            if ($c != 46) {
                                $hasOneDigit = 1;
                                if ($c >= 48 && $c <= 57) {
                                    b: {
                                        while ($start < var$5) {
                                            if (jl_String_charAt($string, $start) != 48)
                                                break b;
                                            $start = $start + 1 | 0;
                                        }
                                    }
                                    while ($start < var$5) {
                                        var$12 = jl_String_charAt($string, $start);
                                        if (var$12 < 48)
                                            break a;
                                        if (var$12 > 57)
                                            break a;
                                        if ($mantissaPos > 0) {
                                            $mantissa = $mantissa + $rt_imul($mantissaPos, var$12 - 48 | 0) | 0;
                                            $mantissaPos = $rt_udiv($mantissaPos, 10);
                                        }
                                        $exp = $exp + 1 | 0;
                                        $start = $start + 1 | 0;
                                    }
                                } else {
                                    $string = new jl_NumberFormatException;
                                    jl_Exception__init_0($string);
                                    $rt_throw($string);
                                }
                            }
                        }
                        if ($start < var$5 && jl_String_charAt($string, $start) == 46) {
                            $start = $start + 1 | 0;
                            c: {
                                while (true) {
                                    if ($start >= var$5)
                                        break c;
                                    $negativeExp = jl_String_charAt($string, $start);
                                    var$12 = $rt_compare($negativeExp, 48);
                                    if (var$12 < 0)
                                        break c;
                                    if ($negativeExp > 57)
                                        break;
                                    if (!$mantissa && !var$12)
                                        $exp = $exp + (-1) | 0;
                                    else if ($mantissaPos > 0) {
                                        $mantissa = $mantissa + $rt_imul($mantissaPos, $negativeExp - 48 | 0) | 0;
                                        $mantissaPos = $rt_udiv($mantissaPos, 10);
                                    }
                                    $start = $start + 1 | 0;
                                    $hasOneDigit = 1;
                                }
                            }
                            if (!$hasOneDigit)
                                $rt_throw(jl_NumberFormatException__init_0());
                        }
                        if ($start < var$5) {
                            var$12 = jl_String_charAt($string, $start);
                            if (var$12 != 101 && var$12 != 69)
                                $rt_throw(jl_NumberFormatException__init_0());
                            var$12 = $start + 1 | 0;
                            $negativeExp = 0;
                            if (var$12 == var$5)
                                $rt_throw(jl_NumberFormatException__init_0());
                            if (jl_String_charAt($string, var$12) == 45) {
                                var$12 = var$12 + 1 | 0;
                                $negativeExp = 1;
                            } else if (jl_String_charAt($string, var$12) == 43)
                                var$12 = var$12 + 1 | 0;
                            $numExp = 0;
                            $start = 0;
                            d: {
                                while (true) {
                                    if (var$12 >= var$5)
                                        break d;
                                    $mantissaPos = jl_String_charAt($string, var$12);
                                    if ($mantissaPos < 48)
                                        break d;
                                    if ($mantissaPos > 57)
                                        break;
                                    $numExp = (10 * $numExp | 0) + ($mantissaPos - 48 | 0) | 0;
                                    $start = 1;
                                    var$12 = var$12 + 1 | 0;
                                }
                            }
                            if (!$start)
                                $rt_throw(jl_NumberFormatException__init_0());
                            if ($negativeExp)
                                $numExp =  -$numExp | 0;
                            $exp = $exp + $numExp | 0;
                        }
                        return otcit_FloatSynthesizer_synthesizeFloat($mantissa, $exp, $negative);
                    }
                    var$5 = var$5 + (-1) | 0;
                }
                $string = new jl_StringIndexOutOfBoundsException;
                $string.$suppressionEnabled = 1;
                $string.$writableStackTrace = 1;
                $rt_throw($string);
            }
            $start = $start + 1 | 0;
            if ($start == $negativeExp) {
                $string = new jl_NumberFormatException;
                $string.$suppressionEnabled = 1;
                $string.$writableStackTrace = 1;
                $rt_throw($string);
            }
        }
        $string = new jl_StringIndexOutOfBoundsException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    function jl_Float_compare($a, $b) {
        var $diff, var$4, var$5;
        $diff = ($a <= $b ? 0 : 1) - ($b <= $a ? 0 : 1) | 0;
        if (!$diff) {
            var$4 = 1.0 / $a;
            var$5 = 1.0 / $b;
            $diff = (((var$4 <= var$5 ? 0 : 1) - (var$5 <= var$4 ? 0 : 1) | 0) + ($b !== $b ? 0 : 1) | 0) - ($a !== $a ? 0 : 1) | 0;
        }
        return $diff;
    }
    function jl_Float__clinit_() {
        jl_Float_TYPE = $rt_cls($rt_floatcls());
    }
    function cbgu_FloatArray() {
        var a = this; jl_Object.call(a);
        a.$items1 = null;
        a.$size1 = 0;
        a.$ordered1 = 0;
    }
    function cbgu_FloatArray_add($this, $value) {
        var $items, var$3, var$4, var$5, var$6;
        $items = $this.$items1;
        var$3 = $items.data;
        var$4 = $this.$size1;
        if (var$4 != var$3.length)
            var$3 = $items;
        else {
            var$5 = var$4 * 1.75 | 0;
            if (8 > var$5)
                var$5 = 8;
            var$3 = $rt_createFloatArray(var$5);
            var$6 = var$3.data.length;
            if (var$4 < var$6)
                var$6 = var$4;
            jl_System_fastArraycopy($items, 0, var$3, 0, var$6);
            $this.$items1 = var$3;
        }
        $items = var$3.data;
        var$5 = $this.$size1;
        $this.$size1 = var$5 + 1 | 0;
        $items[var$5] = $value;
    }
    function cbgu_FloatArray_addAll0($this, $array, $offset, $length) {
        var var$4, var$5, var$6, var$7;
        if (($offset + $length | 0) <= $array.$size1) {
            cbgu_FloatArray_addAll($this, $array.$items1, $offset, $length);
            return;
        }
        var$4 = new jl_IllegalArgumentException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(132));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $offset, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(53));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $length, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(54));
        $offset = $array.$size1;
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $offset, 10);
        $array = new jl_String;
        var$6 = var$5.$buffer;
        $length = var$5.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($length);
        $array.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = $array;
        $rt_throw(var$4);
    }
    function cbgu_FloatArray_addAll($this, $array, $offset, $length) {
        var $items, var$5, var$6, $sizeNeeded, var$8, var$9;
        $items = $this.$items1;
        var$5 = $items.data;
        var$6 = $this.$size1;
        $sizeNeeded = var$6 + $length | 0;
        if ($sizeNeeded <= var$5.length)
            var$5 = $items;
        else {
            if (8 > $sizeNeeded)
                $sizeNeeded = 8;
            var$8 = var$6 * 1.75 | 0;
            if ($sizeNeeded > var$8)
                var$8 = $sizeNeeded;
            var$5 = $rt_createFloatArray(var$8);
            var$9 = var$5.data.length;
            if (var$6 < var$9)
                var$9 = var$6;
            jl_System_fastArraycopy($items, 0, var$5, 0, var$9);
            $this.$items1 = var$5;
        }
        jl_System_fastArraycopy($array, $offset, var$5, $this.$size1, $length);
        $this.$size1 = $this.$size1 + $length | 0;
    }
    function cbgu_FloatArray_get($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if ($index < $this.$size1)
            return $this.$items1.data[$index];
        var$2 = new jl_IndexOutOfBoundsException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(36));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(37));
        $index = $this.$size1;
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$4.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$4;
        $rt_throw(var$2);
    }
    function cbgu_FloatArray_removeRange($this, $start, $end) {
        var $n, var$4, var$5, $count, var$7, var$8, var$9, $lastIndex, $i;
        $n = $this.$size1;
        if ($end >= $n) {
            var$4 = new jl_IndexOutOfBoundsException;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(55));
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $end, 10);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(37));
            $count = $this.$size1;
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $count, 10);
            var$7 = new jl_String;
            var$8 = var$5.$buffer;
            $end = var$5.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray($end);
            var$7.$characters = var$9;
            jl_System_fastArraycopy(var$8, 0, var$9, 0, $end);
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$message = var$7;
            $rt_throw(var$4);
        }
        if ($start <= $end) {
            $count = ($end - $start | 0) + 1 | 0;
            $lastIndex = $n - $count | 0;
            if ($this.$ordered1) {
                var$8 = $this.$items1;
                $end = $start + $count | 0;
                jl_System_fastArraycopy(var$8, $end, var$8, $start, $n - $end | 0);
            } else {
                $i = $end + 1 | 0;
                if ($lastIndex > $i)
                    $i = $lastIndex;
                var$8 = $this.$items1;
                jl_System_fastArraycopy(var$8, $i, var$8, $start, $n - $i | 0);
            }
            $this.$size1 = $lastIndex;
            return;
        }
        var$4 = new jl_IndexOutOfBoundsException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(56));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $start, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(57));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $end, 10);
        var$7 = new jl_String;
        var$8 = var$5.$buffer;
        $end = var$5.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($end);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$8, 0, var$9, 0, $end);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    function cbgu_FloatArray_first($this) {
        var var$1;
        if ($this.$size1)
            return $this.$items1.data[0];
        var$1 = new jl_IllegalStateException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(43);
        $rt_throw(var$1);
    }
    function cbgu_FloatArray_ensureCapacity($this, $additionalCapacity) {
        var var$2, var$3, var$4, var$5, $sizeNeeded, var$7, var$8, var$9;
        if ($additionalCapacity < 0) {
            var$2 = new jl_IllegalArgumentException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
            jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $additionalCapacity, 10);
            var$4 = new jl_String;
            var$5 = var$3.$buffer;
            $sizeNeeded = var$3.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray($sizeNeeded);
            var$4.$characters = var$7;
            jl_System_fastArraycopy(var$5, 0, var$7, 0, $sizeNeeded);
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$4;
            $rt_throw(var$2);
        }
        var$8 = $this.$size1;
        $sizeNeeded = var$8 + $additionalCapacity | 0;
        var$7 = $this.$items1;
        if ($sizeNeeded > var$7.data.length) {
            if (8 > $sizeNeeded)
                $sizeNeeded = 8;
            $additionalCapacity = var$8 * 1.75 | 0;
            if ($sizeNeeded > $additionalCapacity)
                $additionalCapacity = $sizeNeeded;
            var$5 = $rt_createFloatArray($additionalCapacity);
            var$9 = var$5.data.length;
            if (var$8 < var$9)
                var$9 = var$8;
            jl_System_fastArraycopy(var$7, 0, var$5, 0, var$9);
            $this.$items1 = var$5;
        }
        return $this.$items1;
    }
    var jl_Math = $rt_classWithoutFields();
    function jl_Math_sin(var$1) {
        return Math.sin(var$1);
    }
    function jl_Math_cos(var$1) {
        return Math.cos(var$1);
    }
    function jl_Math_exp(var$1) {
        return Math.exp(var$1);
    }
    function jl_Math_sqrt(var$1) {
        return Math.sqrt(var$1);
    }
    function jl_Math_ceil(var$1) {
        return Math.ceil(var$1);
    }
    function jl_Math_powImpl(var$1, var$2) {
        return Math.pow(var$1, var$2);
    }
    function jl_Math_atan2(var$1, var$2) {
        return Math.atan2(var$1, var$2);
    }
    function jl_Math_max($a, $b) {
        if ($a > $b)
            $b = $a;
        return $b;
    }
    function jl_Math_minImpl(var$1, var$2) {
        return Math.min(var$1, var$2);
    }
    function jl_Math_min($a, $b) {
        return jl_Math_minImpl($a, $b);
    }
    function jl_Math_maxImpl(var$1, var$2) {
        return Math.max(var$1, var$2);
    }
    function jl_Math_max0($a, $b) {
        return jl_Math_maxImpl($a, $b);
    }
    function jl_Math_absImpl(var$1) {
        return Math.abs(var$1);
    }
    function jl_Math_abs($n) {
        return jl_Math_absImpl($n);
    }
    function jl_Math_sign(var$1) {
        return Math.sign(var$1);
    }
    function cbggg_GlyphLayout$GlyphRun() {
        var a = this; jl_Object.call(a);
        a.$glyphs = null;
        a.$xAdvances = null;
        a.$x3 = 0.0;
        a.$y3 = 0.0;
        a.$width2 = 0.0;
    }
    function cbggg_GlyphLayout$GlyphRun__init_0() {
        var var_0 = new cbggg_GlyphLayout$GlyphRun();
        cbggg_GlyphLayout$GlyphRun__init_(var_0);
        return var_0;
    }
    function cbggg_GlyphLayout$GlyphRun__init_($this) {
        var var$1;
        var$1 = new cbgu_Array;
        var$1.$ordered = 1;
        var$1.$items = $rt_createArray(jl_Object, 16);
        $this.$glyphs = var$1;
        var$1 = new cbgu_FloatArray;
        var$1.$ordered1 = 1;
        var$1.$items1 = $rt_createFloatArray(16);
        $this.$xAdvances = var$1;
    }
    function cbggg_GlyphLayout$GlyphRun_appendRun($this, $run) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
        var$2 = $this.$glyphs;
        var$3 = $run.$glyphs;
        var$4 = var$3.$items;
        var$5 = var$3.$size;
        var$6 = var$2.$items;
        var$7 = var$6.data;
        var$8 = var$2.$size;
        var$9 = var$8 + var$5 | 0;
        if (var$9 <= var$7.length)
            var$3 = var$6;
        else {
            var$10 = 8;
            if (var$10 <= var$9)
                var$10 = var$9;
            var$8 = var$8 * 1.75 | 0;
            if (var$10 > var$8)
                var$8 = var$10;
            var$11 = var$6.constructor;
            if (var$11 === null)
                var$3 = null;
            else {
                var$3 = var$11.classObject;
                if (var$3 === null) {
                    var$3 = new jl_Class;
                    var$3.$platformClass = var$11;
                    var$12 = var$3;
                    var$11.classObject = var$12;
                }
            }
            var$11 = jl_Class_getComponentType(var$3);
            if (var$11 === null) {
                $run = new jl_NullPointerException;
                jl_Throwable__init_0($run);
                $rt_throw($run);
            }
            if (var$11 === $rt_cls($rt_voidcls())) {
                $run = new jl_IllegalArgumentException;
                jl_Throwable__init_0($run);
                $rt_throw($run);
            }
            if (var$8 < 0) {
                $run = new jl_NegativeArraySizeException;
                jl_Throwable__init_0($run);
                $rt_throw($run);
            }
            var$3 = jlr_Array_newInstanceImpl(var$11.$platformClass, var$8);
            var$11 = var$3.data;
            var$10 = var$2.$size;
            var$13 = var$11.length;
            if (var$10 < var$13)
                var$13 = var$10;
            jl_System_arraycopy(var$6, 0, var$3, 0, var$13);
            var$2.$items = var$3;
        }
        jl_System_arraycopy(var$4, 0, var$3, var$2.$size, var$5);
        var$2.$size = var$9;
        var$2 = $this.$xAdvances;
        var$14 = var$2.$size1;
        if (var$14 <= 0 ? 0 : 1)
            var$2.$size1 = var$14 - 1 | 0;
        $run = $run.$xAdvances;
        cbgu_FloatArray_addAll(var$2, $run.$items1, 0, $run.$size1);
    }
    function cbggg_GlyphLayout$GlyphRun_reset($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.$glyphs;
        var$2 = var$1.$items;
        var$3 = 0;
        var$4 = var$1.$size;
        var$5 = null;
        if (var$3 > var$4) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$3 < var$4) {
            var$6 = var$2.data;
            var$7 = var$3 + 1 | 0;
            var$6[var$3] = var$5;
            var$3 = var$7;
        }
        var$1.$size = 0;
        $this.$xAdvances.$size1 = 0;
    }
    function cbggg_GlyphLayout$GlyphRun_toString($this) {
        var $buffer, $glyphs, $n, $i, var$5, $g, var$7, var$8, var$9, var$10, var$11;
        $buffer = new jl_StringBuilder;
        $glyphs = $this.$glyphs;
        $n = $glyphs.$size;
        $buffer.$buffer = $rt_createCharArray($n + 32 | 0);
        $i = 0;
        while ($i < $n) {
            if ($i >= $glyphs.$size) {
                var$5 = new jl_IndexOutOfBoundsException;
                $g = new jl_StringBuilder;
                $g.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($g, $g.$length, $rt_s(36));
                jl_AbstractStringBuilder_insert0($g, $g.$length, $i, 10);
                jl_AbstractStringBuilder_insert($g, $g.$length, $rt_s(37));
                $i = $glyphs.$size;
                jl_AbstractStringBuilder_insert0($g, $g.$length, $i, 10);
                $buffer = new jl_String;
                var$7 = $g.$buffer;
                $n = $g.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray($n);
                $buffer.$characters = var$8;
                jl_System_fastArraycopy(var$7, 0, var$8, 0, $n);
                var$5.$suppressionEnabled = 1;
                var$5.$writableStackTrace = 1;
                var$5.$message = $buffer;
                $rt_throw(var$5);
            }
            var$9 = $glyphs.$items.data[$i].$id & 65535;
            var$10 = $buffer.$length;
            jl_AbstractStringBuilder_insertSpace($buffer, var$10, var$10 + 1 | 0);
            $buffer.$buffer.data[var$10] = var$9;
            $i = $i + 1 | 0;
        }
        jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(61));
        var$11 = $this.$x3;
        jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$11);
        jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(61));
        var$11 = $this.$y3;
        jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$11);
        jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(61));
        var$11 = $this.$width2;
        jl_AbstractStringBuilder_insert1($buffer, $buffer.$length, var$11);
        $glyphs = new jl_String;
        var$7 = $buffer.$buffer;
        $n = $buffer.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($n);
        $glyphs.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $n);
        return $glyphs;
    }
    function cbgu_IntArray() {
        var a = this; jl_Object.call(a);
        a.$items0 = null;
        a.$size0 = 0;
        a.$ordered0 = 0;
    }
    function cbgu_IntArray_add0($this, $value) {
        var $items, var$3, var$4, var$5, var$6;
        $items = $this.$items0;
        var$3 = $items.data;
        var$4 = $this.$size0;
        if (var$4 != var$3.length)
            var$3 = $items;
        else {
            var$5 = var$4 * 1.75 | 0;
            if (8 > var$5)
                var$5 = 8;
            var$3 = $rt_createIntArray(var$5);
            var$6 = var$3.data.length;
            if (var$4 < var$6)
                var$6 = var$4;
            jl_System_fastArraycopy($items, 0, var$3, 0, var$6);
            $this.$items0 = var$3;
        }
        $items = var$3.data;
        var$5 = $this.$size0;
        $this.$size0 = var$5 + 1 | 0;
        $items[var$5] = $value;
    }
    function cbgu_IntArray_add($this, $value1, $value2) {
        var $items, var$4, var$5, var$6, var$7, var$8, var$9;
        $items = $this.$items0;
        var$4 = $items.data;
        var$5 = $this.$size0;
        if ((var$5 + 1 | 0) < var$4.length)
            var$6 = $items;
        else {
            var$7 = var$5 * 1.75 | 0;
            if (8 > var$7)
                var$7 = 8;
            var$6 = $rt_createIntArray(var$7);
            var$8 = var$6.data.length;
            if (var$5 < var$8)
                var$8 = var$5;
            jl_System_fastArraycopy($items, 0, var$6, 0, var$8);
            $this.$items0 = var$6;
        }
        var$4 = var$6.data;
        var$9 = $this.$size0;
        var$4[var$9] = $value1;
        var$4[var$9 + 1 | 0] = $value2;
        $this.$size0 = var$9 + 2 | 0;
    }
    function cbgu_IntArray_get($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if ($index < $this.$size0)
            return $this.$items0.data[$index];
        var$2 = new jl_IndexOutOfBoundsException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(36));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(37));
        $index = $this.$size0;
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $index, 10);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$4.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$4;
        $rt_throw(var$2);
    }
    function cbgu_IntArray_set($this, $index, $value) {
        var var$3, var$4, var$5, var$6, var$7;
        if ($index < $this.$size0) {
            $this.$items0.data[$index] = $value;
            return;
        }
        var$3 = new jl_IndexOutOfBoundsException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(36));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(37));
        $index = $this.$size0;
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $value = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($value);
        var$5.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, $value);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$5;
        $rt_throw(var$3);
    }
    function cbgu_IntArray_peek($this) {
        return $this.$items0.data[$this.$size0 - 1 | 0];
    }
    function cbgu_IntArray_ensureCapacity($this, $additionalCapacity) {
        var var$2, var$3, var$4, var$5, $sizeNeeded, var$7, var$8, var$9;
        if ($additionalCapacity < 0) {
            var$2 = new jl_IllegalArgumentException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(58));
            jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $additionalCapacity, 10);
            var$4 = new jl_String;
            var$5 = var$3.$buffer;
            $sizeNeeded = var$3.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray($sizeNeeded);
            var$4.$characters = var$7;
            jl_System_fastArraycopy(var$5, 0, var$7, 0, $sizeNeeded);
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$4;
            $rt_throw(var$2);
        }
        var$8 = $this.$size0;
        $sizeNeeded = var$8 + $additionalCapacity | 0;
        var$7 = $this.$items0;
        if ($sizeNeeded > var$7.data.length) {
            if (8 > $sizeNeeded)
                $sizeNeeded = 8;
            $additionalCapacity = var$8 * 1.75 | 0;
            if ($sizeNeeded > $additionalCapacity)
                $additionalCapacity = $sizeNeeded;
            var$5 = $rt_createIntArray($additionalCapacity);
            var$9 = var$5.data.length;
            if (var$8 < var$9)
                var$9 = var$8;
            jl_System_fastArraycopy(var$7, 0, var$5, 0, var$9);
            $this.$items0 = var$5;
        }
        return $this.$items0;
    }
    function cbgu_IntArray_hashCode($this) {
        var $items, $h, $i, $n, var$5, var$6, var$7;
        if ($this.$ordered0) {
            $items = $this.$items0;
            $h = 1;
            $i = 0;
            $n = $this.$size0;
            while ($i < $n) {
                var$5 = $items.data;
                $h = ($h * 31 | 0) + var$5[$i] | 0;
                $i = $i + 1 | 0;
            }
            return $h;
        }
        var$6 = $this;
        if (!var$6.$id$) {
            var$7 = $rt_nextId();
            var$6.$id$ = var$7;
        }
        return $this.$id$;
    }
    function cbgu_IntArray_equals($this, $object) {
        var $array, $n, $items1, $items2, $i, var$7;
        if ($object === $this)
            return 1;
        if (!$this.$ordered0)
            return 0;
        if (!($object instanceof cbgu_IntArray))
            return 0;
        $array = $object;
        if (!$array.$ordered0)
            return 0;
        $n = $this.$size0;
        if ($n != $array.$size0)
            return 0;
        $items1 = $this.$items0;
        $items2 = $array.$items0;
        $i = 0;
        while ($i < $n) {
            var$7 = $items2.data;
            if ($items1.data[$i] != var$7[$i])
                return 0;
            $i = $i + 1 | 0;
        }
        return 1;
    }
    function cbgu_IntArray_toString($this) {
        var $items, $buffer, var$3, var$4, var$5, var$6, $i, var$8;
        if (!$this.$size0)
            return $rt_s(60);
        $items = $this.$items0;
        $buffer = new cbgu_StringBuilder;
        var$3 = $rt_createCharArray(32);
        var$4 = var$3.data;
        $buffer.$chars = var$3;
        var$5 = $buffer.$length2;
        if (var$5 == var$4.length)
            cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
        $items = $items.data;
        var$4 = $buffer.$chars.data;
        var$6 = $buffer.$length2;
        $buffer.$length2 = var$6 + 1 | 0;
        var$4[var$6] = 91;
        cbgu_StringBuilder_append($buffer, $items[0], 0, 48);
        $i = 1;
        while ($i < $this.$size0) {
            var$6 = $rt_s(61).$characters.data.length;
            var$8 = $buffer.$length2 + var$6 | 0;
            if (var$8 > $buffer.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($buffer, var$8);
            jl_String_getChars($rt_s(61), 0, var$6, $buffer.$chars, $buffer.$length2);
            $buffer.$length2 = var$8;
            cbgu_StringBuilder_append($buffer, $items[$i], 0, 48);
            $i = $i + 1 | 0;
        }
        var$5 = $buffer.$length2;
        if (var$5 == $buffer.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($buffer, var$5 + 1 | 0);
        $items = $buffer.$chars;
        var$4 = $items.data;
        var$6 = $buffer.$length2;
        var$5 = var$6 + 1 | 0;
        $buffer.$length2 = var$5;
        var$4[var$6] = 93;
        if (!var$5)
            $buffer = $rt_s(45);
        else {
            $buffer = new jl_String;
            jl_String_$callClinit();
            var$4 = $rt_createCharArray(var$5);
            $buffer.$characters = var$4;
            jl_System_fastArraycopy($items, 0, var$4, 0, var$5);
        }
        return $buffer;
    }
    var ju_Map = $rt_classWithoutFields(0);
    function ju_AbstractMap() {
        jl_Object.call(this);
        this.$cachedKeySet = null;
    }
    var jl_Cloneable = $rt_classWithoutFields(0);
    function ju_HashMap() {
        var a = this; ju_AbstractMap.call(a);
        a.$elementCount = 0;
        a.$elementData = null;
        a.$modCount = 0;
        a.$loadFactor = 0.0;
        a.$threshold = 0;
    }
    function ju_HashMap_calculateCapacity($x) {
        var var$2;
        if ($x >= 1073741824)
            return 1073741824;
        if (!$x)
            return 16;
        var$2 = $x - 1 | 0;
        $x = var$2 | var$2 >> 1;
        $x = $x | $x >> 2;
        $x = $x | $x >> 4;
        $x = $x | $x >> 8;
        return ($x | $x >> 16) + 1 | 0;
    }
    function ju_HashMap_entryByKey($this, $key) {
        var $m, $hash, var$4, var$5;
        if ($key === null) {
            $m = $this.$elementData.data[0];
            while ($m !== null && $m.$key !== null) {
                $m = $m.$next;
            }
        } else {
            $hash = $key.$hashCode();
            var$4 = $this.$elementData.data;
            $m = var$4[$hash & (var$4.length - 1 | 0)];
            while ($m !== null) {
                if ($m.$origKeyHash == $hash) {
                    var$5 = $m.$key;
                    if ($key !== var$5 && !$key.$equals(var$5) ? 0 : 1)
                        break;
                }
                $m = $m.$next;
            }
        }
        return $m;
    }
    function ju_HashMap_findNullKeyEntry($this) {
        var $m;
        $m = $this.$elementData.data[0];
        while ($m !== null && $m.$key !== null) {
            $m = $m.$next;
        }
        return $m;
    }
    function ju_HashMap_put($this, $key, $value) {
        return ju_HashMap_putImpl($this, $key, $value);
    }
    function ju_HashMap_putImpl($this, $key, $value) {
        var var$3, $entry, $result, var$6, $hash, $index;
        if ($key === null) {
            var$3 = $this.$elementData.data;
            $entry = var$3[0];
            while ($entry !== null && $entry.$key !== null) {
                $entry = $entry.$next;
            }
            if ($entry === null) {
                $this.$modCount = $this.$modCount + 1 | 0;
                $result = null;
                $entry = new ju_HashMap$HashEntry;
                $key = null;
                $entry.$key = $result;
                $entry.$value4 = $key;
                $entry.$origKeyHash = 0;
                $entry.$next = var$3[0];
                var$3[0] = $entry;
                var$6 = $this.$elementCount + 1 | 0;
                $this.$elementCount = var$6;
                if (var$6 > $this.$threshold)
                    ju_HashMap_rehash($this, var$3.length);
            }
        } else {
            $hash = $key.$hashCode();
            var$3 = $this.$elementData.data;
            $index = $hash & (var$3.length - 1 | 0);
            $entry = var$3[$index];
            while ($entry !== null) {
                if ($entry.$origKeyHash == $hash) {
                    $result = $entry.$key;
                    if ($key !== $result && !$key.$equals($result) ? 0 : 1)
                        break;
                }
                $entry = $entry.$next;
            }
            if ($entry === null) {
                $this.$modCount = $this.$modCount + 1 | 0;
                $entry = new ju_HashMap$HashEntry;
                $result = null;
                $entry.$key = $key;
                $entry.$value4 = $result;
                $entry.$origKeyHash = $hash;
                var$3 = $this.$elementData.data;
                $entry.$next = var$3[$index];
                var$3[$index] = $entry;
                var$6 = $this.$elementCount + 1 | 0;
                $this.$elementCount = var$6;
                if (var$6 > $this.$threshold)
                    ju_HashMap_rehash($this, var$3.length);
            }
        }
        $result = $entry.$value4;
        $entry.$value4 = $value;
        return $result;
    }
    function ju_HashMap_rehash($this, $capacity) {
        var $length, $newData, var$4, $i, var$6, $entry, $index, $next;
        $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
        $newData = $rt_createArray(ju_HashMap$HashEntry, $length);
        var$4 = $newData.data;
        $i = 0;
        $length = $length - 1 | 0;
        while (true) {
            var$6 = $this.$elementData.data;
            if ($i >= var$6.length)
                break;
            $entry = var$6[$i];
            var$6[$i] = null;
            while ($entry !== null) {
                $index = $entry.$origKeyHash & $length;
                $next = $entry.$next;
                $entry.$next = var$4[$index];
                var$4[$index] = $entry;
                $entry = $next;
            }
            $i = $i + 1 | 0;
        }
        $this.$elementData = $newData;
        $this.$threshold = var$4.length * $this.$loadFactor | 0;
    }
    function ju_HashMap_areEqualKeys($key1, $key2) {
        return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
    }
    var ju_Comparator = $rt_classWithoutFields(0);
    var jl_String$_clinit_$lambda$_93_0 = $rt_classWithoutFields();
    var jl_IndexOutOfBoundsException = $rt_classWithoutFields(jl_RuntimeException);
    function jl_IndexOutOfBoundsException__init_() {
        var var_0 = new jl_IndexOutOfBoundsException();
        jl_IndexOutOfBoundsException__init_0(var_0);
        return var_0;
    }
    function jl_IndexOutOfBoundsException__init_0($this) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
    }
    var jlr_Array = $rt_classWithoutFields();
    function jlr_Array_getLength(var$1) {
        if (var$1 === null || var$1.constructor.$meta.item === undefined) {
            $rt_throw(jl_IllegalArgumentException__init_());
        }
        return var$1.data.length;
    }
    function jlr_Array_newInstance($componentType, $length) {
        if ($componentType === null) {
            $componentType = new jl_NullPointerException;
            $componentType.$suppressionEnabled = 1;
            $componentType.$writableStackTrace = 1;
            $rt_throw($componentType);
        }
        if ($componentType === $rt_cls($rt_voidcls())) {
            $componentType = new jl_IllegalArgumentException;
            $componentType.$suppressionEnabled = 1;
            $componentType.$writableStackTrace = 1;
            $rt_throw($componentType);
        }
        if ($length >= 0)
            return jlr_Array_newInstanceImpl($componentType.$platformClass, $length);
        $componentType = new jl_NegativeArraySizeException;
        $componentType.$suppressionEnabled = 1;
        $componentType.$writableStackTrace = 1;
        $rt_throw($componentType);
    }
    function jlr_Array_newInstanceImpl(var$1, var$2) {
        if (var$1.$meta.primitive) {
            if (var$1 == $rt_bytecls()) {
                return $rt_createByteArray(var$2);
            }
            if (var$1 == $rt_shortcls()) {
                return $rt_createShortArray(var$2);
            }
            if (var$1 == $rt_charcls()) {
                return $rt_createCharArray(var$2);
            }
            if (var$1 == $rt_intcls()) {
                return $rt_createIntArray(var$2);
            }
            if (var$1 == $rt_longcls()) {
                return $rt_createLongArray(var$2);
            }
            if (var$1 == $rt_floatcls()) {
                return $rt_createFloatArray(var$2);
            }
            if (var$1 == $rt_doublecls()) {
                return $rt_createDoubleArray(var$2);
            }
            if (var$1 == $rt_booleancls()) {
                return $rt_createBooleanArray(var$2);
            }
        } else {
            return $rt_createArray(var$1, var$2)
        }
    }
    var jl_NullPointerException = $rt_classWithoutFields(jl_RuntimeException);
    function jl_NullPointerException__init_0(var_0) {
        var var_1 = new jl_NullPointerException();
        jl_NullPointerException__init_1(var_1, var_0);
        return var_1;
    }
    function jl_NullPointerException__init_() {
        var var_0 = new jl_NullPointerException();
        jl_NullPointerException__init_2(var_0);
        return var_0;
    }
    function jl_NullPointerException__init_1($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    function jl_NullPointerException__init_2($this) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
    }
    var jl_ArrayStoreException = $rt_classWithoutFields(jl_RuntimeException);
    var jl_Character = $rt_classWithoutFields();
    var jl_Character_TYPE = null;
    var jl_Character_digitMapping = null;
    var jl_Character_upperCaseMapping = null;
    var jl_Character_lowerCaseMapping = null;
    var jl_Character_classMapping = null;
    var jl_Character_characterCache = null;
    var jl_Character_$$metadata$$0 = null;
    var jl_Character_$$metadata$$1 = null;
    var jl_Character_$$metadata$$3 = null;
    var jl_Character_$$metadata$$4 = null;
    function jl_Character_toString($c) {
        var var$2, var$3, var$4, var$5;
        var$2 = new jl_String;
        var$3 = $rt_createCharArray(1);
        var$4 = var$3.data;
        var$4[0] = $c;
        jl_String_$callClinit();
        var$5 = var$4.length;
        var$4 = $rt_createCharArray(var$5);
        var$2.$characters = var$4;
        jl_System_fastArraycopy(var$3, 0, var$4, 0, var$5);
        return var$2;
    }
    function jl_Character_toCodePoint($high, $low) {
        return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
    }
    function jl_Character_codePointAt($a, $index, $limit) {
        var var$4;
        if ($index < ($limit - 1 | 0)) {
            var$4 = $a.data;
            if ((var$4[$index] & 64512) != 55296 ? 0 : 1) {
                $limit = $index + 1 | 0;
                if ((var$4[$limit] & 64512) != 56320 ? 0 : 1)
                    return ((var$4[$index] & 1023) << 10 | var$4[$limit] & 1023) + 65536 | 0;
            }
        }
        return $a.data[$index];
    }
    function jl_Character_highSurrogate($codePoint) {
        return (55296 | ($codePoint - 65536 | 0) >> 10 & 1023) & 65535;
    }
    function jl_Character_lowSurrogate($codePoint) {
        return (56320 | $codePoint & 1023) & 65535;
    }
    function jl_Character_toLowerCase($ch) {
        if (jl_Character_lowerCaseMapping === null) {
            if (jl_Character_$$metadata$$0 === null)
                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
        }
        return jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch) & 65535;
    }
    function jl_Character_getLowerCaseMapping() {
        if (jl_Character_lowerCaseMapping === null) {
            if (jl_Character_$$metadata$$0 === null)
                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
        }
        return jl_Character_lowerCaseMapping;
    }
    function jl_Character_toUpperCase($ch) {
        if (jl_Character_upperCaseMapping === null) {
            if (jl_Character_$$metadata$$1 === null)
                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
        }
        return jl_Character_mapChar(jl_Character_upperCaseMapping, $ch) & 65535;
    }
    function jl_Character_getUpperCaseMapping() {
        if (jl_Character_upperCaseMapping === null) {
            if (jl_Character_$$metadata$$1 === null)
                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
        }
        return jl_Character_upperCaseMapping;
    }
    function jl_Character_mapChar($table, $codePoint) {
        var $binSearchTable, $index;
        $binSearchTable = $table.$fastTable.data;
        if ($codePoint < $binSearchTable.length)
            return $codePoint + $binSearchTable[$codePoint] | 0;
        $binSearchTable = $table.$binarySearchTable;
        $index = jl_Character_binarySearchTable($binSearchTable, $codePoint);
        if ($index >= 0) {
            $binSearchTable = $binSearchTable.data;
            $index = $index * 2 | 0;
            if ($index < $binSearchTable.length)
                return $codePoint + $binSearchTable[$index + 1 | 0] | 0;
        }
        return 0;
    }
    function jl_Character_binarySearchTable($data, $key) {
        var $l, $u, $i, $e;
        $data = $data.data;
        $l = 0;
        $u = ($data.length / 2 | 0) - 1 | 0;
        while (true) {
            $i = ($l + $u | 0) / 2 | 0;
            $e = $rt_compare($data[$i * 2 | 0], $key);
            if (!$e)
                break;
            if ($e <= 0) {
                $l = $i + 1 | 0;
                if ($l > $u)
                    return $i;
            } else {
                $u = $i - 1 | 0;
                if ($u < $l)
                    return $u;
            }
        }
        return $i;
    }
    function jl_Character_getNumericValue($codePoint) {
        var $digitMapping, $l, $u, $idx, var$6, $val;
        if (jl_Character_digitMapping === null) {
            if (jl_Character_$$metadata$$3 === null)
                jl_Character_$$metadata$$3 = jl_Character_obtainDigitMapping$$create();
            jl_Character_digitMapping = otciu_UnicodeHelper_decodeIntPairsDiff((jl_Character_$$metadata$$3.value !== null ? $rt_str(jl_Character_$$metadata$$3.value) : null));
        }
        $digitMapping = jl_Character_digitMapping.data;
        $l = 0;
        $u = ($digitMapping.length / 2 | 0) - 1 | 0;
        while ($u >= $l) {
            $idx = ($l + $u | 0) / 2 | 0;
            var$6 = $idx * 2 | 0;
            $val = $rt_compare($codePoint, $digitMapping[var$6]);
            if ($val > 0)
                $l = $idx + 1 | 0;
            else {
                if ($val >= 0)
                    return $digitMapping[var$6 + 1 | 0];
                $u = $idx - 1 | 0;
            }
        }
        return (-1);
    }
    function jl_Character_forDigit($digit, $radix) {
        if ($radix >= 2 && $radix <= 36 && $digit >= 0 && $digit < $radix)
            return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
        return 0;
    }
    function jl_Character_getType($codePoint) {
        var $l, $u, $classes, $i, $range;
        if ($codePoint > 0 && $codePoint <= 65535 ? 1 : 0) {
            $l = $codePoint & 65535 & 64512;
            $u = $l != 55296 ? 0 : 1;
            if (!$u && !($l != 56320 ? 0 : 1) ? 0 : 1)
                return 19;
        }
        if (jl_Character_classMapping === null) {
            if (jl_Character_$$metadata$$4 === null)
                jl_Character_$$metadata$$4 = jl_Character_obtainClasses$$create();
            jl_Character_classMapping = otciu_UnicodeHelper_extractRle((jl_Character_$$metadata$$4.value !== null ? $rt_str(jl_Character_$$metadata$$4.value) : null));
        }
        $classes = jl_Character_classMapping.data;
        $l = 0;
        $u = $classes.length - 1 | 0;
        while ($l <= $u) {
            $i = ($l + $u | 0) / 2 | 0;
            $range = $classes[$i];
            if ($codePoint >= $range.$end)
                $l = $i + 1 | 0;
            else {
                $u = $range.$start2;
                if ($codePoint >= $u)
                    return $range.$data1.data[$codePoint - $u | 0];
                $u = $i - 1 | 0;
            }
        }
        return 0;
    }
    function jl_Character_isIdentifierIgnorable($codePoint) {
        a: {
            if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
                if ($codePoint < 127)
                    break a;
                if ($codePoint > 159)
                    break a;
            }
            return 1;
        }
        return jl_Character_getType($codePoint) != 16 ? 0 : 1;
    }
    function jl_Character__clinit_() {
        jl_Character_TYPE = $rt_cls($rt_charcls());
        jl_Character_characterCache = $rt_createArray(jl_Character, 128);
    }
    function jl_Character_acquireLowerCaseMapping$$create() {
        return {"value" : ">W  H#F#U 4%F#O #F#/ d%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a1# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #<+#%# #%# #%# \'.3#%# #%# #{1#%# #w1%%# %J\'#k1#o1#%# #w1#!3# #23#*3#%# \'23#:3# #>3#%# #%# #%# #N3#%# #N3# %%# #N3#%# #J3%%# #%# #R3#%# \'%# /)#%# #)#%# #)#%# #%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# %)#%# #%# #8)#L%#%# #%# #%# #"
        + "%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a+# #%# #%# #%# #%# #%# #%# #%# #%# #%# /B45#%# #,/#645# %%# #P1#!\'#*\'#%# #%# #%# #%# #%# <-%# #%# \'%# 1&++ %_## #Z#)k%%g%% #F#W hA# 1%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# +]%# %%# #?#%# %a+\'N\'AF#b &#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #^#%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%"
        + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# %*%r iB#oq-&# _?gejg#A1 o$#mo%&# {-%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3,4/# #%# #%# #%"
        + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3C1 1C1 1C1 1C1 1C1 3C/ 1C1 QC1 1C1 1C1 1C%8\'%G# 7i\')G# 7C%D)\' 7C%u)%?# 7X+%P+%G# L-q*/# \'Pw/#8m/# -6## |bA G%# kC.#U !r*%&# &#%# #,05#qX\'#H.5# %%# #%# #%# #e25#D05#q25#m25# #%# %%# 1865%%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# "
        + "#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 1%# #%# )%# (a=%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# G%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# y%%# #%# #%# #%# #%# #%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 5%# #%# #4Fd#%# #%# #%# #%# #%# )%# #<{p# %%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #P}p#}}p#m}p#D}p#P}p# #@yp#D{p#Lyp#Br#%# #%# #%# #%"
        + "# #%# #%# #%# #%# #,%#L}p#LJd#%# #%# -%# +%# #%# Y%# ,T5F#U TUg#r {%g#r >\'c#p Lnk%F# *J#F#b o@5F#b Jo=N#f "};
    }
    function jl_Character_acquireUpperCaseMapping$$create() {
        return {"value" : "<Y  ,%H#U :#>b# v
        + " #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# %665% #\'# )\'# #\'# #\'# #\'# #\'#o25#c25#k25#03#}1# #y1% #m1# #q1#{}p# \'y1#k}p# #$3# #:{p#N}p# #,3#43#N}p#*05#B}p# %43# #B05#<3# %@3# /F.5# %P3# #J}p#P3# \'B{p#P3#$\'#L3%,\'# +T3# 5Jyp#>yp# Z\'_\'# x\'# #\'# \'\'\' #_+\' !#a##]#\' #H#CD##H#3m%#i%% #e%#P%# \'(%#D%#C# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#i\'#P\'#=#(+# #4)# %\'# %\'# .#H#bP\'A #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 3\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# "
        + "#\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'#`# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'% &#,%n mB#ko%x %ko%\' RAC1 >$#yu+#uu+#Pu+#Hu+%Lu+#0u+#io+#>@d1 (+2Fd# \'oX\'# AJJd# N%\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #"
        + "\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# +X%# +\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#A1 1A1 1A1 1A1 1A1 3A# #A# #A# #A% /A1 16\'%g\')B)%V+%s)%N+)A1 1A1 1A1 1A% #E# 5<m-# )E# 9A% =A% \'=# ;E# R/8## ddA )\'# @E0#U Nr,%&# #\'# \'D45#845# #\'# #\'# #\'# -"
        + "\'# %\'# 5\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# #\'# )\'- /qq-&# i]=\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# G\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# y%\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
        + " #\'# #\'# #\'# #\'# 5\'# #\'# %\'# #\'# #\'# #\'# #\'# )\'# )\'# #\'#*%# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 7\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# )\'# #\'- #\'% )\'# #\'S )\'# cEDr# Yiejg# e*5H#U eUi#r {%i#r <\'e#<% Vlm%:# RH#H#b o@5H#b No=P#f "};
    }
    function jl_Character_obtainDigitMapping$$create() {
        return {"value" : "&C*% %%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%_H#T#%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%{CG%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%6)G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%!i#G"
        + "%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%*;G%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%:/G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%{/G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%R@dG%%%%%%%%%%%%%%%%%%R[G%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%!#G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%cCG%%%%%%%%%%%%%%%%%%o*IG%%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%c:#T#%%%%%%%%%%%%%%%%%%w&%G%%%%%"
        + "%%%%%%%%%%%%%BhG%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%_%G%%%%%%%%%%%%%%%%%%>-G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%w=G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%>AG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%!dG%%%%%%%%%%%%%%%%%%g5G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%*0EG%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%28UG%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%"
        + "%%%!8%G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%sKG%%%%%%%%%%%%%%%%%%>&#G%%%%%%%%%%%%%%%%%%wN)G%%%%%%%%%%%%%%%%%%"};
    }
    function jl_Character_obtainClasses$$create() {
        return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
        + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91Y$FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,A&F9<F\' Q#A\'G)FJ%G91GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F#"

        + "L+=\'=\'=\'6767I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F3G$)A*F4G#)Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1\'J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(G1ARG%)FP\')G&)\'I&\'I#F)A$J+Y(^+G*^*Y# G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%"
        + "FEI)G)I#G#A$Y&J+A$F$J+F?E\'Y#C*A(BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFGb!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[BA0G."
        + "H%\'H$G-A0^#!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^gA:^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^A b=J! BQCQ!#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?67676767Y"
        + "&%Y+U#Y%596Y.^#Y$676767675AC^; b=:! A-b=7$ A;^1-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+FA^EA,=F1^@ L+^?L)=L0^AL+^HL0b= & &b `G!&^b&b   %b `(!F7%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#!#!#B%#!#A&!# # #!#!#A9E$!#&E##F(\'F$"
        + "\'F%\'F8I#G#)^%\'A$L\'^#;=A\'FUY%A)I#FSI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C*%]#A%b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]2A1b&L& 76^1FbA#FWA(=AAF-;^$G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F\'A#F\'A#F"
        + "$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^.A$=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9B, B0 B( B# C, C0 C( C#Aeb&X% A*F7A+F)A9E\' EK E*AgF\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+b G% L@ FK G#5A#F#AmG$F>L+&A)F7G,L%Y&A7F3G%Y%AGF6L(A5F8A*)\')FVG0Y(A%L5J+\'F#G#&A*G$)FNI$G%I#G#Y#1Y%\'A+1A#F:A(J+A"
        + "\'G$FEG&)G) J+Y%&I#&A)FD\'Y#&A*G#)FQI$G*I#F%Y%G%9)\'J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'F#\'A`F( & F% F0 F+9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&b ,# FVI$G)I#G$)\'F%Y&J+Y# 9\'F$A?FQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&9A\'J+AWF<A#G$I#G%)G&A%J+L#Y$=F(b Z# FMI$G*)G#9b E! BACAJ+L*A-F)A#&A#F) F# F9I\' I#A#G#)\'&)&)\'Y$A*J+AhF)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A.FkA(Y+b W$ F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( "
        + "F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#A(G#&)F. FCI#G&A$I#\')\'Y.J+b 7! &A0L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b -J b&B! Y#A.b&Q1 Q1\'F\'G0b K` b&(* b Z\'#b&Z) A(F@ J+A%Y#Fq J+A\'F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q+ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%\'A,I#A/&b W@!&A)b&74 AK&A(&b H,#E% E( E# b&D% A0&A>F$A#&A/F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =*!GOA#G8A*b=U! A^b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^_A6^dG$=b [! L5A-L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B"
        + "( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 12 C+&C5A\'C\'b 6$ G( G2A#G( G# G&A&E`AB\'b Q! FNA$G(E(A#J+A%&=b  & F?\'A2FMG%J+A&;b 1( F<%G%J+b G, F( F% F# F0 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN=L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.b=B# AY^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=9, A%^2A$^.A$b=X! A%b=@! A\'^-A%=A0^-A%^YA)^+A\'^IA)^?A#^#Apb=5& A-"
        + "^/A#^.A$^*A(^O ^(A)^/A%^*A(^*A(b=4#  ^XAFJ+b \'1 &b   %b   %b ?<#&AA&b Y !&A\'&b =$ &A#&b  ;!&A/&b PU!&A0&b M* &b CG b&?) b C8 &b *.!&A&&b ?!!&b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b 2R!1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
    }
    var cgxgbta_TeaWebAgent = $rt_classWithoutFields();
    function cgxgbta_TeaWebAgent_createAgent$js_body$_1() {
        var userAgent = $rt_globals.navigator.userAgent.toLowerCase();
        return { firefox : userAgent.indexOf('firefox') !=  -1, chrome : userAgent.indexOf('chrome') !=  -1, safari : userAgent.indexOf('safari') !=  -1, opera : userAgent.indexOf('opera') !=  -1, IE : userAgent.indexOf('msie') !=  -1, macOS : userAgent.indexOf('mac') !=  -1, linux : userAgent.indexOf('linux') !=  -1, windows : userAgent.indexOf('win') !=  -1, userAgent : userAgent };
    }
    var cgxgbtp_AssetDownloader$AssetDownload = $rt_classWithoutFields(0);
    function cgxgbtp_AssetDownloadImpl() {
        var a = this; jl_Object.call(a);
        a.$queue = 0;
        a.$useBrowserCache = 0;
        a.$useInlineBase64 = 0;
        a.$showLogs = 0;
    }
    function cgxgbtp_AssetDownloadImpl_getQueue($this) {
        return $this.$queue;
    }
    function cgxgbtp_AssetDownloadImpl_load($this, $async, $url, $type, $mimeType, $listener) {
        var var$6, var$7, var$8, var$9, var$10, var$11;
        a: {
            cgxgbtp_AssetDownloadImpl$7_$callClinit();
            switch (cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[$type.$ordinal]) {
                case 1:
                    if ($this.$showLogs) {
                        if (jl_System_outCache === null) {
                            $mimeType = new ji_PrintStream;
                            $mimeType.$out = otcic_StdoutOutputStream_INSTANCE;
                            $type = new jl_StringBuilder;
                            $type.$buffer = $rt_createCharArray(16);
                            $mimeType.$sb = $type;
                            $mimeType.$buffer1 = $rt_createCharArray(32);
                            $mimeType.$autoFlush = 0;
                            jnci_UTF8Charset_$callClinit();
                            $mimeType.$charset = jnci_UTF8Charset_INSTANCE;
                            jl_System_outCache = $mimeType;
                        }
                        $mimeType = jl_System_outCache;
                        var$6 = new jl_StringBuilder;
                        var$6.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(133));
                        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $url === null ? $rt_s(1) : $url);
                        $type = new jl_String;
                        var$7 = var$6.$buffer;
                        var$8 = var$6.$length;
                        jl_String_$callClinit();
                        var$9 = $rt_createCharArray(var$8);
                        $type.$characters = var$9;
                        jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
                        var$6 = $mimeType.$sb;
                        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $type);
                        var$10 = var$6.$length;
                        jl_AbstractStringBuilder_insertSpace(var$6, var$10, var$10 + 1 | 0);
                        var$6.$buffer.data[var$10] = 10;
                        ji_PrintStream_printSB($mimeType);
                    }
                    $this.$queue = $this.$queue + 1 | 0;
                    $type = new cgxgbtp_AssetDownloadImpl$1;
                    $type.$this$00 = $this;
                    $type.$val$async = $async;
                    $type.$val$url = $url;
                    $type.$val$listener = $listener;
                    jl_Thread_$callClinit();
                    $url = null;
                    $mimeType = null;
                    $type.$finishedLock = new jl_Object;
                    $type.$alive = 1;
                    $type.$name2 = $mimeType;
                    $type.$target = $url;
                    var$11 = jl_Thread_nextId;
                    jl_Thread_nextId = var$11 + 1 | 0;
                    $type.$id1 = Long_fromInt(var$11);
                    $url = new jl_Thread$start$lambda$_4_0;
                    $url.$_01 = $type;
                    otp_Platform_startThread($url);
                    break a;
                case 2:
                    $type = null;
                    var$6 = new cgxgbtp_AssetDownloadImpl$5;
                    var$6.$this$01 = $this;
                    var$6.$val$listener0 = $listener;
                    var$6.$val$crossOrigin = $type;
                    var$6.$val$mimeType = $mimeType;
                    if ($this.$showLogs) {
                        if (jl_System_outCache === null) {
                            $mimeType = new ji_PrintStream;
                            $mimeType.$out = otcic_StdoutOutputStream_INSTANCE;
                            $type = new jl_StringBuilder;
                            jl_Object__init_0($type);
                            $type.$buffer = $rt_createCharArray(16);
                            $mimeType.$sb = $type;
                            $mimeType.$buffer1 = $rt_createCharArray(32);
                            $mimeType.$autoFlush = 0;
                            jnci_UTF8Charset_$callClinit();
                            $mimeType.$charset = jnci_UTF8Charset_INSTANCE;
                            jl_System_outCache = $mimeType;
                        }
                        $listener = jl_System_outCache;
                        $type = new jl_StringBuilder;
                        $type.$buffer = $rt_createCharArray(16);
                        jl_StringBuilder_insert($type, $type.$length, jl_String_toString($rt_s(133)));
                        jl_StringBuilder_insert($type, $type.$length, $url === null ? $rt_s(1) : jl_String_toString($url));
                        $mimeType = new jl_String;
                        var$7 = $type.$buffer;
                        var$8 = $type.$length;
                        var$9 = $rt_createCharArray(var$8);
                        $mimeType.$characters = var$9;
                        jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
                        $type = $listener.$sb;
                        jl_AbstractStringBuilder_insert($type, $type.$length, $mimeType);
                        jl_AbstractStringBuilder_insert4($type, $type.$length, 10);
                        ji_PrintStream_printSB($listener);
                    }
                    $this.$queue = $this.$queue + 1 | 0;
                    $type = new cgxgbtp_AssetDownloadImpl$4;
                    $type.$this$02 = $this;
                    $type.$val$async0 = $async;
                    $type.$val$url0 = $url;
                    $type.$val$listener1 = var$6;
                    jl_Thread_$callClinit();
                    $url = null;
                    $mimeType = null;
                    $type.$finishedLock = new jl_Object;
                    $type.$alive = 1;
                    $type.$name2 = $mimeType;
                    $type.$target = $url;
                    var$11 = jl_Thread_nextId;
                    jl_Thread_nextId = var$11 + 1 | 0;
                    $type.$id1 = Long_fromInt(var$11);
                    $url = new jl_Thread$start$lambda$_4_0;
                    $url.$_01 = $type;
                    otp_Platform_startThread($url);
                    break a;
                case 3:
                    break;
                case 4:
                    cgxgbtp_AssetDownloadImpl_loadBinary($this, $async, $url, cgxgbtp_AssetDownloadImpl$3__init_($this, $listener));
                    break a;
                case 5:
                    cgxgbtp_Preloader$7_onSuccess($listener, $url, null);
                    break a;
                default:
                    $url = new cbgu_GdxRuntimeException;
                    $mimeType = new jl_StringBuilder;
                    jl_AbstractStringBuilder__init_($mimeType);
                    jl_StringBuilder_append(jl_StringBuilder_append($mimeType, $rt_s(134)), $type);
                    cbgu_GdxRuntimeException__init_($url, jl_StringBuilder_toString($mimeType));
                    $rt_throw($url);
            }
            cgxgbtp_AssetDownloadImpl_loadBinary($this, $async, $url, $listener);
        }
    }
    function cgxgbtp_AssetDownloadImpl_loadText($this, $async, $url, $listener) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($this.$showLogs) {
            if (jl_System_outCache === null) {
                var$4 = new ji_PrintStream;
                var$4.$out = otcic_StdoutOutputStream_INSTANCE;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                var$4.$sb = var$5;
                var$4.$buffer1 = $rt_createCharArray(32);
                var$4.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                var$4.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_outCache = var$4;
            }
            var$4 = jl_System_outCache;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(133));
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $url === null ? $rt_s(1) : $url);
            var$6 = new jl_String;
            var$7 = var$5.$buffer;
            var$8 = var$5.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray(var$8);
            var$6.$characters = var$9;
            jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
            var$5 = var$4.$sb;
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, var$6);
            var$8 = var$5.$length;
            jl_AbstractStringBuilder_insertSpace(var$5, var$8, var$8 + 1 | 0);
            var$5.$buffer.data[var$8] = 10;
            ji_PrintStream_printSB(var$4);
        }
        $this.$queue = $this.$queue + 1 | 0;
        var$4 = new cgxgbtp_AssetDownloadImpl$1;
        var$4.$this$00 = $this;
        var$4.$val$async = $async;
        var$4.$val$url = $url;
        var$4.$val$listener = $listener;
        jl_Thread_$callClinit();
        $url = null;
        $listener = null;
        var$4.$finishedLock = new jl_Object;
        var$4.$alive = 1;
        var$4.$name2 = $listener;
        var$4.$target = $url;
        var$10 = jl_Thread_nextId;
        jl_Thread_nextId = var$10 + 1 | 0;
        var$4.$id1 = Long_fromInt(var$10);
        $url = new jl_Thread$start$lambda$_4_0;
        $url.$_01 = var$4;
        otp_Platform_startThread($url);
    }
    function cgxgbtp_AssetDownloadImpl_loadScript($this, $async, $url, $listener) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($this.$showLogs) {
            if (jl_System_outCache === null) {
                var$4 = new ji_PrintStream;
                var$4.$out = otcic_StdoutOutputStream_INSTANCE;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                var$4.$sb = var$5;
                var$4.$buffer1 = $rt_createCharArray(32);
                var$4.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                var$4.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_outCache = var$4;
            }
            var$4 = jl_System_outCache;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(135));
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $url === null ? $rt_s(1) : $url);
            var$6 = new jl_String;
            var$7 = var$5.$buffer;
            var$8 = var$5.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray(var$8);
            var$6.$characters = var$9;
            jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
            var$5 = var$4.$sb;
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, var$6);
            var$10 = var$5.$length;
            jl_AbstractStringBuilder_insertSpace(var$5, var$10, var$10 + 1 | 0);
            var$5.$buffer.data[var$10] = 10;
            ji_PrintStream_printSB(var$4);
        }
        $this.$queue = $this.$queue + 1 | 0;
        var$5 = new $rt_globals.XMLHttpRequest();
        var$4 = new cgxgbtp_AssetDownloadImpl$2;
        var$4.$this$03 = $this;
        var$4.$val$request = var$5;
        var$4.$val$async1 = $async;
        var$4.$val$url1 = $url;
        var$4.$val$listener2 = $listener;
        var$4 = otji_JS_function(var$4, "handleEvent");
        var$5.onreadystatechange = var$4;
        var$4 = new cgxgbtp_AssetDownloadImpl$6;
        var$4.$this$04 = $this;
        var$4.$val$listener3 = $listener;
        $listener = otji_JS_function(var$4, "handleEvent");
        var$5.onprogress = $listener;
        var$5.open("GET", $rt_ustr($url), !!$async);
        var$5.setRequestHeader("Content-Type", "text/plain; charset=utf-8");
        var$5.send();
    }
    function cgxgbtp_AssetDownloadImpl_loadBinary($this, $async, $url, $listener) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($this.$showLogs) {
            if (jl_System_outCache === null) {
                var$4 = new ji_PrintStream;
                var$4.$out = otcic_StdoutOutputStream_INSTANCE;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                var$4.$sb = var$5;
                var$4.$buffer1 = $rt_createCharArray(32);
                var$4.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                var$4.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_outCache = var$4;
            }
            var$4 = jl_System_outCache;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(133));
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $url === null ? $rt_s(1) : $url);
            var$6 = new jl_String;
            var$7 = var$5.$buffer;
            var$8 = var$5.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray(var$8);
            var$6.$characters = var$9;
            jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
            var$5 = var$4.$sb;
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, var$6);
            var$8 = var$5.$length;
            jl_AbstractStringBuilder_insertSpace(var$5, var$8, var$8 + 1 | 0);
            var$5.$buffer.data[var$8] = 10;
            ji_PrintStream_printSB(var$4);
        }
        $this.$queue = $this.$queue + 1 | 0;
        var$4 = new cgxgbtp_AssetDownloadImpl$4;
        var$4.$this$02 = $this;
        var$4.$val$async0 = $async;
        var$4.$val$url0 = $url;
        var$4.$val$listener1 = $listener;
        jl_Thread_$callClinit();
        $url = null;
        $listener = null;
        var$4.$finishedLock = new jl_Object;
        var$4.$alive = 1;
        var$4.$name2 = $listener;
        var$4.$target = $url;
        var$10 = jl_Thread_nextId;
        jl_Thread_nextId = var$10 + 1 | 0;
        var$4.$id1 = Long_fromInt(var$10);
        $url = new jl_Thread$start$lambda$_4_0;
        $url.$_01 = var$4;
        otp_Platform_startThread($url);
    }
    var cgxgbtp_AssetDownloader = $rt_classWithoutFields();
    var cgxgbtp_AssetDownloader_instance = null;
    function cgxgbtp_AssetDownloader_getInstance() {
        return cgxgbtp_AssetDownloader_instance;
    }
    var cgxgbt_TeaTool = $rt_classWithoutFields();
    var cgxgbt_TeaTool_isProd = 0;
    var cgxgbt_TeaTool_useGLArrayBuffer = 0;
    function cgxgbt_TeaTool__clinit_() {
        cgxgbt_TeaTool_isProd = 1;
    }
    var cbg_Graphics = $rt_classWithoutFields(0);
    function cgxgbt_TeaGraphics() {
        var a = this; jl_Object.call(a);
        a.$context = null;
        a.$canvas0 = null;
        a.$config0 = null;
        a.$gl20 = null;
        a.$gl30 = null;
        a.$glVersion = null;
        a.$fps0 = 0.0;
        a.$lastTimeStamp = Long_ZERO;
        a.$frameId = Long_ZERO;
        a.$deltaTime = 0.0;
        a.$time = 0.0;
        a.$frames = 0;
    }
    var cgxgbt_TeaGraphics_nextId = 0;
    var cgxgbt_TeaGraphics_pixmaps = null;
    function cgxgbt_TeaGraphics_$callClinit() {
        cgxgbt_TeaGraphics_$callClinit = $rt_eraseClinit(cgxgbt_TeaGraphics);
        cgxgbt_TeaGraphics__clinit_();
    }
    function cgxgbt_TeaGraphics__init_(var_0) {
        var var_1 = new cgxgbt_TeaGraphics();
        cgxgbt_TeaGraphics__init_0(var_1, var_0);
        return var_1;
    }
    function cgxgbt_TeaGraphics__init_0($this, $config) {
        var $vendorString, $versionString, $attr, $canvas1, $rendererString, $width, $currentWindow, $height, $density;
        cgxgbt_TeaGraphics_$callClinit();
        $this.$fps0 = 0.0;
        $this.$lastTimeStamp = jl_System_currentTimeMillis();
        $this.$frameId = Long_fromInt(-1);
        $this.$deltaTime = 0.0;
        $this.$time = 0.0;
        $this.$config0 = $config;
        cgxgbtdi_TeaWindow_$callClinit();
        $vendorString = $rt_globals.window.document;
        $versionString = $config.$canvasID;
        $this.$canvas0 = $vendorString.getElementById($rt_ustr($versionString));
        $attr = otjw_WebGLContextAttributes_create$js_body$_13();
        $versionString = !!$config.$alpha;
        $attr.alpha = $versionString;
        $versionString = !!$config.$antialiasing;
        $attr.antialias = $versionString;
        $versionString = !!$config.$stencil;
        $attr.stencil = $versionString;
        $versionString = !!$config.$premultipliedAlpha;
        $attr.premultipliedAlpha = $versionString;
        $versionString = !!$config.$preserveDrawingBuffer;
        $attr.preserveDrawingBuffer = $versionString;
        $canvas1 = $this.$canvas0;
        if ($config.$useGL30)
            $this.$context = $canvas1.getContext("webgl2", $attr);
        a: {
            if ($config.$useGL30) {
                $versionString = $this.$context;
                if ($versionString !== null) {
                    if (!$config.$useDebugGL)
                        $canvas1 = cgxgbt_TeaGL30__init_($versionString);
                    else {
                        $canvas1 = new cgxgbt_TeaGL30Debug;
                        cgxgbt_TeaGL30__init_0($canvas1, $versionString);
                    }
                    $this.$gl30 = $canvas1;
                    $this.$gl20 = $canvas1;
                    break a;
                }
            }
            $canvas1 = $canvas1.getContext("webgl", $attr);
            $this.$context = $canvas1;
            if (!$config.$useDebugGL)
                $versionString = cgxgbt_TeaGL20__init_($canvas1);
            else {
                $versionString = new cgxgbt_TeaGL20Debug;
                cgxgbt_TeaGL20__init_0($versionString, $canvas1);
            }
            $this.$gl20 = $versionString;
        }
        $versionString = $this.$gl20.$glGetString(7938);
        $vendorString = $this.$gl20.$glGetString(7936);
        $rendererString = $this.$gl20.$glGetString(7937);
        $canvas1 = new cbggg_GLVersion;
        cbg_Application$ApplicationType_$callClinit();
        cbggg_GLVersion__init_($canvas1, cbg_Application$ApplicationType_WebGL, $versionString, $vendorString, $rendererString);
        $this.$glVersion = $canvas1;
        $width = $config.$width;
        if (!($width < 0 && $config.$height < 0)) {
            if ($width && $config.$height ? 1 : 0)
                cgxgbt_TeaGraphics_setCanvasSize($this, $width, $config.$height);
            else {
                $currentWindow = cgxgbtdi_TeaWindow_TEA_WINDOW;
                $width = $currentWindow.$window0.document.documentElement.clientWidth - $config.$padHorizontal | 0;
                $height = $currentWindow.$window0.document.documentElement.clientHeight - $config.$padVertical | 0;
                $density = !$config.$usePhysicalPixels ? 1.0 : $rt_globals.devicePixelRatio || 1;
                cgxgbt_TeaGraphics_setCanvasSize($this, $density * $width | 0, $density * $height | 0);
            }
        }
        $config = $this.$canvas0;
        $versionString = new cgxgbt_TeaGraphics$1;
        $versionString.$this$05 = $this;
        cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61($config, otji_JS_function($versionString, "fullscreenChanged"));
    }
    function cgxgbt_TeaGraphics_update($this) {
        var $currTimeStamp, var$2, var$3;
        $currTimeStamp = jl_System_currentTimeMillis();
        var$2 = Long_toNumber(Long_sub($currTimeStamp, $this.$lastTimeStamp)) / 1000.0;
        $this.$deltaTime = var$2;
        $this.$lastTimeStamp = $currTimeStamp;
        var$2 = $this.$time + var$2;
        $this.$time = var$2;
        var$3 = $this.$frames + 1 | 0;
        $this.$frames = var$3;
        if (var$2 > 1.0) {
            $this.$fps0 = var$3;
            $this.$time = 0.0;
            $this.$frames = 0;
        }
    }
    function cgxgbt_TeaGraphics_getGL20($this) {
        return $this.$gl20;
    }
    function cgxgbt_TeaGraphics_getGL30($this) {
        return $this.$gl30;
    }
    function cgxgbt_TeaGraphics_getWidth($this) {
        return $this.$canvas0.width;
    }
    function cgxgbt_TeaGraphics_getHeight($this) {
        return $this.$canvas0.height;
    }
    function cgxgbt_TeaGraphics_setCanvasSize($this, $width, $height) {
        var var$3, $style, $density, var$6, var$7, var$8, var$9, var$10, var$11;
        var$3 = $this.$canvas0;
        $style = $width;
        var$3.width = $style;
        var$3 = $this.$canvas0;
        $style = $height;
        var$3.height = $style;
        if ($this.$config0.$usePhysicalPixels) {
            $density = $rt_globals.devicePixelRatio || 1;
            $style = $this.$canvas0.style;
            var$6 = $width / $density;
            cgxgbtd_StyleWrapper$Unit_$callClinit();
            var$7 = new jl_StringBuilder;
            var$7.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert3(var$7, var$7.$length, var$6);
            jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(136));
            var$8 = new jl_String;
            var$9 = var$7.$buffer;
            var$10 = var$7.$length;
            jl_String_$callClinit();
            var$11 = $rt_createCharArray(var$10);
            var$8.$characters = var$11;
            jl_System_fastArraycopy(var$9, 0, var$11, 0, var$10);
            $style.setProperty("width", $rt_ustr(var$8));
            $density = $height / $density;
            var$7 = new jl_StringBuilder;
            var$7.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert3(var$7, var$7.$length, $density);
            jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(136));
            var$3 = new jl_String;
            var$11 = var$7.$buffer;
            $height = var$7.$length;
            var$9 = $rt_createCharArray($height);
            var$3.$characters = var$9;
            jl_System_fastArraycopy(var$11, 0, var$9, 0, $height);
            $style.setProperty("height", $rt_ustr(var$3));
        }
    }
    function cgxgbt_TeaGraphics__clinit_() {
        cgxgbt_TeaGraphics_nextId = 0;
        cgxgbt_TeaGraphics_pixmaps = cbgu_IntMap__init_(51, 0.800000011920929);
    }
    function cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_61(var$1, var$2) {
        if (var$1.requestFullscreen) {
            $rt_globals.document.addEventListener("fullscreenchange", var$2, false);
        }
        if (var$1.webkitRequestFullScreen) {
            $rt_globals.document.addEventListener("webkitfullscreenchange", var$2, false);
        }
        if (var$1.mozRequestFullScreen) {
            $rt_globals.document.addEventListener("mozfullscreenchange", var$2, false);
        }
        if (var$1.msRequestFullscreen) {
            $rt_globals.document.addEventListener("msfullscreenchange", var$2, false);
        }
    }
    function cgxgbtp_Preloader() {
        var a = this; jl_Object.call(a);
        a.$directories = null;
        a.$images = null;
        a.$audio0 = null;
        a.$texts = null;
        a.$binaries = null;
        a.$assetNames = null;
        a.$assets = null;
        a.$assetTotal = 0;
        a.$baseUrl = null;
    }
    function cgxgbtp_Preloader__init_(var_0, var_1, var_2) {
        var var_3 = new cgxgbtp_Preloader();
        cgxgbtp_Preloader__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function cgxgbtp_Preloader__init_0($this, $newBaseURL, $canvas, $teaApplication) {
        var var$4;
        $this.$directories = cbgu_ObjectMap__init_(51, 0.800000011920929);
        $this.$images = cbgu_ObjectMap__init_(51, 0.800000011920929);
        $this.$audio0 = cbgu_ObjectMap__init_(51, 0.800000011920929);
        $this.$texts = cbgu_ObjectMap__init_(51, 0.800000011920929);
        $this.$binaries = cbgu_ObjectMap__init_(51, 0.800000011920929);
        $this.$assetNames = cbgu_ObjectMap__init_(51, 0.800000011920929);
        var$4 = new cbgu_Array;
        var$4.$ordered = 1;
        var$4.$items = $rt_createArray(jl_Object, 16);
        $this.$assets = var$4;
        $this.$assetTotal = (-1);
        $this.$baseUrl = $newBaseURL;
        cgxgbtp_Preloader_setupFileDrop($this, $canvas, $teaApplication);
    }
    function cgxgbtp_Preloader_setupFileDrop($this, $canvas, $teaApplication) {
        var $config, $document, var$5;
        $config = $teaApplication.$config;
        if ($config.$windowListener !== null) {
            $document = $canvas.ownerDocument;
            var$5 = new cgxgbtp_Preloader$1;
            var$5.$this$06 = $this;
            $document.addEventListener("dragenter", otji_JS_function(var$5, "handleEvent"), !!0);
            var$5 = new cgxgbtp_Preloader$2;
            var$5.$this$07 = $this;
            $document.addEventListener("dragover", otji_JS_function(var$5, "handleEvent"), !!0);
            var$5 = new cgxgbtp_Preloader$3;
            var$5.$this$08 = $this;
            var$5.$val$teaApplication = $teaApplication;
            var$5.$val$config = $config;
            $document.addEventListener("drop", otji_JS_function(var$5, "handleEvent"));
        }
    }
    function cgxgbtp_Preloader_loadSingleAsset($this, $asset) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        if (cgxgbtp_Preloader_contains($this, $asset.$url)) {
            $asset.$loaded = $asset.$size3;
            $asset.$succeed = 1;
            $asset.$failed = 0;
            $asset.$isLoading = 0;
            return 0;
        }
        if ($asset.$isLoading)
            return 0;
        $asset.$failed = 0;
        $asset.$succeed = 0;
        $asset.$isLoading = 1;
        var$2 = $asset.$url;
        var$3 = $asset.$type1;
        var$4 = $asset.$mimeType;
        var$5 = new cgxgbtp_Preloader$5;
        var$5.$this$09 = $this;
        var$5.$val$asset = $asset;
        var$6 = cgxgbtp_AssetDownloader_instance;
        $asset = $this.$baseUrl;
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        var$8 = var$7.$length;
        if ($asset === null)
            $asset = $rt_s(1);
        jl_StringBuilder_insert2(var$7, var$8, $asset);
        jl_StringBuilder_insert2(var$7, var$7.$length, $rt_s(101));
        $asset = new jl_String;
        var$9 = var$7.$buffer;
        var$10 = var$7.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray(var$10);
        $asset.$characters = var$11;
        jl_System_fastArraycopy(var$9, 0, var$11, 0, var$10);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $asset);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, var$2 === null ? $rt_s(1) : var$2);
        var$12 = new jl_String;
        var$9 = var$7.$buffer;
        var$10 = var$7.$length;
        var$11 = $rt_createCharArray(var$10);
        var$12.$characters = var$11;
        jl_System_fastArraycopy(var$9, 0, var$11, 0, var$10);
        $asset = new cgxgbtp_Preloader$7;
        $asset.$this$010 = $this;
        $asset.$val$listener4 = var$5;
        $asset.$val$type = var$3;
        $asset.$val$url2 = var$2;
        cgxgbtp_AssetDownloadImpl_load(var$6, 1, var$12, var$3, var$4, $asset);
        return 1;
    }
    function cgxgbtp_Preloader_putAssetInMap($this, $type, $url, $result) {
        a: {
            cgxgbtp_Preloader$12_$callClinit();
            switch (cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType.data[$type.$ordinal]) {
                case 1:
                    break;
                case 2:
                    cbgu_ObjectMap_put($this.$images, $url, $result);
                    break a;
                case 3:
                    cbgu_ObjectMap_put($this.$binaries, $url, $result);
                    break a;
                case 4:
                    cbgu_ObjectMap_put($this.$audio0, $url, $result);
                    break a;
                case 5:
                    cbgu_ObjectMap_put($this.$directories, $url, null);
                    break a;
                default:
                    break a;
            }
            cbgu_ObjectMap_put($this.$texts, $url, $result);
        }
    }
    function cgxgbtp_Preloader_read($this, $url) {
        var var$2, var$3, var$4, var$5, $$je;
        if (cbgu_ObjectMap_locateKey($this.$texts, $url) < 0 ? 0 : 1) {
            a: {
                try {
                    var$2 = ji_ByteArrayInputStream__init_(jl_String_getBytes(cbgu_ObjectMap_get($this.$texts, $url), $rt_s(137)));
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ji_UnsupportedEncodingException) {
                        break a;
                    } else {
                        throw $$e;
                    }
                }
                return var$2;
            }
            return null;
        }
        if (cbgu_ObjectMap_locateKey($this.$images, $url) < 0 ? 0 : 1) {
            $url = new ji_ByteArrayInputStream;
            var$3 = $rt_createByteArray(1);
            var$4 = var$3.data.length;
            $url.$buf = var$3;
            $url.$pos = 0;
            $url.$mark0 = 0;
            $url.$count0 = 0 + var$4 | 0;
            return $url;
        }
        if (cbgu_ObjectMap_locateKey($this.$binaries, $url) < 0 ? 0 : 1) {
            var$2 = $this.$binaries;
            var$5 = cbgu_ObjectMap_locateKey(var$2, $url);
            $url = var$5 < 0 ? null : var$2.$valueTable.data[var$5];
            var$2 = new cgxgbtp_Blob$1;
            var$2.$this$011 = $url;
            return var$2;
        }
        if (!(cbgu_ObjectMap_locateKey($this.$audio0, $url) < 0 ? 0 : 1))
            return null;
        $url = new ji_ByteArrayInputStream;
        var$3 = $rt_createByteArray(1);
        var$4 = var$3.data.length;
        $url.$buf = var$3;
        $url.$pos = 0;
        $url.$mark0 = 0;
        $url.$count0 = 0 + var$4 | 0;
        return $url;
    }
    function cgxgbtp_Preloader_contains($this, $file) {
        var var$2;
        var$2 = cbgu_ObjectMap_locateKey($this.$texts, $file) < 0 ? 0 : 1;
        return !var$2 && !(cbgu_ObjectMap_locateKey($this.$images, $file) < 0 ? 0 : 1) && !(cbgu_ObjectMap_locateKey($this.$binaries, $file) < 0 ? 0 : 1) && !(cbgu_ObjectMap_locateKey($this.$audio0, $file) < 0 ? 0 : 1) && !(cbgu_ObjectMap_locateKey($this.$directories, $file) < 0 ? 0 : 1) ? 0 : 1;
    }
    var cgxgbt_AssetLoaderListener = $rt_classWithoutFields();
    function cgxgbt_AssetLoaderListener_onProgress($this, $amount) {}
    var cbg_Input = $rt_classWithoutFields(0);
    var cgxgbtd_EventListenerWrapper = $rt_classWithoutFields(0);
    function cgxgbt_TeaInput() {
        var a = this; jl_Object.call(a);
        a.$canvas1 = null;
        a.$justTouched = 0;
        a.$touchMap = null;
        a.$touched = null;
        a.$touchX = null;
        a.$touchY = null;
        a.$deltaX = null;
        a.$deltaY = null;
        a.$pressedButtons = null;
        a.$pressedKeyCount = 0;
        a.$pressedKeys = null;
        a.$keyJustPressed = 0;
        a.$justPressedKeys = null;
        a.$justPressedButtons = null;
        a.$keysToCatch = null;
        a.$processor = null;
        a.$currentEventTimeStamp = Long_ZERO;
        a.$hasFocus = 0;
    }
    function cgxgbt_TeaInput__init_(var_0) {
        var var_1 = new cgxgbt_TeaInput();
        cgxgbt_TeaInput__init_0(var_1, var_0);
        return var_1;
    }
    function cgxgbt_TeaInput_getMouseWheelVelocity($event) {
        var $agent, $delta, $detail, $wheelDelta;
        $agent = cgxgbt_TeaApplication_agentInfo;
        $delta = 0.0;
        $detail = $event.detail;
        $wheelDelta = $event.wheelDelta;
        if ($agent.firefox ? 1 : 0)
            $delta = ($agent.macOS ? 1 : 0) ? 1.0 * $detail : 1.0 * $detail / 3.0;
        else if ($agent.opera ? 1 : 0)
            $delta = !($agent.linux ? 1 : 0) ? (-1.0) * $wheelDelta / 40.0 : (-1.0) * $wheelDelta / 80.0;
        else if (!(!($agent.chrome ? 1 : 0) && !($agent.safari ? 1 : 0) && !($agent.IE ? 1 : 0))) {
            $delta = (-1.0) * $wheelDelta;
            $detail = $delta / 120.0;
            if (jl_Math_absImpl($detail) >= 1.0)
                $delta = $detail;
            else if (!($agent.windows ? 1 : 0))
                $delta = !($agent.macOS ? 1 : 0) ? $detail : $delta / 3.0;
        }
        return $delta;
    }
    function cgxgbt_TeaInput__init_0($this, $canvas) {
        $this.$justTouched = 0;
        $this.$touchMap = cbgu_IntMap__init_(20, 0.800000011920929);
        $this.$touched = $rt_createBooleanArray(20);
        $this.$touchX = $rt_createIntArray(20);
        $this.$touchY = $rt_createIntArray(20);
        $this.$deltaX = $rt_createIntArray(20);
        $this.$deltaY = $rt_createIntArray(20);
        $this.$pressedButtons = cbgu_IntSet__init_(51, 0.800000011920929);
        $this.$pressedKeyCount = 0;
        $this.$pressedKeys = $rt_createBooleanArray(256);
        $this.$keyJustPressed = 0;
        $this.$justPressedKeys = $rt_createBooleanArray(256);
        $this.$justPressedButtons = $rt_createBooleanArray(5);
        $this.$keysToCatch = cbgu_IntSet__init_(51, 0.800000011920929);
        $this.$hasFocus = 1;
        $this.$canvas1 = $canvas;
        cgxgbt_TeaInput_hookEvents($this);
    }
    function cgxgbt_TeaInput_hookEvents($this) {
        var $document;
        $document = $this.$canvas1.ownerDocument;
        $document.addEventListener("mousedown", otji_JS_function($this, "handleEvent"), !!0);
        $document.addEventListener("mouseup", otji_JS_function($this, "handleEvent"), !!0);
        $document.addEventListener("mousemove", otji_JS_function($this, "handleEvent"), !!0);
        $document.addEventListener("wheel", otji_JS_function($this, "handleEvent"), !!0);
        $document.addEventListener("keydown", otji_JS_function($this, "handleEvent"), !!0);
        $document.addEventListener("keyup", otji_JS_function($this, "handleEvent"), !!0);
        $document.addEventListener("keypress", otji_JS_function($this, "handleEvent"), !!0);
        $this.$canvas1.addEventListener("touchstart", otji_JS_function($this, "handleEvent"), !!1);
        $this.$canvas1.addEventListener("touchmove", otji_JS_function($this, "handleEvent"), !!1);
        $this.$canvas1.addEventListener("touchcancel", otji_JS_function($this, "handleEvent"), !!1);
        $this.$canvas1.addEventListener("touchend", otji_JS_function($this, "handleEvent"), !!1);
    }
    function cgxgbt_TeaInput_handleMouseEvents($this, $touchEvent) {
        var $type, $target, $canvas2, var$5, $button, $relativeX, $relativeY, $touch, $mouseX, $mouseY, $wheelDelta, $touches, $i, $j, $real, $equals, $touch_0, $touchId, $j_0, var$21;
        a: {
            $type = $rt_str($touchEvent.type);
            if (jl_String_equals($type, $rt_s(138))) {
                $rt_globals.window.focus();
                $target = $touchEvent.target;
                $canvas2 = $this.$canvas1;
                if ($target !== $canvas2 ? 0 : 1) {
                    var$5 = $this.$touched.data;
                    if (!var$5[0]) {
                        $this.$hasFocus = 1;
                        $this.$justTouched = 1;
                        var$5[0] = 1;
                        $button = cgxgbtu_KeyCodes_getButton($touchEvent.button);
                        cbgu_IntSet_add($this.$pressedButtons, $button);
                        $this.$justPressedButtons.data[$button] = 1;
                        $this.$deltaX.data[0] = 0;
                        $this.$deltaY.data[0] = 0;
                        if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                            $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas1);
                            $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1);
                            $this.$touchX.data[0] = $relativeX;
                            $this.$touchY.data[0] = $relativeY;
                        } else {
                            var$5 = $this.$touchX.data;
                            var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                            var$5 = $this.$touchY.data;
                            var$5[0] = var$5[0] + $touchEvent.movementY | 0;
                        }
                        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                        $touch = $this.$processor;
                        if ($touch !== null)
                            igtg_FirstScreen$show$1_touchDown($touch, $this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($touchEvent.button));
                        $touchEvent.preventDefault();
                        $touchEvent.stopPropagation();
                        break a;
                    }
                }
                $mouseX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $canvas2);
                $mouseY = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1);
                if (!($mouseX >= 0.0 && $mouseX <= cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics) && $mouseY >= 0.0 && $mouseY <= cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics)))
                    $this.$hasFocus = 0;
                return;
            }
            if (jl_String_equals($type, $rt_s(139))) {
                if (!$this.$touched.data[0])
                    return;
                cbgu_IntSet_remove($this.$pressedButtons, cgxgbtu_KeyCodes_getButton($touchEvent.button));
                var$5 = $this.$touched;
                var$5.data[0] = $this.$pressedButtons.$size4 <= 0 ? 0 : 1;
                if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                    cgxgbt_TeaInput_setDelta($this, 0, cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas1) - $this.$touchX.data[0] | 0, cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1) - $this.$touchY.data[0] | 0);
                    $this.$touchX.data[0] = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas1);
                    $this.$touchY.data[0] = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1);
                } else {
                    cgxgbt_TeaInput_setDelta($this, 0, $touchEvent.movementX | 0, $touchEvent.movementY | 0);
                    var$5 = $this.$touchX.data;
                    var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                    var$5 = $this.$touchY.data;
                    var$5[0] = var$5[0] + $touchEvent.movementY | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                $this.$touched.data[0] = 0;
                $touch = $this.$processor;
                if ($touch !== null)
                    igtg_FirstScreen$show$1_touchUp($touch, $this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($touchEvent.button));
            } else if (!jl_String_equals($type, $rt_s(140))) {
                if (jl_String_equals($type, $rt_s(141))) {
                    if ($this.$processor !== null) {
                        $wheelDelta = cgxgbt_TeaInput_getMouseWheelVelocity($touchEvent);
                        igtg_FirstScreen$show$1_scrolled($this.$processor, 0.0, $wheelDelta | 0);
                    }
                    $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                } else if (jl_String_equals($type, $rt_s(142))) {
                    $this.$justTouched = 1;
                    $touches = $touchEvent.changedTouches;
                    $i = 0;
                    $j = $touches.length;
                    while ($i < $j) {
                        $touch = $touches.item($i);
                        $real = $touch.identifier;
                        $canvas2 = $this.$touchMap;
                        $equals = cgxgbt_TeaInput_getAvailablePointer($this);
                        cbgu_IntMap_put($canvas2, $real, jl_Integer_valueOf($equals));
                        $this.$touched.data[$equals] = 1;
                        $this.$touchX.data[$equals] = cgxgbt_TeaInput_getRelativeX0($this, $touch, $this.$canvas1);
                        $this.$touchY.data[$equals] = cgxgbt_TeaInput_getRelativeY0($this, $touch, $this.$canvas1);
                        $this.$deltaX.data[$equals] = 0;
                        $this.$deltaY.data[$equals] = 0;
                        $touch = $this.$processor;
                        if ($touch !== null)
                            igtg_FirstScreen$show$1_touchDown($touch, $this.$touchX.data[$equals], $this.$touchY.data[$equals], $equals, 0);
                        $i = $i + 1 | 0;
                    }
                    $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                    $touchEvent.preventDefault();
                }
            } else {
                if (!cgxgbt_TeaInput_isCursorCatched($this)) {
                    $relativeX = cgxgbt_TeaInput_getRelativeX($this, $touchEvent, $this.$canvas1);
                    $relativeY = cgxgbt_TeaInput_getRelativeY($this, $touchEvent, $this.$canvas1);
                    cgxgbt_TeaInput_setDelta($this, 0, $relativeX - $this.$touchX.data[0] | 0, $relativeY - $this.$touchY.data[0] | 0);
                    $this.$touchX.data[0] = $relativeX;
                    $this.$touchY.data[0] = $relativeY;
                } else {
                    cgxgbt_TeaInput_setDelta($this, 0, $touchEvent.movementX | 0, $touchEvent.movementY | 0);
                    var$5 = $this.$touchX.data;
                    var$5[0] = var$5[0] + $touchEvent.movementX | 0;
                    var$5 = $this.$touchY.data;
                    var$5[0] = var$5[0] + $touchEvent.movementY | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                $touch = $this.$processor;
                if ($touch !== null) {
                    if (!$this.$touched.data[0])
                        igtg_FirstScreen$show$1_mouseMoved($touch, $this.$touchX.data[0], $this.$touchY.data[0]);
                    else
                        igtg_FirstScreen$show$1_touchDragged($touch, $this.$touchX.data[0], $this.$touchY.data[0], 0);
                }
            }
        }
        if (jl_String_equals($type, $rt_s(143))) {
            $touches = $touchEvent.changedTouches;
            $i = 0;
            $j = $touches.length;
            while ($i < $j) {
                $touch_0 = $touches.item($i);
                $real = $touch_0.identifier;
                $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
                cgxgbt_TeaInput_setDelta($this, $touchId, cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas1) - $this.$touchX.data[$touchId] | 0, cgxgbt_TeaInput_getRelativeY0($this, $touch_0, $this.$canvas1) - $this.$touchY.data[$touchId] | 0);
                $this.$touchX.data[$touchId] = cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas1);
                $this.$touchY.data[$touchId] = cgxgbt_TeaInput_getRelativeY0($this, $touch_0, $this.$canvas1);
                $touch = $this.$processor;
                if ($touch !== null)
                    igtg_FirstScreen$show$1_touchDragged($touch, $this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId);
                $i = $i + 1 | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $touchEvent.preventDefault();
        }
        if (jl_String_equals($type, $rt_s(144))) {
            $touches = $touchEvent.changedTouches;
            $i = 0;
            $j_0 = $touches.length;
            while ($i < $j_0) {
                $touch_0 = $touches.item($i);
                $real = $touch_0.identifier;
                $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
                cbgu_IntMap_remove($this.$touchMap, $real);
                $this.$touched.data[$touchId] = 0;
                $relativeX = cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas1);
                $relativeY = cgxgbt_TeaInput_getRelativeY0($this, $touch_0, $this.$canvas1);
                cgxgbt_TeaInput_setDelta($this, $touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
                var$5 = $this.$touchX.data;
                var$5[$touchId] = $relativeX;
                var$21 = $this.$touchY.data;
                var$21[$touchId] = $relativeY;
                $touch = $this.$processor;
                if ($touch !== null)
                    igtg_FirstScreen$show$1_touchUp($touch, var$5[$touchId], var$21[$touchId], $touchId, 0);
                $i = $i + 1 | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $touchEvent.preventDefault();
        }
        if (jl_String_equals($type, $rt_s(145))) {
            $touches = $touchEvent.changedTouches;
            $i = 0;
            $j_0 = $touches.length;
            while ($i < $j_0) {
                $touch_0 = $touches.item($i);
                $real = $touch_0.identifier;
                $touchId = jl_Integer_intValue(cbgu_IntMap_get($this.$touchMap, $real));
                cbgu_IntMap_remove($this.$touchMap, $real);
                $this.$touched.data[$touchId] = 0;
                $relativeX = cgxgbt_TeaInput_getRelativeX0($this, $touch_0, $this.$canvas1);
                $relativeY = cgxgbt_TeaInput_getRelativeY0($this, $touch_0, $this.$canvas1);
                cgxgbt_TeaInput_setDelta($this, $touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
                var$5 = $this.$touchX.data;
                var$5[$touchId] = $relativeX;
                var$21 = $this.$touchY.data;
                var$21[$touchId] = $relativeY;
                $touch = $this.$processor;
                if ($touch !== null)
                    igtg_FirstScreen$show$1_touchUp($touch, var$5[$touchId], var$21[$touchId], $touchId, 0);
                $i = $i + 1 | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $touchEvent.preventDefault();
        }
    }
    function cgxgbt_TeaInput_handleKeyboardEvents($this, $keyboardEvent) {
        var $type, $code, var$4, $c, var$6, var$7;
        $type = $rt_str($keyboardEvent.type);
        if (!(jl_String_equals($type, $rt_s(146)) && $this.$hasFocus)) {
            if (jl_String_equals($type, $rt_s(147)) && $this.$hasFocus) {
                if (($keyboardEvent.charCode & 65535) == 9) {
                    $keyboardEvent.preventDefault();
                    $keyboardEvent.stopPropagation();
                }
            } else if (jl_String_equals($type, $rt_s(148)) && $this.$hasFocus) {
                $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
                var$4 = $this.$keysToCatch;
                if (!$code)
                    $c = var$4.$hasZeroValue;
                else {
                    var$6 = var$4.$keyTable0;
                    var$7 = Long_lo(Long_shru(Long_mul(Long_fromInt($code), Long_create(2135587861, 2654435769)), var$4.$shift0));
                    a: {
                        while (true) {
                            $c = var$6.data[var$7];
                            if (!$c) {
                                var$7 =  -(var$7 + 1 | 0) | 0;
                                break a;
                            }
                            if ($c == $code)
                                break;
                            var$7 = (var$7 + 1 | 0) & var$4.$mask0;
                        }
                    }
                    $c = var$7 < 0 ? 0 : 1;
                }
                if ($c)
                    $keyboardEvent.preventDefault();
                var$6 = $this.$pressedKeys.data;
                if (var$6[$code]) {
                    $this.$pressedKeyCount = $this.$pressedKeyCount - 1 | 0;
                    var$6[$code] = 0;
                }
                var$4 = $this.$processor;
                if (var$4 !== null)
                    igtg_FirstScreen$show$1_keyUp(var$4, $code);
                if ($code == 61) {
                    $keyboardEvent.preventDefault();
                    $keyboardEvent.stopPropagation();
                }
            }
        } else {
            b: {
                $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
                switch ($code) {
                    case 67:
                        break;
                    case 112:
                        break b;
                    default:
                        break b;
                }
            }
            var$4 = $this.$keysToCatch;
            if (!$code)
                $c = var$4.$hasZeroValue;
            else {
                var$6 = var$4.$keyTable0;
                $c = Long_lo(Long_shru(Long_mul(Long_fromInt($code), Long_create(2135587861, 2654435769)), var$4.$shift0));
                c: {
                    while (true) {
                        var$7 = var$6.data[$c];
                        if (!var$7) {
                            $c =  -($c + 1 | 0) | 0;
                            break c;
                        }
                        if (var$7 == $code)
                            break;
                        $c = ($c + 1 | 0) & var$4.$mask0;
                    }
                }
                $c = $c < 0 ? 0 : 1;
            }
            if ($c)
                $keyboardEvent.preventDefault();
            if (!($code != 67 && $code != 112))
                $keyboardEvent.preventDefault();
            else {
                var$6 = $this.$pressedKeys.data;
                if (!var$6[$code]) {
                    $this.$pressedKeyCount = $this.$pressedKeyCount + 1 | 0;
                    var$6[$code] = 1;
                    $this.$keyJustPressed = 1;
                    $this.$justPressedKeys.data[$code] = 1;
                }
            }
            if ($code == 61) {
                $keyboardEvent.preventDefault();
                $keyboardEvent.stopPropagation();
            }
        }
    }
    function cgxgbt_TeaInput_getAvailablePointer($this) {
        var $i, var$2, var$3;
        $i = 0;
        while (true) {
            if ($i >= 20)
                return (-1);
            var$2 = $this.$touchMap;
            if ($i >= (-128) && $i <= 127) {
                jl_Integer_ensureIntegerCache();
                var$3 = jl_Integer_integerCache.data[$i + 128 | 0];
            } else {
                var$3 = new jl_Integer;
                var$3.$value5 = $i;
            }
            if (!cbgu_IntMap_containsValue(var$2, var$3, 0))
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    function cgxgbt_TeaInput_reset($this) {
        var $i, var$2, $i_0;
        a: {
            if ($this.$justTouched) {
                $this.$justTouched = 0;
                $i = 0;
                while (true) {
                    var$2 = $this.$justPressedButtons.data;
                    if ($i >= var$2.length)
                        break a;
                    var$2[$i] = 0;
                    $i = $i + 1 | 0;
                }
            }
        }
        b: {
            if ($this.$keyJustPressed) {
                $this.$keyJustPressed = 0;
                $i_0 = 0;
                while (true) {
                    var$2 = $this.$justPressedKeys.data;
                    if ($i_0 >= var$2.length)
                        break b;
                    var$2[$i_0] = 0;
                    $i_0 = $i_0 + 1 | 0;
                }
            }
        }
    }
    function cgxgbt_TeaInput_setDelta($this, $touchId, $x, $y) {
        $this.$deltaX.data[$touchId] = $x;
        $this.$deltaY.data[$touchId] = $y;
    }
    function cgxgbt_TeaInput_getRelativeX($this, $e, $target) {
        var $xScaleRatio, var$4;
        $xScaleRatio = $target.width * 1.0 / $target.clientWidth;
        var$4 = ($e.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $target) | 0) | 0) + ($target.scrollLeft | 0) | 0;
        $e = $target.ownerDocument;
        if (jl_String_equals($rt_str($e.compatMode), $rt_s(149)))
            $e = $e.documentElement;
        $xScaleRatio = $xScaleRatio * (var$4 + ($e.scrollLeft | 0) | 0);
        return $xScaleRatio + jl_Math_sign($xScaleRatio) * 0.5 | 0;
    }
    function cgxgbt_TeaInput_getRelativeY($this, $e, $target) {
        var $yScaleRatio, var$4;
        $yScaleRatio = $target.height * 1.0 / $target.clientHeight;
        var$4 = ($e.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $target) | 0) | 0) + ($target.scrollTop | 0) | 0;
        $e = $target.ownerDocument;
        if (jl_String_equals($rt_str($e.compatMode), $rt_s(149)))
            $e = $e.documentElement;
        $yScaleRatio = $yScaleRatio * (var$4 + ($e.scrollTop | 0) | 0);
        return $yScaleRatio + jl_Math_sign($yScaleRatio) * 0.5 | 0;
    }
    function cgxgbt_TeaInput_getRelativeX0($this, $touch, $target) {
        var $xScaleRatio, var$4;
        $xScaleRatio = $target.width * 1.0 / $target.clientWidth;
        var$4 = ($touch.clientX - (cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $target) | 0) | 0) + ($target.scrollLeft | 0) | 0;
        $touch = $target.ownerDocument;
        if (jl_String_equals($rt_str($touch.compatMode), $rt_s(149)))
            $touch = $touch.documentElement;
        $xScaleRatio = $xScaleRatio * (var$4 + ($touch.scrollLeft | 0) | 0);
        return $xScaleRatio + jl_Math_sign($xScaleRatio) * 0.5 | 0;
    }
    function cgxgbt_TeaInput_getRelativeY0($this, $touch, $target) {
        var $yScaleRatio, var$4;
        $yScaleRatio = $target.height * 1.0 / $target.clientHeight;
        var$4 = ($touch.clientY - (cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $target) | 0) | 0) + ($target.scrollTop | 0) | 0;
        $touch = $target.ownerDocument;
        if (jl_String_equals($rt_str($touch.compatMode), $rt_s(149)))
            $touch = $touch.documentElement;
        $yScaleRatio = $yScaleRatio * (var$4 + ($touch.scrollTop | 0) | 0);
        return $yScaleRatio + jl_Math_sign($yScaleRatio) * 0.5 | 0;
    }
    function cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $elem) {
        var $top, $curr;
        $top = 0.0;
        $curr = $elem;
        while ($curr.offsetParent !== null) {
            $top = $top - $curr.scrollTop;
            $curr = $curr.parentNode;
        }
        while ($elem !== null) {
            $top = $top + $elem.offsetTop;
            $elem = $curr.offsetParent;
        }
        return $top;
    }
    function cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $elem) {
        var $left, $curr;
        $left = 0.0;
        $curr = $elem;
        while ($curr.offsetParent !== null) {
            $left = $left - $curr.scrollLeft;
            $curr = $curr.parentNode;
        }
        while ($elem !== null) {
            $left = $left + $elem.offsetLeft;
            $elem = $curr.offsetParent;
        }
        return $left;
    }
    function cgxgbt_TeaInput_setInputProcessor($this, $processor) {
        $this.$processor = $processor;
    }
    function cgxgbt_TeaInput_isCursorCatched($this) {
        return cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_80($this.$canvas1) ? 1 : 0;
    }
    function cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_80(var$1) {
        if ($rt_globals.document.pointerLockElement === $rt_globals.canvas || $rt_globals.document.mozPointerLockElement === $rt_globals.canvas) {
            return true;
        }
        return false;
    }
    function cgxgbt_TeaInput_handleEvent$exported$0(var$0, var$1) {
        cgxgbt_TeaInput_handleMouseEvents(var$0, var$1);
        cgxgbt_TeaInput_handleKeyboardEvents(var$0, var$1);
    }
    var cbg_Files = $rt_classWithoutFields(0);
    function cgxgbt_TeaFiles() {
        jl_Object.call(this);
        this.$preloader = null;
    }
    function cgxgbt_TeaFiles__init_(var_0) {
        var var_1 = new cgxgbt_TeaFiles();
        cgxgbt_TeaFiles__init_0(var_1, var_0);
        return var_1;
    }
    function cgxgbt_TeaFiles__init_0($this, $preloader) {
        $this.$preloader = $preloader;
    }
    function cgxgbt_TeaNet() {
        jl_Object.call(this);
        this.$httpResponseListeners = null;
    }
    function cgxgbt_TeaNet__init_() {
        var var_0 = new cgxgbt_TeaNet();
        cgxgbt_TeaNet__init_0(var_0);
        return var_0;
    }
    function cgxgbt_TeaNet__init_0($this) {
        var var$1, var$2, var$3, var$4;
        var$1 = new ju_HashMap;
        var$2 = ju_HashMap_calculateCapacity(16);
        var$1.$elementCount = 0;
        var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
        var$4 = var$3.data;
        var$1.$elementData = var$3;
        var$1.$loadFactor = 0.75;
        var$1.$threshold = var$4.length * 0.75 | 0;
        $this.$httpResponseListeners = var$1;
    }
    var cbg_ApplicationLogger = $rt_classWithoutFields(0);
    var cgxgbt_TeaApplicationLogger = $rt_classWithoutFields();
    function cgxgbt_TeaApplicationLogger__init_() {
        var var_0 = new cgxgbt_TeaApplicationLogger();
        cgxgbt_TeaApplicationLogger__init_0(var_0);
        return var_0;
    }
    function cgxgbt_TeaApplicationLogger__init_0($this) {}
    var cbgu_Clipboard = $rt_classWithoutFields(0);
    function cgxgbt_TeaClipboard() {
        var a = this; jl_Object.call(a);
        a.$requestedWritePermissions = 0;
        a.$hasWritePermissions = 0;
        a.$writeHandler = null;
        a.$content = null;
    }
    function cgxgbt_TeaClipboard__init_() {
        var var_0 = new cgxgbt_TeaClipboard();
        cgxgbt_TeaClipboard__init_0(var_0);
        return var_0;
    }
    function cgxgbt_TeaClipboard__init_0($this) {
        var var$1;
        $this.$requestedWritePermissions = 0;
        $this.$hasWritePermissions = 1;
        var$1 = new cgxgbt_TeaClipboard$ClipboardWriteHandler;
        var$1.$this$012 = $this;
        $this.$writeHandler = var$1;
        $this.$content = $rt_s(45);
    }
    function cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4(var$1) {
        if ("clipboard" in $rt_globals.navigator) {
            $rt_globals.navigator.clipboard.writeText(var$1);
        }
    }
    var cbg_Gdx = $rt_classWithoutFields();
    var cbg_Gdx_app = null;
    var cbg_Gdx_graphics = null;
    var cbg_Gdx_audio = null;
    var cbg_Gdx_input = null;
    var cbg_Gdx_files = null;
    var cbg_Gdx_net = null;
    var cbg_Gdx_gl = null;
    var cbg_Gdx_gl20 = null;
    var cbg_Gdx_gl30 = null;
    var cbg_Audio = $rt_classWithoutFields(0);
    var cgxgbt_TeaAudio = $rt_classWithoutFields(0);
    function cgxgbt_DefaultTeaAudio() {
        jl_Object.call(this);
        this.$webAudioAPIManager = null;
    }
    function cgxgbt_DefaultTeaAudio__init_() {
        var var_0 = new cgxgbt_DefaultTeaAudio();
        cgxgbt_DefaultTeaAudio__init_0(var_0);
        return var_0;
    }
    function cgxgbt_DefaultTeaAudio__init_0($this) {
        $this.$webAudioAPIManager = null;
        $this.$webAudioAPIManager = cgxgbtw_WebAudioAPIManager__init_();
    }
    function cgxgbt_TeaApplication$1() {
        jl_Object.call(this);
        this.$this$013 = null;
    }
    function cgxgbt_TeaApplication$1__init_(var_0) {
        var var_1 = new cgxgbt_TeaApplication$1();
        cgxgbt_TeaApplication$1__init_0(var_1, var_0);
        return var_1;
    }
    function cgxgbt_TeaApplication$1__init_0($this, $this$0) {
        $this.$this$013 = $this$0;
    }
    function cgxgbt_TeaApplication$1_handleEvent($this, $evt) {
        var $state, $$je;
        if (!jl_String_equals($rt_s(150), $rt_str($this.$this$013.$window.$window0.document.visibilityState))) {
            $evt = $this.$this$013.$lifecycleListeners;
            jl_Object_monitorEnterSync($evt);
            a: {
                try {
                    $state = cbgu_Array_iterator($evt);
                    while (cbgu_Array$ArrayIterator_hasNext($state)) {
                        cgxgbtw_WebAudioAPIManager_resume(cbgu_Array$ArrayIterator_next($state));
                    }
                    jl_Object_monitorExitSync($evt);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    $state = $$je;

                }
                jl_Object_monitorExitSync($evt);
                $rt_throw($state);
            }
            $this.$this$013.$appListener.$currentScreen.$resume();
        } else {
            $evt = $this.$this$013.$lifecycleListeners;
            jl_Object_monitorEnterSync($evt);
            b: {
                try {
                    $state = cbgu_Array_iterator($evt);
                    while (cbgu_Array$ArrayIterator_hasNext($state)) {
                        cgxgbtw_WebAudioAPIManager_pause(cbgu_Array$ArrayIterator_next($state));
                    }
                    jl_Object_monitorExitSync($evt);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    $state = $$je;

                }
                jl_Object_monitorExitSync($evt);
                $rt_throw($state);
            }
            $this.$this$013.$appListener.$currentScreen.$pause();
        }
    }
    function cgxgbt_TeaApplication$1_handleEvent$exported$0(var$0, var$1) {
        cgxgbt_TeaApplication$1_handleEvent(var$0, var$1);
    }
    function cgxgbt_TeaApplication$2() {
        jl_Object.call(this);
        this.$this$014 = null;
    }
    function cgxgbt_TeaApplication$2__init_(var_0) {
        var var_1 = new cgxgbt_TeaApplication$2();
        cgxgbt_TeaApplication$2__init_0(var_1, var_0);
        return var_1;
    }
    function cgxgbt_TeaApplication$2__init_0($this, $this$0) {
        $this.$this$014 = $this$0;
    }
    function cgxgbt_TeaApplication$2_handleEvent($this, $evt) {
        var $height, $width, var$4, var$5, $density;
        $height = $this.$this$014.$window.$window0.document.documentElement.clientWidth;
        $evt = $this.$this$014;
        $width = $height - $evt.$config.$padHorizontal | 0;
        var$4 = $evt.$window.$window0.document.documentElement.clientHeight;
        $evt = $this.$this$014;
        var$5 = $evt.$config;
        $height = var$4 - var$5.$padVertical | 0;
        if ($width > 0 && $height > 0) {
            if ($evt.$graphics !== null) {
                if (var$5.$usePhysicalPixels) {
                    $density = $rt_globals.devicePixelRatio || 1;
                    $width = $width * $density | 0;
                    $height = $height * $density | 0;
                }
                cgxgbt_TeaGraphics_setCanvasSize($this.$this$014.$graphics, $width, $height);
            }
            return;
        }
    }
    function cgxgbt_TeaApplication$2_handleEvent$exported$0(var$0, var$1) {
        cgxgbt_TeaApplication$2_handleEvent(var$0, var$1);
    }
    var jl_IllegalArgumentException = $rt_classWithoutFields(jl_RuntimeException);
    function jl_IllegalArgumentException__init_() {
        var var_0 = new jl_IllegalArgumentException();
        jl_IllegalArgumentException__init_0(var_0);
        return var_0;
    }
    function jl_IllegalArgumentException__init_1(var_0) {
        var var_1 = new jl_IllegalArgumentException();
        jl_IllegalArgumentException__init_2(var_1, var_0);
        return var_1;
    }
    function jl_IllegalArgumentException__init_0($this) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
    }
    function jl_IllegalArgumentException__init_2($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    function jl_Thread() {
        var a = this; jl_Object.call(a);
        a.$uncaughtExceptionHandler = null;
        a.$id1 = Long_ZERO;
        a.$timeSliceStart = Long_ZERO;
        a.$finishedLock = null;
        a.$interruptHandler = null;
        a.$name2 = null;
        a.$alive = 0;
        a.$target = null;
    }
    var jl_Thread_mainThread = null;
    var jl_Thread_currentThread0 = null;
    var jl_Thread_nextId = 0;
    var jl_Thread_activeCount = 0;
    var jl_Thread_defaultUncaughtExceptionHandler = null;
    function jl_Thread_$callClinit() {
        jl_Thread_$callClinit = $rt_eraseClinit(jl_Thread);
        jl_Thread__clinit_();
    }
    function jl_Thread_runThread($this) {
        var $t, var$2, $$je;
        a: {
            b: {
                c: {
                    d: {
                        try {
                            jl_Thread_$callClinit();
                            jl_Thread_activeCount = jl_Thread_activeCount + 1 | 0;
                            jl_Thread_setCurrentThread($this);
                            $this.$run();
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Throwable) {
                                $t = $$je;
                                break d;
                            } else{
                                $t = $$je;
                                break c;
                            }
                        }
                        $t = $this.$finishedLock;
                        jl_Object_monitorEnterSync($t);
                        e: {
                            try {
                                jl_Object_notifyAll($t);
                                jl_Object_monitorExitSync($t);
                                break e;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                var$2 = $$je;

                            }
                            jl_Object_monitorExitSync($t);
                            $rt_throw(var$2);
                        }
                        $this.$alive = 0;
                        jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
                        $t = jl_Thread_mainThread;
                        if (jl_Thread_currentThread0 !== $t)
                            jl_Thread_currentThread0 = $t;
                        jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
                        break a;
                    }
                    try {
                        jl_DefaultUncaughtExceptionHandler_uncaughtException(jl_Thread_getUncaughtExceptionHandler($this), $this, $t);
                        break b;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        $t = $$je;

                    }
                }
                var$2 = $this.$finishedLock;
                jl_Object_monitorEnterSync(var$2);
                f: {
                    try {
                        jl_Object_notifyAll(var$2);
                        jl_Object_monitorExitSync(var$2);
                        break f;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        $t = $$je;

                    }
                    jl_Object_monitorExitSync(var$2);
                    $rt_throw($t);
                }
                $this.$alive = 0;
                jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
                var$2 = jl_Thread_mainThread;
                if (jl_Thread_currentThread0 !== var$2)
                    jl_Thread_currentThread0 = var$2;
                jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
                $rt_throw($t);
            }
            $t = $this.$finishedLock;
            jl_Object_monitorEnterSync($t);
            g: {
                try {
                    jl_Object_notifyAll($t);
                    jl_Object_monitorExitSync($t);
                    break g;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$2 = $$je;

                }
                jl_Object_monitorExitSync($t);
                $rt_throw(var$2);
            }
            $this.$alive = 0;
            jl_Thread_activeCount = jl_Thread_activeCount - 1 | 0;
            $t = jl_Thread_mainThread;
            if (jl_Thread_currentThread0 !== $t)
                jl_Thread_currentThread0 = $t;
            jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
        }
    }
    function jl_Thread_setCurrentThread($thread_0) {
        jl_Thread_$callClinit();
        if (jl_Thread_currentThread0 !== $thread_0)
            jl_Thread_currentThread0 = $thread_0;
        jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
    }
    function jl_Thread_currentThread() {
        jl_Thread_$callClinit();
        return jl_Thread_currentThread0;
    }
    function jl_Thread_sleep(var$1) {
        var $ptr, $tmp;
        $ptr = 0;
        if ($rt_resuming()) {
            var $thread = $rt_nativeThread();
            $ptr = $thread.pop();var$1 = $thread.pop();
        }
        main: while (true) { switch ($ptr) {
        case 0:
            jl_Thread_$callClinit();
            $ptr = 1;
        case 1:
            jl_Thread_sleep$_asyncCall_$(var$1);
            if ($rt_suspending()) {
                break main;
            }
            return;
        default: $rt_invalidPointer();
        }}
        $rt_nativeThread().push(var$1, $ptr);
    }
    function jl_Thread_sleep0($millis, $callback) {
        var $current, $handler;
        jl_Thread_$callClinit();
        $current = jl_Thread_currentThread0;
        $handler = new jl_Thread$SleepHandler;
        $handler.$thread = $current;
        $handler.$callback = $callback;
        $handler.$scheduleId = otp_Platform_schedule($handler, Long_ge($millis, Long_fromInt(2147483647)) ? 2147483647 : Long_lo($millis));
        $current.$interruptHandler = $handler;
    }
    function jl_Thread_getStackTrace($this) {
        return $rt_createArray(jl_StackTraceElement, 0);
    }
    function jl_Thread_getUncaughtExceptionHandler($this) {
        var var$1;
        var$1 = $this.$uncaughtExceptionHandler;
        if (var$1 !== null)
            return var$1;
        jl_Thread_$callClinit();
        return jl_Thread_defaultUncaughtExceptionHandler;
    }
    function jl_Thread__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new jl_Thread;
        jl_Thread_$callClinit();
        var$2 = null;
        var$1.$finishedLock = new jl_Object;
        var$1.$alive = 1;
        var$1.$name2 = $rt_s(151);
        var$1.$target = var$2;
        var$3 = jl_Thread_nextId;
        jl_Thread_nextId = var$3 + 1 | 0;
        var$1.$id1 = Long_fromInt(var$3);
        jl_Thread_mainThread = var$1;
        jl_Thread_currentThread0 = var$1;
        jl_Thread_nextId = 1;
        jl_Thread_activeCount = 1;
        jl_Thread_defaultUncaughtExceptionHandler = new jl_DefaultUncaughtExceptionHandler;
    }
    function jl_Thread_sleep$_asyncCall_$(var$1) {
        var thread = $rt_nativeThread();
        var javaThread = $rt_getThread();
        if (thread.isResuming()) {
            thread.status = 0;
            var result = thread.attribute;
            if (result instanceof Error) {
                throw result;
            }
            return result;
        }
        var callback = function() {};
        callback.$complete = function(val) {
            thread.attribute = val;
            $rt_setThread(javaThread);
            thread.resume();
        };
        callback.$error = function(e) {
            thread.attribute = $rt_exception(e);
            $rt_setThread(javaThread);
            thread.resume();
        };
        callback = otpp_AsyncCallbackWrapper_create(callback);
        thread.suspend(function() {
            try {
                jl_Thread_sleep0(var$1, callback);
            } catch($e) {
                callback.$error($rt_exception($e));
            }
        });
        return null;
    }
    var cbgu_ObjectSet = $rt_classWithoutFields();
    function cbgu_ObjectSet_tableSize($capacity, $loadFactor) {
        var var$3, var$4, var$5, var$6, $tableSize, var$8, var$9;
        if ($capacity < 0) {
            var$3 = new jl_IllegalArgumentException;
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(152));
            jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $capacity, 10);
            var$5 = new jl_String;
            var$6 = var$4.$buffer;
            $tableSize = var$4.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray($tableSize);
            var$5.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, $tableSize);
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = var$5;
            $rt_throw(var$3);
        }
        var$9 = jl_Math_ceil($capacity / $loadFactor) | 0;
        if (2 > var$9)
            var$9 = 2;
        $tableSize = cbgm_MathUtils_nextPowerOfTwo(var$9);
        if ($tableSize <= 1073741824)
            return $tableSize;
        var$3 = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(153));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $capacity, 10);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $tableSize = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($tableSize);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, $tableSize);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$5;
        $rt_throw(var$3);
    }
    function jl_Long() {
        jl_Number.call(this);
        this.$value6 = Long_ZERO;
    }
    var jl_Long_TYPE = null;
    function jl_Long_parseLongImpl($s, $beginIndex, $endIndex, $radix) {
        var var$5, $negative, var$7, var$8, $value, var$10, var$11, $digit, var$13, var$14, var$15, var$16, var$17;
        if ($radix >= 2 && $radix <= 36) {
            var$5 = $rt_compare($beginIndex, $endIndex);
            if (!var$5) {
                $s = new jl_NumberFormatException;
                $s.$suppressionEnabled = 1;
                $s.$writableStackTrace = 1;
                $s.$message = $rt_s(81);
                $rt_throw($s);
            }
            $negative = 0;
            if ($beginIndex >= 0) {
                var$7 = $s.$characters.data;
                if ($beginIndex < var$7.length) {
                    a: {
                        switch (var$7[$beginIndex]) {
                            case 43:
                                var$8 = $beginIndex + 1 | 0;
                                break a;
                            case 45:
                                $negative = 1;
                                var$8 = $beginIndex + 1 | 0;
                                break a;
                            default:
                        }
                        var$8 = $beginIndex;
                    }
                    $value = Long_ZERO;
                    var$10 = Long_fromInt($radix);
                    b: {
                        while (var$8 < $endIndex) {
                            var$11 = var$8 + 1 | 0;
                            if (var$8 < 0)
                                break b;
                            var$7 = $s.$characters.data;
                            if (var$8 >= var$7.length)
                                break b;
                            $digit = jl_Character_getNumericValue(var$7[var$8]);
                            if ($digit < 0) {
                                var$13 = new jl_NumberFormatException;
                                if (var$5 > 0) {
                                    $s = new jl_IndexOutOfBoundsException;
                                    $s.$suppressionEnabled = 1;
                                    $s.$writableStackTrace = 1;
                                    $rt_throw($s);
                                }
                                if (!var$5) {
                                    jl_String_$callClinit();
                                    var$14 = jl_String_EMPTY;
                                } else if (!$beginIndex && $endIndex == $s.$characters.data.length)
                                    var$14 = $s;
                                else {
                                    var$14 = new jl_String;
                                    var$7 = $s.$characters;
                                    $endIndex = $endIndex - $beginIndex | 0;
                                    jl_String_$callClinit();
                                    var$15 = $rt_createCharArray($endIndex);
                                    var$14.$characters = var$15;
                                    jl_System_fastArraycopy(var$7, $beginIndex, var$15, 0, $endIndex);
                                }
                                $s = new jl_StringBuilder;
                                $s.$buffer = $rt_createCharArray(16);
                                jl_AbstractStringBuilder_insert($s, $s.$length, $rt_s(82));
                                $beginIndex = $s.$length;
                                if (var$14 === null)
                                    var$14 = $rt_s(1);
                                jl_AbstractStringBuilder_insert($s, $beginIndex, var$14);
                                var$16 = new jl_String;
                                var$7 = $s.$buffer;
                                $endIndex = $s.$length;
                                jl_String_$callClinit();
                                var$15 = $rt_createCharArray($endIndex);
                                var$16.$characters = var$15;
                                jl_System_fastArraycopy(var$7, 0, var$15, 0, $endIndex);
                                var$13.$suppressionEnabled = 1;
                                var$13.$writableStackTrace = 1;
                                var$13.$message = var$16;
                                $rt_throw(var$13);
                            }
                            if ($digit >= $radix) {
                                var$13 = new jl_NumberFormatException;
                                var$17 = jl_String_substring($s, $beginIndex, $endIndex);
                                $s = new jl_StringBuilder;
                                jl_AbstractStringBuilder__init_2($s, 16);
                                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append($s, $rt_s(83)), $radix), $rt_s(75)), var$17);
                                jl_NumberFormatException__init_(var$13, jl_StringBuilder_toString($s));
                                $rt_throw(var$13);
                            }
                            $value = Long_add(Long_mul(var$10, $value), Long_fromInt($digit));
                            if (Long_lt($value, Long_ZERO)) {
                                if (var$11 == $endIndex && Long_eq($value, Long_create(0, 2147483648)) && $negative)
                                    return Long_create(0, 2147483648);
                                var$13 = new jl_NumberFormatException;
                                $s = jl_String_subSequence($s, $beginIndex, $endIndex);
                                var$16 = jl_StringBuilder__init_();
                                jl_StringBuilder_append(jl_StringBuilder_append(var$16, $rt_s(84)), $s);
                                jl_NumberFormatException__init_(var$13, jl_StringBuilder_toString(var$16));
                                $rt_throw(var$13);
                            }
                            var$8 = var$11;
                        }
                        if ($negative)
                            $value = Long_neg($value);
                        return $value;
                    }
                    $s = new jl_StringIndexOutOfBoundsException;
                    $s.$suppressionEnabled = 1;
                    $s.$writableStackTrace = 1;
                    $rt_throw($s);
                }
            }
            $s = new jl_StringIndexOutOfBoundsException;
            $s.$suppressionEnabled = 1;
            $s.$writableStackTrace = 1;
            $rt_throw($s);
        }
        $s = new jl_NumberFormatException;
        var$13 = new jl_StringBuilder;
        var$13.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$13, var$13.$length, $rt_s(85));
        jl_AbstractStringBuilder_insert0(var$13, var$13.$length, $radix, 10);
        var$16 = new jl_String;
        var$7 = var$13.$buffer;
        $endIndex = var$13.$length;
        jl_String_$callClinit();
        var$15 = $rt_createCharArray($endIndex);
        var$16.$characters = var$15;
        jl_System_fastArraycopy(var$7, 0, var$15, 0, $endIndex);
        $s.$suppressionEnabled = 1;
        $s.$writableStackTrace = 1;
        $s.$message = var$16;
        $rt_throw($s);
    }
    function jl_Long_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$value6;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert2(var$2, var$2.$length, var$1, 10);
        var$3 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$3.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$3;
    }
    function jl_Long_hashCode($this) {
        var var$1;
        var$1 = $this.$value6;
        return Long_lo(var$1) ^ Long_hi(var$1);
    }
    function jl_Long_equals($this, $other) {
        if ($this === $other)
            return 1;
        return $other instanceof jl_Long && Long_eq($other.$value6, $this.$value6) ? 1 : 0;
    }
    function jl_Long_numberOfLeadingZeros($i) {
        var $n, var$3;
        if (Long_eq($i, Long_ZERO))
            return 64;
        $n = 0;
        var$3 = Long_shru($i, 32);
        if (Long_ne(var$3, Long_ZERO))
            $n = 32;
        else
            var$3 = $i;
        $i = Long_shru(var$3, 16);
        if (Long_eq($i, Long_ZERO))
            $i = var$3;
        else
            $n = $n | 16;
        var$3 = Long_shru($i, 8);
        if (Long_eq(var$3, Long_ZERO))
            var$3 = $i;
        else
            $n = $n | 8;
        $i = Long_shru(var$3, 4);
        if (Long_eq($i, Long_ZERO))
            $i = var$3;
        else
            $n = $n | 4;
        var$3 = Long_shru($i, 2);
        if (Long_eq(var$3, Long_ZERO))
            var$3 = $i;
        else
            $n = $n | 2;
        if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
            $n = $n | 1;
        return (64 - $n | 0) - 1 | 0;
    }
    function jl_Long_divideUnsigned(var$1, var$2) {
        return Long_udiv(var$1, var$2);
    }
    function jl_Long_remainderUnsigned(var$1, var$2) {
        return Long_urem(var$1, var$2);
    }
    function jl_Long_compareUnsigned(var$1, var$2) {
        return Long_ucompare(var$1, var$2);
    }
    function jl_Long__clinit_() {
        jl_Long_TYPE = $rt_cls($rt_longcls());
    }
    var otjw_WebGLContextAttributes = $rt_classWithoutFields();
    function otjw_WebGLContextAttributes_create$js_body$_13() {
        return {  };
    }
    var cbgg_GL20 = $rt_classWithoutFields(0);
    function cgxgbt_TeaGL20() {
        var a = this; jl_Object.call(a);
        a.$gl = null;
        a.$nextProgramId = 0;
        a.$nextShaderId = 0;
        a.$nextBufferId = 0;
        a.$nextFrameBufferId = 0;
        a.$nextRenderBufferId = 0;
        a.$nextTextureId = 0;
        a.$nextUniformId = 0;
        a.$programs = null;
        a.$shaders = null;
        a.$buffers = null;
        a.$frameBuffers = null;
        a.$renderBuffers = null;
        a.$textures = null;
        a.$uniforms = null;
        a.$currProgram = 0;
        a.$floatBuffer = null;
        a.$intBuffer = null;
        a.$shortBuffer = null;
        a.$byteBuffer = null;
        a.$byteBufferU = null;
    }
    function cgxgbt_TeaGL20__init_(var_0) {
        var var_1 = new cgxgbt_TeaGL20();
        cgxgbt_TeaGL20__init_0(var_1, var_0);
        return var_1;
    }
    function cgxgbt_TeaGL20__init_0($this, $gl) {
        $this.$nextProgramId = 1;
        $this.$nextShaderId = 1;
        $this.$nextBufferId = 1;
        $this.$nextFrameBufferId = 1;
        $this.$nextRenderBufferId = 1;
        $this.$nextTextureId = 1;
        $this.$nextUniformId = 1;
        $this.$programs = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$shaders = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$buffers = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$frameBuffers = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$renderBuffers = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$textures = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$uniforms = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$currProgram = 0;
        $this.$floatBuffer = new $rt_globals.Float32Array(40000);
        $this.$intBuffer = new $rt_globals.Int32Array(12000);
        $this.$shortBuffer = new $rt_globals.Int16Array(12000);
        $this.$byteBuffer = new $rt_globals.Int8Array(12000);
        $this.$byteBufferU = new $rt_globals.Uint8Array(240000);
        $this.$gl = $gl;
        $gl.pixelStorei(37441, 0);
    }
    function cgxgbt_TeaGL20_copy($this, $buffer) {
        var $int8Array, $j, $i, var$5, var$6;
        if (cgxgbt_TeaTool_useGLArrayBuffer) {
            $int8Array = (!$rt_isInstance($buffer, otcjn_HasArrayBufferView) ? null : $buffer.$byteByffer.$array0.data).buffer;
            $j = $buffer.$position;
            $i = $buffer.$limit - $j | 0;
            return new $rt_globals.Float32Array($int8Array, $j, $i);
        }
        if (($buffer.$limit - $buffer.$position | 0) > $this.$floatBuffer.length)
            $this.$floatBuffer = new $rt_globals.Float32Array($buffer.$limit - $buffer.$position | 0);
        $i = $buffer.$position;
        $j = 0;
        while (true) {
            var$5 = $buffer.$limit;
            if ($i >= var$5)
                break;
            $int8Array = $this.$floatBuffer;
            var$6 = jn_FloatBufferImpl_get($buffer, $i);
            $j;
            $int8Array[$j] = var$6;
            $i = $i + 1 | 0;
            $j = $j + 1 | 0;
        }
        $int8Array = $this.$floatBuffer;
        $i = var$5 - $buffer.$position | 0;
        return $int8Array.subarray(0, $i);
    }
    function cgxgbt_TeaGL20_copy0($this, $buffer) {
        var $int8Array, $j, $i, var$5, var$6;
        if (cgxgbt_TeaTool_useGLArrayBuffer) {
            $int8Array = (!$rt_isInstance($buffer, otcjn_HasArrayBufferView) ? null : $buffer.$byteByffer0.$array0.data).buffer;
            $j = $buffer.$position;
            $i = $buffer.$limit - $j | 0;
            return new $rt_globals.Int16Array($int8Array, $j, $i);
        }
        if (($buffer.$limit - $buffer.$position | 0) > $this.$shortBuffer.length)
            $this.$shortBuffer = new $rt_globals.Int16Array($buffer.$limit - $buffer.$position | 0);
        $i = $buffer.$position;
        $j = 0;
        while (true) {
            var$5 = $buffer.$limit;
            if ($i >= var$5)
                break;
            $int8Array = $this.$shortBuffer;
            var$6 = jn_ShortBufferImpl_get($buffer, $i);
            $j;
            $int8Array[$j] = var$6;
            $i = $i + 1 | 0;
            $j = $j + 1 | 0;
        }
        $int8Array = $this.$shortBuffer;
        $i = var$5 - $buffer.$position | 0;
        return $int8Array.subarray(0, $i);
    }
    function cgxgbt_TeaGL20_copy1($this, $buffer) {
        var $int8Array, $j, $i, var$5, var$6;
        if (cgxgbt_TeaTool_useGLArrayBuffer) {
            $int8Array = (!$rt_isInstance($buffer, otcjn_HasArrayBufferView) ? null : $buffer.$getTypedArray()).buffer;
            $j = $buffer.$position;
            $i = $buffer.$limit - $j | 0;
            return new $rt_globals.Int32Array($int8Array, $j, $i);
        }
        if (($buffer.$limit - $buffer.$position | 0) > $this.$intBuffer.length)
            $this.$intBuffer = new $rt_globals.Int32Array($buffer.$limit - $buffer.$position | 0);
        $i = $buffer.$position;
        $j = 0;
        while (true) {
            var$5 = $buffer.$limit;
            if ($i >= var$5)
                break;
            $int8Array = $this.$intBuffer;
            var$6 = $buffer.$get($i);
            $j;
            $int8Array[$j] = var$6;
            $i = $i + 1 | 0;
            $j = $j + 1 | 0;
        }
        $int8Array = $this.$intBuffer;
        $i = var$5 - $buffer.$position | 0;
        return $int8Array.subarray(0, $i);
    }
    function cgxgbt_TeaGL20_copy2($this, $buffer) {
        var $i, $j, var$4, var$5, var$6;
        if (cgxgbt_TeaTool_useGLArrayBuffer)
            return !$rt_isInstance($buffer, otcjn_HasArrayBufferView) ? null : $buffer.$array0.data;
        if (($buffer.$limit - $buffer.$position | 0) > $this.$byteBuffer.length)
            $this.$byteBuffer = new $rt_globals.Int8Array($buffer.$limit - $buffer.$position | 0);
        $i = $buffer.$position;
        $j = 0;
        while (true) {
            var$4 = $buffer.$limit;
            if ($i >= var$4)
                break;
            var$5 = $this.$byteBuffer;
            var$6 = jn_ByteBufferImpl_get($buffer, $i);
            $j;
            var$5[$j] = var$6;
            $i = $i + 1 | 0;
            $j = $j + 1 | 0;
        }
        var$5 = $this.$byteBuffer;
        $i = var$4 - $buffer.$position | 0;
        return var$5.subarray(0, $i);
    }
    function cgxgbt_TeaGL20_ensureCapacity($this, $buffer) {
        if (($buffer.$limit - $buffer.$position | 0) > $this.$intBuffer.length)
            $this.$intBuffer = new $rt_globals.Int32Array($buffer.$limit - $buffer.$position | 0);
    }
    function cgxgbt_TeaGL20_getUniformLocation($this, $location) {
        var var$2, var$3, var$4, var$5, var$6;
        var$2 = $this.$uniforms;
        var$3 = $this.$currProgram;
        if (!var$3)
            var$2 = !var$2.$hasZeroValue0 ? null : var$2.$zeroValue;
        else {
            var$4 = var$2.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt(var$3), Long_create(2135587861, 2654435769)), var$2.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == var$3)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$2.$mask1;
                }
            }
            var$2 = var$5 < 0 ? null : var$2.$valueTable0.data[var$5];
        }
        var$2 = var$2;
        if (!$location)
            var$2 = !var$2.$hasZeroValue0 ? null : var$2.$zeroValue;
        else {
            var$4 = var$2.$keyTable1;
            var$3 = Long_lo(Long_shru(Long_mul(Long_fromInt($location), Long_create(2135587861, 2654435769)), var$2.$shift1));
            b: {
                while (true) {
                    var$5 = var$4.data[var$3];
                    if (!var$5) {
                        var$3 =  -(var$3 + 1 | 0) | 0;
                        break b;
                    }
                    if (var$5 == $location)
                        break;
                    var$3 = (var$3 + 1 | 0) & var$2.$mask1;
                }
            }
            var$2 = var$3 < 0 ? null : var$2.$valueTable0.data[var$3];
        }
        otji_JSWrapper_$callClinit();
        return var$2 === null ? null : var$2[$rt_jso_marker] === true ? var$2 : var$2.$js;
    }
    function cgxgbt_TeaGL20_glAttachShader($this, $program, $shader) {
        var var$3, var$4, var$5, var$6, $glProgram, $glShader;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        $glProgram = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$3 = $this.$shaders;
        if (!$shader)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            $program = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$3.$shift1));
            b: {
                while (true) {
                    var$5 = var$4.data[$program];
                    if (!var$5) {
                        $program =  -($program + 1 | 0) | 0;
                        break b;
                    }
                    if (var$5 == $shader)
                        break;
                    $program = ($program + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = $program < 0 ? null : var$3.$valueTable0.data[$program];
        }
        $glShader = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $this.$gl.attachShader($glProgram, $glShader);
    }
    function cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer) {
        var var$3, var$4, var$5, var$6, var$7;
        var$3 = $this.$gl;
        var$4 = $this.$buffers;
        if (!$buffer)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($buffer), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $buffer)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        var$3.bindBuffer($target, var$4);
    }
    function cgxgbt_TeaGL20_glBindTexture($this, $target, $texture) {
        var var$3, var$4, var$5, var$6, var$7;
        var$3 = $this.$gl;
        var$4 = $this.$textures;
        if (!$texture)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($texture), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $texture)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        var$3.bindTexture($target, var$4);
    }
    function cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) {
        $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    }
    function cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage) {
        var var$5, var$6;
        if ($data instanceof jn_FloatBuffer) {
            var$5 = $this.$gl;
            $data = cgxgbt_TeaGL20_copy($this, $data);
            var$5.bufferData($target, $data, $usage);
        } else if ($data instanceof jn_IntBuffer) {
            var$5 = $this.$gl;
            $data = cgxgbt_TeaGL20_copy1($this, $data);
            var$5.bufferData($target, $data, $usage);
        } else if ($data instanceof jn_ShortBuffer) {
            var$5 = $this.$gl;
            $data = cgxgbt_TeaGL20_copy0($this, $data);
            var$5.bufferData($target, $data, $usage);
        } else if ($data instanceof jn_ByteBuffer) {
            var$5 = $this.$gl;
            var$6 = cgxgbt_TeaGL20_copy2($this, $data);
            var$5.bufferData($target, var$6, $usage);
        } else {
            if ($data !== null) {
                var$5 = new cbgu_GdxRuntimeException;
                var$5.$suppressionEnabled = 1;
                var$5.$writableStackTrace = 1;
                var$5.$message = $rt_s(154);
                $rt_throw(var$5);
            }
            $this.$gl.bufferData($target, $size, $usage);
        }
    }
    function cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data) {
        var var$5, var$6;
        if ($data instanceof jn_FloatBuffer) {
            var$5 = $this.$gl;
            $data = cgxgbt_TeaGL20_copy($this, $data);
            var$5.bufferSubData($target, $offset, $data);
        } else if ($data instanceof jn_IntBuffer) {
            var$5 = $this.$gl;
            var$6 = cgxgbt_TeaGL20_copy1($this, $data);
            var$5.bufferSubData($target, $offset, var$6);
        } else if ($data instanceof jn_ShortBuffer) {
            var$5 = $this.$gl;
            $data = cgxgbt_TeaGL20_copy0($this, $data);
            var$5.bufferSubData($target, $offset, $data);
        } else {
            if (!($data instanceof jn_ByteBuffer)) {
                var$5 = new cbgu_GdxRuntimeException;
                var$5.$suppressionEnabled = 1;
                var$5.$writableStackTrace = 1;
                var$5.$message = $rt_s(154);
                $rt_throw(var$5);
            }
            var$5 = $this.$gl;
            $data = cgxgbt_TeaGL20_copy2($this, $data);
            var$5.bufferSubData($target, $offset, $data);
        }
    }
    function cgxgbt_TeaGL20_glClear($this, $mask) {
        $this.$gl.clear($mask);
    }
    function cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha) {
        $this.$gl.clearColor($red, $green, $blue, $alpha);
    }
    function cgxgbt_TeaGL20_glCompileShader($this, $shader) {
        var $glShader, var$3, var$4, var$5;
        $glShader = $this.$shaders;
        if (!$shader)
            $glShader = !$glShader.$hasZeroValue0 ? null : $glShader.$zeroValue;
        else {
            var$3 = $glShader.$keyTable1;
            var$4 = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), $glShader.$shift1));
            a: {
                while (true) {
                    var$5 = var$3.data[var$4];
                    if (!var$5) {
                        var$4 =  -(var$4 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$5 == $shader)
                        break;
                    var$4 = (var$4 + 1 | 0) & $glShader.$mask1;
                }
            }
            $glShader = var$4 < 0 ? null : $glShader.$valueTable0.data[var$4];
        }
        otji_JSWrapper_$callClinit();
        $glShader = $glShader === null ? null : $glShader[$rt_jso_marker] === true ? $glShader : $glShader.$js;
        $this.$gl.compileShader($glShader);
    }
    function cgxgbt_TeaGL20_glCreateProgram($this) {
        var $program, var$2;
        $program = $this.$gl.createProgram();
        var$2 = $this.$nextProgramId;
        $this.$nextProgramId = var$2 + 1 | 0;
        cbgu_IntMap_put($this.$programs, var$2, otji_JSWrapper_wrap($program));
        return var$2;
    }
    function cgxgbt_TeaGL20_glCreateShader($this, $type) {
        var $shader, var$3;
        $shader = $this.$gl.createShader($type);
        var$3 = $this.$nextShaderId;
        $this.$nextShaderId = var$3 + 1 | 0;
        cbgu_IntMap_put($this.$shaders, var$3, otji_JSWrapper_wrap($shader));
        return var$3;
    }
    function cgxgbt_TeaGL20_glDeleteBuffer($this, $id) {
        var $buffer;
        $buffer = cbgu_IntMap_remove($this.$buffers, $id);
        otji_JSWrapper_$callClinit();
        $buffer = $buffer === null ? null : $buffer[$rt_jso_marker] === true ? $buffer : $buffer.$js;
        $this.$gl.deleteBuffer($buffer);
    }
    function cgxgbt_TeaGL20_glDeleteProgram($this, $program) {
        var var$2, var$3, var$4, var$5, $prog;
        var$2 = $this.$programs;
        if (!$program)
            var$2 = !var$2.$hasZeroValue0 ? null : var$2.$zeroValue;
        else {
            var$3 = var$2.$keyTable1;
            var$4 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$2.$shift1));
            a: {
                while (true) {
                    var$5 = var$3.data[var$4];
                    if (!var$5) {
                        var$4 =  -(var$4 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$5 == $program)
                        break;
                    var$4 = (var$4 + 1 | 0) & var$2.$mask1;
                }
            }
            var$2 = var$4 < 0 ? null : var$2.$valueTable0.data[var$4];
        }
        otji_JSWrapper_$callClinit();
        $prog = var$2 === null ? null : var$2[$rt_jso_marker] === true ? var$2 : var$2.$js;
        cbgu_IntMap_remove($this.$programs, $program);
        cbgu_IntMap_remove($this.$uniforms, $program);
        $this.$gl.deleteProgram($prog);
    }
    function cgxgbt_TeaGL20_glDeleteShader($this, $shader) {
        var $sh;
        $sh = cbgu_IntMap_remove($this.$shaders, $shader);
        otji_JSWrapper_$callClinit();
        $sh = $sh === null ? null : $sh[$rt_jso_marker] === true ? $sh : $sh.$js;
        $this.$gl.deleteShader($sh);
    }
    function cgxgbt_TeaGL20_glDeleteTexture($this, $id) {
        var $texture;
        $texture = cbgu_IntMap_remove($this.$textures, $id);
        otji_JSWrapper_$callClinit();
        $texture = $texture === null ? null : $texture[$rt_jso_marker] === true ? $texture : $texture.$js;
        $this.$gl.deleteTexture($texture);
    }
    function cgxgbt_TeaGL20_glDepthMask($this, $flag) {
        $this.$gl.depthMask(!!$flag);
    }
    function cgxgbt_TeaGL20_glDisable($this, $cap) {
        $this.$gl.disable($cap);
    }
    function cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index) {
        $this.$gl.disableVertexAttribArray($index);
    }
    function cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count) {
        $this.$gl.drawArrays($mode, $first, $count);
    }
    function cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices) {
        var var$5, var$6;
        var$5 = $this.$gl;
        var$6 = $indices.$position;
        var$5.drawElements($mode, $count, $type, var$6);
    }
    function cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices) {
        $this.$gl.drawElements($mode, $count, $type, $indices);
    }
    function cgxgbt_TeaGL20_glEnable($this, $cap) {
        $this.$gl.enable($cap);
    }
    function cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index) {
        $this.$gl.enableVertexAttribArray($index);
    }
    function cgxgbt_TeaGL20_glGenBuffer($this) {
        var $buffer, var$2;
        $buffer = $this.$gl.createBuffer();
        var$2 = $this.$nextBufferId;
        $this.$nextBufferId = var$2 + 1 | 0;
        cbgu_IntMap_put($this.$buffers, var$2, otji_JSWrapper_wrap($buffer));
        return var$2;
    }
    function cgxgbt_TeaGL20_glGenerateMipmap($this, $target) {
        $this.$gl.generateMipmap($target);
    }
    function cgxgbt_TeaGL20_glGenTexture($this) {
        var $texture, var$2;
        $texture = $this.$gl.createTexture();
        var$2 = $this.$nextTextureId;
        $this.$nextTextureId = var$2 + 1 | 0;
        cbgu_IntMap_put($this.$textures, var$2, otji_JSWrapper_wrap($texture));
        return var$2;
    }
    function cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type) {
        var var$5, $activeAttrib, var$7, var$8, var$9;
        var$5 = $this.$gl;
        $activeAttrib = $this.$programs;
        if (!$program)
            $activeAttrib = !$activeAttrib.$hasZeroValue0 ? null : $activeAttrib.$zeroValue;
        else {
            var$7 = $activeAttrib.$keyTable1;
            var$8 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), $activeAttrib.$shift1));
            a: {
                while (true) {
                    var$9 = var$7.data[var$8];
                    if (!var$9) {
                        var$8 =  -(var$8 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$9 == $program)
                        break;
                    var$8 = (var$8 + 1 | 0) & $activeAttrib.$mask1;
                }
            }
            $activeAttrib = var$8 < 0 ? null : $activeAttrib.$valueTable0.data[var$8];
        }
        otji_JSWrapper_$callClinit();
        $activeAttrib = $activeAttrib === null ? null : $activeAttrib[$rt_jso_marker] === true ? $activeAttrib : $activeAttrib.$js;
        $activeAttrib = var$5.getActiveAttrib($activeAttrib, $index);
        jn_IntBufferImpl_put($size, $activeAttrib.size);
        jn_IntBufferImpl_put($type, $activeAttrib.type);
        $size.$position = 0;
        $size.$limit = $size.$capacity;
        $size.$mark = (-1);
        $type.$position = 0;
        $type.$limit = $type.$capacity;
        $type.$mark = (-1);
        return $rt_str($activeAttrib.name);
    }
    function cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type) {
        var var$5, $activeUniform, var$7, var$8, var$9;
        var$5 = $this.$gl;
        $activeUniform = $this.$programs;
        if (!$program)
            $activeUniform = !$activeUniform.$hasZeroValue0 ? null : $activeUniform.$zeroValue;
        else {
            var$7 = $activeUniform.$keyTable1;
            var$8 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), $activeUniform.$shift1));
            a: {
                while (true) {
                    var$9 = var$7.data[var$8];
                    if (!var$9) {
                        var$8 =  -(var$8 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$9 == $program)
                        break;
                    var$8 = (var$8 + 1 | 0) & $activeUniform.$mask1;
                }
            }
            $activeUniform = var$8 < 0 ? null : $activeUniform.$valueTable0.data[var$8];
        }
        otji_JSWrapper_$callClinit();
        $activeUniform = $activeUniform === null ? null : $activeUniform[$rt_jso_marker] === true ? $activeUniform : $activeUniform.$js;
        $activeUniform = var$5.getActiveUniform($activeUniform, $index);
        jn_IntBufferImpl_put($size, $activeUniform.size);
        jn_IntBufferImpl_put($type, $activeUniform.type);
        $size.$position = 0;
        $size.$limit = $size.$capacity;
        $size.$mark = (-1);
        $type.$position = 0;
        $type.$limit = $type.$capacity;
        $type.$mark = (-1);
        return $rt_str($activeUniform.name);
    }
    function cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name) {
        var var$3, var$4, var$5, var$6, $prog;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        $prog = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        return $this.$gl.getAttribLocation($prog, $rt_ustr($name));
    }
    function cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params) {
        if ($pname != 2931 && $pname != 2849 && $pname != 32824 && $pname != 10752 && $pname != 32938) {
            $params = new cbgu_GdxRuntimeException;
            $params.$suppressionEnabled = 1;
            $params.$writableStackTrace = 1;
            $params.$message = $rt_s(155);
            $rt_throw($params);
        }
        jn_FloatBufferImpl_put($params, 0, $this.$gl.getParameter($pname));
        $params.$position = 0;
        $params.$limit = $params.$capacity;
        $params.$mark = (-1);
    }
    function cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program) {
        var var$2, var$3, var$4, var$5, var$6;
        var$2 = $this.$gl;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        return $rt_str(var$2.getProgramInfoLog(var$3));
    }
    function cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params) {
        var var$4, var$5, var$6, $result, var$8;
        if ($pname != 35712 && $pname != 35714 && $pname != 35715) {
            var$4 = $this.$gl;
            var$5 = $this.$programs;
            if (!$program)
                var$5 = !var$5.$hasZeroValue0 ? null : var$5.$zeroValue;
            else {
                var$6 = var$5.$keyTable1;
                $result = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$5.$shift1));
                a: {
                    while (true) {
                        var$8 = var$6.data[$result];
                        if (!var$8) {
                            $result =  -($result + 1 | 0) | 0;
                            break a;
                        }
                        if (var$8 == $program)
                            break;
                        $result = ($result + 1 | 0) & var$5.$mask1;
                    }
                }
                var$5 = $result < 0 ? null : var$5.$valueTable0.data[$result];
            }
            otji_JSWrapper_$callClinit();
            var$5 = var$5 === null ? null : var$5[$rt_jso_marker] === true ? var$5 : var$5.$js;
            jn_IntBufferImpl_put($params, var$4.getProgramParameter(var$5, $pname));
        } else {
            var$5 = $this.$gl;
            var$4 = $this.$programs;
            if (!$program)
                var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
            else {
                var$6 = var$4.$keyTable1;
                $result = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$4.$shift1));
                b: {
                    while (true) {
                        var$8 = var$6.data[$result];
                        if (!var$8) {
                            $result =  -($result + 1 | 0) | 0;
                            break b;
                        }
                        if (var$8 == $program)
                            break;
                        $result = ($result + 1 | 0) & var$4.$mask1;
                    }
                }
                var$4 = $result < 0 ? null : var$4.$valueTable0.data[$result];
            }
            otji_JSWrapper_$callClinit();
            var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
            jn_IntBufferImpl_put($params, !(var$5.getProgramParameter(var$4, $pname) ? 1 : 0) ? 0 : 1);
        }
        $params.$position = 0;
        $params.$limit = $params.$capacity;
        $params.$mark = (-1);
    }
    function cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader) {
        var var$2, var$3, var$4, var$5, var$6;
        var$2 = $this.$gl;
        var$3 = $this.$shaders;
        if (!$shader)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $shader)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        return $rt_str(var$2.getShaderInfoLog(var$3));
    }
    function cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params) {
        var var$4, var$5, var$6, $result, var$8;
        if ($pname != 35713 && $pname != 35712) {
            var$4 = $this.$gl;
            var$5 = $this.$shaders;
            if (!$shader)
                var$5 = !var$5.$hasZeroValue0 ? null : var$5.$zeroValue;
            else {
                var$6 = var$5.$keyTable1;
                $result = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$5.$shift1));
                a: {
                    while (true) {
                        var$8 = var$6.data[$result];
                        if (!var$8) {
                            $result =  -($result + 1 | 0) | 0;
                            break a;
                        }
                        if (var$8 == $shader)
                            break;
                        $result = ($result + 1 | 0) & var$5.$mask1;
                    }
                }
                var$5 = $result < 0 ? null : var$5.$valueTable0.data[$result];
            }
            otji_JSWrapper_$callClinit();
            var$5 = var$5 === null ? null : var$5[$rt_jso_marker] === true ? var$5 : var$5.$js;
            jn_IntBufferImpl_put($params, var$4.getShaderParameter(var$5, $pname));
        } else {
            var$5 = $this.$gl;
            var$4 = $this.$shaders;
            if (!$shader)
                var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
            else {
                var$6 = var$4.$keyTable1;
                $result = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$4.$shift1));
                b: {
                    while (true) {
                        var$8 = var$6.data[$result];
                        if (!var$8) {
                            $result =  -($result + 1 | 0) | 0;
                            break b;
                        }
                        if (var$8 == $shader)
                            break;
                        $result = ($result + 1 | 0) & var$4.$mask1;
                    }
                }
                var$4 = $result < 0 ? null : var$4.$valueTable0.data[$result];
            }
            otji_JSWrapper_$callClinit();
            var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
            jn_IntBufferImpl_put($params, !(var$5.getShaderParameter(var$4, $pname) ? 1 : 0) ? 0 : 1);
        }
        $params.$position = 0;
        $params.$limit = $params.$capacity;
        $params.$mark = (-1);
    }
    function cgxgbt_TeaGL20_glGetString($this, $name) {
        return $rt_str($this.$gl.getParameter($name));
    }
    function cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name) {
        var $location, var$4, var$5, var$6, var$7;
        $location = $this.$gl;
        var$4 = $this.$programs;
        if (!$program)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $program)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        $location = $location.getUniformLocation(var$4, $rt_ustr($name));
        if ($location === null)
            return (-1);
        $name = $this.$uniforms;
        if (!$program)
            $name = !$name.$hasZeroValue0 ? null : $name.$zeroValue;
        else {
            var$5 = $name.$keyTable1;
            var$7 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), $name.$shift1));
            b: {
                while (true) {
                    var$6 = var$5.data[var$7];
                    if (!var$6) {
                        var$7 =  -(var$7 + 1 | 0) | 0;
                        break b;
                    }
                    if (var$6 == $program)
                        break;
                    var$7 = (var$7 + 1 | 0) & $name.$mask1;
                }
            }
            $name = var$7 < 0 ? null : $name.$valueTable0.data[var$7];
        }
        $name = $name;
        if ($name === null) {
            $name = cbgu_IntMap__init_(51, 0.800000011920929);
            cbgu_IntMap_put($this.$uniforms, $program, $name);
        }
        var$7 = $this.$nextUniformId;
        $this.$nextUniformId = var$7 + 1 | 0;
        cbgu_IntMap_put($name, var$7, otji_JSWrapper_wrap($location));
        return var$7;
    }
    function cgxgbt_TeaGL20_glLinkProgram($this, $program) {
        var var$2, var$3, var$4, var$5, var$6;
        var$2 = $this.$gl;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2.linkProgram(var$3);
    }
    function cgxgbt_TeaGL20_glLineWidth($this, $width) {
        $this.$gl.lineWidth($width);
    }
    function cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param) {
        $this.$gl.pixelStorei($pname, $param);
    }
    function cgxgbt_TeaGL20_glShaderSource($this, $shader, $source) {
        var var$3, var$4, var$5, var$6, var$7;
        var$3 = $this.$gl;
        var$4 = $this.$shaders;
        if (!$shader)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $shader)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        var$3.shaderSource(var$4, $rt_ustr($source));
    }
    function cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
        var $pixmap, $buffer, $webGLArray, $remainingBytes, $byteOffset, $index, var$16, $copy, var$18;
        if ($pixels === null) {
            $pixels = $this.$gl;
            $pixmap = null;
            $pixels.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $pixmap);
        } else if ($pixels.$limit > 4) {
            if (!cgxgbt_TeaTool_useGLArrayBuffer)
                $buffer = !($pixels instanceof jn_FloatBuffer) ? $rt_globals.Uint8Array.from(cgxgbt_TeaGL20_copy2($this, $pixels)) : cgxgbt_TeaGL20_copy($this, $pixels);
            else {
                $webGLArray = !$rt_isInstance($pixels, otcjn_HasArrayBufferView) ? null : $pixels.$array0.data;
                if (!($pixels instanceof jn_FloatBuffer)) {
                    $remainingBytes = $pixels.$limit - $pixels.$position | 0;
                    $byteOffset = $webGLArray.byteOffset + $pixels.$position | 0;
                    $buffer = new $rt_globals.Uint8Array($webGLArray.buffer, $byteOffset, $remainingBytes);
                } else {
                    $remainingBytes = $pixels.$limit - $pixels.$position | 0;
                    $byteOffset = $webGLArray.byteOffset + $pixels.$position | 0;
                    $buffer = new $rt_globals.Float32Array($webGLArray.buffer, $byteOffset, $remainingBytes);
                }
            }
            $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $buffer);
        } else {
            $index = jn_ByteBufferImpl_getInt($pixels, 0);
            cgxgbt_TeaGraphics_$callClinit();
            $pixels = cgxgbt_TeaGraphics_pixmaps;
            if (!$index)
                $pixels = !$pixels.$hasZeroValue0 ? null : $pixels.$zeroValue;
            else {
                var$16 = $pixels.$keyTable1;
                $remainingBytes = Long_lo(Long_shru(Long_mul(Long_fromInt($index), Long_create(2135587861, 2654435769)), $pixels.$shift1));
                a: {
                    while (true) {
                        $byteOffset = var$16.data[$remainingBytes];
                        if (!$byteOffset) {
                            $remainingBytes =  -($remainingBytes + 1 | 0) | 0;
                            break a;
                        }
                        if ($byteOffset == $index)
                            break;
                        $remainingBytes = ($remainingBytes + 1 | 0) & $pixels.$mask1;
                    }
                }
                $pixels = $remainingBytes < 0 ? null : $pixels.$valueTable0.data[$remainingBytes];
            }
            $pixmap = $pixels;
            $copy = $pixmap.$canvas;
            if ($copy === null && $pixmap.$nativePixmap !== null ? 1 : 0) {
                $pixels = $this.$gl;
                var$18 = $pixmap.$nativePixmap.$pixelPtr;
                $pixels.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, var$18);
            } else if ($copy === null && $pixmap.$imageElement !== null ? 1 : 0) {
                $pixels = $this.$gl;
                var$18 = $pixmap.$imageElement;
                $pixels.texImage2D($target, $level, $internalformat, $format, $type, var$18);
            } else if ($copy === null && $pixmap.$videoElement !== null ? 1 : 0) {
                $pixels = $this.$gl;
                var$18 = $pixmap.$videoElement;
                $pixels.texImage2D($target, $level, $internalformat, $format, $type, var$18);
            } else {
                $pixels = $this.$gl;
                cbgg_Pixmap_ensureCanvasExists($pixmap);
                var$18 = $pixmap.$canvas;
                $pixels.texImage2D($target, $level, $internalformat, $format, $type, var$18);
            }
        }
    }
    function cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param) {
        $this.$gl.texParameterf($target, $pname, $param);
    }
    function cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param) {
        var var$4, var$5;
        var$4 = $this.$gl;
        var$5 = $param;
        var$4.texParameterf($target, $pname, var$5);
    }
    function cgxgbt_TeaGL20_glUniform1i($this, $location, $x) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        var$3 = $this.$uniforms;
        var$4 = $this.$currProgram;
        if (!var$4)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$5 = var$3.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt(var$4), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == var$4)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$6 < 0 ? null : var$3.$valueTable0.data[var$6];
        }
        var$3 = var$3;
        if (!$location)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$5 = var$3.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($location), Long_create(2135587861, 2654435769)), var$3.$shift1));
            b: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break b;
                    }
                    if (var$7 == $location)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$6 < 0 ? null : var$3.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$8 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $this.$gl.uniform1i(var$8, $x);
    }
    function cgxgbt_TeaGL20_glUniformMatrix4fv($this, $location, $count, $transpose, $value, $offset) {
        var var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
        var$6 = $this.$uniforms;
        $offset = $this.$currProgram;
        if (!$offset)
            var$6 = !var$6.$hasZeroValue0 ? null : var$6.$zeroValue;
        else {
            var$7 = var$6.$keyTable1;
            var$8 = Long_lo(Long_shru(Long_mul(Long_fromInt($offset), Long_create(2135587861, 2654435769)), var$6.$shift1));
            a: {
                while (true) {
                    $count = var$7.data[var$8];
                    if (!$count) {
                        var$8 =  -(var$8 + 1 | 0) | 0;
                        break a;
                    }
                    if ($count == $offset)
                        break;
                    var$8 = (var$8 + 1 | 0) & var$6.$mask1;
                }
            }
            var$6 = var$8 < 0 ? null : var$6.$valueTable0.data[var$8];
        }
        var$6 = var$6;
        if (!$location)
            var$6 = !var$6.$hasZeroValue0 ? null : var$6.$zeroValue;
        else {
            var$7 = var$6.$keyTable1;
            $count = Long_lo(Long_shru(Long_mul(Long_fromInt($location), Long_create(2135587861, 2654435769)), var$6.$shift1));
            b: {
                while (true) {
                    $offset = var$7.data[$count];
                    if (!$offset) {
                        $count =  -($count + 1 | 0) | 0;
                        break b;
                    }
                    if ($offset == $location)
                        break;
                    $count = ($count + 1 | 0) & var$6.$mask1;
                }
            }
            var$6 = $count < 0 ? null : var$6.$valueTable0.data[$count];
        }
        otji_JSWrapper_$callClinit();
        var$9 = var$6 === null ? null : var$6[$rt_jso_marker] === true ? var$6 : var$6.$js;
        var$6 = $this.$gl;
        var$10 = "uniformMatrix4fv";
        var$11 = !!$transpose;
        if ($value === null)
            var$12 = null;
        else {
            $value = $value.data;
            $location = $value.length;
            var$12 = new $rt_globals.Array($location);
            $count = 0;
            while ($count < $location) {
                var$13 = $value[$count];
                $count;
                var$12[$count] = var$13;
                $count = $count + 1 | 0;
            }
        }
        var$6[var$10](var$9, var$11, var$12);
    }
    function cgxgbt_TeaGL20_glUseProgram($this, $program) {
        var var$2, var$3, var$4, var$5, var$6;
        $this.$currProgram = $program;
        var$2 = $this.$gl;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2.useProgram(var$3);
    }
    function cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
        $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
    }
    function cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height) {
        $this.$gl.viewport($x, $y, $width, $height);
    }
    var cbgg_GL30 = $rt_classWithoutFields(0);
    function cgxgbt_TeaGL30() {
        var a = this; cgxgbt_TeaGL20.call(a);
        a.$gl0 = null;
        a.$queries = null;
        a.$nextQueryId = 0;
        a.$samplers = null;
        a.$nextSamplerId = 0;
        a.$feedbacks = null;
        a.$nextFeedbackId = 0;
        a.$vertexArrays = null;
        a.$nextVertexArrayId = 0;
        a.$uIntBuffer = null;
    }
    function cgxgbt_TeaGL30__init_(var_0) {
        var var_1 = new cgxgbt_TeaGL30();
        cgxgbt_TeaGL30__init_0(var_1, var_0);
        return var_1;
    }
    function cgxgbt_TeaGL30__init_0($this, $gl) {
        cgxgbt_TeaGL20__init_0($this, $gl);
        $this.$queries = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$nextQueryId = 1;
        $this.$samplers = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$nextSamplerId = 1;
        $this.$feedbacks = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$nextFeedbackId = 1;
        $this.$vertexArrays = cbgu_IntMap__init_(51, 0.800000011920929);
        $this.$nextVertexArrayId = 1;
        $this.$uIntBuffer = new $rt_globals.Uint32Array(12000);
        $this.$gl0 = $gl;
    }
    function cgxgbt_TeaGL30_glBindVertexArray($this, $array) {
        var var$2, var$3, var$4, var$5, var$6;
        var$2 = $this.$gl0;
        var$3 = $this.$vertexArrays;
        if (!$array)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($array), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $array)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2.bindVertexArray(var$3);
    }
    function cgxgbt_TeaGL30_glDeleteVertexArrays($this, $n, $ids) {
        var $startPosition, $i, var$5, $id, $vArray, var$8, var$9;
        $startPosition = $ids.$position;
        $i = 0;
        while ($i < $n) {
            var$5 = $ids.$position;
            if (var$5 >= $ids.$limit) {
                $ids = new jn_BufferUnderflowException;
                $ids.$suppressionEnabled = 1;
                $ids.$writableStackTrace = 1;
                $rt_throw($ids);
            }
            $ids.$position = var$5 + 1 | 0;
            $id = $ids.$getElement(var$5);
            $vArray = $this.$vertexArrays;
            if (!$id)
                $vArray = !$vArray.$hasZeroValue0 ? null : $vArray.$zeroValue;
            else {
                var$8 = $vArray.$keyTable1;
                var$9 = Long_lo(Long_shru(Long_mul(Long_fromInt($id), Long_create(2135587861, 2654435769)), $vArray.$shift1));
                a: {
                    while (true) {
                        var$5 = var$8.data[var$9];
                        if (!var$5) {
                            var$9 =  -(var$9 + 1 | 0) | 0;
                            break a;
                        }
                        if (var$5 == $id)
                            break;
                        var$9 = (var$9 + 1 | 0) & $vArray.$mask1;
                    }
                }
                $vArray = var$9 < 0 ? null : $vArray.$valueTable0.data[var$9];
            }
            otji_JSWrapper_$callClinit();
            $vArray = $vArray === null ? null : $vArray[$rt_jso_marker] === true ? $vArray : $vArray.$js;
            cbgu_IntMap_remove($this.$vertexArrays, $id);
            $this.$gl0.deleteVertexArray($vArray);
            $i = $i + 1 | 0;
        }
        jn_Buffer_position($ids, $startPosition);
    }
    function cgxgbt_TeaGL30_glDrawArraysInstanced($this, $mode, $first, $count, $instanceCount) {
        $this.$gl0.drawArraysInstanced($mode, $first, $count, $instanceCount);
    }
    function cgxgbt_TeaGL30_glDrawElementsInstanced($this, $mode, $count, $type, $indicesOffset, $instanceCount) {
        $this.$gl0.drawElementsInstanced($mode, $count, $type, $indicesOffset, $instanceCount);
    }
    function cgxgbt_TeaGL30_glGenVertexArrays($this, $n, $ids) {
        var $startPosition, $i, $vArray, $id;
        $startPosition = $ids.$position;
        $i = 0;
        while ($i < $n) {
            $vArray = $this.$gl0.createVertexArray();
            $id = $this.$nextVertexArrayId;
            $this.$nextVertexArrayId = $id + 1 | 0;
            cbgu_IntMap_put($this.$vertexArrays, $id, otji_JSWrapper_wrap($vArray));
            jn_IntBufferImpl_put($ids, $id);
            $i = $i + 1 | 0;
        }
        jn_Buffer_position($ids, $startPosition);
    }
    function cgxgbt_TeaGL30_glGetFloatv($this, $pname, $params) {
        if ($pname != 34045)
            cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
        else {
            jn_FloatBufferImpl_put($params, 0, $this.$gl0.getParameter($pname));
            $params.$position = 0;
            $params.$limit = $params.$capacity;
            $params.$mark = (-1);
        }
    }
    var cgxgbt_TeaGL30Debug = $rt_classWithoutFields(cgxgbt_TeaGL30);
    function cgxgbt_TeaGL30Debug_glBindVertexArray($this, $array) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$gl0;
        var$3 = $this.$vertexArrays;
        if (!$array)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($array), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $array)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2.bindVertexArray(var$3);
        $array = $this.$gl0.getError();
        if (!$array)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($array, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $array, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $array = var$3.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $array, var$7);
        var$8 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glDeleteVertexArrays($this, $n, $ids) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        var$3 = $ids.$position;
        var$4 = 0;
        while (true) {
            if (var$4 >= $n) {
                jn_Buffer_position($ids, var$3);
                $n = $this.$gl0.getError();
                if (!$n)
                    return;
                $ids = new cbgu_GdxRuntimeException;
                var$5 = otci_IntegerUtil_toUnsignedLogRadixString($n, 4);
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
                jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $n, 10);
                jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
                $n = var$6.$length;
                if (var$5 === null)
                    var$5 = $rt_s(1);
                jl_AbstractStringBuilder_insert(var$6, $n, var$5);
                var$7 = new jl_String;
                var$8 = var$6.$buffer;
                var$4 = var$6.$length;
                jl_String_$callClinit();
                var$9 = $rt_createCharArray(var$4);
                var$7.$characters = var$9;
                jl_System_fastArraycopy(var$8, 0, var$9, 0, var$4);
                $ids.$suppressionEnabled = 1;
                $ids.$writableStackTrace = 1;
                $ids.$message = var$7;
                $rt_throw($ids);
            }
            var$10 = $ids.$position;
            if (var$10 >= $ids.$limit)
                break;
            $ids.$position = var$10 + 1 | 0;
            var$10 = $ids.$getElement(var$10);
            var$6 = $this.$vertexArrays;
            if (!var$10)
                var$6 = !var$6.$hasZeroValue0 ? null : var$6.$zeroValue;
            else {
                var$8 = var$6.$keyTable1;
                var$11 = Long_lo(Long_shru(Long_mul(Long_fromInt(var$10), Long_create(2135587861, 2654435769)), var$6.$shift1));
                a: {
                    while (true) {
                        var$12 = var$8.data[var$11];
                        if (!var$12) {
                            var$11 =  -(var$11 + 1 | 0) | 0;
                            break a;
                        }
                        if (var$12 == var$10)
                            break;
                        var$11 = (var$11 + 1 | 0) & var$6.$mask1;
                    }
                }
                var$6 = var$11 < 0 ? null : var$6.$valueTable0.data[var$11];
            }
            otji_JSWrapper_$callClinit();
            var$6 = var$6 === null ? null : var$6[$rt_jso_marker] === true ? var$6 : var$6.$js;
            cbgu_IntMap_remove($this.$vertexArrays, var$10);
            $this.$gl0.deleteVertexArray(var$6);
            var$4 = var$4 + 1 | 0;
        }
        $ids = new jn_BufferUnderflowException;
        $ids.$suppressionEnabled = 1;
        $ids.$writableStackTrace = 1;
        $rt_throw($ids);
    }
    function cgxgbt_TeaGL30Debug_glDrawArraysInstanced($this, $mode, $first, $count, $instanceCount) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        $this.$gl0.drawArraysInstanced($mode, $first, $count, $instanceCount);
        $mode = $this.$gl0.getError();
        if (!$mode)
            return;
        var$5 = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $mode, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $mode = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $mode, var$6);
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        $first = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($first);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $first);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$8;
        $rt_throw(var$5);
    }
    function cgxgbt_TeaGL30Debug_glDrawElementsInstanced($this, $mode, $count, $type, $indicesOffset, $instanceCount) {
        var var$6, var$7, var$8, var$9, var$10, var$11;
        $this.$gl0.drawElementsInstanced($mode, $count, $type, $indicesOffset, $instanceCount);
        $mode = $this.$gl0.getError();
        if (!$mode)
            return;
        var$6 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
        var$8 = new jl_StringBuilder;
        var$8.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $mode, 10);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(61));
        $mode = var$8.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$8, $mode, var$7);
        var$9 = new jl_String;
        var$10 = var$8.$buffer;
        $count = var$8.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray($count);
        var$9.$characters = var$11;
        jl_System_fastArraycopy(var$10, 0, var$11, 0, $count);
        var$6.$suppressionEnabled = 1;
        var$6.$writableStackTrace = 1;
        var$6.$message = var$9;
        $rt_throw(var$6);
    }
    function cgxgbt_TeaGL30Debug_glGenVertexArrays($this, $n, $ids) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$3 = $ids.$position;
        var$4 = 0;
        while (var$4 < $n) {
            var$5 = $this.$gl0.createVertexArray();
            var$6 = $this.$nextVertexArrayId;
            $this.$nextVertexArrayId = var$6 + 1 | 0;
            cbgu_IntMap_put($this.$vertexArrays, var$6, otji_JSWrapper_wrap(var$5));
            jn_IntBufferImpl_put($ids, var$6);
            var$4 = var$4 + 1 | 0;
        }
        jn_Buffer_position($ids, var$3);
        $n = $this.$gl0.getError();
        if (!$n)
            return;
        $ids = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($n, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $n, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $n = var$5.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $n, var$7);
        var$8 = new jl_String;
        var$9 = var$5.$buffer;
        var$4 = var$5.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray(var$4);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, var$4);
        $ids.$suppressionEnabled = 1;
        $ids.$writableStackTrace = 1;
        $ids.$message = var$8;
        $rt_throw($ids);
    }
    function cgxgbt_TeaGL30Debug_glBindTexture($this, $target, $texture) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$3 = $this.$gl;
        var$4 = $this.$textures;
        if (!$texture)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($texture), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $texture)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        var$3.bindTexture($target, var$4);
        $target = $this.$gl0.getError();
        if (!$target)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $target = var$4.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $target, var$8);
        var$9 = new jl_String;
        var$5 = var$4.$buffer;
        $texture = var$4.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($texture);
        var$9.$characters = var$10;
        jl_System_fastArraycopy(var$5, 0, var$10, 0, $texture);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$9;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL30Debug_glClear($this, $mask) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.clear($mask);
        $mask = $this.$gl0.getError();
        if (!$mask)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($mask, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $mask, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $mask = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $mask, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glClearColor($this, $red, $green, $blue, $alpha) {
        var var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        $this.$gl.clearColor($red, $green, $blue, $alpha);
        var$5 = $this.$gl0.getError();
        if (!var$5)
            return;
        var$6 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString(var$5, 4);
        var$8 = new jl_StringBuilder;
        var$8.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$5, 10);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(61));
        var$5 = var$8.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
        var$9 = new jl_String;
        var$10 = var$8.$buffer;
        var$11 = var$8.$length;
        jl_String_$callClinit();
        var$12 = $rt_createCharArray(var$11);
        var$9.$characters = var$12;
        jl_System_fastArraycopy(var$10, 0, var$12, 0, var$11);
        var$6.$suppressionEnabled = 1;
        var$6.$writableStackTrace = 1;
        var$6.$message = var$9;
        $rt_throw(var$6);
    }
    function cgxgbt_TeaGL30Debug_glDepthMask($this, $flag) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.depthMask(!!$flag);
        $flag = $this.$gl0.getError();
        if (!$flag)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($flag, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $flag, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $flag = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $flag, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glDisable($this, $cap) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.disable($cap);
        $cap = $this.$gl0.getError();
        if (!$cap)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $cap, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $cap = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $cap, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glDrawArrays($this, $mode, $first, $count) {
        var var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$gl.drawArrays($mode, $first, $count);
        $mode = $this.$gl0.getError();
        if (!$mode)
            return;
        var$4 = new cbgu_GdxRuntimeException;
        var$5 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $mode, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $mode = var$6.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $mode, var$5);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        $first = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($first);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$8, 0, var$9, 0, $first);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    function cgxgbt_TeaGL30Debug_glDrawElements($this, $mode, $count, $type, $indices) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        var$5 = $this.$gl;
        var$6 = $indices.$position;
        var$5.drawElements($mode, $count, $type, var$6);
        $mode = $this.$gl0.getError();
        if (!$mode)
            return;
        $indices = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $mode, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $mode = var$5.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $mode, var$7);
        var$8 = new jl_String;
        var$9 = var$5.$buffer;
        $count = var$5.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($count);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $count);
        $indices.$suppressionEnabled = 1;
        $indices.$writableStackTrace = 1;
        $indices.$message = var$8;
        $rt_throw($indices);
    }
    function cgxgbt_TeaGL30Debug_glEnable($this, $cap) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.enable($cap);
        $cap = $this.$gl0.getError();
        if (!$cap)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $cap, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $cap = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $cap, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glGetString($this, $name) {
        return $rt_str($this.$gl.getParameter($name));
    }
    function cgxgbt_TeaGL30Debug_glLineWidth($this, $width) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$gl.lineWidth($width);
        var$2 = $this.$gl0.getError();
        if (!var$2)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString(var$2, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$2, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        var$2 = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, var$2, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        var$8 = var$5.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$8);
        var$6.$characters = var$9;
        jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$6;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL30Debug_glPixelStorei($this, $pname, $param) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.pixelStorei($pname, $param);
        $pname = $this.$gl0.getError();
        if (!$pname)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $pname, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $pname = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $pname, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $param = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($param);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $param);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$6;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL30Debug_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
        var var$10, var$11, var$12, var$13, var$14;
        cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
        $target = $this.$gl0.getError();
        if (!$target)
            return;
        $pixels = new cbgu_GdxRuntimeException;
        var$10 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$11 = new jl_StringBuilder;
        var$11.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$11, var$11.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(61));
        $target = var$11.$length;
        if (var$10 === null)
            var$10 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$11, $target, var$10);
        var$12 = new jl_String;
        var$13 = var$11.$buffer;
        $level = var$11.$length;
        jl_String_$callClinit();
        var$14 = $rt_createCharArray($level);
        var$12.$characters = var$14;
        jl_System_fastArraycopy(var$13, 0, var$14, 0, $level);
        $pixels.$suppressionEnabled = 1;
        $pixels.$writableStackTrace = 1;
        $pixels.$message = var$12;
        $rt_throw($pixels);
    }
    function cgxgbt_TeaGL30Debug_glTexParameterf($this, $target, $pname, $param) {
        var var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$gl.texParameterf($target, $pname, $param);
        $target = $this.$gl0.getError();
        if (!$target)
            return;
        var$4 = new cbgu_GdxRuntimeException;
        var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $target = var$6.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $target, var$5);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        $pname = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($pname);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$8, 0, var$9, 0, $pname);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    function cgxgbt_TeaGL30Debug_glViewport($this, $x, $y, $width, $height) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        $this.$gl.viewport($x, $y, $width, $height);
        $x = $this.$gl0.getError();
        if (!$x)
            return;
        var$5 = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($x, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $x, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $x = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $x, var$6);
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        $y = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($y);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $y);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$8;
        $rt_throw(var$5);
    }
    function cgxgbt_TeaGL30Debug_glAttachShader($this, $program, $shader) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$7 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$3 = $this.$shaders;
        if (!$shader)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            $program = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$3.$shift1));
            b: {
                while (true) {
                    var$5 = var$4.data[$program];
                    if (!var$5) {
                        $program =  -($program + 1 | 0) | 0;
                        break b;
                    }
                    if (var$5 == $shader)
                        break;
                    $program = ($program + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = $program < 0 ? null : var$3.$valueTable0.data[$program];
        }
        var$8 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $this.$gl.attachShader(var$7, var$8);
        $program = $this.$gl0.getError();
        if (!$program)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$9 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $program = var$7.$length;
        if (var$9 === null)
            var$9 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $program, var$9);
        var$8 = new jl_String;
        var$4 = var$7.$buffer;
        $shader = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($shader);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$4, 0, var$10, 0, $shader);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$8;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL30Debug_glBindBuffer($this, $target, $buffer) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$3 = $this.$gl;
        var$4 = $this.$buffers;
        if (!$buffer)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($buffer), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $buffer)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        var$3.bindBuffer($target, var$4);
        $target = $this.$gl0.getError();
        if (!$target)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $target = var$4.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $target, var$8);
        var$9 = new jl_String;
        var$5 = var$4.$buffer;
        $buffer = var$4.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($buffer);
        var$9.$characters = var$10;
        jl_System_fastArraycopy(var$5, 0, var$10, 0, $buffer);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$9;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL30Debug_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
        $srcRGB = $this.$gl0.getError();
        if (!$srcRGB)
            return;
        var$5 = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($srcRGB, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $srcRGB, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $srcRGB = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $srcRGB, var$6);
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        $dstRGB = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($dstRGB);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $dstRGB);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$8;
        $rt_throw(var$5);
    }
    function cgxgbt_TeaGL30Debug_glBufferData($this, $target, $size, $data, $usage) {
        var var$5, var$6, var$7, var$8, var$9;
        cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
        $target = $this.$gl0.getError();
        if (!$target)
            return;
        $data = new cbgu_GdxRuntimeException;
        var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $target = var$6.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $target, var$5);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        $size = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($size);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$8, 0, var$9, 0, $size);
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = var$7;
        $rt_throw($data);
    }
    function cgxgbt_TeaGL30Debug_glBufferSubData($this, $target, $offset, $size, $data) {
        var var$5, var$6, var$7, var$8, var$9;
        cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data);
        $target = $this.$gl0.getError();
        if (!$target)
            return;
        $data = new cbgu_GdxRuntimeException;
        var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $target = var$6.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $target, var$5);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        $offset = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($offset);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$8, 0, var$9, 0, $offset);
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = var$7;
        $rt_throw($data);
    }
    function cgxgbt_TeaGL30Debug_glCompileShader($this, $shader) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$shaders;
        if (!$shader)
            var$2 = !var$2.$hasZeroValue0 ? null : var$2.$zeroValue;
        else {
            var$3 = var$2.$keyTable1;
            var$4 = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$2.$shift1));
            a: {
                while (true) {
                    var$5 = var$3.data[var$4];
                    if (!var$5) {
                        var$4 =  -(var$4 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$5 == $shader)
                        break;
                    var$4 = (var$4 + 1 | 0) & var$2.$mask1;
                }
            }
            var$2 = var$4 < 0 ? null : var$2.$valueTable0.data[var$4];
        }
        otji_JSWrapper_$callClinit();
        var$6 = var$2 === null ? null : var$2[$rt_jso_marker] === true ? var$2 : var$2.$js;
        $this.$gl.compileShader(var$6);
        $shader = $this.$gl0.getError();
        if (!$shader)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $shader = var$6.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $shader, var$7);
        var$8 = new jl_String;
        var$3 = var$6.$buffer;
        var$4 = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$4);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$3, 0, var$9, 0, var$4);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glCreateProgram($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$1 = $this.$gl.createProgram();
        var$2 = $this.$nextProgramId;
        $this.$nextProgramId = var$2 + 1 | 0;
        cbgu_IntMap_put($this.$programs, var$2, otji_JSWrapper_wrap(var$1));
        var$3 = $this.$gl0.getError();
        if (!var$3)
            return var$2;
        var$1 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString(var$3, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$3, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        var$3 = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, var$3, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        var$2 = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$2);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, var$2);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$6;
        $rt_throw(var$1);
    }
    function cgxgbt_TeaGL30Debug_glCreateShader($this, $type) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$2 = $this.$gl.createShader($type);
        var$3 = $this.$nextShaderId;
        $this.$nextShaderId = var$3 + 1 | 0;
        cbgu_IntMap_put($this.$shaders, var$3, otji_JSWrapper_wrap(var$2));
        $type = $this.$gl0.getError();
        if (!$type)
            return var$3;
        var$2 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($type, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $type, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $type = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $type, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        var$3 = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$3);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$6;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glDeleteProgram($this, $program) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$programs;
        if (!$program)
            var$2 = !var$2.$hasZeroValue0 ? null : var$2.$zeroValue;
        else {
            var$3 = var$2.$keyTable1;
            var$4 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$2.$shift1));
            a: {
                while (true) {
                    var$5 = var$3.data[var$4];
                    if (!var$5) {
                        var$4 =  -(var$4 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$5 == $program)
                        break;
                    var$4 = (var$4 + 1 | 0) & var$2.$mask1;
                }
            }
            var$2 = var$4 < 0 ? null : var$2.$valueTable0.data[var$4];
        }
        otji_JSWrapper_$callClinit();
        var$6 = var$2 === null ? null : var$2[$rt_jso_marker] === true ? var$2 : var$2.$js;
        cbgu_IntMap_remove($this.$programs, $program);
        cbgu_IntMap_remove($this.$uniforms, $program);
        $this.$gl.deleteProgram(var$6);
        $program = $this.$gl0.getError();
        if (!$program)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $program = var$6.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $program, var$7);
        var$8 = new jl_String;
        var$3 = var$6.$buffer;
        var$4 = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$4);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$3, 0, var$9, 0, var$4);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glDeleteShader($this, $shader) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$2 = cbgu_IntMap_remove($this.$shaders, $shader);
        otji_JSWrapper_$callClinit();
        var$3 = var$2 === null ? null : var$2[$rt_jso_marker] === true ? var$2 : var$2.$js;
        $this.$gl.deleteShader(var$3);
        $shader = $this.$gl0.getError();
        if (!$shader)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $shader = var$3.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $shader, var$4);
        var$5 = new jl_String;
        var$6 = var$3.$buffer;
        var$7 = var$3.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glDisableVertexAttribArray($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.disableVertexAttribArray($index);
        $index = $this.$gl0.getError();
        if (!$index)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $index = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $index, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glDrawElements0($this, $mode, $count, $type, $indices) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        $this.$gl.drawElements($mode, $count, $type, $indices);
        $mode = $this.$gl0.getError();
        if (!$mode)
            return;
        var$5 = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $mode, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $mode = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $mode, var$6);
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        $count = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($count);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $count);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$8;
        $rt_throw(var$5);
    }
    function cgxgbt_TeaGL30Debug_glEnableVertexAttribArray($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.enableVertexAttribArray($index);
        $index = $this.$gl0.getError();
        if (!$index)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $index = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $index, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glGenerateMipmap($this, $target) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.generateMipmap($target);
        $target = $this.$gl0.getError();
        if (!$target)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $target = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $target, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glGetActiveAttrib($this, $program, $index, $size, $type) {
        var $attrib, var$6, var$7, var$8;
        $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
        $program = $this.$gl0.getError();
        if (!$program)
            return $attrib;
        $size = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        $type = new jl_StringBuilder;
        $type.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0($type, $type.$length, $program, 10);
        jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(61));
        $program = $type.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert($type, $program, var$6);
        $attrib = new jl_String;
        var$7 = $type.$buffer;
        $index = $type.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($index);
        $attrib.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $index);
        $size.$suppressionEnabled = 1;
        $size.$writableStackTrace = 1;
        $size.$message = $attrib;
        $rt_throw($size);
    }
    function cgxgbt_TeaGL30Debug_glGetActiveUniform($this, $program, $index, $size, $type) {
        var $uniform, var$6, var$7, var$8;
        $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
        $program = $this.$gl0.getError();
        if (!$program)
            return $uniform;
        $size = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        $type = new jl_StringBuilder;
        $type.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0($type, $type.$length, $program, 10);
        jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(61));
        $program = $type.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert($type, $program, var$6);
        $uniform = new jl_String;
        var$7 = $type.$buffer;
        $index = $type.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($index);
        $uniform.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $index);
        $size.$suppressionEnabled = 1;
        $size.$writableStackTrace = 1;
        $size.$message = $uniform;
        $rt_throw($size);
    }
    function cgxgbt_TeaGL30Debug_glGetAttribLocation($this, $program, $name) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$7 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $program = $this.$gl.getAttribLocation(var$7, $rt_ustr($name));
        var$5 = $this.$gl0.getError();
        if (!var$5)
            return $program;
        $name = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString(var$5, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$5, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$8);
        var$7 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $name.$message = var$7;
        $rt_throw($name);
    }
    function cgxgbt_TeaGL30Debug_glGetFloatv($this, $pname, $params) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        if ($pname != 34045)
            cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
        else {
            jn_FloatBufferImpl_put($params, 0, $this.$gl0.getParameter($pname));
            $params.$position = 0;
            $params.$limit = $params.$capacity;
            $params.$mark = (-1);
        }
        $pname = $this.$gl0.getError();
        if (!$pname)
            return;
        $params = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $pname, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $pname = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $pname, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$5;
        $rt_throw($params);
    }
    function cgxgbt_TeaGL30Debug_glGetProgramiv($this, $program, $pname, $params) {
        var var$4, var$5, var$6, var$7, var$8;
        cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
        $program = $this.$gl0.getError();
        if (!$program)
            return;
        $params = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $program = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $program, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $pname = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($pname);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $pname);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$6;
        $rt_throw($params);
    }
    function cgxgbt_TeaGL30Debug_glGetProgramInfoLog($this, $program) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$gl;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2 = $rt_str(var$2.getProgramInfoLog(var$3));
        $program = $this.$gl0.getError();
        if (!$program)
            return var$2;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$7);
        var$8 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glGetShaderiv($this, $shader, $pname, $params) {
        var var$4, var$5, var$6, var$7, var$8;
        cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
        $shader = $this.$gl0.getError();
        if (!$shader)
            return;
        $params = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $shader = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $shader, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $pname = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($pname);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $pname);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$6;
        $rt_throw($params);
    }
    function cgxgbt_TeaGL30Debug_glGetShaderInfoLog($this, $shader) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$gl;
        var$3 = $this.$shaders;
        if (!$shader)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $shader)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2 = $rt_str(var$2.getShaderInfoLog(var$3));
        $shader = $this.$gl0.getError();
        if (!$shader)
            return var$2;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $shader = var$3.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $shader, var$7);
        var$8 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glGetUniformLocation($this, $program, $name) {
        var var$3, var$4, var$5, var$6, $loc, var$8, var$9;
        var$3 = $this.$gl;
        var$4 = $this.$programs;
        if (!$program)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    $loc = var$5.data[var$6];
                    if (!$loc) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if ($loc == $program)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        $name = var$3.getUniformLocation(var$4, $rt_ustr($name));
        if ($name === null)
            $loc = (-1);
        else {
            var$3 = $this.$uniforms;
            if (!$program)
                var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
            else {
                var$5 = var$3.$keyTable1;
                $loc = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
                b: {
                    while (true) {
                        var$6 = var$5.data[$loc];
                        if (!var$6) {
                            $loc =  -($loc + 1 | 0) | 0;
                            break b;
                        }
                        if (var$6 == $program)
                            break;
                        $loc = ($loc + 1 | 0) & var$3.$mask1;
                    }
                }
                var$3 = $loc < 0 ? null : var$3.$valueTable0.data[$loc];
            }
            var$3 = var$3;
            if (var$3 === null) {
                var$3 = cbgu_IntMap__init_(51, 0.800000011920929);
                cbgu_IntMap_put($this.$uniforms, $program, var$3);
            }
            $loc = $this.$nextUniformId;
            $this.$nextUniformId = $loc + 1 | 0;
            cbgu_IntMap_put(var$3, $loc, otji_JSWrapper_wrap($name));
        }
        $program = $this.$gl0.getError();
        if (!$program)
            return $loc;
        $name = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$8);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        $loc = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($loc);
        var$4.$characters = var$9;
        jl_System_fastArraycopy(var$5, 0, var$9, 0, $loc);
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $name.$message = var$4;
        $rt_throw($name);
    }
    function cgxgbt_TeaGL30Debug_glLinkProgram($this, $program) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$gl;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2.linkProgram(var$3);
        $program = $this.$gl0.getError();
        if (!$program)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$7);
        var$8 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glShaderSource($this, $shader, $source) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$3 = $this.$gl;
        var$4 = $this.$shaders;
        if (!$shader)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $shader)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        var$3.shaderSource(var$4, $rt_ustr($source));
        $shader = $this.$gl0.getError();
        if (!$shader)
            return;
        $source = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $shader = var$3.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $shader, var$8);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$6);
        var$4.$characters = var$9;
        jl_System_fastArraycopy(var$5, 0, var$9, 0, var$6);
        $source.$suppressionEnabled = 1;
        $source.$writableStackTrace = 1;
        $source.$message = var$4;
        $rt_throw($source);
    }
    function cgxgbt_TeaGL30Debug_glTexParameteri($this, $target, $pname, $param) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$4 = $this.$gl;
        var$5 = $param;
        var$4.texParameterf($target, $pname, var$5);
        $target = $this.$gl0.getError();
        if (!$target)
            return;
        var$4 = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $target = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $target, var$6);
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        $pname = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($pname);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $pname);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    function cgxgbt_TeaGL30Debug_glUniform1i($this, $location, $x) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        var$3 = $this.$uniforms;
        var$4 = $this.$currProgram;
        if (!var$4)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$5 = var$3.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt(var$4), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == var$4)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$6 < 0 ? null : var$3.$valueTable0.data[var$6];
        }
        var$3 = var$3;
        if (!$location)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$5 = var$3.$keyTable1;
            var$4 = Long_lo(Long_shru(Long_mul(Long_fromInt($location), Long_create(2135587861, 2654435769)), var$3.$shift1));
            b: {
                while (true) {
                    var$7 = var$5.data[var$4];
                    if (!var$7) {
                        var$4 =  -(var$4 + 1 | 0) | 0;
                        break b;
                    }
                    if (var$7 == $location)
                        break;
                    var$4 = (var$4 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$4 < 0 ? null : var$3.$valueTable0.data[var$4];
        }
        otji_JSWrapper_$callClinit();
        var$8 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $this.$gl.uniform1i(var$8, $x);
        $location = $this.$gl0.getError();
        if (!$location)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($location, 4);
        var$9 = new jl_StringBuilder;
        var$9.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $location, 10);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(61));
        $location = var$9.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$9, $location, var$8);
        var$10 = new jl_String;
        var$5 = var$9.$buffer;
        $x = var$9.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray($x);
        var$10.$characters = var$11;
        jl_System_fastArraycopy(var$5, 0, var$11, 0, $x);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$10;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL30Debug_glUseProgram($this, $program) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$currProgram = $program;
        var$2 = $this.$gl;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2.useProgram(var$3);
        $program = $this.$gl0.getError();
        if (!$program)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$7);
        var$8 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL30Debug_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
        var var$7, var$8, var$9, var$10, var$11, var$12;
        $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
        $indx = $this.$gl0.getError();
        if (!$indx)
            return;
        var$7 = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($indx, 4);
        var$9 = new jl_StringBuilder;
        var$9.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $indx, 10);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(61));
        $indx = var$9.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$9, $indx, var$8);
        var$10 = new jl_String;
        var$11 = var$9.$buffer;
        $size = var$9.$length;
        jl_String_$callClinit();
        var$12 = $rt_createCharArray($size);
        var$10.$characters = var$12;
        jl_System_fastArraycopy(var$11, 0, var$12, 0, $size);
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$10;
        $rt_throw(var$7);
    }
    function cbggg_GLVersion() {
        var a = this; jl_Object.call(a);
        a.$majorVersion = 0;
        a.$minorVersion = 0;
        a.$releaseVersion = 0;
        a.$vendorString = null;
        a.$rendererString = null;
        a.$type2 = null;
        a.$TAG = $rt_s(157);
    }
    function cbggg_GLVersion__init_0(var_0, var_1, var_2, var_3) {
        var var_4 = new cbggg_GLVersion();
        cbggg_GLVersion__init_(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function cbggg_GLVersion__init_($this, $appType, $versionString, $vendorString, $rendererString) {
        $this.$TAG = $rt_s(157);
        cbg_Application$ApplicationType_$callClinit();
        if ($appType === cbg_Application$ApplicationType_Android) {
            cbggg_GLVersion$Type_$callClinit();
            $this.$type2 = cbggg_GLVersion$Type_GLES;
        } else if ($appType === cbg_Application$ApplicationType_iOS) {
            cbggg_GLVersion$Type_$callClinit();
            $this.$type2 = cbggg_GLVersion$Type_GLES;
        } else if ($appType === cbg_Application$ApplicationType_Desktop) {
            cbggg_GLVersion$Type_$callClinit();
            $this.$type2 = cbggg_GLVersion$Type_OpenGL;
        } else if ($appType === cbg_Application$ApplicationType_Applet) {
            cbggg_GLVersion$Type_$callClinit();
            $this.$type2 = cbggg_GLVersion$Type_OpenGL;
        } else if ($appType !== cbg_Application$ApplicationType_WebGL) {
            cbggg_GLVersion$Type_$callClinit();
            $this.$type2 = cbggg_GLVersion$Type_NONE;
        } else {
            cbggg_GLVersion$Type_$callClinit();
            $this.$type2 = cbggg_GLVersion$Type_WebGL;
        }
        $appType = $this.$type2;
        cbggg_GLVersion$Type_$callClinit();
        if ($appType === cbggg_GLVersion$Type_GLES)
            cbggg_GLVersion_extractVersion($this, $rt_s(158), $versionString);
        else if ($appType === cbggg_GLVersion$Type_WebGL)
            cbggg_GLVersion_extractVersion($this, $rt_s(159), $versionString);
        else if ($appType === cbggg_GLVersion$Type_OpenGL)
            cbggg_GLVersion_extractVersion($this, $rt_s(160), $versionString);
        else {
            $this.$majorVersion = (-1);
            $this.$minorVersion = (-1);
            $this.$releaseVersion = (-1);
            $vendorString = $rt_s(45);
            $rendererString = $rt_s(45);
        }
        $this.$vendorString = $vendorString;
        $this.$rendererString = $rendererString;
    }
    function cbggg_GLVersion_extractVersion($this, $patternString, $versionString) {
        var $matcher, var$4, var$5, $result, $resultSplit, var$8, var$9, $found, $pattern;
        $matcher = jur_Matcher__init_(jur_Pattern_compile($patternString, 0), $versionString);
        if (jur_Matcher_find($matcher)) {
            $patternString = $matcher.$matchResult;
            var$4 = $patternString.$valid1;
            if (!var$4) {
                $patternString = new jl_IllegalStateException;
                $patternString.$suppressionEnabled = 1;
                $patternString.$writableStackTrace = 1;
                jl_Throwable_fillInStackTrace($patternString);
                $rt_throw($patternString);
            }
            var$5 = $rt_compare(1, $patternString.$groupCount);
            if (var$5 >= 0) {
                $patternString = new jl_IndexOutOfBoundsException;
                jl_String_$callClinit();
                $versionString = new jl_StringBuilder;
                jl_Object__init_0($versionString);
                $versionString.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0($versionString, $versionString.$length, 1, 10);
                $result = new jl_String;
                $resultSplit = $versionString.$buffer;
                var$8 = $versionString.$length;
                var$9 = $rt_createCharArray(var$8);
                $result.$characters = var$9;
                jl_System_fastArraycopy($resultSplit, 0, var$9, 0, var$8);
                $patternString.$suppressionEnabled = 1;
                $patternString.$writableStackTrace = 1;
                $patternString.$message = $result;
                $rt_throw($patternString);
            }
            $resultSplit = $patternString.$groupBounds.data;
            if ($resultSplit[2] < 0)
                $result = null;
            else {
                $versionString = $patternString.$string0;
                if (!var$4) {
                    $patternString = new jl_IllegalStateException;
                    $patternString.$suppressionEnabled = 1;
                    $patternString.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace($patternString);
                    $rt_throw($patternString);
                }
                if (var$5 >= 0) {
                    $patternString = new jl_IndexOutOfBoundsException;
                    jl_String_$callClinit();
                    $versionString = new jl_StringBuilder;
                    jl_Object__init_0($versionString);
                    $versionString.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert0($versionString, $versionString.$length, 1, 10);
                    jl_RuntimeException__init_2($patternString, jl_StringBuilder_toString($versionString));
                    $rt_throw($patternString);
                }
                $result = jl_String_substring($versionString, $resultSplit[2], jur_MatchResultImpl_end($patternString, 1));
            }
            $resultSplit = (jl_String_split($result, $rt_s(161))).data;
            $this.$majorVersion = cbggg_GLVersion_parseInt($this, $resultSplit[0], 2);
            $found = $resultSplit.length;
            $this.$minorVersion = $found < 2 ? 0 : cbggg_GLVersion_parseInt($this, $resultSplit[1], 0);
            $this.$releaseVersion = $found < 3 ? 0 : cbggg_GLVersion_parseInt($this, $resultSplit[2], 0);
        } else {
            $result = cbg_Gdx_app;
            $patternString = new jl_StringBuilder;
            $patternString.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $rt_s(162));
            jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $versionString);
            $pattern = new jl_String;
            $resultSplit = $patternString.$buffer;
            var$8 = $patternString.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray(var$8);
            $pattern.$characters = var$9;
            jl_System_fastArraycopy($resultSplit, 0, var$9, 0, var$8);
            if ($result.$logLevel >= 2) {
                if (jl_System_outCache === null) {
                    $versionString = new ji_PrintStream;
                    $versionString.$out = otcic_StdoutOutputStream_INSTANCE;
                    $patternString = new jl_StringBuilder;
                    $patternString.$buffer = $rt_createCharArray(16);
                    $versionString.$sb = $patternString;
                    $versionString.$buffer1 = $rt_createCharArray(32);
                    $versionString.$autoFlush = 0;
                    jnci_UTF8Charset_$callClinit();
                    $versionString.$charset = jnci_UTF8Charset_INSTANCE;
                    jl_System_outCache = $versionString;
                }
                $result = jl_System_outCache;
                $patternString = new jl_StringBuilder;
                $patternString.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $rt_s(157));
                jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $rt_s(75));
                jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $pattern);
                $versionString = new jl_String;
                $resultSplit = $patternString.$buffer;
                var$8 = $patternString.$length;
                var$9 = $rt_createCharArray(var$8);
                $versionString.$characters = var$9;
                jl_System_fastArraycopy($resultSplit, 0, var$9, 0, var$8);
                $patternString = $result.$sb;
                jl_AbstractStringBuilder_insert($patternString, $patternString.$length, $versionString);
                var$8 = $patternString.$length;
                jl_AbstractStringBuilder_insertSpace($patternString, var$8, var$8 + 1 | 0);
                $patternString.$buffer.data[var$8] = 10;
                ji_PrintStream_printSB($result);
            }
            $this.$majorVersion = 2;
            $this.$minorVersion = 0;
            $this.$releaseVersion = 0;
        }
    }
    function cbggg_GLVersion_parseInt($this, $v, $defaultValue) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, $$je;
        a: {
            try {
                var$3 = jl_Integer_parseInt0($v);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$3;
        }
        var$4 = cbg_Gdx_app;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(163));
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $v);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(164));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $defaultValue, 10);
        $v = new jl_String;
        var$6 = var$5.$buffer;
        var$7 = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        $v.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        if (var$4.$logLevel >= 1) {
            if (jl_System_errCache === null) {
                var$4 = new ji_PrintStream;
                var$4.$out = otcic_StderrOutputStream_INSTANCE;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                var$4.$sb = var$5;
                var$4.$buffer1 = $rt_createCharArray(32);
                var$4.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                var$4.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_errCache = var$4;
            }
            var$4 = jl_System_errCache;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(165));
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(75));
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $v);
            $v = new jl_String;
            var$8 = var$5.$buffer;
            var$7 = var$5.$length;
            var$6 = $rt_createCharArray(var$7);
            $v.$characters = var$6;
            jl_System_fastArraycopy(var$8, 0, var$6, 0, var$7);
            var$9 = var$4.$sb;
            jl_AbstractStringBuilder_insert(var$9, var$9.$length, $v);
            var$7 = var$9.$length;
            jl_AbstractStringBuilder_insertSpace(var$9, var$7, var$7 + 1 | 0);
            var$9.$buffer.data[var$7] = 10;
            ji_PrintStream_printSB(var$4);
        }
        return $defaultValue;
    }
    var cbg_Application$ApplicationType = $rt_classWithoutFields(jl_Enum);
    var cbg_Application$ApplicationType_Android = null;
    var cbg_Application$ApplicationType_Desktop = null;
    var cbg_Application$ApplicationType_HeadlessDesktop = null;
    var cbg_Application$ApplicationType_Applet = null;
    var cbg_Application$ApplicationType_WebGL = null;
    var cbg_Application$ApplicationType_iOS = null;
    var cbg_Application$ApplicationType_$VALUES = null;
    function cbg_Application$ApplicationType_$callClinit() {
        cbg_Application$ApplicationType_$callClinit = $rt_eraseClinit(cbg_Application$ApplicationType);
        cbg_Application$ApplicationType__clinit_();
    }
    function cbg_Application$ApplicationType__clinit_() {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = new cbg_Application$ApplicationType;
        cbg_Application$ApplicationType_$callClinit();
        var$1.$name0 = $rt_s(5);
        var$1.$ordinal = 0;
        cbg_Application$ApplicationType_Android = var$1;
        var$2 = new cbg_Application$ApplicationType;
        var$2.$name0 = $rt_s(166);
        var$2.$ordinal = 1;
        cbg_Application$ApplicationType_Desktop = var$2;
        var$3 = new cbg_Application$ApplicationType;
        var$3.$name0 = $rt_s(167);
        var$3.$ordinal = 2;
        cbg_Application$ApplicationType_HeadlessDesktop = var$3;
        var$4 = new cbg_Application$ApplicationType;
        var$4.$name0 = $rt_s(168);
        var$4.$ordinal = 3;
        cbg_Application$ApplicationType_Applet = var$4;
        var$5 = new cbg_Application$ApplicationType;
        var$5.$name0 = $rt_s(169);
        var$5.$ordinal = 4;
        cbg_Application$ApplicationType_WebGL = var$5;
        var$6 = new cbg_Application$ApplicationType;
        var$6.$name0 = $rt_s(170);
        var$6.$ordinal = 5;
        cbg_Application$ApplicationType_iOS = var$6;
        cbg_Application$ApplicationType_$VALUES = $rt_createArrayFromData(cbg_Application$ApplicationType, [var$1, var$2, var$3, var$4, var$5, var$6]);
    }
    var cgxgbt_TeaGraphics$FullscreenChanged = $rt_classWithoutFields(0);
    function cgxgbt_TeaGraphics$1() {
        jl_Object.call(this);
        this.$this$05 = null;
    }
    function cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0(var$0) {}
    var cgxgbt_TeaGL20Debug = $rt_classWithoutFields(cgxgbt_TeaGL20);
    function cgxgbt_TeaGL20Debug_glBindTexture($this, $target, $texture) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$3 = $this.$gl;
        var$4 = $this.$textures;
        if (!$texture)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($texture), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $texture)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        var$3.bindTexture($target, var$4);
        $target = $this.$gl.getError();
        if (!$target)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $target = var$4.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $target, var$8);
        var$9 = new jl_String;
        var$5 = var$4.$buffer;
        $texture = var$4.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($texture);
        var$9.$characters = var$10;
        jl_System_fastArraycopy(var$5, 0, var$10, 0, $texture);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$9;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL20Debug_glClear($this, $mask) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.clear($mask);
        $mask = $this.$gl.getError();
        if (!$mask)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($mask, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $mask, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $mask = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $mask, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glClearColor($this, $red, $green, $blue, $alpha) {
        var var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        $this.$gl.clearColor($red, $green, $blue, $alpha);
        var$5 = $this.$gl.getError();
        if (!var$5)
            return;
        var$6 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString(var$5, 4);
        var$8 = new jl_StringBuilder;
        var$8.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$5, 10);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(61));
        var$5 = var$8.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$8, var$5, var$7);
        var$9 = new jl_String;
        var$10 = var$8.$buffer;
        var$11 = var$8.$length;
        jl_String_$callClinit();
        var$12 = $rt_createCharArray(var$11);
        var$9.$characters = var$12;
        jl_System_fastArraycopy(var$10, 0, var$12, 0, var$11);
        var$6.$suppressionEnabled = 1;
        var$6.$writableStackTrace = 1;
        var$6.$message = var$9;
        $rt_throw(var$6);
    }
    function cgxgbt_TeaGL20Debug_glDepthMask($this, $flag) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.depthMask(!!$flag);
        $flag = $this.$gl.getError();
        if (!$flag)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($flag, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $flag, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $flag = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $flag, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glDisable($this, $cap) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.disable($cap);
        $cap = $this.$gl.getError();
        if (!$cap)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $cap, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $cap = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $cap, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glDrawArrays($this, $mode, $first, $count) {
        var var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$gl.drawArrays($mode, $first, $count);
        $mode = $this.$gl.getError();
        if (!$mode)
            return;
        var$4 = new cbgu_GdxRuntimeException;
        var$5 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $mode, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $mode = var$6.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $mode, var$5);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        $first = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($first);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$8, 0, var$9, 0, $first);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    function cgxgbt_TeaGL20Debug_glDrawElements($this, $mode, $count, $type, $indices) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        var$5 = $this.$gl;
        var$6 = $indices.$position;
        var$5.drawElements($mode, $count, $type, var$6);
        $mode = $this.$gl.getError();
        if (!$mode)
            return;
        $indices = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $mode, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $mode = var$5.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $mode, var$7);
        var$8 = new jl_String;
        var$9 = var$5.$buffer;
        $count = var$5.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($count);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $count);
        $indices.$suppressionEnabled = 1;
        $indices.$writableStackTrace = 1;
        $indices.$message = var$8;
        $rt_throw($indices);
    }
    function cgxgbt_TeaGL20Debug_glEnable($this, $cap) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.enable($cap);
        $cap = $this.$gl.getError();
        if (!$cap)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($cap, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $cap, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $cap = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $cap, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glGetString($this, $name) {
        return $rt_str($this.$gl.getParameter($name));
    }
    function cgxgbt_TeaGL20Debug_glLineWidth($this, $width) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$gl.lineWidth($width);
        var$2 = $this.$gl.getError();
        if (!var$2)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString(var$2, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$2, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        var$2 = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, var$2, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        var$8 = var$5.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$8);
        var$6.$characters = var$9;
        jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$6;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL20Debug_glPixelStorei($this, $pname, $param) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.pixelStorei($pname, $param);
        $pname = $this.$gl.getError();
        if (!$pname)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $pname, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $pname = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $pname, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $param = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($param);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $param);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$6;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL20Debug_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) {
        var var$10, var$11, var$12, var$13, var$14;
        cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
        $target = $this.$gl.getError();
        if (!$target)
            return;
        $pixels = new cbgu_GdxRuntimeException;
        var$10 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$11 = new jl_StringBuilder;
        var$11.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$11, var$11.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$11, var$11.$length, $rt_s(61));
        $target = var$11.$length;
        if (var$10 === null)
            var$10 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$11, $target, var$10);
        var$12 = new jl_String;
        var$13 = var$11.$buffer;
        $level = var$11.$length;
        jl_String_$callClinit();
        var$14 = $rt_createCharArray($level);
        var$12.$characters = var$14;
        jl_System_fastArraycopy(var$13, 0, var$14, 0, $level);
        $pixels.$suppressionEnabled = 1;
        $pixels.$writableStackTrace = 1;
        $pixels.$message = var$12;
        $rt_throw($pixels);
    }
    function cgxgbt_TeaGL20Debug_glTexParameterf($this, $target, $pname, $param) {
        var var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$gl.texParameterf($target, $pname, $param);
        $target = $this.$gl.getError();
        if (!$target)
            return;
        var$4 = new cbgu_GdxRuntimeException;
        var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $target = var$6.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $target, var$5);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        $pname = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($pname);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$8, 0, var$9, 0, $pname);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$7;
        $rt_throw(var$4);
    }
    function cgxgbt_TeaGL20Debug_glViewport($this, $x, $y, $width, $height) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        $this.$gl.viewport($x, $y, $width, $height);
        $x = $this.$gl.getError();
        if (!$x)
            return;
        var$5 = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($x, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $x, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $x = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $x, var$6);
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        $y = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($y);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $y);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$8;
        $rt_throw(var$5);
    }
    function cgxgbt_TeaGL20Debug_glAttachShader($this, $program, $shader) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$7 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$3 = $this.$shaders;
        if (!$shader)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            $program = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$3.$shift1));
            b: {
                while (true) {
                    var$5 = var$4.data[$program];
                    if (!var$5) {
                        $program =  -($program + 1 | 0) | 0;
                        break b;
                    }
                    if (var$5 == $shader)
                        break;
                    $program = ($program + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = $program < 0 ? null : var$3.$valueTable0.data[$program];
        }
        var$8 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $this.$gl.attachShader(var$7, var$8);
        $program = $this.$gl.getError();
        if (!$program)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$9 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $program = var$7.$length;
        if (var$9 === null)
            var$9 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $program, var$9);
        var$8 = new jl_String;
        var$4 = var$7.$buffer;
        $shader = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($shader);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$4, 0, var$10, 0, $shader);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$8;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL20Debug_glBindBuffer($this, $target, $buffer) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$3 = $this.$gl;
        var$4 = $this.$buffers;
        if (!$buffer)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($buffer), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $buffer)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        var$3.bindBuffer($target, var$4);
        $target = $this.$gl.getError();
        if (!$target)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $target = var$4.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $target, var$8);
        var$9 = new jl_String;
        var$5 = var$4.$buffer;
        $buffer = var$4.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($buffer);
        var$9.$characters = var$10;
        jl_System_fastArraycopy(var$5, 0, var$10, 0, $buffer);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$9;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL20Debug_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
        $srcRGB = $this.$gl.getError();
        if (!$srcRGB)
            return;
        var$5 = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($srcRGB, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $srcRGB, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $srcRGB = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $srcRGB, var$6);
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        $dstRGB = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($dstRGB);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $dstRGB);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$8;
        $rt_throw(var$5);
    }
    function cgxgbt_TeaGL20Debug_glBufferData($this, $target, $size, $data, $usage) {
        var var$5, var$6, var$7, var$8, var$9;
        cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
        $target = $this.$gl.getError();
        if (!$target)
            return;
        $data = new cbgu_GdxRuntimeException;
        var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $target = var$6.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $target, var$5);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        $size = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($size);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$8, 0, var$9, 0, $size);
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = var$7;
        $rt_throw($data);
    }
    function cgxgbt_TeaGL20Debug_glBufferSubData($this, $target, $offset, $size, $data) {
        var var$5, var$6, var$7, var$8, var$9;
        cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data);
        $target = $this.$gl.getError();
        if (!$target)
            return;
        $data = new cbgu_GdxRuntimeException;
        var$5 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $target = var$6.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $target, var$5);
        var$7 = new jl_String;
        var$8 = var$6.$buffer;
        $offset = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($offset);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$8, 0, var$9, 0, $offset);
        $data.$suppressionEnabled = 1;
        $data.$writableStackTrace = 1;
        $data.$message = var$7;
        $rt_throw($data);
    }
    function cgxgbt_TeaGL20Debug_glCompileShader($this, $shader) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$shaders;
        if (!$shader)
            var$2 = !var$2.$hasZeroValue0 ? null : var$2.$zeroValue;
        else {
            var$3 = var$2.$keyTable1;
            var$4 = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$2.$shift1));
            a: {
                while (true) {
                    var$5 = var$3.data[var$4];
                    if (!var$5) {
                        var$4 =  -(var$4 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$5 == $shader)
                        break;
                    var$4 = (var$4 + 1 | 0) & var$2.$mask1;
                }
            }
            var$2 = var$4 < 0 ? null : var$2.$valueTable0.data[var$4];
        }
        otji_JSWrapper_$callClinit();
        var$6 = var$2 === null ? null : var$2[$rt_jso_marker] === true ? var$2 : var$2.$js;
        $this.$gl.compileShader(var$6);
        $shader = $this.$gl.getError();
        if (!$shader)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $shader = var$6.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $shader, var$7);
        var$8 = new jl_String;
        var$3 = var$6.$buffer;
        var$4 = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$4);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$3, 0, var$9, 0, var$4);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glCreateProgram($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$1 = $this.$gl.createProgram();
        var$2 = $this.$nextProgramId;
        $this.$nextProgramId = var$2 + 1 | 0;
        cbgu_IntMap_put($this.$programs, var$2, otji_JSWrapper_wrap(var$1));
        var$3 = $this.$gl.getError();
        if (!var$3)
            return var$2;
        var$1 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString(var$3, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$3, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        var$3 = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, var$3, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        var$2 = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$2);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, var$2);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = var$6;
        $rt_throw(var$1);
    }
    function cgxgbt_TeaGL20Debug_glCreateShader($this, $type) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$2 = $this.$gl.createShader($type);
        var$3 = $this.$nextShaderId;
        $this.$nextShaderId = var$3 + 1 | 0;
        cbgu_IntMap_put($this.$shaders, var$3, otji_JSWrapper_wrap(var$2));
        $type = $this.$gl.getError();
        if (!$type)
            return var$3;
        var$2 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($type, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $type, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $type = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $type, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        var$3 = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$3);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$6;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glDeleteProgram($this, $program) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$programs;
        if (!$program)
            var$2 = !var$2.$hasZeroValue0 ? null : var$2.$zeroValue;
        else {
            var$3 = var$2.$keyTable1;
            var$4 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$2.$shift1));
            a: {
                while (true) {
                    var$5 = var$3.data[var$4];
                    if (!var$5) {
                        var$4 =  -(var$4 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$5 == $program)
                        break;
                    var$4 = (var$4 + 1 | 0) & var$2.$mask1;
                }
            }
            var$2 = var$4 < 0 ? null : var$2.$valueTable0.data[var$4];
        }
        otji_JSWrapper_$callClinit();
        var$6 = var$2 === null ? null : var$2[$rt_jso_marker] === true ? var$2 : var$2.$js;
        cbgu_IntMap_remove($this.$programs, $program);
        cbgu_IntMap_remove($this.$uniforms, $program);
        $this.$gl.deleteProgram(var$6);
        $program = $this.$gl.getError();
        if (!$program)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(61));
        $program = var$6.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, $program, var$7);
        var$8 = new jl_String;
        var$3 = var$6.$buffer;
        var$4 = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$4);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$3, 0, var$9, 0, var$4);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glDeleteShader($this, $shader) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$2 = cbgu_IntMap_remove($this.$shaders, $shader);
        otji_JSWrapper_$callClinit();
        var$3 = var$2 === null ? null : var$2[$rt_jso_marker] === true ? var$2 : var$2.$js;
        $this.$gl.deleteShader(var$3);
        $shader = $this.$gl.getError();
        if (!$shader)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $shader = var$3.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $shader, var$4);
        var$5 = new jl_String;
        var$6 = var$3.$buffer;
        var$7 = var$3.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glDisableVertexAttribArray($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.disableVertexAttribArray($index);
        $index = $this.$gl.getError();
        if (!$index)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $index = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $index, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glDrawElements0($this, $mode, $count, $type, $indices) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        $this.$gl.drawElements($mode, $count, $type, $indices);
        $mode = $this.$gl.getError();
        if (!$mode)
            return;
        var$5 = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($mode, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $mode, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $mode = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $mode, var$6);
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        $count = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($count);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $count);
        var$5.$suppressionEnabled = 1;
        var$5.$writableStackTrace = 1;
        var$5.$message = var$8;
        $rt_throw(var$5);
    }
    function cgxgbt_TeaGL20Debug_glEnableVertexAttribArray($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.enableVertexAttribArray($index);
        $index = $this.$gl.getError();
        if (!$index)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($index, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $index = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $index, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glGenerateMipmap($this, $target) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$gl.generateMipmap($target);
        $target = $this.$gl.getError();
        if (!$target)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $target = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $target, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glGetActiveAttrib($this, $program, $index, $size, $type) {
        var $attrib, var$6, var$7, var$8;
        $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
        $program = $this.$gl.getError();
        if (!$program)
            return $attrib;
        $size = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        $type = new jl_StringBuilder;
        $type.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0($type, $type.$length, $program, 10);
        jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(61));
        $program = $type.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert($type, $program, var$6);
        $attrib = new jl_String;
        var$7 = $type.$buffer;
        $index = $type.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($index);
        $attrib.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $index);
        $size.$suppressionEnabled = 1;
        $size.$writableStackTrace = 1;
        $size.$message = $attrib;
        $rt_throw($size);
    }
    function cgxgbt_TeaGL20Debug_glGetActiveUniform($this, $program, $index, $size, $type) {
        var $uniform, var$6, var$7, var$8;
        $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
        $program = $this.$gl.getError();
        if (!$program)
            return $uniform;
        $size = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        $type = new jl_StringBuilder;
        $type.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0($type, $type.$length, $program, 10);
        jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(61));
        $program = $type.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert($type, $program, var$6);
        $uniform = new jl_String;
        var$7 = $type.$buffer;
        $index = $type.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($index);
        $uniform.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $index);
        $size.$suppressionEnabled = 1;
        $size.$writableStackTrace = 1;
        $size.$message = $uniform;
        $rt_throw($size);
    }
    function cgxgbt_TeaGL20Debug_glGetAttribLocation($this, $program, $name) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$7 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $program = $this.$gl.getAttribLocation(var$7, $rt_ustr($name));
        var$5 = $this.$gl.getError();
        if (!var$5)
            return $program;
        $name = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString(var$5, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$5, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$8);
        var$7 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$7.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $name.$message = var$7;
        $rt_throw($name);
    }
    function cgxgbt_TeaGL20Debug_glGetFloatv($this, $pname, $params) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
        $pname = $this.$gl.getError();
        if (!$pname)
            return;
        $params = new cbgu_GdxRuntimeException;
        var$3 = otci_IntegerUtil_toUnsignedLogRadixString($pname, 4);
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $pname, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(61));
        $pname = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, $pname, var$3);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$5;
        $rt_throw($params);
    }
    function cgxgbt_TeaGL20Debug_glGetProgramiv($this, $program, $pname, $params) {
        var var$4, var$5, var$6, var$7, var$8;
        cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
        $program = $this.$gl.getError();
        if (!$program)
            return;
        $params = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $program = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $program, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $pname = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($pname);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $pname);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$6;
        $rt_throw($params);
    }
    function cgxgbt_TeaGL20Debug_glGetProgramInfoLog($this, $program) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$gl;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2 = $rt_str(var$2.getProgramInfoLog(var$3));
        $program = $this.$gl.getError();
        if (!$program)
            return var$2;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$7);
        var$8 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glGetShaderiv($this, $shader, $pname, $params) {
        var var$4, var$5, var$6, var$7, var$8;
        cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
        $shader = $this.$gl.getError();
        if (!$shader)
            return;
        $params = new cbgu_GdxRuntimeException;
        var$4 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(61));
        $shader = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, $shader, var$4);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $pname = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($pname);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $pname);
        $params.$suppressionEnabled = 1;
        $params.$writableStackTrace = 1;
        $params.$message = var$6;
        $rt_throw($params);
    }
    function cgxgbt_TeaGL20Debug_glGetShaderInfoLog($this, $shader) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$gl;
        var$3 = $this.$shaders;
        if (!$shader)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $shader)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2 = $rt_str(var$2.getShaderInfoLog(var$3));
        $shader = $this.$gl.getError();
        if (!$shader)
            return var$2;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $shader = var$3.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $shader, var$7);
        var$8 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glGetUniformLocation($this, $program, $name) {
        var var$3, var$4, var$5, var$6, $loc, var$8, var$9;
        var$3 = $this.$gl;
        var$4 = $this.$programs;
        if (!$program)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    $loc = var$5.data[var$6];
                    if (!$loc) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if ($loc == $program)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        $name = var$3.getUniformLocation(var$4, $rt_ustr($name));
        if ($name === null)
            $loc = (-1);
        else {
            var$3 = $this.$uniforms;
            if (!$program)
                var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
            else {
                var$5 = var$3.$keyTable1;
                $loc = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
                b: {
                    while (true) {
                        var$6 = var$5.data[$loc];
                        if (!var$6) {
                            $loc =  -($loc + 1 | 0) | 0;
                            break b;
                        }
                        if (var$6 == $program)
                            break;
                        $loc = ($loc + 1 | 0) & var$3.$mask1;
                    }
                }
                var$3 = $loc < 0 ? null : var$3.$valueTable0.data[$loc];
            }
            var$3 = var$3;
            if (var$3 === null) {
                var$3 = cbgu_IntMap__init_(51, 0.800000011920929);
                cbgu_IntMap_put($this.$uniforms, $program, var$3);
            }
            $loc = $this.$nextUniformId;
            $this.$nextUniformId = $loc + 1 | 0;
            cbgu_IntMap_put(var$3, $loc, otji_JSWrapper_wrap($name));
        }
        $program = $this.$gl.getError();
        if (!$program)
            return $loc;
        $name = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$8);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        $loc = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($loc);
        var$4.$characters = var$9;
        jl_System_fastArraycopy(var$5, 0, var$9, 0, $loc);
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $name.$message = var$4;
        $rt_throw($name);
    }
    function cgxgbt_TeaGL20Debug_glLinkProgram($this, $program) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$gl;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2.linkProgram(var$3);
        $program = $this.$gl.getError();
        if (!$program)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$7);
        var$8 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glShaderSource($this, $shader, $source) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$3 = $this.$gl;
        var$4 = $this.$shaders;
        if (!$shader)
            var$4 = !var$4.$hasZeroValue0 ? null : var$4.$zeroValue;
        else {
            var$5 = var$4.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt($shader), Long_create(2135587861, 2654435769)), var$4.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == $shader)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$4.$mask1;
                }
            }
            var$4 = var$6 < 0 ? null : var$4.$valueTable0.data[var$6];
        }
        otji_JSWrapper_$callClinit();
        var$4 = var$4 === null ? null : var$4[$rt_jso_marker] === true ? var$4 : var$4.$js;
        var$3.shaderSource(var$4, $rt_ustr($source));
        $shader = $this.$gl.getError();
        if (!$shader)
            return;
        $source = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($shader, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $shader, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $shader = var$3.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $shader, var$8);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$6);
        var$4.$characters = var$9;
        jl_System_fastArraycopy(var$5, 0, var$9, 0, var$6);
        $source.$suppressionEnabled = 1;
        $source.$writableStackTrace = 1;
        $source.$message = var$4;
        $rt_throw($source);
    }
    function cgxgbt_TeaGL20Debug_glTexParameteri($this, $target, $pname, $param) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$4 = $this.$gl;
        var$5 = $param;
        var$4.texParameterf($target, $pname, var$5);
        $target = $this.$gl.getError();
        if (!$target)
            return;
        var$4 = new cbgu_GdxRuntimeException;
        var$6 = otci_IntegerUtil_toUnsignedLogRadixString($target, 4);
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $target, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(61));
        $target = var$7.$length;
        if (var$6 === null)
            var$6 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$7, $target, var$6);
        var$8 = new jl_String;
        var$9 = var$7.$buffer;
        $pname = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($pname);
        var$8.$characters = var$10;
        jl_System_fastArraycopy(var$9, 0, var$10, 0, $pname);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$8;
        $rt_throw(var$4);
    }
    function cgxgbt_TeaGL20Debug_glUniform1i($this, $location, $x) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        var$3 = $this.$uniforms;
        var$4 = $this.$currProgram;
        if (!var$4)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$5 = var$3.$keyTable1;
            var$6 = Long_lo(Long_shru(Long_mul(Long_fromInt(var$4), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$7 = var$5.data[var$6];
                    if (!var$7) {
                        var$6 =  -(var$6 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$7 == var$4)
                        break;
                    var$6 = (var$6 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$6 < 0 ? null : var$3.$valueTable0.data[var$6];
        }
        var$3 = var$3;
        if (!$location)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$5 = var$3.$keyTable1;
            var$4 = Long_lo(Long_shru(Long_mul(Long_fromInt($location), Long_create(2135587861, 2654435769)), var$3.$shift1));
            b: {
                while (true) {
                    var$7 = var$5.data[var$4];
                    if (!var$7) {
                        var$4 =  -(var$4 + 1 | 0) | 0;
                        break b;
                    }
                    if (var$7 == $location)
                        break;
                    var$4 = (var$4 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$4 < 0 ? null : var$3.$valueTable0.data[var$4];
        }
        otji_JSWrapper_$callClinit();
        var$8 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $this.$gl.uniform1i(var$8, $x);
        $location = $this.$gl.getError();
        if (!$location)
            return;
        var$3 = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($location, 4);
        var$9 = new jl_StringBuilder;
        var$9.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $location, 10);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(61));
        $location = var$9.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$9, $location, var$8);
        var$10 = new jl_String;
        var$5 = var$9.$buffer;
        $x = var$9.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray($x);
        var$10.$characters = var$11;
        jl_System_fastArraycopy(var$5, 0, var$11, 0, $x);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$10;
        $rt_throw(var$3);
    }
    function cgxgbt_TeaGL20Debug_glUseProgram($this, $program) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$currProgram = $program;
        var$2 = $this.$gl;
        var$3 = $this.$programs;
        if (!$program)
            var$3 = !var$3.$hasZeroValue0 ? null : var$3.$zeroValue;
        else {
            var$4 = var$3.$keyTable1;
            var$5 = Long_lo(Long_shru(Long_mul(Long_fromInt($program), Long_create(2135587861, 2654435769)), var$3.$shift1));
            a: {
                while (true) {
                    var$6 = var$4.data[var$5];
                    if (!var$6) {
                        var$5 =  -(var$5 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$6 == $program)
                        break;
                    var$5 = (var$5 + 1 | 0) & var$3.$mask1;
                }
            }
            var$3 = var$5 < 0 ? null : var$3.$valueTable0.data[var$5];
        }
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        var$2.useProgram(var$3);
        $program = $this.$gl.getError();
        if (!$program)
            return;
        var$2 = new cbgu_GdxRuntimeException;
        var$7 = otci_IntegerUtil_toUnsignedLogRadixString($program, 4);
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $program, 10);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(61));
        $program = var$3.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, $program, var$7);
        var$8 = new jl_String;
        var$4 = var$3.$buffer;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$5);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$4, 0, var$9, 0, var$5);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$8;
        $rt_throw(var$2);
    }
    function cgxgbt_TeaGL20Debug_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0) {
        var var$7, var$8, var$9, var$10, var$11, var$12;
        $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
        $indx = $this.$gl.getError();
        if (!$indx)
            return;
        var$7 = new cbgu_GdxRuntimeException;
        var$8 = otci_IntegerUtil_toUnsignedLogRadixString($indx, 4);
        var$9 = new jl_StringBuilder;
        var$9.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(156));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $indx, 10);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(61));
        $indx = var$9.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$9, $indx, var$8);
        var$10 = new jl_String;
        var$11 = var$9.$buffer;
        $size = var$9.$length;
        jl_String_$callClinit();
        var$12 = $rt_createCharArray($size);
        var$10.$characters = var$12;
        jl_System_fastArraycopy(var$11, 0, var$12, 0, $size);
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$10;
        $rt_throw(var$7);
    }
    function cbgu_IntMap() {
        var a = this; jl_Object.call(a);
        a.$size5 = 0;
        a.$keyTable1 = null;
        a.$valueTable0 = null;
        a.$zeroValue = null;
        a.$hasZeroValue0 = 0;
        a.$loadFactor1 = 0.0;
        a.$threshold1 = 0;
        a.$shift1 = 0;
        a.$mask1 = 0;
    }
    function cbgu_IntMap__init_(var_0, var_1) {
        var var_2 = new cbgu_IntMap();
        cbgu_IntMap__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbgu_IntMap__init_0($this, $initialCapacity, $loadFactor) {
        var $tableSize, var$4, var$5, var$6, var$7, var$8;
        if ($loadFactor > 0.0 && $loadFactor < 1.0) {
            $this.$loadFactor1 = $loadFactor;
            $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
            $this.$threshold1 = $tableSize * $loadFactor | 0;
            $initialCapacity = $tableSize - 1 | 0;
            $this.$mask1 = $initialCapacity;
            $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
            $this.$keyTable1 = $rt_createIntArray($tableSize);
            $this.$valueTable0 = $rt_createArray(jl_Object, $tableSize);
            return;
        }
        var$4 = new jl_IllegalArgumentException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(62));
        jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $loadFactor);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $tableSize = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($tableSize);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $tableSize);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$6;
        $rt_throw(var$4);
    }
    function cbgu_IntMap_put($this, $key, $value) {
        var $oldValue, var$4, $i, var$6, var$7;
        if (!$key) {
            $oldValue = $this.$zeroValue;
            $this.$zeroValue = $value;
            if (!$this.$hasZeroValue0) {
                $this.$hasZeroValue0 = 1;
                $this.$size5 = $this.$size5 + 1 | 0;
            }
            return $oldValue;
        }
        var$4 = $this.$keyTable1;
        $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), $this.$shift1));
        a: {
            while (true) {
                var$6 = var$4.data;
                var$7 = var$6[$i];
                if (!var$7) {
                    $i =  -($i + 1 | 0) | 0;
                    break a;
                }
                if (var$7 == $key)
                    break;
                $i = ($i + 1 | 0) & $this.$mask1;
            }
        }
        if ($i >= 0) {
            var$4 = $this.$valueTable0.data;
            $oldValue = var$4[$i];
            var$4[$i] = $value;
            return $oldValue;
        }
        $i =  -($i + 1 | 0) | 0;
        var$6[$i] = $key;
        $this.$valueTable0.data[$i] = $value;
        $key = $this.$size5 + 1 | 0;
        $this.$size5 = $key;
        if ($key >= $this.$threshold1)
            cbgu_IntMap_resize($this, var$6.length << 1);
        return null;
    }
    function cbgu_IntMap_get($this, $key) {
        var var$2, $i, var$4;
        if (!$key)
            return !$this.$hasZeroValue0 ? null : $this.$zeroValue;
        var$2 = $this.$keyTable1;
        $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), $this.$shift1));
        a: {
            while (true) {
                var$4 = var$2.data[$i];
                if (!var$4) {
                    $i =  -($i + 1 | 0) | 0;
                    break a;
                }
                if (var$4 == $key)
                    break;
                $i = ($i + 1 | 0) & $this.$mask1;
            }
        }
        return $i < 0 ? null : $this.$valueTable0.data[$i];
    }
    function cbgu_IntMap_remove($this, $key) {
        var $oldValue, $keyTable, var$4, var$5, $i, var$7, $placement, $valueTable, $oldValue_0, $mask, $next, var$13;
        if (!$key) {
            if (!$this.$hasZeroValue0)
                return null;
            $this.$hasZeroValue0 = 0;
            $oldValue = $this.$zeroValue;
            $this.$zeroValue = null;
            $this.$size5 = $this.$size5 - 1 | 0;
            return $oldValue;
        }
        $keyTable = $this.$keyTable1;
        var$4 = Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769));
        var$5 = $this.$shift1;
        $i = Long_lo(Long_shru(var$4, var$5));
        a: {
            while (true) {
                var$7 = $keyTable.data;
                $placement = var$7[$i];
                if (!$placement) {
                    $i =  -($i + 1 | 0) | 0;
                    break a;
                }
                if ($placement == $key)
                    break;
                $i = ($i + 1 | 0) & $this.$mask1;
            }
        }
        if ($i < 0)
            return null;
        $valueTable = $this.$valueTable0.data;
        $oldValue_0 = $valueTable[$i];
        $mask = $this.$mask1;
        $next = ($i + 1 | 0) & $mask;
        while (true) {
            var$13 = var$7[$next];
            if (!var$13)
                break;
            $placement = Long_lo(Long_shru(Long_mul(Long_fromInt(var$13), Long_create(2135587861, 2654435769)), var$5));
            if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
                var$7[$i] = var$13;
                $valueTable[$i] = $valueTable[$next];
                $i = $next;
            }
            $next = ($next + 1 | 0) & $mask;
        }
        var$7[$i] = 0;
        $valueTable[$i] = null;
        $this.$size5 = $this.$size5 - 1 | 0;
        return $oldValue_0;
    }
    function cbgu_IntMap_containsValue($this, $value, $identity) {
        var $valueTable, $keyTable, $i, var$6;
        a: {
            $valueTable = $this.$valueTable0;
            if ($value === null) {
                if ($this.$hasZeroValue0 && $this.$zeroValue === null)
                    return 1;
                $valueTable = $valueTable.data;
                $keyTable = $this.$keyTable1;
                $i = $valueTable.length - 1 | 0;
                while (true) {
                    if ($i < 0)
                        break a;
                    if ($keyTable.data[$i] && $valueTable[$i] === null)
                        break;
                    $i = $i + (-1) | 0;
                }
                return 1;
            }
            if ($identity) {
                if ($value === $this.$zeroValue)
                    return 1;
                $valueTable = $valueTable.data;
                $i = $valueTable.length - 1 | 0;
                while (true) {
                    if ($i < 0)
                        break a;
                    if ($valueTable[$i] === $value)
                        break;
                    $i = $i + (-1) | 0;
                }
                return 1;
            }
            if ($this.$hasZeroValue0) {
                var$6 = $this.$zeroValue;
                if ($value === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value5 == $value.$value5 ? 1 : 0)
                    return 1;
            }
            $valueTable = $valueTable.data;
            $i = $valueTable.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                var$6 = $valueTable[$i];
                if ($value === var$6 ? 1 : var$6 instanceof jl_Integer && var$6.$value5 == $value.$value5 ? 1 : 0)
                    return 1;
                $i = $i + (-1) | 0;
            }
        }
        return 0;
    }
    function cbgu_IntMap_resize($this, $newSize) {
        var $oldCapacity, var$3, $oldKeyTable, $oldValueTable, var$6, var$7, var$8, $i, $key, var$11;
        a: {
            $oldCapacity = $this.$keyTable1.data.length;
            $this.$threshold1 = $newSize * $this.$loadFactor1 | 0;
            var$3 = $newSize - 1 | 0;
            $this.$mask1 = var$3;
            var$3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
            $this.$shift1 = var$3;
            $oldKeyTable = $this.$keyTable1;
            $oldValueTable = $this.$valueTable0;
            var$6 = $rt_createIntArray($newSize);
            $this.$keyTable1 = var$6;
            var$7 = $rt_createArray(jl_Object, $newSize);
            $this.$valueTable0 = var$7;
            if ($this.$size5 > 0) {
                var$8 = var$7.data;
                var$7 = var$6.data;
                $i = 0;
                while (true) {
                    if ($i >= $oldCapacity)
                        break a;
                    $key = $oldKeyTable.data[$i];
                    if ($key) {
                        var$11 = $oldValueTable.data[$i];
                        $newSize = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), var$3));
                        while (var$7[$newSize]) {
                            $newSize = ($newSize + 1 | 0) & $this.$mask1;
                        }
                        var$7[$newSize] = $key;
                        var$8[$newSize] = var$11;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    function cbgu_IntSet() {
        var a = this; jl_Object.call(a);
        a.$size4 = 0;
        a.$keyTable0 = null;
        a.$hasZeroValue = 0;
        a.$loadFactor2 = 0.0;
        a.$threshold2 = 0;
        a.$shift0 = 0;
        a.$mask0 = 0;
    }
    function cbgu_IntSet__init_(var_0, var_1) {
        var var_2 = new cbgu_IntSet();
        cbgu_IntSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbgu_IntSet__init_0($this, $initialCapacity, $loadFactor) {
        var $tableSize, var$4, var$5, var$6, var$7, var$8;
        if ($loadFactor > 0.0 && $loadFactor < 1.0) {
            $this.$loadFactor2 = $loadFactor;
            $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
            $this.$threshold2 = $tableSize * $loadFactor | 0;
            $initialCapacity = $tableSize - 1 | 0;
            $this.$mask0 = $initialCapacity;
            $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
            $this.$keyTable0 = $rt_createIntArray($tableSize);
            return;
        }
        var$4 = new jl_IllegalArgumentException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(62));
        jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $loadFactor);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $tableSize = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($tableSize);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $tableSize);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$6;
        $rt_throw(var$4);
    }
    function cbgu_IntSet_add($this, $key) {
        var var$2, $i, var$4, var$5;
        if (!$key) {
            if ($this.$hasZeroValue)
                return 0;
            $this.$hasZeroValue = 1;
            $this.$size4 = $this.$size4 + 1 | 0;
            return 1;
        }
        var$2 = $this.$keyTable0;
        $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), $this.$shift0));
        a: {
            while (true) {
                var$4 = var$2.data;
                var$5 = var$4[$i];
                if (!var$5) {
                    $i =  -($i + 1 | 0) | 0;
                    break a;
                }
                if (var$5 == $key)
                    break;
                $i = ($i + 1 | 0) & $this.$mask0;
            }
        }
        if ($i >= 0)
            return 0;
        var$4[ -($i + 1 | 0) | 0] = $key;
        $key = $this.$size4 + 1 | 0;
        $this.$size4 = $key;
        if ($key >= $this.$threshold2)
            cbgu_IntSet_resize($this, var$4.length << 1);
        return 1;
    }
    function cbgu_IntSet_remove($this, $key) {
        var $keyTable, var$3, var$4, $i, var$6, $mask, $next, $placement;
        if (!$key) {
            if (!$this.$hasZeroValue)
                return 0;
            $this.$hasZeroValue = 0;
            $this.$size4 = $this.$size4 - 1 | 0;
            return 1;
        }
        $keyTable = $this.$keyTable0;
        var$3 = Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769));
        var$4 = $this.$shift0;
        $i = Long_lo(Long_shru(var$3, var$4));
        a: {
            while (true) {
                var$6 = $keyTable.data;
                $mask = var$6[$i];
                if (!$mask) {
                    $i =  -($i + 1 | 0) | 0;
                    break a;
                }
                if ($mask == $key)
                    break;
                $i = ($i + 1 | 0) & $this.$mask0;
            }
        }
        if ($i < 0)
            return 0;
        $mask = $this.$mask0;
        $next = ($i + 1 | 0) & $mask;
        while (true) {
            $key = var$6[$next];
            if (!$key)
                break;
            $placement = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), var$4));
            if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
                var$6[$i] = $key;
                $i = $next;
            }
            $next = ($next + 1 | 0) & $mask;
        }
        var$6[$i] = 0;
        $this.$size4 = $this.$size4 - 1 | 0;
        return 1;
    }
    function cbgu_IntSet_resize($this, $newSize) {
        var $oldCapacity, var$3, $oldKeyTable, var$5, $i, $key, var$8;
        a: {
            $oldCapacity = $this.$keyTable0.data.length;
            $this.$threshold2 = $newSize * $this.$loadFactor2 | 0;
            var$3 = $newSize - 1 | 0;
            $this.$mask0 = var$3;
            var$3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
            $this.$shift0 = var$3;
            $oldKeyTable = $this.$keyTable0;
            var$5 = $rt_createIntArray($newSize);
            $this.$keyTable0 = var$5;
            if ($this.$size4 > 0) {
                var$5 = var$5.data;
                $i = 0;
                while (true) {
                    if ($i >= $oldCapacity)
                        break a;
                    $key = $oldKeyTable.data[$i];
                    if ($key) {
                        var$8 = Long_lo(Long_shru(Long_mul(Long_fromInt($key), Long_create(2135587861, 2654435769)), var$3));
                        while (var$5[var$8]) {
                            var$8 = (var$8 + 1 | 0) & $this.$mask0;
                        }
                        var$5[var$8] = $key;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    var cgxgbt_TeaPermissions$TeaPermissionResult = $rt_classWithoutFields(0);
    function cgxgbt_TeaClipboard$ClipboardWriteHandler() {
        jl_Object.call(this);
        this.$this$012 = null;
    }
    function cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0(var$0) {
        var var$1;
        var$1 = var$0.$this$012;
        var$1.$hasWritePermissions = 1;
        cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
    }
    function cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1(var$0) {
        var var$1;
        var$1 = var$0.$this$012;
        var$1.$hasWritePermissions = 1;
        cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr(var$1.$content));
    }
    function cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2(var$0) {
        var$0.$this$012.$hasWritePermissions = 0;
    }
    var cbg_LifecycleListener = $rt_classWithoutFields(0);
    function cgxgbtw_WebAudioAPIManager() {
        var a = this; jl_Object.call(a);
        a.$audioContext = null;
        a.$globalVolumeNode = null;
        a.$audioControlGraphPool = null;
    }
    var cgxgbtw_WebAudioAPIManager_soundUnlocked = 0;
    function cgxgbtw_WebAudioAPIManager__init_() {
        var var_0 = new cgxgbtw_WebAudioAPIManager();
        cgxgbtw_WebAudioAPIManager__init_0(var_0);
        return var_0;
    }
    function cgxgbtw_WebAudioAPIManager__init_0($this) {
        var $unlockFunction, var$2, var$3, var$4, var$5, var$6, var$7, $$je;
        $unlockFunction = cgxgbtw_WebAudioAPIManager_createAudioContextJSNI$js_body$_6();
        $this.$audioContext = $unlockFunction;
        var$2 = cgxgbtw_WebAudioAPIManager_createGlobalVolumeNodeJSNI$js_body$_7($unlockFunction);
        $this.$globalVolumeNode = var$2;
        $unlockFunction = new cgxgbtw_AudioControlGraphPool;
        var$3 = $this.$audioContext;
        var$4 = new cbgu_Array;
        var$4.$ordered = 0;
        var$4.$items = $rt_createArray(jl_Object, 16);
        $unlockFunction.$freeObjects = var$4;
        $unlockFunction.$max = 2147483647;
        $unlockFunction.$audioContext0 = var$3;
        $unlockFunction.$destinationNode = var$2;
        $this.$audioControlGraphPool = $unlockFunction;
        $unlockFunction = cbg_Gdx_app.$lifecycleListeners;
        jl_Object_monitorEnterSync($unlockFunction);
        a: {
            try {
                cbgu_Array_add($unlockFunction, $this);
                jl_Object_monitorExitSync($unlockFunction);
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$3 = $$je;

            }
            jl_Object_monitorExitSync($unlockFunction);
            $rt_throw(var$3);
        }
        if ($this.$audioContext.state !== 'running' ? 1 : 0) {
            $unlockFunction = new cgxgbtw_WebAudioAPIManager$1;
            $unlockFunction.$this$015 = $this;
            cgxgbtw_WebAudioAPIManager_hookUpSoundUnlockers$js_body$_1($this.$audioContext, otji_JS_function($unlockFunction, "unlockFunction"));
        } else {
            if (!cgxgbtw_WebAudioAPIManager_soundUnlocked && cbg_Gdx_app.$logLevel >= 2) {
                if (jl_System_outCache === null) {
                    var$4 = new ji_PrintStream;
                    var$4.$out = otcic_StdoutOutputStream_INSTANCE;
                    var$2 = new jl_StringBuilder;
                    jl_Object__init_0(var$2);
                    var$2.$buffer = $rt_createCharArray(16);
                    var$4.$sb = var$2;
                    var$4.$buffer1 = $rt_createCharArray(32);
                    var$4.$autoFlush = 0;
                    jnci_UTF8Charset_$callClinit();
                    var$4.$charset = jnci_UTF8Charset_INSTANCE;
                    jl_System_outCache = var$4;
                }
                var$4 = jl_System_outCache;
                var$2 = new jl_StringBuilder;
                var$2.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert(var$2, var$2.$length, jl_String_toString($rt_s(171)));
                jl_StringBuilder_insert(var$2, var$2.$length, jl_String_toString($rt_s(75)));
                jl_StringBuilder_insert(var$2, var$2.$length, jl_String_toString($rt_s(172)));
                $unlockFunction = new jl_String;
                var$5 = var$2.$buffer;
                var$6 = var$2.$length;
                var$7 = $rt_createCharArray(var$6);
                $unlockFunction.$characters = var$7;
                jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
                var$3 = var$4.$sb;
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $unlockFunction);
                var$6 = var$3.$length;
                jl_AbstractStringBuilder_insertSpace(var$3, var$6, var$6 + 1 | 0);
                var$3.$buffer.data[var$6] = 10;
                ji_PrintStream_printSB(var$4);
            }
            cgxgbtw_WebAudioAPIManager_soundUnlocked = 1;
        }
    }
    function cgxgbtw_WebAudioAPIManager_pause($this) {
        $this.$globalVolumeNode.disconnect($this.$audioContext.destination);
    }
    function cgxgbtw_WebAudioAPIManager_resume($this) {
        $this.$globalVolumeNode.connect($this.$audioContext.destination);
    }
    function cgxgbtw_WebAudioAPIManager_hookUpSoundUnlockers$js_body$_1(var$1, var$2) {
        var userInputEventNames = ['click', 'contextmenu', 'auxclick', 'dblclick', 'mousedown', 'mouseup', 'pointerup', 'touchend', 'keydown', 'keyup', 'touchstart'];
        var unlock = function(e) {
            var$1.resume();
            var$2();
            userInputEventNames.forEach(function(eventName) {
                $rt_globals.document.removeEventListener(eventName, unlock);
            });
        };
        userInputEventNames.forEach(function(eventName) {
            $rt_globals.document.addEventListener(eventName, unlock);
        });
    }
    function cgxgbtw_WebAudioAPIManager_createAudioContextJSNI$js_body$_6() {
        var AudioContext = $rt_globals.window.AudioContext || $rt_globals.window.webkitAudioContext;
        if (AudioContext) {
            var audioContext = new AudioContext();
            return audioContext;
        }
        return null;
    }
    function cgxgbtw_WebAudioAPIManager_createGlobalVolumeNodeJSNI$js_body$_7(var$1) {
        var gainNode = null;
        if (var$1.createGain) gainNode = var$1.createGain(); else gainNode = var$1.createGainNode();
        gainNode.gain.value = 1.0;
        gainNode.connect(var$1.destination);
        return gainNode;
    }
    function cgxgbt_TeaApplication$3() {
        cgxgbt_AssetLoaderListener.call(this);
        this.$this$0 = null;
    }
    var jl_CloneNotSupportedException = $rt_classWithoutFields(jl_Exception);
    function cbgu_ReflectionPool() {
        cbgu_Pool.call(this);
        this.$constructor = null;
    }
    function cbgu_ReflectionPool_newObject($this) {
        var var$1, $ex, var$3, var$4, var$5, var$6, var$7, var$8, $$je;
        a: {
            try {
                var$1 = cbgur_Constructor_newInstance($this.$constructor, null);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $ex = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$1;
        }
        var$3 = new cbgu_GdxRuntimeException;
        var$1 = new jl_StringBuilder;
        var$1.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(44));
        var$4 = $this.$constructor.$constructor0.$declaringClass;
        if (var$4.$name === null)
            var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
        var$5 = var$4.$name;
        jl_AbstractStringBuilder_insert(var$1, var$1.$length, var$5);
        var$5 = new jl_String;
        var$6 = var$1.$buffer;
        var$7 = var$1.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$5;
        var$3.$cause = $ex;
        $rt_throw(var$3);
    }
    var jl_StackTraceElement = $rt_classWithoutFields();
    var ju_Arrays = $rt_classWithoutFields();
    function ju_Arrays_binarySearch($a, $fromIndex, $toIndex, $key) {
        var var$5, $u, var$7, $i, $e;
        if ($fromIndex > $toIndex) {
            var$5 = new jl_IllegalArgumentException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            $rt_throw(var$5);
        }
        $u = $toIndex - 1 | 0;
        while (true) {
            if ($fromIndex > $u)
                return ( -$fromIndex | 0) - 1 | 0;
            var$7 = $a.data;
            $i = ($fromIndex + $u | 0) / 2 | 0;
            $e = var$7[$i];
            if ($e == $key)
                break;
            if ($key >= $e)
                $fromIndex = $i + 1 | 0;
            else
                $u = $i - 1 | 0;
        }
        return $i;
    }
    function ju_Arrays_binarySearch0($a, $fromIndex, $toIndex, $key) {
        var var$5, $u, var$7, $i;
        if ($fromIndex > $toIndex) {
            var$5 = new jl_IllegalArgumentException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            $rt_throw(var$5);
        }
        $u = $toIndex - 1 | 0;
        while (true) {
            if ($fromIndex > $u)
                return ( -$fromIndex | 0) - 1 | 0;
            var$7 = $a.data;
            $i = ($fromIndex + $u | 0) / 2 | 0;
            $toIndex = $rt_compare(var$7[$i], $key);
            if (!$toIndex)
                break;
            if ($toIndex <= 0)
                $fromIndex = $i + 1 | 0;
            else
                $u = $i - 1 | 0;
        }
        return $i;
    }
    function ju_Arrays_equals($a, $a2) {
        var var$3, var$4, var$5, var$6, var$7;
        if ($a === $a2)
            return 1;
        if ($a !== null && $a2 !== null) {
            $a = $a.data;
            $a2 = $a2.data;
            var$3 = $a.length;
            if (var$3 == $a2.length) {
                var$4 = 0;
                a: {
                    while (true) {
                        if (var$4 >= var$3) {
                            var$4 = (-1);
                            break a;
                        }
                        var$5 = var$4 + 0 | 0;
                        var$6 = $a[var$5];
                        var$7 = $a2[var$5];
                        if (!(var$6 === var$7 ? 1 : var$6 === null ? (var$7 !== null ? 0 : 1) : var$6 !== var$7 ? 0 : 1))
                            break;
                        var$4 = var$4 + 1 | 0;
                    }
                }
                return var$4 >= 0 ? 0 : 1;
            }
        }
        return 0;
    }
    var otjde_EventTarget = $rt_classWithoutFields(0);
    var otjde_FocusEventTarget = $rt_classWithoutFields(0);
    var otjde_MouseEventTarget = $rt_classWithoutFields(0);
    var otjde_KeyboardEventTarget = $rt_classWithoutFields(0);
    var otjde_LoadEventTarget = $rt_classWithoutFields(0);
    var otjde_GamepadEventTarget = $rt_classWithoutFields(0);
    var otjb_WindowEventTarget = $rt_classWithoutFields(0);
    var otjb_StorageProvider = $rt_classWithoutFields(0);
    var otjc_JSArrayReader = $rt_classWithoutFields(0);
    var otjb_Window = $rt_classWithoutFields();
    function otjb_Window_get$exported$0(var$0, var$1) {
        var$1 = var$0.$get1(var$1);
        otji_JSWrapper_$callClinit();
        return var$1 === null ? null : var$1 instanceof $rt_objcls() && var$1 instanceof otji_JSWrapper ? (var$1[$rt_jso_marker] === true ? var$1 : var$1.$js) : var$1;
    }
    function otjb_Window_addEventListener$exported$1(var$0, var$1, var$2) {
        var$0.$addEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
    }
    function otjb_Window_removeEventListener$exported$2(var$0, var$1, var$2) {
        var$0.$removeEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
    }
    function otjb_Window_removeEventListener$exported$3(var$0, var$1, var$2, var$3) {
        var$0.$removeEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
    }
    function otjb_Window_dispatchEvent$exported$4(var$0, var$1) {
        return !!var$0.$dispatchEvent(var$1);
    }
    function otjb_Window_getLength$exported$5(var$0) {
        return var$0.$getLength0();
    }
    function otjb_Window_addEventListener$exported$6(var$0, var$1, var$2, var$3) {
        var$0.$addEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
    }
    var ju_Dictionary = $rt_classWithoutFields();
    function ju_Hashtable() {
        var a = this; ju_Dictionary.call(a);
        a.$elementCount0 = 0;
        a.$elementData0 = null;
        a.$loadFactor3 = 0.0;
        a.$threshold3 = 0;
        a.$firstSlot = 0;
        a.$lastSlot = 0;
        a.$modCount0 = 0;
    }
    var ju_Hashtable_EMPTY_ENUMERATION = null;
    var ju_Hashtable_EMPTY_ITERATOR = null;
    function ju_Hashtable__init_0(var_0) {
        var var_1 = new ju_Hashtable();
        ju_Hashtable__init_(var_1, var_0);
        return var_1;
    }
    function ju_Hashtable__init_($this, $capacity) {
        var var$2, var$3, var$4;
        $this.$lastSlot = (-1);
        if ($capacity < 0) {
            var$2 = new jl_IllegalArgumentException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        $this.$elementCount0 = 0;
        if (!$capacity)
            $capacity = 1;
        var$3 = $rt_createArray(ju_Hashtable$Entry, $capacity);
        var$4 = var$3.data;
        $this.$elementData0 = var$3;
        $capacity = var$4.length;
        $this.$firstSlot = $capacity;
        $this.$loadFactor3 = 0.75;
        $this.$threshold3 = $capacity * 0.75 | 0;
    }
    function ju_Hashtable_put($this, $key, $value) {
        var var$3, $hash, var$5, var$6, var$7, $index, $entry, var$10, $result;
        jl_Object_monitorEnterSync($this);
        try {
            if ($key !== null && $value !== null) {
                a: {
                    if (!$key.$hashCode0) {
                        var$3 = $key.$characters.data;
                        $hash = var$3.length;
                        var$5 = 0;
                        while (true) {
                            if (var$5 >= $hash)
                                break a;
                            var$6 = var$3[var$5];
                            $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + var$6 | 0;
                            var$5 = var$5 + 1 | 0;
                        }
                    }
                }
                var$7 = $key.$hashCode0 & 2147483647;
                var$3 = $this.$elementData0.data;
                $index = var$7 % var$3.length | 0;
                $entry = var$3[$index];
                while ($entry !== null) {
                    b: {
                        $hash = $entry.$hashcode;
                        if (!$key.$hashCode0) {
                            var$3 = $key.$characters.data;
                            var$5 = var$3.length;
                            var$6 = 0;
                            while (true) {
                                if (var$6 >= var$5)
                                    break b;
                                var$10 = var$3[var$6];
                                $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + var$10 | 0;
                                var$6 = var$6 + 1 | 0;
                            }
                        }
                    }
                    if ($hash == $key.$hashCode0 && $entry.$key.$equals($key) ? 1 : 0)
                        break;
                    $entry = $entry.$next1;
                }
                if ($entry !== null) {
                    $result = $entry.$value4;
                    $entry.$value4 = $value;
                    return $result;
                }
                $this.$modCount0 = $this.$modCount0 + 1 | 0;
                $hash = $this.$elementCount0 + 1 | 0;
                $this.$elementCount0 = $hash;
                if ($hash > $this.$threshold3) {
                    ju_Hashtable_rehash($this);
                    $index = var$7 % $this.$elementData0.data.length | 0;
                }
                if ($index < $this.$firstSlot)
                    $this.$firstSlot = $index;
                if ($index > $this.$lastSlot)
                    $this.$lastSlot = $index;
                c: {
                    $result = new ju_Hashtable$Entry;
                    $result.$key = $key;
                    $result.$value4 = $value;
                    if (!$key.$hashCode0) {
                        var$3 = $key.$characters.data;
                        $hash = var$3.length;
                        var$5 = 0;
                        while (true) {
                            if (var$5 >= $hash)
                                break c;
                            var$6 = var$3[var$5];
                            $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + var$6 | 0;
                            var$5 = var$5 + 1 | 0;
                        }
                    }
                }
                $result.$hashcode = $key.$hashCode0;
                var$3 = $this.$elementData0.data;
                $result.$next1 = var$3[$index];
                var$3[$index] = $result;
                return null;
            }
            $key = new jl_NullPointerException;
            $key.$suppressionEnabled = 1;
            $key.$writableStackTrace = 1;
            $rt_throw($key);
        } finally {
            jl_Object_monitorExitSync($this);
        }
    }
    function ju_Hashtable_rehash($this) {
        var $length, $newLast, $newData, var$4, $i, var$6, $entry, $index, $entry_0;
        $length = ($this.$elementData0.data.length << 1) + 1 | 0;
        if (!$length)
            $length = 1;
        $newLast = (-1);
        $newData = $rt_createArray(ju_Hashtable$Entry, $length);
        var$4 = $newData.data;
        $i = $this.$lastSlot + 1 | 0;
        var$6 = $length;
        while (true) {
            $i = $i + (-1) | 0;
            if ($i < $this.$firstSlot)
                break;
            $entry = $this.$elementData0.data[$i];
            while ($entry !== null) {
                $index = ($entry.$key.$hashCode() & 2147483647) % $length | 0;
                if ($index < var$6)
                    var$6 = $index;
                if ($index > $newLast)
                    $newLast = $index;
                $entry_0 = $entry.$next1;
                $entry.$next1 = var$4[$index];
                var$4[$index] = $entry;
                $entry = $entry_0;
            }
        }
        $this.$firstSlot = var$6;
        $this.$lastSlot = $newLast;
        $this.$elementData0 = $newData;
        $this.$threshold3 = var$4.length * $this.$loadFactor3 | 0;
    }
    function ju_Hashtable__clinit_() {
        ju_Hashtable_EMPTY_ENUMERATION = new ju_Hashtable$1;
        ju_Hashtable_EMPTY_ITERATOR = new ju_Hashtable$2;
    }
    function ju_Properties() {
        ju_Hashtable.call(this);
        this.$defaults = null;
    }
    var cgxgbtdt_TypedArrays = $rt_classWithoutFields();
    var cbggg_GLVersion$Type = $rt_classWithoutFields(jl_Enum);
    var cbggg_GLVersion$Type_OpenGL = null;
    var cbggg_GLVersion$Type_GLES = null;
    var cbggg_GLVersion$Type_WebGL = null;
    var cbggg_GLVersion$Type_NONE = null;
    var cbggg_GLVersion$Type_$VALUES = null;
    function cbggg_GLVersion$Type_$callClinit() {
        cbggg_GLVersion$Type_$callClinit = $rt_eraseClinit(cbggg_GLVersion$Type);
        cbggg_GLVersion$Type__clinit_();
    }
    function cbggg_GLVersion$Type__clinit_() {
        var var$1, var$2, var$3, var$4;
        var$1 = new cbggg_GLVersion$Type;
        cbggg_GLVersion$Type_$callClinit();
        var$1.$name0 = $rt_s(173);
        var$1.$ordinal = 0;
        cbggg_GLVersion$Type_OpenGL = var$1;
        var$2 = new cbggg_GLVersion$Type;
        var$2.$name0 = $rt_s(174);
        var$2.$ordinal = 1;
        cbggg_GLVersion$Type_GLES = var$2;
        var$3 = new cbggg_GLVersion$Type;
        var$3.$name0 = $rt_s(169);
        var$3.$ordinal = 2;
        cbggg_GLVersion$Type_WebGL = var$3;
        var$4 = new cbggg_GLVersion$Type;
        var$4.$name0 = $rt_s(175);
        var$4.$ordinal = 3;
        cbggg_GLVersion$Type_NONE = var$4;
        cbggg_GLVersion$Type_$VALUES = $rt_createArrayFromData(cbggg_GLVersion$Type, [var$1, var$2, var$3, var$4]);
    }
    var otjt_ArrayBufferView = $rt_classWithoutFields();
    var otjt_Float32Array = $rt_classWithoutFields(otjt_ArrayBufferView);
    var otjt_Int32Array = $rt_classWithoutFields(otjt_ArrayBufferView);
    var otjt_Int16Array = $rt_classWithoutFields(otjt_ArrayBufferView);
    var otjt_Int8Array = $rt_classWithoutFields(otjt_ArrayBufferView);
    var otjt_Uint8Array = $rt_classWithoutFields(otjt_ArrayBufferView);
    function cgxgbtp_Preloader$1() {
        jl_Object.call(this);
        this.$this$06 = null;
    }
    function cgxgbtp_Preloader$1_handleEvent$exported$0(var$0, var$1) {
        var$1.preventDefault();
    }
    function cgxgbtp_Preloader$2() {
        jl_Object.call(this);
        this.$this$07 = null;
    }
    function cgxgbtp_Preloader$2_handleEvent$exported$0(var$0, var$1) {
        var$1.preventDefault();
    }
    function cgxgbtp_Preloader$3() {
        var a = this; jl_Object.call(a);
        a.$val$teaApplication = null;
        a.$val$config = null;
        a.$this$08 = null;
    }
    function cgxgbtp_Preloader$3_handleEvent($this, $event) {
        var $files, $length, $droppedFiles, $i, $itemWrapper, $name, var$8, var$9, var$10, var$11, var$12, $type, $fileReader;
        a: {
            $event.preventDefault();
            $files = $event.dataTransfer.files;
            $length = $files.length;
            if ($length > 0) {
                $droppedFiles = new cbgu_Array;
                $droppedFiles.$ordered = 1;
                $droppedFiles.$items = $rt_createArray(jl_Object, 16);
                $i = 0;
                while (true) {
                    if ($i >= $length)
                        break a;
                    $itemWrapper = $files[$i];
                    $name = $rt_str($itemWrapper.name);
                    var$8 = jl_String_lastIndexOf($name, 46, $name.$characters.data.length - 1 | 0);
                    if (var$8 == (-1))
                        $event = $rt_s(45);
                    else {
                        var$9 = var$8 + 1 | 0;
                        var$10 = $name.$characters;
                        var$8 = var$10.data.length;
                        var$11 = $rt_compare(var$9, var$8);
                        if (var$11 > 0) {
                            $event = new jl_IndexOutOfBoundsException;
                            $event.$suppressionEnabled = 1;
                            $event.$writableStackTrace = 1;
                            jl_Throwable_fillInStackTrace($event);
                            $rt_throw($event);
                        }
                        if (!var$11)
                            $event = jl_String_EMPTY;
                        else if (!var$9 && var$8 == var$8)
                            $event = $name;
                        else {
                            $event = new jl_String;
                            var$8 = var$8 - var$9 | 0;
                            var$12 = $rt_createCharArray(var$8);
                            $event.$characters = var$12;
                            jl_System_fastArraycopy(var$10, var$9, var$12, 0, var$8);
                        }
                    }
                    $event = jl_String_toLowerCase($event);
                    if (cgxgbtp_AssetFilter_isImage($event)) {
                        cgxgbtp_AssetType_$callClinit();
                        $type = cgxgbtp_AssetType_Image;
                    } else if (!jl_String_equals($event, $rt_s(176)) && !jl_String_equals($event, $rt_s(177)) && !jl_String_equals($event, $rt_s(178)) ? 0 : 1) {
                        cgxgbtp_AssetType_$callClinit();
                        $type = cgxgbtp_AssetType_Audio;
                    } else if (!cgxgbtp_AssetFilter_isText($event)) {
                        cgxgbtp_AssetType_$callClinit();
                        $type = cgxgbtp_AssetType_Binary;
                    } else {
                        cgxgbtp_AssetType_$callClinit();
                        $type = cgxgbtp_AssetType_Text;
                    }
                    $fileReader = new $rt_globals.FileReader();
                    $event = new cgxgbtp_Preloader$3$1;
                    $event.$this$1 = $this;
                    $event.$val$type0 = $type;
                    $event.$val$name = $name;
                    $event.$val$droppedFiles = $droppedFiles;
                    $event.$val$length = $length;
                    $fileReader.addEventListener("load", otji_JS_function($event, "handleEvent"));
                    cgxgbtp_AssetType_$callClinit();
                    if ($type !== cgxgbtp_AssetType_Binary && $type !== cgxgbtp_AssetType_Audio) {
                        if ($type === cgxgbtp_AssetType_Image)
                            $fileReader.readAsDataURL($itemWrapper);
                        else if ($type === cgxgbtp_AssetType_Text)
                            $fileReader.readAsText($itemWrapper);
                    } else
                        $fileReader.readAsArrayBuffer($itemWrapper);
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    function cgxgbtp_Preloader$3_handleEvent$exported$0(var$0, var$1) {
        cgxgbtp_Preloader$3_handleEvent(var$0, var$1);
    }
    function cgxgbtw_AudioControlGraphPool() {
        var a = this; cbgu_Pool.call(a);
        a.$audioContext0 = null;
        a.$destinationNode = null;
    }
    var cgxgbtw_WebAudioAPIManager$UnlockFunction = $rt_classWithoutFields(0);
    function cgxgbtw_WebAudioAPIManager$1() {
        jl_Object.call(this);
        this.$this$015 = null;
    }
    function cgxgbtw_WebAudioAPIManager$1_unlockFunction$exported$0(var$0) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        if (!cgxgbtw_WebAudioAPIManager_soundUnlocked && cbg_Gdx_app.$logLevel >= 2) {
            if (jl_System_outCache === null) {
                var$1 = new ji_PrintStream;
                var$2 = otcic_StdoutOutputStream_INSTANCE;
                jl_Object__init_0(var$1);
                var$1.$out = var$2;
                var$2 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_2(var$2, 16);
                var$1.$sb = var$2;
                var$1.$buffer1 = $rt_createCharArray(32);
                var$1.$autoFlush = 0;
                jnci_UTF8Charset_$callClinit();
                var$1.$charset = jnci_UTF8Charset_INSTANCE;
                jl_System_outCache = var$1;
            }
            var$1 = jl_System_outCache;
            var$2 = new jl_StringBuilder;
            var$2.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert5(var$2, var$2.$length, $rt_s(171));
            jl_AbstractStringBuilder_insert5(var$2, var$2.$length, $rt_s(75));
            jl_AbstractStringBuilder_insert5(var$2, var$2.$length, $rt_s(172));
            var$3 = new jl_String;
            var$4 = var$2.$buffer;
            var$5 = var$2.$length;
            jl_String_$callClinit();
            var$6 = $rt_createCharArray(var$5);
            var$3.$characters = var$6;
            jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
            var$7 = var$1.$sb;
            jl_StringBuilder_insert2(var$7, var$7.$length, var$3);
            jl_StringBuilder_insert1(var$7, var$7.$length, 10);
            ji_PrintStream_printSB(var$1);
        }
        cgxgbtw_WebAudioAPIManager_soundUnlocked = 1;
    }
    var jl_Thread$UncaughtExceptionHandler = $rt_classWithoutFields(0);
    var jl_DefaultUncaughtExceptionHandler = $rt_classWithoutFields();
    function jl_DefaultUncaughtExceptionHandler_uncaughtException($this, $t, $e) {
        var var$3;
        if (jl_System_errCache === null) {
            var$3 = new ji_PrintStream;
            var$3.$out = otcic_StderrOutputStream_INSTANCE;
            $t = new jl_StringBuilder;
            $t.$buffer = $rt_createCharArray(16);
            var$3.$sb = $t;
            var$3.$buffer1 = $rt_createCharArray(32);
            var$3.$autoFlush = 0;
            jnci_UTF8Charset_$callClinit();
            var$3.$charset = jnci_UTF8Charset_INSTANCE;
            jl_System_errCache = var$3;
        }
        jl_Throwable_printStackTrace0($e, jl_System_errCache);
    }
    var cgxgbtdt_Uint32ArrayWrapper = $rt_classWithoutFields(otjt_ArrayBufferView);
    function jur_Pattern() {
        var a = this; jl_Object.call(a);
        a.$lexemes = null;
        a.$flags = 0;
        a.$backRefs = null;
        a.$needsBackRefReplacement = 0;
        a.$globalGroupIndex = 0;
        a.$compCount = 0;
        a.$consCount = 0;
        a.$start3 = null;
    }
    function jur_Pattern_matcher($this, $input) {
        return jur_Matcher__init_($this, $input);
    }
    function jur_Pattern_split($this, $inputSeq, $limit) {
        var $res, $mat, $index, $curPos, var$7, var$8, var$9, var$10, var$11, var$12;
        $res = new ju_ArrayList;
        $res.$array4 = $rt_createArray(jl_Object, 10);
        $mat = jur_Matcher__init_($this, $inputSeq);
        $index = 0;
        $curPos = 0;
        if (!$inputSeq.$characters.data.length) {
            var$7 = $rt_createArray(jl_String, 1);
            var$7.data[0] = $rt_s(45);
            return var$7;
        }
        a: {
            while (true) {
                if (!jur_Matcher_find($mat))
                    break a;
                var$8 = $index + 1 | 0;
                if (var$8 >= $limit && $limit > 0)
                    break a;
                var$9 = $mat.$matchResult;
                if (!var$9.$valid1) {
                    $inputSeq = new jl_IllegalStateException;
                    $inputSeq.$suppressionEnabled = 1;
                    $inputSeq.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace($inputSeq);
                    $rt_throw($inputSeq);
                }
                if (0 >= var$9.$groupCount) {
                    $inputSeq = new jl_IndexOutOfBoundsException;
                    jl_String_$callClinit();
                    $res = new jl_StringBuilder;
                    jl_Object__init_0($res);
                    $res.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert0($res, $res.$length, 0, 10);
                    $mat = new jl_String;
                    var$7 = $res.$buffer;
                    var$10 = $res.$length;
                    var$11 = $rt_createCharArray(var$10);
                    $mat.$characters = var$11;
                    jl_System_fastArraycopy(var$7, 0, var$11, 0, var$10);
                    $inputSeq.$suppressionEnabled = 1;
                    $inputSeq.$writableStackTrace = 1;
                    $inputSeq.$message = $mat;
                    $rt_throw($inputSeq);
                }
                $index = var$9.$groupBounds.data[0];
                var$10 = $rt_compare($curPos, $index);
                if (var$10 > 0) {
                    $inputSeq = new jl_IndexOutOfBoundsException;
                    $inputSeq.$suppressionEnabled = 1;
                    $inputSeq.$writableStackTrace = 1;
                    $rt_throw($inputSeq);
                }
                if (!var$10) {
                    jl_String_$callClinit();
                    var$9 = jl_String_EMPTY;
                } else if (!$curPos && $index == $inputSeq.$characters.data.length)
                    var$9 = $inputSeq;
                else {
                    var$9 = new jl_String;
                    var$7 = $inputSeq.$characters;
                    var$10 = $index - $curPos | 0;
                    jl_String_$callClinit();
                    var$11 = $rt_createCharArray(var$10);
                    var$9.$characters = var$11;
                    jl_System_fastArraycopy(var$7, $curPos, var$11, 0, var$10);
                }
                ju_ArrayList_ensureCapacity($res, $res.$size6 + 1 | 0);
                var$7 = $res.$array4.data;
                var$10 = $res.$size6;
                $res.$size6 = var$10 + 1 | 0;
                var$7[var$10] = var$9;
                $res.$modCount1 = $res.$modCount1 + 1 | 0;
                var$9 = $mat.$matchResult;
                if (!var$9.$valid1)
                    break;
                if (0 >= var$9.$groupCount) {
                    $inputSeq = new jl_IndexOutOfBoundsException;
                    jl_String_$callClinit();
                    $res = new jl_StringBuilder;
                    jl_Object__init_0($res);
                    $res.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_append($res, 0);
                    jl_RuntimeException__init_2($inputSeq, jl_StringBuilder_toString($res));
                    $rt_throw($inputSeq);
                }
                $curPos = var$9.$groupBounds.data[1];
                $index = var$8;
            }
            $inputSeq = new jl_IllegalStateException;
            $inputSeq.$suppressionEnabled = 1;
            $inputSeq.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($inputSeq);
            $rt_throw($inputSeq);
        }
        var$11 = $inputSeq.$characters;
        var$12 = var$11.data.length;
        var$10 = $rt_compare($curPos, var$12);
        if (var$10 > 0) {
            $inputSeq = new jl_IndexOutOfBoundsException;
            $inputSeq.$suppressionEnabled = 1;
            $inputSeq.$writableStackTrace = 1;
            $rt_throw($inputSeq);
        }
        if (!var$10) {
            jl_String_$callClinit();
            $inputSeq = jl_String_EMPTY;
        } else if (!(!$curPos && var$12 == var$12)) {
            $inputSeq = new jl_String;
            var$10 = var$12 - $curPos | 0;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray(var$10);
            $inputSeq.$characters = var$7;
            jl_System_fastArraycopy(var$11, $curPos, var$7, 0, var$10);
        }
        b: {
            ju_ArrayList_ensureCapacity($res, $res.$size6 + 1 | 0);
            var$7 = $res.$array4.data;
            var$12 = $res.$size6;
            $res.$size6 = var$12 + 1 | 0;
            var$7[var$12] = $inputSeq;
            $res.$modCount1 = $res.$modCount1 + 1 | 0;
            var$10 = $index + 1 | 0;
            if (!$limit)
                while (true) {
                    var$10 = var$10 + (-1) | 0;
                    if (var$10 < 0)
                        break;
                    if (jl_String_length(ju_ArrayList_get($res, var$10)))
                        break b;
                    ju_ArrayList_remove($res, var$10);
                }
        }
        if (var$10 < 0)
            var$10 = 0;
        return ju_AbstractCollection_toArray($res, $rt_createArray(jl_String, var$10));
    }
    function jur_Pattern_pattern($this) {
        return $this.$lexemes.$orig;
    }
    function jur_Pattern_compile($pattern, $flags) {
        var var$3;
        if ($pattern === null) {
            $pattern = new jl_NullPointerException;
            $pattern.$suppressionEnabled = 1;
            $pattern.$writableStackTrace = 1;
            $pattern.$message = $rt_s(179);
            $rt_throw($pattern);
        }
        if ($flags && ($flags | 255) != 255) {
            $pattern = new jl_IllegalArgumentException;
            $pattern.$suppressionEnabled = 1;
            $pattern.$writableStackTrace = 1;
            $pattern.$message = $rt_s(45);
            $rt_throw($pattern);
        }
        jur_AbstractSet_counter = 1;
        var$3 = new jur_Pattern;
        var$3.$backRefs = $rt_createArray(jur_FSet, 10);
        var$3.$globalGroupIndex = (-1);
        var$3.$compCount = (-1);
        var$3.$consCount = (-1);
        return jur_Pattern_compileImpl(var$3, $pattern, $flags);
    }
    function jur_Pattern_compileImpl($this, $pattern, $flags) {
        var var$3, var$4, var$5;
        $this.$lexemes = jur_Lexer__init_($pattern, $flags);
        $this.$flags = $flags;
        $pattern = jur_Pattern_processExpression($this, (-1), $flags, null);
        $this.$start3 = $pattern;
        var$3 = $this.$lexemes;
        if (!var$3.$ch && !var$3.$lookAhead && var$3.$index == var$3.$patternFullLength && !(var$3.$curST === null ? 0 : 1) ? 1 : 0) {
            if ($this.$needsBackRefReplacement)
                $pattern.$processSecondPass();
            return $this;
        }
        $pattern = new jur_PatternSyntaxException;
        var$4 = var$3.$orig;
        var$5 = var$3.$curToc;
        $pattern.$suppressionEnabled = 1;
        $pattern.$writableStackTrace = 1;
        $pattern.$index0 = (-1);
        $pattern.$desc = $rt_s(45);
        $pattern.$pattern = var$4;
        $pattern.$index0 = var$5;
        $rt_throw($pattern);
    }
    function jur_Pattern_processAlternations($this, $last) {
        var $auxRange, var$3, var$4, var$5, $rangeSet, var$7;
        $auxRange = new jur_CharClass;
        var$3 = $this.$flags;
        var$4 = (var$3 & 2) != 2 ? 0 : 1;
        var$5 = (var$3 & 64) != 64 ? 0 : 1;
        jur_AbstractCharClass_$callClinit();
        $rangeSet = new ju_BitSet;
        $rangeSet.$data2 = $rt_createIntArray(64);
        $auxRange.$lowHighSurrogates = $rangeSet;
        $rangeSet = new ju_BitSet;
        $rangeSet.$data2 = $rt_createIntArray(2);
        $auxRange.$bits = $rangeSet;
        $auxRange.$ci = var$4;
        $auxRange.$uci = var$5;
        while (true) {
            var$7 = $this.$lexemes;
            var$3 = var$7.$ch;
            if (!var$3 && !var$7.$lookAhead && var$7.$index == var$7.$patternFullLength && !(var$7.$curST === null ? 0 : 1) ? 1 : 0)
                break;
            var$5 = !var$3 && !var$7.$lookAhead && var$7.$index == var$7.$patternFullLength && !(var$7.$curST === null ? 0 : 1) ? 1 : 0;
            if (!(!var$5 && !(var$7.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0))
                break;
            var$5 = var$7.$lookAhead;
            if (var$5 && var$5 != (-536870788) && var$5 != (-536870871))
                break;
            jur_Lexer_movePointer(var$7);
            jur_CharClass_add($auxRange, var$7.$lookBack);
            $rangeSet = $this.$lexemes;
            if ($rangeSet.$ch != (-536870788))
                continue;
            jur_Lexer_movePointer($rangeSet);
        }
        $rangeSet = jur_Pattern_processRangeSet($this, $auxRange);
        $rangeSet.$setNext($last);
        return $rangeSet;
    }
    function jur_Pattern_processExpression($this, $ch, $newFlags, $last) {
        var $children, $saveFlags, $saveChangedFlags, $fSet, var$8, var$9, var$10, $child;
        $children = new ju_ArrayList;
        $children.$array4 = $rt_createArray(jl_Object, 10);
        $saveFlags = $this.$flags;
        $saveChangedFlags = 0;
        if ($newFlags != $saveFlags)
            $this.$flags = $newFlags;
        a: {
            switch ($ch) {
                case -1073741784:
                    $fSet = new jur_NonCapFSet;
                    $newFlags = $this.$consCount + 1 | 0;
                    $this.$consCount = $newFlags;
                    jur_FSet_$callClinit();
                    var$8 = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = var$8 + 1 | 0;
                    $last = new jl_AbstractStringBuilder;
                    $last.$buffer = $rt_createCharArray(20);
                    $fSet.$index1 = (jl_AbstractStringBuilder_insert0($last, $last.$length, var$8, 10)).$toString();
                    $fSet.$groupIndex = $newFlags;
                    break a;
                case -536870872:
                case -268435416:
                    break;
                case -134217688:
                case -67108824:
                    $fSet = new jur_BehindFSet;
                    var$9 = $this.$consCount + 1 | 0;
                    $this.$consCount = var$9;
                    jur_FSet_$callClinit();
                    $newFlags = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $newFlags + 1 | 0;
                    $last = new jl_AbstractStringBuilder;
                    $last.$buffer = $rt_createCharArray(20);
                    $fSet.$index1 = (jl_AbstractStringBuilder_insert0($last, $last.$length, $newFlags, 10)).$toString();
                    $fSet.$groupIndex = var$9;
                    break a;
                case -33554392:
                    $fSet = new jur_AtomicFSet;
                    var$10 = $this.$consCount + 1 | 0;
                    $this.$consCount = var$10;
                    jur_FSet_$callClinit();
                    $newFlags = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $newFlags + 1 | 0;
                    $last = new jl_AbstractStringBuilder;
                    $last.$buffer = $rt_createCharArray(20);
                    $fSet.$index1 = (jl_AbstractStringBuilder_insert0($last, $last.$length, $newFlags, 10)).$toString();
                    $fSet.$groupIndex = var$10;
                    break a;
                default:
                    $newFlags = $this.$globalGroupIndex + 1 | 0;
                    $this.$globalGroupIndex = $newFlags;
                    if ($last === null) {
                        $fSet = jur_FinalSet__init_();
                        $saveChangedFlags = 1;
                    } else {
                        $fSet = new jur_FSet;
                        jur_FSet_$callClinit();
                        jur_AbstractSet__init_($fSet);
                        $fSet.$groupIndex = $newFlags;
                    }
                    var$8 = $this.$globalGroupIndex;
                    if (var$8 <= (-1))
                        break a;
                    if (var$8 >= 10)
                        break a;
                    $this.$backRefs.data[var$8] = $fSet;
                    break a;
            }
            $fSet = new jur_AheadFSet;
            jur_FSet_$callClinit();
            var$8 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$8 + 1 | 0;
            $last = new jl_AbstractStringBuilder;
            $last.$buffer = $rt_createCharArray(20);
            $fSet.$index1 = (jl_AbstractStringBuilder_insert0($last, $last.$length, var$8, 10)).$toString();
            $fSet.$groupIndex = (-1);
        }
        while (true) {
            if (jur_Lexer_isLetter($this.$lexemes) && jur_Lexer_lookAhead($this.$lexemes) == (-536870788))
                $child = jur_Pattern_processAlternations($this, $fSet);
            else if ($this.$lexemes.$ch == (-536870788)) {
                $child = jur_EmptySet__init_($fSet);
                jur_Lexer_next($this.$lexemes);
            } else {
                $child = jur_Pattern_processSubExpression($this, $fSet);
                if (jur_Lexer_peek($this.$lexemes) == (-536870788))
                    jur_Lexer_next($this.$lexemes);
            }
            if ($child !== null)
                ju_ArrayList_add($children, $child);
            if (jur_Lexer_isEmpty($this.$lexemes))
                break;
            if (jur_Lexer_peek($this.$lexemes) == (-536870871))
                break;
        }
        if (jur_Lexer_back($this.$lexemes) == (-536870788))
            ju_ArrayList_add($children, jur_EmptySet__init_($fSet));
        if ($this.$flags != $saveFlags && !$saveChangedFlags) {
            $this.$flags = $saveFlags;
            jur_Lexer_restoreFlags($this.$lexemes, $saveFlags);
        }
        switch ($ch) {
            case -1073741784:
                break;
            case -536870872:
                return jur_PositiveLookAhead__init_($children, $fSet);
            case -268435416:
                return jur_NegativeLookAhead__init_($children, $fSet);
            case -134217688:
                return jur_PositiveLookBehind__init_($children, $fSet);
            case -67108824:
                return jur_NegativeLookBehind__init_($children, $fSet);
            case -33554392:
                return jur_AtomicJointSet__init_($children, $fSet);
            default:
                switch (ju_ArrayList_size($children)) {
                    case 0:
                        break;
                    case 1:
                        return jur_SingleSet__init_(ju_ArrayList_get($children, 0), $fSet);
                    default:
                        return jur_JointSet__init_($children, $fSet);
                }
                return jur_EmptySet__init_($fSet);
        }
        return jur_NonCapJointSet__init_($children, $fSet);
    }
    function jur_Pattern_processSequence($this) {
        var $substring, var$2, var$3, var$4, var$5, $ch, var$7, var$8, var$9, var$10;
        $substring = new jl_StringBuffer;
        $substring.$buffer = $rt_createCharArray(16);
        while (true) {
            var$2 = $this.$lexemes;
            var$3 = var$2.$ch;
            if (!var$3 && !var$2.$lookAhead && var$2.$index == var$2.$patternFullLength && !(var$2.$curST === null ? 0 : 1) ? 1 : 0)
                break;
            var$4 = !var$3 && !var$2.$lookAhead && var$2.$index == var$2.$patternFullLength && !(var$2.$curST === null ? 0 : 1) ? 1 : 0;
            if (!(!var$4 && !(var$2.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0))
                break;
            if (var$3 <= 56319 && var$3 >= 55296 ? 1 : 0)
                break;
            if (var$3 <= 57343 && var$3 >= 56320 ? 1 : 0)
                break;
            var$5 = var$2.$lookAheadST;
            var$4 = var$5 === null ? 0 : 1;
            if (!(!var$4 && !var$2.$lookAhead)) {
                var$4 = var$5 === null ? 0 : 1;
                if (!(!var$4 && (var$2.$lookAhead < 0 ? 0 : 1))) {
                    var$3 = var$2.$lookAhead;
                    if (var$3 != (-536870871) && (var$3 & (-2147418113)) != (-2147483608) && var$3 != (-536870788) && var$3 != (-536870876))
                        break;
                }
            }
            jur_Lexer_movePointer(var$2);
            $ch = var$2.$lookBack;
            var$4 = $rt_compare($ch, 65536);
            if (!(var$4 >= 0 && $ch <= 1114111 ? 1 : 0)) {
                var$4 = $ch & 65535;
                var$7 = $substring.$length;
                jl_AbstractStringBuilder_insertSpace($substring, var$7, var$7 + 1 | 0);
                $substring.$buffer.data[var$7] = var$4;
            } else {
                if (var$4 < 0) {
                    var$8 = $rt_createCharArray(1);
                    var$8.data[0] = $ch & 65535;
                } else
                    var$8 = $rt_createCharArrayFromData([(55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535, (56320 | $ch & 1023) & 65535]);
                var$8 = var$8.data;
                var$4 = 0;
                var$7 = var$8.length;
                var$3 = $substring.$length;
                jl_AbstractStringBuilder_insertSpace($substring, var$3, var$3 + var$7 | 0);
                var$9 = var$7 + var$4 | 0;
                while (var$4 < var$9) {
                    var$10 = $substring.$buffer.data;
                    $ch = var$3 + 1 | 0;
                    var$7 = var$4 + 1 | 0;
                    var$10[var$3] = var$8[var$4];
                    var$3 = $ch;
                    var$4 = var$7;
                }
            }
        }
        var$7 = $this.$flags;
        if (!((var$7 & 2) != 2 ? 0 : 1))
            return jur_SequenceSet__init_($substring);
        if (!((var$7 & 64) != 64 ? 0 : 1))
            return jur_CISequenceSet__init_($substring);
        var$2 = new jur_UCISequenceSet;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$2.$index1 = jl_Integer_toString(var$4, 10);
        var$2.$charCount = 1;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        var$4 = 0;
        while (var$4 < jl_StringBuffer_length($substring)) {
            jl_StringBuilder_append2(var$5, jl_Character_toLowerCase(jl_Character_toUpperCase(jl_StringBuffer_charAt($substring, var$4))));
            var$4 = var$4 + 1 | 0;
        }
        var$2.$string1 = jl_StringBuilder_toString(var$5);
        var$2.$charCount = jl_StringBuilder_length(var$5);
        return var$2;
    }
    function jur_Pattern_processDecomposedChar($this) {
        var $codePoints, $curSymb, $curSymbIndex, var$4, var$5, var$6, $codePointsHangul, $readCodePoints, var$9;
        $codePoints = $rt_createIntArray(4);
        $curSymb = (-1);
        $curSymbIndex = (-1);
        var$4 = $this.$lexemes;
        var$5 = var$4.$ch;
        if (!(!var$5 && !var$4.$lookAhead && var$4.$index == var$4.$patternFullLength && !(var$4.$curST === null ? 0 : 1) ? 1 : 0)) {
            var$6 = !var$5 && !var$4.$lookAhead && var$4.$index == var$4.$patternFullLength && !(var$4.$curST === null ? 0 : 1) ? 1 : 0;
            if (!var$6 && !(var$4.$curST === null ? 0 : 1) && (var$5 < 0 ? 0 : 1) ? 1 : 0) {
                $codePointsHangul = $codePoints.data;
                jur_Lexer_movePointer(var$4);
                $curSymb = var$4.$lookBack;
                $codePointsHangul[0] = $curSymb;
                $curSymbIndex = $curSymb - 4352 | 0;
            }
        }
        if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
            $codePointsHangul = $rt_createCharArray(3);
            $codePoints = $codePointsHangul.data;
            $codePoints[0] = $curSymb & 65535;
            var$4 = $this.$lexemes;
            $readCodePoints = var$4.$ch;
            $curSymb = $readCodePoints - 4449 | 0;
            if ($curSymb >= 0 && $curSymb < 21) {
                $codePoints[1] = $readCodePoints & 65535;
                jur_Lexer_movePointer(var$4);
                var$4 = $this.$lexemes;
                $readCodePoints = var$4.$ch;
                $curSymbIndex = $readCodePoints - 4519 | 0;
                if ($curSymbIndex >= 0 && $curSymbIndex < 28) {
                    $codePoints[2] = $readCodePoints & 65535;
                    jur_Lexer_movePointer(var$4);
                    var$4 = new jur_HangulDecomposedCharSet;
                    $curSymb = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $curSymb + 1 | 0;
                    var$9 = new jl_AbstractStringBuilder;
                    var$9.$buffer = $rt_createCharArray(20);
                    var$4.$index1 = (jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $curSymb, 10)).$toString();
                    var$4.$decomposedChar = $codePointsHangul;
                    var$4.$decomposedCharLength = 3;
                    return var$4;
                }
                var$9 = new jur_HangulDecomposedCharSet;
                $readCodePoints = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $readCodePoints + 1 | 0;
                var$4 = new jl_AbstractStringBuilder;
                var$4.$buffer = $rt_createCharArray(20);
                var$9.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $readCodePoints, 10)).$toString();
                var$9.$decomposedChar = $codePointsHangul;
                var$9.$decomposedCharLength = 2;
                return var$9;
            }
            $curSymb = $this.$flags;
            if (!(($curSymb & 2) != 2 ? 0 : 1)) {
                var$4 = new jur_CharSet;
                $readCodePoints = $codePoints[0];
                $curSymb = jur_AbstractSet_counter;
                jur_AbstractSet_counter = $curSymb + 1 | 0;
                var$4.$index1 = jl_Integer_toString($curSymb, 10);
                var$4.$charCount = 1;
                var$4.$ch0 = $readCodePoints;
                return var$4;
            }
            if (($curSymb & 64) != 64 ? 0 : 1)
                return jur_UCICharSet__init_($codePoints[0]);
            return jur_CICharSet__init_($codePoints[0]);
        }
        $codePointsHangul = $codePoints.data;
        $curSymb = 1;
        while ($curSymb < 4 && !jur_Lexer_isEmpty($this.$lexemes) && jur_Lexer_isLetter($this.$lexemes)) {
            $readCodePoints = $curSymb + 1 | 0;
            var$4 = $this.$lexemes;
            jur_Lexer_movePointer(var$4);
            $codePointsHangul[$curSymb] = var$4.$lookBack;
            $curSymb = $readCodePoints;
        }
        if ($curSymb == 1 && !jur_Lexer_hasSingleCodepointDecomposition($codePointsHangul[0]))
            return jur_Pattern_processCharSet($this, $codePointsHangul[0]);
        if (!jur_Pattern_hasFlag($this, 2))
            return jur_DecomposedCharSet__init_($codePoints, $curSymb);
        if (jur_Pattern_hasFlag($this, 64))
            return jur_UCIDecomposedCharSet__init_($codePoints, $curSymb);
        return jur_CIDecomposedCharSet__init_($codePoints, $curSymb);
    }
    function jur_Pattern_processSubExpression($this, $last) {
        var $term, var$3, var$4, $cur, $next, var$7;
        $term = $this.$lexemes;
        var$3 = $term.$ch;
        var$4 = !var$3 && !$term.$lookAhead && $term.$index == $term.$patternFullLength && !($term.$curST === null ? 0 : 1) ? 1 : 0;
        var$4 = !var$4 && !($term.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0;
        if (var$4 && !($term.$lookAheadST === null ? 0 : 1) && ($term.$lookAhead < 0 ? 0 : 1)) {
            if (!(($this.$flags & 128) != 128 ? 0 : 1)) {
                var$4 = var$3 <= 56319 && var$3 >= 55296 ? 1 : 0;
                $cur = !var$4 && !jur_Lexer_isLowSurrogate($term) ? jur_Pattern_processSequence($this) : jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
            } else {
                $cur = jur_Pattern_processDecomposedChar($this);
                $next = $this.$lexemes;
                var$3 = $next.$ch;
                if (!(!var$3 && !$next.$lookAhead && $next.$index == $next.$patternFullLength && !($next.$curST === null ? 0 : 1) ? 1 : 0) && !(var$3 == (-536870871) && !($last instanceof jur_FinalSet)) && var$3 != (-536870788)) {
                    var$4 = !var$3 && !$next.$lookAhead && $next.$index == $next.$patternFullLength && !($next.$curST === null ? 0 : 1) ? 1 : 0;
                    if (!(!var$4 && !($next.$curST === null ? 0 : 1) && (var$3 < 0 ? 0 : 1) ? 1 : 0))
                        $cur = jur_Pattern_processQuantifier($this, $last, $cur);
                }
            }
        } else if (var$3 != (-536870871))
            $cur = jur_Pattern_processQuantifier($this, $last, jur_Pattern_processTerminal($this, $last));
        else {
            if ($last instanceof jur_FinalSet)
                $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Lexer_toString($term), jur_Lexer_getIndex($this.$lexemes)));
            $cur = new jur_EmptySet;
            jur_LeafSet__init_($cur, $last);
            $cur.$charCount = 0;
        }
        $term = $this.$lexemes;
        var$4 = $term.$ch;
        var$7 = !var$4 && !$term.$lookAhead && $term.$index == $term.$patternFullLength && !($term.$curST === null ? 0 : 1) ? 1 : 0;
        if (!var$7 && !(var$4 == (-536870871) && !($last instanceof jur_FinalSet)) && var$4 != (-536870788)) {
            $next = jur_Pattern_processSubExpression($this, $last);
            if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
                $term = $cur;
                if (!$next.$first1($term.$innerSet))
                    $cur = jur_UnifiedQuantifierSet__init_($term);
            }
            if (($next.$getType0() & 65535) != 43)
                $cur.$setNext($next);
            else
                $cur.$setNext($next.$innerSet);
        } else {
            if ($cur === null)
                return null;
            $cur.$setNext($last);
        }
        if (($cur.$getType0() & 65535) != 43)
            return $cur;
        return $cur.$innerSet;
    }
    function jur_Pattern_processQuantifier($this, $last, $term) {
        var $q, $quant, var$5, $leaf, $q_0, var$8;
        $q = $this.$lexemes;
        $quant = $q.$ch;
        if ($term !== null && !($term instanceof jur_LeafSet)) {
            switch ($quant) {
                case -2147483606:
                    jur_Lexer_movePointer($q);
                    $q = new jur_PossessiveGroupQuantifierSet;
                    var$5 = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = var$5 + 1 | 0;
                    $leaf = new jl_AbstractStringBuilder;
                    $leaf.$buffer = $rt_createCharArray(20);
                    $q.$index1 = (jl_AbstractStringBuilder_insert0($leaf, $leaf.$length, var$5, 10)).$toString();
                    $q.$next3 = $last;
                    $q.$innerSet = $term;
                    $q.$type3 = $quant;
                    jur_FSet_$callClinit();
                    $term.$setNext(jur_FSet_posFSet);
                    return $q;
                case -2147483605:
                    jur_Lexer_movePointer($q);
                    $q = new jur_PosPlusGroupQuantifierSet;
                    $quant = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $quant + 1 | 0;
                    $leaf = new jl_AbstractStringBuilder;
                    $leaf.$buffer = $rt_createCharArray(20);
                    $q.$index1 = (jl_AbstractStringBuilder_insert0($leaf, $leaf.$length, $quant, 10)).$toString();
                    $q.$next3 = $last;
                    $q.$innerSet = $term;
                    $q.$type3 = (-2147483606);
                    jur_FSet_$callClinit();
                    $term.$setNext(jur_FSet_posFSet);
                    return $q;
                case -2147483585:
                    jur_Lexer_movePointer($q);
                    $q = new jur_PosAltGroupQuantifierSet;
                    $quant = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = $quant + 1 | 0;
                    $leaf = new jl_AbstractStringBuilder;
                    jl_Object__init_0($leaf);
                    $leaf.$buffer = $rt_createCharArray(20);
                    $q.$index1 = (jl_AbstractStringBuilder_insert0($leaf, $leaf.$length, $quant, 10)).$toString();
                    $q.$next3 = $last;
                    $q.$innerSet = $term;
                    $q.$type3 = (-536870849);
                    jur_FSet_$callClinit();
                    $term.$setNext(jur_FSet_posFSet);
                    return $q;
                case -2147483525:
                    $leaf = new jur_PosCompositeGroupQuantifierSet;
                    $q_0 = $q.$curST;
                    jur_Lexer_movePointer($q);
                    $q = $q_0;
                    var$5 = $this.$compCount + 1 | 0;
                    $this.$compCount = var$5;
                    var$8 = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = var$8 + 1 | 0;
                    $leaf.$index1 = jl_Integer_toString(var$8, 10);
                    $leaf.$next3 = $last;
                    $leaf.$innerSet = $term;
                    $leaf.$type3 = (-536870849);
                    $leaf.$quantifier = $q;
                    $leaf.$setCounter = var$5;
                    jur_FSet_$callClinit();
                    $term.$setNext(jur_FSet_posFSet);
                    return $leaf;
                case -1073741782:
                case -1073741781:
                    jur_Lexer_movePointer($q);
                    $q = new jur_ReluctantGroupQuantifierSet;
                    jur_QuantifierSet__init_($q, $term, $last, $quant);
                    $term.$setNext($q);
                    return $q;
                case -1073741761:
                    jur_Lexer_movePointer($q);
                    $q = jur_RelAltGroupQuantifierSet__init_($term, $last, (-536870849));
                    $term.$setNext($last);
                    return $q;
                case -1073741701:
                    $q_0 = new jur_RelCompositeGroupQuantifierSet;
                    $q = jur_Lexer_nextSpecial($q);
                    $quant = $this.$compCount + 1 | 0;
                    $this.$compCount = $quant;
                    jur_RelCompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), $quant);
                    $term.$setNext($q_0);
                    return $q_0;
                case -536870870:
                case -536870869:
                    jur_Lexer_next($q);
                    $q = $term.$getType0() != (-2147483602) ? jur_GroupQuantifierSet__init_($term, $last, $quant) : jur_Pattern_hasFlag($this, 32) ? jur_DotAllQuantifierSet__init_($term, $last, $quant) : jur_DotQuantifierSet__init_($term, $last, $quant, jur_AbstractLineTerminator_getInstance($this.$flags));
                    $term.$setNext($q);
                    return $q;
                case -536870849:
                    jur_Lexer_next($q);
                    $q = jur_AltGroupQuantifierSet__init_($term, $last, (-536870849));
                    $term.$setNext($last);
                    return $q;
                case -536870789:
                    $q_0 = new jur_CompositeGroupQuantifierSet;
                    $q = jur_Lexer_nextSpecial($q);
                    $quant = $this.$compCount + 1 | 0;
                    $this.$compCount = $quant;
                    jur_CompositeGroupQuantifierSet__init_($q_0, $q, $term, $last, (-536870849), $quant);
                    $term.$setNext($q_0);
                    return $q_0;
                default:
            }
            return $term;
        }
        $leaf = null;
        if ($term !== null)
            $leaf = $term;
        switch ($quant) {
            case -2147483606:
            case -2147483605:
                jur_Lexer_next($q);
                $q = jur_PossessiveQuantifierSet__init_($leaf, $last, $quant);
                jur_AbstractSet_setNext($leaf, $q);
                return $q;
            case -2147483585:
                jur_Lexer_next($q);
                return jur_PossessiveAltQuantifierSet__init_($leaf, $last, (-2147483585));
            case -2147483525:
                return jur_PossessiveCompositeQuantifierSet__init_(jur_Lexer_nextSpecial($q), $leaf, $last, (-2147483525));
            case -1073741782:
            case -1073741781:
                jur_Lexer_next($q);
                $q = jur_ReluctantQuantifierSet__init_($leaf, $last, $quant);
                jur_AbstractSet_setNext($leaf, $q);
                return $q;
            case -1073741761:
                jur_Lexer_next($q);
                return jur_ReluctantAltQuantifierSet__init_($leaf, $last, (-1073741761));
            case -1073741701:
                return jur_ReluctantCompositeQuantifierSet__init_(jur_Lexer_nextSpecial($q), $leaf, $last, (-1073741701));
            case -536870870:
            case -536870869:
                jur_Lexer_next($q);
                $q = jur_LeafQuantifierSet__init_($leaf, $last, $quant);
                jur_AbstractSet_setNext($leaf, $q);
                return $q;
            case -536870849:
                jur_Lexer_next($q);
                return jur_AltQuantifierSet__init_($leaf, $last, (-536870849));
            case -536870789:
                return jur_CompositeQuantifierSet__init_(jur_Lexer_nextSpecial($q), $leaf, $last, (-536870789));
            default:
        }
        return $term;
    }
    function jur_Pattern_processTerminal($this, $last) {
        var $term, var$3, $cc, $ch, $newFlags, var$7, $negative, $number;
        $term = null;
        var$3 = $last instanceof jur_FinalSet;
        while (true) {
            a: {
                $cc = $this.$lexemes;
                $ch = $cc.$ch;
                if (($ch & (-2147418113)) == (-2147483608)) {
                    jur_Lexer_movePointer($cc);
                    $newFlags = ($ch & 16711680) >> 16;
                    $ch = $ch & (-16711681);
                    if ($ch == (-16777176))
                        $this.$flags = $newFlags;
                    else {
                        if ($ch != (-1073741784))
                            $newFlags = $this.$flags;
                        $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                        $cc = $this.$lexemes;
                        if ($cc.$ch != (-536870871)) {
                            $last = new jur_PatternSyntaxException;
                            var$7 = $cc.$orig;
                            $negative = $cc.$curToc;
                            $last.$suppressionEnabled = 1;
                            $last.$writableStackTrace = 1;
                            $last.$index0 = (-1);
                            $last.$desc = $rt_s(45);
                            $last.$pattern = var$7;
                            $last.$index0 = $negative;
                            $rt_throw($last);
                        }
                        jur_Lexer_movePointer($cc);
                    }
                } else {
                    b: {
                        c: {
                            switch ($ch) {
                                case -2147483599:
                                case -2147483598:
                                case -2147483597:
                                case -2147483596:
                                case -2147483595:
                                case -2147483594:
                                case -2147483593:
                                case -2147483592:
                                case -2147483591:
                                    break c;
                                case -2147483583:
                                    jur_Lexer_next($cc);
                                    $term = new jur_SOLSet;
                                    jur_AbstractSet__init_($term);
                                    break a;
                                case -2147483582:
                                    jur_Lexer_next($cc);
                                    $term = jur_WordBoundary__init_(0);
                                    break a;
                                case -2147483577:
                                    break;
                                case -2147483558:
                                    jur_Lexer_next($cc);
                                    $term = new jur_EOLSet;
                                    $number = $this.$consCount + 1 | 0;
                                    $this.$consCount = $number;
                                    jur_EOLSet__init_($term, $number);
                                    break a;
                                case -2147483550:
                                    jur_Lexer_next($cc);
                                    $term = jur_WordBoundary__init_(1);
                                    break a;
                                case -2147483526:
                                    jur_Lexer_next($cc);
                                    $term = jur_EOISet__init_();
                                    break a;
                                case -536870876:
                                    jur_Lexer_next($cc);
                                    $this.$consCount = $this.$consCount + 1 | 0;
                                    if (jur_Pattern_hasFlag($this, 8)) {
                                        if (jur_Pattern_hasFlag($this, 1)) {
                                            $term = jur_UMultiLineEOLSet__init_($this.$consCount);
                                            break a;
                                        }
                                        $term = jur_MultiLineEOLSet__init_($this.$consCount);
                                        break a;
                                    }
                                    if (jur_Pattern_hasFlag($this, 1)) {
                                        $term = jur_UEOLSet__init_($this.$consCount);
                                        break a;
                                    }
                                    $term = jur_EOLSet__init_0($this.$consCount);
                                    break a;
                                case -536870866:
                                    jur_Lexer_next($cc);
                                    if (jur_Pattern_hasFlag($this, 32)) {
                                        $term = jur_DotAllSet__init_();
                                        break a;
                                    }
                                    $term = jur_DotSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags));
                                    break a;
                                case -536870821:
                                    jur_Lexer_next($cc);
                                    $negative = 0;
                                    if (jur_Lexer_peek($this.$lexemes) == (-536870818)) {
                                        $negative = 1;
                                        jur_Lexer_next($this.$lexemes);
                                    }
                                    $term = jur_Pattern_processRange($this, $negative, $last);
                                    if (jur_Lexer_peek($this.$lexemes) != (-536870819))
                                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                                    jur_Lexer_setMode($this.$lexemes, 1);
                                    jur_Lexer_next($this.$lexemes);
                                    break a;
                                case -536870818:
                                    jur_Lexer_next($cc);
                                    $this.$consCount = $this.$consCount + 1 | 0;
                                    if (!jur_Pattern_hasFlag($this, 8)) {
                                        $term = jur_SOLSet__init_();
                                        break a;
                                    }
                                    $term = jur_MultiLineSOLSet__init_(jur_AbstractLineTerminator_getInstance($this.$flags));
                                    break a;
                                case 0:
                                    $cc = jur_Lexer_peekSpecial($cc);
                                    if ($cc !== null)
                                        $term = jur_Pattern_processRangeSet($this, $cc);
                                    else {
                                        if (jur_Lexer_isEmpty($this.$lexemes)) {
                                            $term = jur_EmptySet__init_($last);
                                            break a;
                                        }
                                        $term = jur_CharSet__init_($ch & 65535);
                                    }
                                    jur_Lexer_next($this.$lexemes);
                                    break a;
                                default:
                                    break b;
                            }
                            jur_Lexer_next($cc);
                            $term = jur_PreviousMatch__init_();
                            break a;
                        }
                        $number = ($ch & 2147483647) - 48 | 0;
                        if ($this.$globalGroupIndex < $number)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Lexer_toString($cc), jur_Lexer_getIndex($this.$lexemes)));
                        jur_Lexer_next($cc);
                        $this.$consCount = $this.$consCount + 1 | 0;
                        $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_($number, $this.$consCount) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_($number, $this.$consCount) : jur_CIBackReferenceSet__init_($number, $this.$consCount);
                        $this.$backRefs.data[$number].$isBackReferenced = 1;
                        $this.$needsBackRefReplacement = 1;
                        break a;
                    }
                    if ($ch >= 0 && !jur_Lexer_isSpecial($cc)) {
                        $term = jur_Pattern_processCharSet($this, $ch);
                        jur_Lexer_next($this.$lexemes);
                    } else if ($ch == (-536870788))
                        $term = jur_EmptySet__init_($last);
                    else {
                        if ($ch != (-536870871))
                            $rt_throw(jur_PatternSyntaxException__init_(!jur_Lexer_isSpecial($this.$lexemes) ? jl_Character_toString($ch & 65535) : (jur_Lexer_peekSpecial($this.$lexemes)).$toString(), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                        if (var$3)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Lexer_toString($this.$lexemes), jur_Lexer_getIndex($this.$lexemes)));
                        $term = jur_EmptySet__init_($last);
                    }
                }
            }
            if ($ch != (-16777176))
                break;
        }
        return $term;
    }
    function jur_Pattern_processRange($this, $negative, $last) {
        var $rangeSet;
        $rangeSet = jur_Pattern_processRangeSet($this, jur_Pattern_processRangeExpression($this, $negative));
        $rangeSet.$setNext($last);
        return $rangeSet;
    }
    function jur_Pattern_processRangeExpression($this, $alt) {
        var $res, $cur, $negative, $cs, $buffer, $intersection, $notClosed, $firstInClass, var$10, var$11, $$je;
        $res = new jur_CharClass;
        $cur = $this.$flags;
        $negative = ($cur & 2) != 2 ? 0 : 1;
        $cur = ($cur & 64) != 64 ? 0 : 1;
        jur_AbstractCharClass_$callClinit();
        $cs = new ju_BitSet;
        $cs.$data2 = $rt_createIntArray(64);
        $res.$lowHighSurrogates = $cs;
        $cs = new ju_BitSet;
        $cs.$data2 = $rt_createIntArray(2);
        $res.$bits = $cs;
        $res.$ci = $negative;
        $res.$uci = $cur;
        jur_AbstractCharClass_setNegative($res, $alt);
        $buffer = (-1);
        $intersection = 0;
        $notClosed = 0;
        $firstInClass = 1;
        a: {
            b: {
                c: while (true) {
                    $cs = $this.$lexemes;
                    if (!$cs.$ch && !$cs.$lookAhead && $cs.$index == $cs.$patternFullLength && !jur_Lexer_isSpecial($cs) ? 1 : 0)
                        break a;
                    $cs = $this.$lexemes;
                    $alt = $cs.$ch;
                    $notClosed = $alt == (-536870819) && !$firstInClass ? 0 : 1;
                    if (!$notClosed)
                        break a;
                    d: {
                        switch ($alt) {
                            case -536870874:
                                if ($buffer >= 0)
                                    jur_CharClass_add($res, $buffer);
                                $buffer = jur_Lexer_next($this.$lexemes);
                                if (jur_Lexer_peek($this.$lexemes) != (-536870874)) {
                                    $buffer = 38;
                                    break d;
                                }
                                if (jur_Lexer_lookAhead($this.$lexemes) == (-536870821)) {
                                    jur_Lexer_next($this.$lexemes);
                                    $intersection = 1;
                                    $buffer = (-1);
                                    break d;
                                }
                                jur_Lexer_next($this.$lexemes);
                                if ($firstInClass) {
                                    $res = jur_Pattern_processRangeExpression($this, 0);
                                    break d;
                                }
                                if (jur_Lexer_peek($this.$lexemes) == (-536870819))
                                    break d;
                                jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, 0));
                                break d;
                            case -536870867:
                                if (!$firstInClass && jur_Lexer_lookAhead($cs) != (-536870819) && jur_Lexer_lookAhead($this.$lexemes) != (-536870821) && $buffer >= 0) {
                                    jur_Lexer_next($this.$lexemes);
                                    $cur = jur_Lexer_peek($this.$lexemes);
                                    if (jur_Lexer_isSpecial($this.$lexemes))
                                        break c;
                                    if ($cur < 0 && jur_Lexer_lookAhead($this.$lexemes) != (-536870819) && jur_Lexer_lookAhead($this.$lexemes) != (-536870821) && $buffer >= 0)
                                        break c;
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter0($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        jur_CharClass_add0($res, $buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    jur_Lexer_next($this.$lexemes);
                                    $buffer = (-1);
                                    break d;
                                }
                                if ($buffer >= 0)
                                    jur_CharClass_add($res, $buffer);
                                $buffer = 45;
                                jur_Lexer_next($this.$lexemes);
                                break d;
                            case -536870821:
                                if ($buffer >= 0) {
                                    jur_CharClass_add($res, $buffer);
                                    $buffer = (-1);
                                }
                                jur_Lexer_next($this.$lexemes);
                                $negative = 0;
                                $cs = $this.$lexemes;
                                if ($cs.$ch == (-536870818)) {
                                    jur_Lexer_next($cs);
                                    $negative = 1;
                                }
                                if (!$intersection)
                                    jur_CharClass_union($res, jur_Pattern_processRangeExpression($this, $negative));
                                else
                                    jur_CharClass_intersection($res, jur_Pattern_processRangeExpression($this, $negative));
                                $intersection = 0;
                                jur_Lexer_next($this.$lexemes);
                                break d;
                            case -536870819:
                                break;
                            case -536870818:
                                if ($buffer >= 0)
                                    jur_CharClass_add($res, $buffer);
                                $buffer = 94;
                                jur_Lexer_next($this.$lexemes);
                                break d;
                            case 0:
                                if ($buffer >= 0)
                                    jur_CharClass_add($res, $buffer);
                                $cs = $this.$lexemes.$curST;
                                if ($cs === null)
                                    $buffer = 0;
                                else {
                                    jur_CharClass_add1($res, $cs);
                                    $buffer = (-1);
                                }
                                jur_Lexer_movePointer($this.$lexemes);
                                break d;
                            default:
                                if ($buffer >= 0)
                                    jur_CharClass_add($res, $buffer);
                                $cs = $this.$lexemes;
                                jur_Lexer_movePointer($cs);
                                $buffer = $cs.$lookBack;
                                break d;
                        }
                        if ($buffer >= 0)
                            jur_CharClass_add($res, $buffer);
                        $buffer = 93;
                        jur_Lexer_next($this.$lexemes);
                    }
                    $firstInClass = 0;
                }
                $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Pattern_pattern($this), jur_Lexer_getIndex($this.$lexemes)));
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Pattern_pattern($this), jur_Lexer_getIndex($this.$lexemes)));
        }
        if (!$notClosed) {
            if ($buffer >= 0)
                jur_CharClass_add($res, $buffer);
            return $res;
        }
        $res = new jur_PatternSyntaxException;
        var$10 = $this.$lexemes;
        var$11 = var$10.$orig;
        $alt = var$10.$curToc - 1 | 0;
        $res.$suppressionEnabled = 1;
        $res.$writableStackTrace = 1;
        $res.$index0 = (-1);
        $res.$desc = $rt_s(45);
        $res.$pattern = var$11;
        $res.$index0 = $alt;
        $rt_throw($res);
    }
    function jur_Pattern_processCharSet($this, $ch) {
        var $isSupplCodePoint, var$3, var$4, var$5, var$6;
        $isSupplCodePoint = $ch >= 65536 && $ch <= 1114111 ? 1 : 0;
        var$3 = $this.$flags;
        if ((var$3 & 2) != 2 ? 0 : 1) {
            a: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break a;
                    if ($ch > 90)
                        break a;
                }
                var$4 = new jur_CICharSet;
                $ch = $ch & 65535;
                var$5 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$5 + 1 | 0;
                var$6 = new jl_AbstractStringBuilder;
                var$6.$buffer = $rt_createCharArray(20);
                var$4.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
                var$4.$charCount = 1;
                var$4.$ch1 = $ch;
                var$4.$supplement = jur_Pattern_getSupplement($ch);
                return var$4;
            }
            if (((var$3 & 64) != 64 ? 0 : 1) && $ch > 128) {
                if ($isSupplCodePoint) {
                    var$4 = new jur_UCISupplCharSet;
                    var$5 = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = var$5 + 1 | 0;
                    var$6 = new jl_AbstractStringBuilder;
                    var$6.$buffer = $rt_createCharArray(20);
                    var$4.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
                    var$4.$charCount = 1;
                    var$4.$charCount = 2;
                    if (jl_Character_upperCaseMapping === null) {
                        if (jl_Character_$$metadata$$1 === null)
                            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                    }
                    $ch = jl_Character_mapChar(jl_Character_upperCaseMapping, $ch);
                    if (jl_Character_lowerCaseMapping === null) {
                        if (jl_Character_$$metadata$$0 === null)
                            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                    }
                    var$4.$ch2 = jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch);
                    return var$4;
                }
                if ($ch <= 57343 && $ch >= 56320 ? 1 : 0) {
                    var$4 = new jur_LowSurrogateCharSet;
                    $ch = $ch & 65535;
                    var$5 = jur_AbstractSet_counter;
                    jur_AbstractSet_counter = var$5 + 1 | 0;
                    var$6 = new jl_AbstractStringBuilder;
                    var$6.$buffer = $rt_createCharArray(20);
                    var$4.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
                    var$4.$low = $ch;
                    return var$4;
                }
                if ($ch <= 56319 && $ch >= 55296 ? 1 : 0)
                    return jur_HighSurrogateCharSet__init_($ch & 65535);
                var$4 = new jur_UCICharSet;
                $ch = $ch & 65535;
                var$5 = jur_AbstractSet_counter;
                jur_AbstractSet_counter = var$5 + 1 | 0;
                var$6 = new jl_AbstractStringBuilder;
                var$6.$buffer = $rt_createCharArray(20);
                var$4.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
                var$4.$charCount = 1;
                $ch = jl_Character_mapChar(jl_Character_getUpperCaseMapping(), $ch) & 65535;
                var$4.$ch3 = jl_Character_mapChar(jl_Character_getLowerCaseMapping(), $ch) & 65535;
                return var$4;
            }
        }
        if ($isSupplCodePoint)
            return jur_SupplCharSet__init_($ch);
        if (jur_Lexer_isLowSurrogate0($ch))
            return jur_LowSurrogateCharSet__init_($ch & 65535);
        if (!jur_Lexer_isHighSurrogate($ch))
            return jur_CharSet__init_($ch & 65535);
        return jur_HighSurrogateCharSet__init_($ch & 65535);
    }
    function jur_Pattern_processRangeSet($this, $charClass) {
        var $surrogates, $lowHighSurrRangeSet, var$4, var$5, var$6, var$7;
        if (!jur_AbstractCharClass_hasLowHighSurrogates($charClass)) {
            if (!$charClass.$mayContainSupplCodepoints) {
                if ($charClass.$hasUCI())
                    return jur_UCIRangeSet__init_($charClass);
                return jur_RangeSet__init_($charClass);
            }
            if ($charClass.$hasUCI())
                return jur_UCISupplRangeSet__init_($charClass);
            return jur_SupplRangeSet__init_($charClass);
        }
        $surrogates = jur_AbstractCharClass_getSurrogates($charClass);
        $lowHighSurrRangeSet = new jur_LowHighSurrogateRangeSet;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $lowHighSurrRangeSet.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $lowHighSurrRangeSet.$surrChars = $surrogates;
        $lowHighSurrRangeSet.$alt = $surrogates.$alt0;
        if (!$charClass.$mayContainSupplCodepoints) {
            if (!$charClass.$hasUCI()) {
                $surrogates = new jur_CompositeRangeSet;
                var$5 = new jur_RangeSet;
                $charClass = jur_AbstractCharClass_getWithoutSurrogates($charClass);
                jur_AbstractSet__init_(var$5);
                var$5.$charCount = 1;
                var$5.$chars0 = $charClass;
                var$5.$alt1 = $charClass.$alt0;
                jur_JointSet__init_0($surrogates);
                $surrogates.$withoutSurrogates = var$5;
                $surrogates.$withSurrogates = $lowHighSurrRangeSet;
                return $surrogates;
            }
            $surrogates = new jur_CompositeRangeSet;
            var$5 = new jur_UCIRangeSet;
            $charClass = jur_AbstractCharClass_getWithoutSurrogates($charClass);
            var$4 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$4 + 1 | 0;
            var$6 = new jl_AbstractStringBuilder;
            var$6.$buffer = $rt_createCharArray(20);
            var$5.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$4, 10)).$toString();
            var$5.$charCount = 1;
            var$5.$chars1 = $charClass;
            var$5.$alt2 = $charClass.$alt0;
            var$4 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$4 + 1 | 0;
            $charClass = new jl_AbstractStringBuilder;
            $charClass.$buffer = $rt_createCharArray(20);
            $surrogates.$index1 = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length, var$4, 10)).$toString();
            $surrogates.$withoutSurrogates = var$5;
            $surrogates.$withSurrogates = $lowHighSurrRangeSet;
            return $surrogates;
        }
        if (!$charClass.$hasUCI()) {
            $surrogates = new jur_CompositeRangeSet;
            var$5 = new jur_SupplRangeSet;
            $charClass = jur_AbstractCharClass_getWithoutSurrogates($charClass);
            var$4 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$4 + 1 | 0;
            var$6 = new jl_AbstractStringBuilder;
            var$6.$buffer = $rt_createCharArray(20);
            var$5.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$4, 10)).$toString();
            var$5.$chars2 = $charClass;
            var$5.$alt3 = $charClass.$alt0;
            var$4 = jur_AbstractSet_counter;
            jur_AbstractSet_counter = var$4 + 1 | 0;
            $charClass = new jl_AbstractStringBuilder;
            $charClass.$buffer = $rt_createCharArray(20);
            $surrogates.$index1 = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length, var$4, 10)).$toString();
            $surrogates.$withoutSurrogates = var$5;
            $surrogates.$withSurrogates = $lowHighSurrRangeSet;
            return $surrogates;
        }
        $surrogates = new jur_CompositeRangeSet;
        var$5 = new jur_UCISupplRangeSet;
        var$6 = jur_AbstractCharClass_getWithoutSurrogates($charClass);
        var$7 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$7 + 1 | 0;
        $charClass = new jl_AbstractStringBuilder;
        $charClass.$buffer = $rt_createCharArray(20);
        var$5.$index1 = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length, var$7, 10)).$toString();
        var$5.$chars2 = var$6;
        var$5.$alt3 = var$6.$alt0;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        $charClass = new jl_AbstractStringBuilder;
        $charClass.$buffer = $rt_createCharArray(20);
        $surrogates.$index1 = (jl_AbstractStringBuilder_insert0($charClass, $charClass.$length, var$4, 10)).$toString();
        $surrogates.$withoutSurrogates = var$5;
        $surrogates.$withSurrogates = $lowHighSurrRangeSet;
        return $surrogates;
    }
    function jur_Pattern_compile0($pattern) {
        return jur_Pattern_compile($pattern, 0);
    }
    function jur_Pattern_getSupplement($ch) {
        if ($ch >= 97 && $ch <= 122)
            $ch = ($ch - 32 | 0) & 65535;
        else if ($ch >= 65 && $ch <= 90)
            $ch = ($ch + 32 | 0) & 65535;
        return $ch;
    }
    function jur_Pattern_hasFlag($this, $flag) {
        return ($this.$flags & $flag) != $flag ? 0 : 1;
    }
    var cbgur_ClassReflection = $rt_classWithoutFields();
    function cbgur_ClassReflection_getConstructor($c, $parameterTypes) {
        var $e, $constructor, var$5, var$6, var$7, var$8, var$9, $$je;
        if ($parameterTypes !== null && $parameterTypes.data.length) {
            a: {
                b: {
                    try {
                        $e = cbgur_Constructor__init_(jl_Class_getConstructor($c, $parameterTypes));
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_SecurityException) {
                            $e = $$je;
                            break a;
                        } else if ($$je instanceof jl_NoSuchMethodException) {
                            $e = $$je;
                            break b;
                        } else {
                            throw $$e;
                        }
                    }
                    return $e;
                }
                $constructor = new cbgur_ReflectionException;
                if ($c.$name === null)
                    $c.$name = $rt_str($c.$platformClass.$meta.name);
                var$5 = $c.$name;
                $c = new jl_StringBuilder;
                $c.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($c, $c.$length, $rt_s(180));
                var$6 = $c.$length;
                if (var$5 === null)
                    var$5 = $rt_s(1);
                jl_AbstractStringBuilder_insert($c, var$6, var$5);
                var$7 = new jl_String;
                $parameterTypes = $c.$buffer;
                var$8 = $c.$length;
                jl_String_$callClinit();
                var$9 = $rt_createCharArray(var$8);
                var$7.$characters = var$9;
                jl_System_fastArraycopy($parameterTypes, 0, var$9, 0, var$8);
                $constructor.$suppressionEnabled = 1;
                $constructor.$writableStackTrace = 1;
                $constructor.$message = var$7;
                $constructor.$cause = $e;
                $rt_throw($constructor);
            }
            $constructor = new cbgur_ReflectionException;
            if ($c.$name === null)
                $c.$name = $rt_str($c.$platformClass.$meta.name);
            var$5 = $c.$name;
            $c = new jl_StringBuilder;
            $c.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($c, $c.$length, $rt_s(181));
            var$6 = $c.$length;
            if (var$5 === null)
                var$5 = $rt_s(1);
            jl_AbstractStringBuilder_insert($c, var$6, var$5);
            jl_AbstractStringBuilder_insert($c, $c.$length, $rt_s(182));
            var$7 = new jl_String;
            $parameterTypes = $c.$buffer;
            var$8 = $c.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray(var$8);
            var$7.$characters = var$9;
            jl_System_fastArraycopy($parameterTypes, 0, var$9, 0, var$8);
            $constructor.$suppressionEnabled = 1;
            $constructor.$writableStackTrace = 1;
            $constructor.$message = var$7;
            $constructor.$cause = $e;
            $rt_throw($constructor);
        }
        $parameterTypes = (jl_Class_getConstructors($c)).data;
        if ($parameterTypes.length <= 0)
            $c = null;
        else {
            $c = new cbgur_Constructor;
            $c.$constructor0 = $parameterTypes[0];
        }
        return $c;
    }
    function cbgur_ClassReflection_getDeclaredConstructor($c, $parameterTypes) {
        var $e, $declaredConstructor, var$5, var$6, var$7, var$8, var$9, $$je;
        a: {
            try {
                $e = cbgur_Constructor__init_(jl_Class_getDeclaredConstructor($c, $parameterTypes));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_SecurityException) {
                    $e = $$je;
                    break a;
                } else if ($$je instanceof jl_NoSuchMethodException) {
                    $e = $$je;
                    $declaredConstructor = new cbgur_ReflectionException;
                    if ($c.$name === null)
                        $c.$name = $rt_str($c.$platformClass.$meta.name);
                    $c = $c.$name;
                    var$5 = new jl_StringBuilder;
                    var$5.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(180));
                    var$6 = var$5.$length;
                    if ($c === null)
                        $c = $rt_s(1);
                    jl_AbstractStringBuilder_insert(var$5, var$6, $c);
                    $c = new jl_String;
                    $parameterTypes = var$5.$buffer;
                    var$7 = var$5.$length;
                    jl_String_$callClinit();
                    var$8 = $rt_createCharArray(var$7);
                    $c.$characters = var$8;
                    jl_System_fastArraycopy($parameterTypes, 0, var$8, 0, var$7);
                    $declaredConstructor.$suppressionEnabled = 1;
                    $declaredConstructor.$writableStackTrace = 1;
                    $declaredConstructor.$message = $c;
                    $declaredConstructor.$cause = $e;
                    $rt_throw($declaredConstructor);
                } else {
                    throw $$e;
                }
            }
            return $e;
        }
        $declaredConstructor = new cbgur_ReflectionException;
        if ($c.$name === null)
            $c.$name = $rt_str($c.$platformClass.$meta.name);
        var$9 = $c.$name;
        $c = new jl_StringBuilder;
        $c.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($c, $c.$length, $rt_s(183));
        var$6 = $c.$length;
        if (var$9 === null)
            var$9 = $rt_s(1);
        jl_AbstractStringBuilder_insert($c, var$6, var$9);
        var$5 = new jl_String;
        $parameterTypes = $c.$buffer;
        var$7 = $c.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy($parameterTypes, 0, var$8, 0, var$7);
        $declaredConstructor.$suppressionEnabled = 1;
        $declaredConstructor.$writableStackTrace = 1;
        $declaredConstructor.$message = var$5;
        $declaredConstructor.$cause = $e;
        $rt_throw($declaredConstructor);
    }
    var cbgur_ReflectionException = $rt_classWithoutFields(jl_Exception);
    var jl_NegativeArraySizeException = $rt_classWithoutFields(jl_RuntimeException);
    function jl_NegativeArraySizeException__init_() {
        var var_0 = new jl_NegativeArraySizeException();
        jl_NegativeArraySizeException__init_0(var_0);
        return var_0;
    }
    function jl_NegativeArraySizeException__init_0($this) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
    }
    function otji_JSWrapper() {
        jl_Object.call(this);
        this.$js = null;
    }
    var otji_JSWrapper_hashCodes = null;
    var otji_JSWrapper_wrappers = null;
    var otji_JSWrapper_stringWrappers = null;
    var otji_JSWrapper_numberWrappers = null;
    var otji_JSWrapper_undefinedWrapper = null;
    var otji_JSWrapper_stringFinalizationRegistry = null;
    var otji_JSWrapper_numberFinalizationRegistry = null;
    function otji_JSWrapper_$callClinit() {
        otji_JSWrapper_$callClinit = $rt_eraseClinit(otji_JSWrapper);
        otji_JSWrapper__clinit_();
    }
    function otji_JSWrapper_wrap($o) {
        var $jsNumber, $type, $isObject, $existingRef, $existing, $wrapper, $wrapperAsJs;
        otji_JSWrapper_$callClinit();
        if ($o === null)
            return null;
        $jsNumber = $o;
        $type = $rt_str(typeof $jsNumber);
        $isObject = !jl_String_equals($type, $rt_s(184)) && !jl_String_equals($type, $rt_s(185)) ? 0 : 1;
        if ($isObject && $o[$rt_jso_marker] === true)
            return $o;
        $o = otji_JSWrapper_wrappers;
        if ($o !== null) {
            if ($isObject) {
                $existingRef = $o.get($jsNumber);
                $existing = (typeof $existingRef === 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
                if (!(typeof $existing === 'undefined' ? 1 : 0))
                    return $existing;
                $wrapper = new otji_JSWrapper;
                $wrapper.$js = $jsNumber;
                otji_JSWrapper_wrappers.set($jsNumber, new $rt_globals.WeakRef($wrapper));
                return $wrapper;
            }
            if (jl_String_equals($type, $rt_s(186))) {
                $existingRef = otji_JSWrapper_stringWrappers.get($jsNumber);
                $existing = (typeof $existingRef === 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
                if (!(typeof $existing === 'undefined' ? 1 : 0))
                    return $existing;
                $wrapper = new otji_JSWrapper;
                $wrapper.$js = $jsNumber;
                $wrapperAsJs = $wrapper;
                otji_JSWrapper_stringWrappers.set($jsNumber, new $rt_globals.WeakRef($wrapperAsJs));
                otji_JSWrapper_register$js_body$_4(otji_JSWrapper_stringFinalizationRegistry, $wrapperAsJs, $jsNumber);
                return $wrapper;
            }
            if (jl_String_equals($type, $rt_s(187))) {
                $existingRef = otji_JSWrapper_numberWrappers.get($jsNumber);
                $existing = (typeof $existingRef === 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
                if (!(typeof $existing === 'undefined' ? 1 : 0))
                    return $existing;
                $wrapper = new otji_JSWrapper;
                $wrapper.$js = $jsNumber;
                $wrapperAsJs = $wrapper;
                otji_JSWrapper_numberWrappers.set($jsNumber, new $rt_globals.WeakRef($wrapperAsJs));
                otji_JSWrapper_register$js_body$_4(otji_JSWrapper_numberFinalizationRegistry, $wrapperAsJs, $jsNumber);
                return $wrapper;
            }
            if (jl_String_equals($type, $rt_s(188))) {
                $existingRef = otji_JSWrapper_undefinedWrapper;
                $existing = $existingRef === null ? void 0 : $existingRef.deref();
                if (!(typeof $existing === 'undefined' ? 1 : 0))
                    return $existing;
                $wrapper = new otji_JSWrapper;
                $wrapper.$js = $jsNumber;
                otji_JSWrapper_undefinedWrapper = new $rt_globals.WeakRef($wrapper);
                return $wrapper;
            }
        }
        $o = new otji_JSWrapper;
        $o.$js = $jsNumber;
        return $o;
    }
    function otji_JSWrapper__clinit_() {
        otji_JSWrapper_hashCodes = new $rt_globals.WeakMap();
        otji_JSWrapper_wrappers = !(typeof $rt_globals.WeakRef !== 'undefined' ? 1 : 0) ? null : new $rt_globals.WeakMap();
        otji_JSWrapper_stringWrappers = !(typeof $rt_globals.WeakRef !== 'undefined' ? 1 : 0) ? null : new $rt_globals.Map();
        otji_JSWrapper_numberWrappers = !(typeof $rt_globals.WeakRef !== 'undefined' ? 1 : 0) ? null : new $rt_globals.Map();
        otji_JSWrapper_stringFinalizationRegistry = otji_JSWrapper_stringWrappers === null ? null : new $rt_globals.FinalizationRegistry(otji_JS_function(new otji_JSWrapper$_clinit_$lambda$_30_0, "accept"));
        otji_JSWrapper_numberFinalizationRegistry = otji_JSWrapper_numberWrappers === null ? null : new $rt_globals.FinalizationRegistry(otji_JS_function(new otji_JSWrapper$_clinit_$lambda$_30_1, "accept"));
    }
    function otji_JSWrapper_register$js_body$_4(var$1, var$2, var$3) {
        return var$1.register(var$2, var$3);
    }
    var ju_Enumeration = $rt_classWithoutFields(0);
    var ju_Hashtable$1 = $rt_classWithoutFields();
    var ju_Iterator = $rt_classWithoutFields(0);
    var ju_Hashtable$2 = $rt_classWithoutFields();
    var jur_MatchResult = $rt_classWithoutFields(0);
    function jur_Matcher() {
        var a = this; jl_Object.call(a);
        a.$pat = null;
        a.$start4 = null;
        a.$string = null;
        a.$matchResult = null;
        a.$leftBound = 0;
        a.$rightBound = 0;
        a.$appendPos = 0;
        a.$replacement = null;
        a.$processedRepl = null;
        a.$replacementParts = null;
    }
    function jur_Matcher__init_(var_0, var_1) {
        var var_2 = new jur_Matcher();
        jur_Matcher__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_Matcher_processReplacement($this, $replacement) {
        var $res, $sb, $i, $gr, var$6, $index, $repl, var$9, $replacementPos, $nextBackSlashed, $group, var$13, var$14, $$je;
        $res = $this.$replacement;
        if ($res !== null && jl_String_equals($res, $replacement)) {
            if ($this.$replacementParts === null)
                return $this.$processedRepl;
            $sb = new jl_StringBuilder;
            $sb.$buffer = $rt_createCharArray(16);
            $i = 0;
            while (true) {
                $replacement = $this.$replacementParts;
                $gr = $rt_compare($i, $replacement.$size6);
                if ($gr >= 0) {
                    $replacement = new jl_String;
                    var$6 = $sb.$buffer;
                    $index = $sb.$length;
                    $repl = $rt_createCharArray($index);
                    $replacement.$characters = $repl;
                    jl_System_fastArraycopy(var$6, 0, $repl, 0, $index);
                    return $replacement;
                }
                if ($i < 0)
                    break;
                if ($gr >= 0)
                    break;
                $replacement = $replacement.$array4.data[$i];
                jl_AbstractStringBuilder_insert($sb, $sb.$length, $replacement === null ? $rt_s(1) : $replacement.$toString());
                $i = $i + 1 | 0;
            }
            $replacement = new jl_IndexOutOfBoundsException;
            $replacement.$suppressionEnabled = 1;
            $replacement.$writableStackTrace = 1;
            $rt_throw($replacement);
        }
        $this.$replacement = $replacement;
        var$6 = $replacement.$characters.data;
        $repl = $rt_createCharArray(var$6.length);
        var$9 = $repl.data;
        $gr = 0;
        $i = var$9.length;
        while ($gr < $i) {
            var$9[$gr] = var$6[$gr];
            $gr = $gr + 1 | 0;
        }
        $res = new jl_StringBuilder;
        $res.$buffer = $rt_createCharArray(16);
        $this.$replacementParts = null;
        $index = 0;
        $replacementPos = 0;
        $nextBackSlashed = 0;
        a: {
            b: while (true) {
                if ($index >= $i) {
                    $replacement = $this.$replacementParts;
                    if ($replacement !== null) {
                        $index = $res.$length;
                        $gr = $rt_compare($replacementPos, $index);
                        if ($gr) {
                            if ($gr <= 0 && $replacementPos >= 0 && $index <= $index) {
                                $group = new jl_String;
                                var$6 = $res.$buffer;
                                $gr = $index - $replacementPos | 0;
                                jl_String_$callClinit();
                                $repl = $rt_createCharArray($gr);
                                $group.$characters = $repl;
                                jl_System_fastArraycopy(var$6, $replacementPos, $repl, 0, $gr);
                                ju_ArrayList_ensureCapacity($replacement, $replacement.$size6 + 1 | 0);
                                var$6 = $replacement.$array4.data;
                                $index = $replacement.$size6;
                                $replacement.$size6 = $index + 1 | 0;
                                var$6[$index] = $group;
                                $replacement.$modCount1 = $replacement.$modCount1 + 1 | 0;
                            } else {
                                $replacement = new jl_IndexOutOfBoundsException;
                                $replacement.$suppressionEnabled = 1;
                                $replacement.$writableStackTrace = 1;
                                jl_Throwable_fillInStackTrace($replacement);
                                $rt_throw($replacement);
                            }
                        }
                    }
                    $replacement = new jl_String;
                    var$6 = $res.$buffer;
                    $index = $res.$length;
                    jl_String_$callClinit();
                    $repl = $rt_createCharArray($index);
                    $replacement.$characters = $repl;
                    jl_System_fastArraycopy(var$6, 0, $repl, 0, $index);
                    return $replacement;
                }
                if (var$9[$index] == 92 && !$nextBackSlashed) {
                    $nextBackSlashed = 1;
                    $index = $index + 1 | 0;
                }
                c: {
                    if ($nextBackSlashed) {
                        if ($index >= $i)
                            break b;
                        $nextBackSlashed = var$9[$index];
                        var$13 = $res.$length;
                        jl_AbstractStringBuilder_insertSpace($res, var$13, var$13 + 1 | 0);
                        $res.$buffer.data[var$13] = $nextBackSlashed;
                        $nextBackSlashed = 0;
                    } else if (var$9[$index] != 36) {
                        var$13 = var$9[$index];
                        var$14 = $res.$length;
                        jl_AbstractStringBuilder_insertSpace($res, var$14, var$14 + 1 | 0);
                        $res.$buffer.data[var$14] = var$13;
                    } else {
                        if ($this.$replacementParts === null) {
                            $replacement = new ju_ArrayList;
                            $replacement.$array4 = $rt_createArray(jl_Object, 10);
                            $this.$replacementParts = $replacement;
                        }
                        d: {
                            try {
                                $replacement = new jl_String;
                                $index = $index + 1 | 0;
                                jl_String__init_2($replacement, $repl, $index, 1);
                                $gr = jl_Integer_parseInt0($replacement);
                                if ($replacementPos == jl_StringBuilder_length($res))
                                    break d;
                                ju_ArrayList_add($this.$replacementParts, jl_StringBuilder_subSequence($res, $replacementPos, jl_StringBuilder_length($res)));
                                $replacementPos = jl_StringBuilder_length($res);
                                break d;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_Exception) {
                                    break a;
                                } else {
                                    throw $$e;
                                }
                            }
                        }
                        try {
                            ju_ArrayList_add($this.$replacementParts, jur_Matcher$1__init_($this, $gr));
                            $group = jur_Matcher_group($this, $gr);
                            $replacementPos = $replacementPos + jl_String_length($group) | 0;
                            jl_StringBuilder_append1($res, $group);
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                }
                $index = $index + 1 | 0;
            }
            $replacement = new jl_IndexOutOfBoundsException;
            $replacement.$suppressionEnabled = 1;
            $replacement.$writableStackTrace = 1;
            $rt_throw($replacement);
        }
        $replacement = new jl_IllegalArgumentException;
        $replacement.$suppressionEnabled = 1;
        $replacement.$writableStackTrace = 1;
        $replacement.$message = $rt_s(45);
        $rt_throw($replacement);
    }
    function jur_Matcher_group($this, $group) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$2 = $this.$matchResult;
        var$3 = var$2.$valid1;
        if (!var$3) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if ($group >= 0) {
            var$4 = $rt_compare($group, var$2.$groupCount);
            if (var$4 < 0) {
                a: {
                    var$5 = var$2.$groupBounds.data;
                    var$6 = $group * 2 | 0;
                    if (var$5[var$6] < 0)
                        var$7 = null;
                    else {
                        var$2 = var$2.$string0;
                        if (!var$3) {
                            var$2 = new jl_IllegalStateException;
                            var$2.$suppressionEnabled = 1;
                            var$2.$writableStackTrace = 1;
                            $rt_throw(var$2);
                        }
                        if ($group >= 0 && var$4 < 0) {
                            var$8 = var$5[var$6];
                            if (!var$3) {
                                var$2 = new jl_IllegalStateException;
                                var$2.$suppressionEnabled = 1;
                                var$2.$writableStackTrace = 1;
                                $rt_throw(var$2);
                            }
                            if ($group >= 0 && var$4 < 0) {
                                var$6 = var$5[var$6 + 1 | 0];
                                $group = $rt_compare(var$8, var$6);
                                if ($group > 0) {
                                    var$2 = new jl_IndexOutOfBoundsException;
                                    var$2.$suppressionEnabled = 1;
                                    var$2.$writableStackTrace = 1;
                                    $rt_throw(var$2);
                                }
                                if (!$group) {
                                    jl_String_$callClinit();
                                    var$7 = jl_String_EMPTY;
                                } else if (!var$8 && var$6 == var$2.$characters.data.length)
                                    var$7 = var$2;
                                else {
                                    var$7 = new jl_String;
                                    var$5 = var$2.$characters;
                                    $group = var$6 - var$8 | 0;
                                    jl_String_$callClinit();
                                    var$9 = $rt_createCharArray($group);
                                    var$7.$characters = var$9;
                                    jl_System_fastArraycopy(var$5, var$8, var$9, 0, $group);
                                }
                                break a;
                            }
                            var$2 = new jl_IndexOutOfBoundsException;
                            jl_String_$callClinit();
                            var$7 = new jl_StringBuilder;
                            var$7.$buffer = $rt_createCharArray(16);
                            jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $group, 10);
                            var$10 = new jl_String;
                            var$5 = var$7.$buffer;
                            var$8 = var$7.$length;
                            var$9 = $rt_createCharArray(var$8);
                            var$10.$characters = var$9;
                            jl_System_fastArraycopy(var$5, 0, var$9, 0, var$8);
                            var$2.$suppressionEnabled = 1;
                            var$2.$writableStackTrace = 1;
                            var$2.$message = var$10;
                            $rt_throw(var$2);
                        }
                        var$2 = new jl_IndexOutOfBoundsException;
                        jl_String_$callClinit();
                        var$7 = new jl_StringBuilder;
                        var$7.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $group, 10);
                        var$10 = new jl_String;
                        var$5 = var$7.$buffer;
                        var$8 = var$7.$length;
                        var$9 = $rt_createCharArray(var$8);
                        var$10.$characters = var$9;
                        jl_System_fastArraycopy(var$5, 0, var$9, 0, var$8);
                        var$2.$suppressionEnabled = 1;
                        var$2.$writableStackTrace = 1;
                        var$2.$message = var$10;
                        $rt_throw(var$2);
                    }
                }
                return var$7;
            }
        }
        var$2 = new jl_IndexOutOfBoundsException;
        jl_String_$callClinit();
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $group, 10);
        var$10 = new jl_String;
        var$5 = var$7.$buffer;
        var$8 = var$7.$length;
        var$9 = $rt_createCharArray(var$8);
        var$10.$characters = var$9;
        jl_System_fastArraycopy(var$5, 0, var$9, 0, var$8);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$10;
        $rt_throw(var$2);
    }
    function jur_Matcher_find0($this, $start) {
        var var$2, $stringLength, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$2 = $this.$string;
        $stringLength = var$2.$characters.data.length;
        if ($start >= 0 && $start <= $stringLength) {
            var$4 = $this.$matchResult;
            var$4.$valid1 = 0;
            var$4.$mode = 2;
            var$5 = var$4.$groupBounds.data;
            var$6 = 0;
            var$7 = var$5.length;
            if (var$6 > var$7) {
                var$2 = new jl_IllegalArgumentException;
                jl_Throwable__init_0(var$2);
                $rt_throw(var$2);
            }
            while (var$6 < var$7) {
                var$8 = var$6 + 1 | 0;
                var$5[var$6] = (-1);
                var$6 = var$8;
            }
            var$5 = var$4.$consumers.data;
            var$6 = 0;
            var$7 = var$5.length;
            if (var$6 > var$7) {
                var$2 = new jl_IllegalArgumentException;
                jl_Throwable__init_0(var$2);
                $rt_throw(var$2);
            }
            while (var$6 < var$7) {
                var$8 = var$6 + 1 | 0;
                var$5[var$6] = (-1);
                var$6 = var$8;
            }
            var$4.$startIndex = var$4.$leftBound0;
            var$4.$mode = 1;
            var$4.$startIndex = $start;
            $stringLength = var$4.$previousMatch;
            if ($stringLength < 0)
                $stringLength = $start;
            var$4.$previousMatch = $stringLength;
            $start = $this.$start4.$find0($start, var$2, var$4);
            if ($start == (-1))
                $this.$matchResult.$hitEnd = 1;
            if ($start >= 0) {
                var$2 = $this.$matchResult;
                $start = var$2.$valid1;
                if ($start) {
                    var$5 = var$2.$groupBounds.data;
                    if (var$5[0] == (-1)) {
                        var$6 = var$2.$startIndex;
                        var$5[0] = var$6;
                        var$5[1] = var$6;
                    }
                    if (!$start) {
                        var$2 = new jl_IllegalStateException;
                        var$2.$suppressionEnabled = 1;
                        var$2.$writableStackTrace = 1;
                        jl_Throwable_fillInStackTrace(var$2);
                        $rt_throw(var$2);
                    }
                    if (0 < var$2.$groupCount) {
                        var$2.$previousMatch = var$5[1];
                        return 1;
                    }
                    var$2 = new jl_IndexOutOfBoundsException;
                    jl_String_$callClinit();
                    var$4 = new jl_StringBuilder;
                    jl_Object__init_0(var$4);
                    var$4.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert0(var$4, var$4.$length, 0, 10);
                    var$9 = new jl_String;
                    var$5 = var$4.$buffer;
                    $stringLength = var$4.$length;
                    var$10 = $rt_createCharArray($stringLength);
                    var$9.$characters = var$10;
                    jl_System_fastArraycopy(var$5, 0, var$10, 0, $stringLength);
                    var$2.$suppressionEnabled = 1;
                    var$2.$writableStackTrace = 1;
                    var$2.$message = var$9;
                    $rt_throw(var$2);
                }
            }
            $this.$matchResult.$startIndex = (-1);
            return 0;
        }
        var$2 = new jl_IndexOutOfBoundsException;
        jl_String_$callClinit();
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $start, 10);
        var$9 = new jl_String;
        var$5 = var$4.$buffer;
        $stringLength = var$4.$length;
        var$10 = $rt_createCharArray($stringLength);
        var$9.$characters = var$10;
        jl_System_fastArraycopy(var$5, 0, var$10, 0, $stringLength);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$9;
        $rt_throw(var$2);
    }
    function jur_Matcher_find($this) {
        var $length, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        $length = $this.$string.$characters.data.length;
        var$2 = $this.$matchResult;
        if (!var$2.$transparentBounds)
            $length = $this.$rightBound;
        if (var$2.$startIndex >= 0 && var$2.$mode == 1) {
            var$3 = var$2.$valid1;
            if (!var$3) {
                var$2 = new jl_IllegalStateException;
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                $rt_throw(var$2);
            }
            var$4 = $rt_compare(0, var$2.$groupCount);
            if (var$4 >= 0) {
                var$2 = new jl_IndexOutOfBoundsException;
                jl_String_$callClinit();
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0(var$5, var$5.$length, 0, 10);
                var$6 = new jl_String;
                var$7 = var$5.$buffer;
                $length = var$5.$length;
                var$8 = $rt_createCharArray($length);
                var$6.$characters = var$8;
                jl_System_fastArraycopy(var$7, 0, var$8, 0, $length);
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = var$6;
                $rt_throw(var$2);
            }
            var$7 = var$2.$groupBounds.data;
            var$9 = var$7[1];
            var$2.$startIndex = var$9;
            if (!var$3) {
                var$2 = new jl_IllegalStateException;
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                $rt_throw(var$2);
            }
            if (var$4 >= 0) {
                var$2 = new jl_IndexOutOfBoundsException;
                jl_String_$callClinit();
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert0(var$5, var$5.$length, 0, 10);
                var$6 = new jl_String;
                var$7 = var$5.$buffer;
                $length = var$5.$length;
                var$8 = $rt_createCharArray($length);
                var$6.$characters = var$8;
                jl_System_fastArraycopy(var$7, 0, var$8, 0, $length);
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = var$6;
                $rt_throw(var$2);
            }
            var$10 = var$7[1];
            if (!var$3) {
                var$2 = new jl_IllegalStateException;
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                $rt_throw(var$2);
            }
            if (var$4 < 0) {
                if (var$10 == var$7[0])
                    var$2.$startIndex = var$9 + 1 | 0;
                var$11 = var$2.$startIndex;
                return var$11 <= $length && jur_Matcher_find0($this, var$11) ? 1 : 0;
            }
            var$2 = new jl_IndexOutOfBoundsException;
            jl_String_$callClinit();
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, 0, 10);
            var$6 = new jl_String;
            var$7 = var$5.$buffer;
            $length = var$5.$length;
            var$8 = $rt_createCharArray($length);
            var$6.$characters = var$8;
            jl_System_fastArraycopy(var$7, 0, var$8, 0, $length);
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = var$6;
            $rt_throw(var$2);
        }
        return jur_Matcher_find0($this, $this.$leftBound);
    }
    function jur_Matcher__init_0($this, $pat, $cs) {
        var var$3, var$4;
        $this.$leftBound = (-1);
        $this.$rightBound = (-1);
        $this.$pat = $pat;
        $this.$start4 = $pat.$start3;
        $this.$string = $cs;
        $this.$leftBound = 0;
        var$3 = $cs.$characters.data.length;
        $this.$rightBound = var$3;
        var$4 = jur_MatchResultImpl__init_($cs, 0, var$3, $pat.$globalGroupIndex, $pat.$compCount + 1 | 0, $pat.$consCount + 1 | 0);
        $this.$matchResult = var$4;
        var$4.$anchoringBounds = 1;
    }
    var jl_NumberFormatException = $rt_classWithoutFields(jl_IllegalArgumentException);
    function jl_NumberFormatException__init_0() {
        var var_0 = new jl_NumberFormatException();
        jl_NumberFormatException__init_1(var_0);
        return var_0;
    }
    function jl_NumberFormatException__init_2(var_0) {
        var var_1 = new jl_NumberFormatException();
        jl_NumberFormatException__init_(var_1, var_0);
        return var_1;
    }
    function jl_NumberFormatException__init_1($this) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
    }
    function jl_NumberFormatException__init_($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    function cbgur_Constructor() {
        jl_Object.call(this);
        this.$constructor0 = null;
    }
    function cbgur_Constructor__init_(var_0) {
        var var_1 = new cbgur_Constructor();
        cbgur_Constructor__init_0(var_1, var_0);
        return var_1;
    }
    function cbgur_Constructor__init_0($this, $constructor) {
        $this.$constructor0 = $constructor;
    }
    function cbgur_Constructor_setAccessible($this, $accessible) {}
    function cbgur_Constructor_newInstance($this, $args) {
        var $e, var$3, var$4, var$5, var$6, var$7, var$8, var$9, $$je;
        if ($args === null)
            $args = $rt_createArray(jl_Object, 0);
        a: {
            b: {
                c: {
                    try {
                        $e = jlr_Constructor_newInstance($this.$constructor0, $args);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_IllegalArgumentException) {
                            $e = $$je;
                            break b;
                        } else if ($$je instanceof jl_InstantiationException) {
                            $e = $$je;
                            break c;
                        } else if ($$je instanceof jl_IllegalAccessException) {
                            $e = $$je;
                            break a;
                        } else if ($$je instanceof jlr_InvocationTargetException) {
                            $e = $$je;
                            var$3 = new cbgur_ReflectionException;
                            var$4 = $this.$constructor0.$declaringClass;
                            if (var$4.$name === null)
                                var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
                            var$4 = var$4.$name;
                            var$5 = new jl_StringBuilder;
                            var$5.$buffer = $rt_createCharArray(16);
                            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(189));
                            var$6 = var$5.$length;
                            if (var$4 === null)
                                var$4 = $rt_s(1);
                            jl_AbstractStringBuilder_insert(var$5, var$6, var$4);
                            var$7 = new jl_String;
                            $args = var$5.$buffer;
                            var$8 = var$5.$length;
                            jl_String_$callClinit();
                            var$9 = $rt_createCharArray(var$8);
                            var$7.$characters = var$9;
                            jl_System_fastArraycopy($args, 0, var$9, 0, var$8);
                            var$3.$suppressionEnabled = 1;
                            var$3.$writableStackTrace = 1;
                            var$3.$message = var$7;
                            var$3.$cause = $e;
                            $rt_throw(var$3);
                        } else {
                            throw $$e;
                        }
                    }
                    return $e;
                }
                var$3 = new cbgur_ReflectionException;
                var$4 = $this.$constructor0.$declaringClass;
                if (var$4.$name === null)
                    var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
                var$4 = var$4.$name;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(190));
                var$6 = var$5.$length;
                if (var$4 === null)
                    var$4 = $rt_s(1);
                jl_AbstractStringBuilder_insert(var$5, var$6, var$4);
                var$7 = new jl_String;
                $args = var$5.$buffer;
                var$8 = var$5.$length;
                jl_String_$callClinit();
                var$9 = $rt_createCharArray(var$8);
                var$7.$characters = var$9;
                jl_System_fastArraycopy($args, 0, var$9, 0, var$8);
                jl_Throwable__init_4(var$3, var$7, $e);
                $rt_throw(var$3);
            }
            var$3 = new cbgur_ReflectionException;
            var$4 = $this.$constructor0.$declaringClass;
            if (var$4.$name === null)
                var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
            var$4 = var$4.$name;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(191));
            var$6 = var$5.$length;
            if (var$4 === null)
                var$4 = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$5, var$6, var$4);
            var$7 = new jl_String;
            $args = var$5.$buffer;
            var$8 = var$5.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray(var$8);
            var$7.$characters = var$9;
            jl_System_fastArraycopy($args, 0, var$9, 0, var$8);
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = var$7;
            var$3.$cause = $e;
            $rt_throw(var$3);
        }
        var$3 = new cbgur_ReflectionException;
        var$4 = $this.$constructor0.$declaringClass;
        if (var$4.$name === null)
            var$4.$name = $rt_str(var$4.$platformClass.$meta.name);
        var$4 = var$4.$name;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(190));
        var$6 = var$5.$length;
        if (var$4 === null)
            var$4 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$5, var$6, var$4);
        var$7 = new jl_String;
        $args = var$5.$buffer;
        var$8 = var$5.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$8);
        var$7.$characters = var$9;
        jl_System_fastArraycopy($args, 0, var$9, 0, var$8);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        var$3.$cause = $e;
        $rt_throw(var$3);
    }
    var jl_SecurityException = $rt_classWithoutFields(jl_RuntimeException);
    var jl_ReflectiveOperationException = $rt_classWithoutFields(jl_Exception);
    var jl_NoSuchMethodException = $rt_classWithoutFields(jl_ReflectiveOperationException);
    function jur_AbstractSet() {
        var a = this; jl_Object.call(a);
        a.$next3 = null;
        a.$isSecondPassVisited = 0;
        a.$index1 = null;
        a.$type3 = 0;
    }
    var jur_AbstractSet_counter = 0;
    function jur_AbstractSet__init_($this) {
        var var$1, var$2;
        var$1 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$1 + 1 | 0;
        var$2 = new jl_AbstractStringBuilder;
        var$2.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
    }
    function jur_AbstractSet_find($this, $stringIndex, $testString, $matchResult) {
        var $length;
        $length = $matchResult.$rightBound0;
        while (true) {
            if ($stringIndex > $length)
                return (-1);
            if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
                break;
            $stringIndex = $stringIndex + 1 | 0;
        }
        return $stringIndex;
    }
    function jur_AbstractSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
        while (true) {
            if ($startSearch < $stringIndex)
                return (-1);
            if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
                break;
            $startSearch = $startSearch + (-1) | 0;
        }
        return $startSearch;
    }
    function jur_AbstractSet_setType($this, $type) {
        $this.$type3 = $type;
    }
    function jur_AbstractSet_getType($this) {
        return $this.$type3;
    }
    function jur_AbstractSet_getQualifiedName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.$index1;
        var$2 = $this.$getName0();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
        var$3.$buffer.data[var$4] = 60;
        var$5 = var$3.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$5, var$1);
        var$4 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
        var$3.$buffer.data[var$4] = 58;
        var$5 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$5, var$2);
        var$4 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
        var$6 = var$3.$buffer;
        var$6.data[var$4] = 62;
        var$1 = new jl_String;
        var$4 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$4);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$4);
        return var$1;
    }
    function jur_AbstractSet_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.$index1;
        var$2 = $this.$getName0();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
        var$3.$buffer.data[var$4] = 60;
        var$5 = var$3.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$5, var$1);
        var$4 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
        var$3.$buffer.data[var$4] = 58;
        var$5 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$5, var$2);
        var$4 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
        var$6 = var$3.$buffer;
        var$6.data[var$4] = 62;
        var$1 = new jl_String;
        var$4 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$4);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$4);
        return var$1;
    }
    function jur_AbstractSet_getNext($this) {
        return $this.$next3;
    }
    function jur_AbstractSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_AbstractSet_first($this, $set) {
        return 1;
    }
    function jur_AbstractSet_processBackRefReplacement($this) {
        return null;
    }
    function jur_AbstractSet_processSecondPass($this) {
        var $set;
        $this.$isSecondPassVisited = 1;
        $set = $this.$next3;
        if ($set !== null) {
            if (!$set.$isSecondPassVisited) {
                $set = $set.$processBackRefReplacement();
                if ($set !== null) {
                    $this.$next3.$isSecondPassVisited = 1;
                    $this.$next3 = $set;
                }
                $this.$next3.$processSecondPass();
            } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
                $this.$next3 = $set.$next3;
        }
    }
    function jur_AbstractSet__clinit_() {
        jur_AbstractSet_counter = 1;
    }
    var otjc_JSWeakMap = $rt_classWithoutFields();
    var otjc_JSWeakRef = $rt_classWithoutFields();
    var otjc_JSMap = $rt_classWithoutFields();
    var otjc_JSFinalizationRegistryConsumer = $rt_classWithoutFields(0);
    var otji_JSWrapper$_clinit_$lambda$_30_0 = $rt_classWithoutFields();
    function otji_JSWrapper$_clinit_$lambda$_30_0_accept$exported$0(var$0, var$1) {
        var var$2;
        otji_JSWrapper_$callClinit();
        var$1 = var$1 === null ? null : var$1 instanceof $rt_objcls() ? var$1 : otji_JSWrapper_wrap(var$1);
        var$2 = otji_JSWrapper_stringWrappers;
        var$1 = var$1 === null ? null : var$1[$rt_jso_marker] === true ? var$1 : var$1.$js;
        var$2.delete(var$1);
    }
    var otjc_JSFinalizationRegistry = $rt_classWithoutFields();
    var otji_JSWrapper$_clinit_$lambda$_30_1 = $rt_classWithoutFields();
    function otji_JSWrapper$_clinit_$lambda$_30_1_accept$exported$0(var$0, var$1) {
        var var$2;
        otji_JSWrapper_$callClinit();
        var$1 = var$1 === null ? null : var$1 instanceof $rt_objcls() ? var$1 : otji_JSWrapper_wrap(var$1);
        var$2 = otji_JSWrapper_numberWrappers;
        var$1 = var$1 === null ? null : var$1[$rt_jso_marker] === true ? var$1 : var$1.$js;
        var$2.delete(var$1);
    }
    var ju_Map$Entry = $rt_classWithoutFields(0);
    function ju_MapEntry() {
        var a = this; jl_Object.call(a);
        a.$key = null;
        a.$value4 = null;
    }
    function ju_Hashtable$Entry() {
        var a = this; ju_MapEntry.call(a);
        a.$next1 = null;
        a.$hashcode = 0;
    }
    function jur_FSet() {
        var a = this; jur_AbstractSet.call(a);
        a.$isBackReferenced = 0;
        a.$groupIndex = 0;
    }
    var jur_FSet_posFSet = null;
    function jur_FSet_$callClinit() {
        jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
        jur_FSet__clinit_();
    }
    function jur_FSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $end, var$5, $shift;
        $end = $this.$groupIndex;
        var$5 = $matchResult.$groupBounds.data;
        $shift = ($end * 2 | 0) + 1 | 0;
        $end = var$5[$shift];
        var$5[$shift] = $stringIndex;
        $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
        if ($shift < 0) {
            $stringIndex = $this.$groupIndex;
            $matchResult.$groupBounds.data[($stringIndex * 2 | 0) + 1 | 0] = $end;
        }
        return $shift;
    }
    function jur_FSet_getGroupIndex($this) {
        return $this.$groupIndex;
    }
    function jur_FSet_getName($this) {
        return $rt_s(192);
    }
    function jur_FSet_hasConsumed($this, $mr) {
        return 0;
    }
    function jur_FSet__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new jur_FSet$PossessiveFSet;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        var$1.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        jur_FSet_posFSet = var$1;
    }
    function jur_Lexer() {
        var a = this; jl_Object.call(a);
        a.$pattern1 = null;
        a.$flags0 = 0;
        a.$mode0 = 0;
        a.$savedMode = 0;
        a.$lookBack = 0;
        a.$ch = 0;
        a.$lookAhead = 0;
        a.$patternFullLength = 0;
        a.$curST = null;
        a.$lookAheadST = null;
        a.$index = 0;
        a.$prevNW = 0;
        a.$curToc = 0;
        a.$lookAheadToc = 0;
        a.$orig = null;
    }
    var jur_Lexer_decompTable = null;
    var jur_Lexer_singleDecompTable = null;
    var jur_Lexer_singleDecompTableSize = 0;
    function jur_Lexer__init_(var_0, var_1) {
        var var_2 = new jur_Lexer();
        jur_Lexer__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_Lexer__init_0($this, $pattern, $flags) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        a: {
            $this.$mode0 = 1;
            $this.$orig = $pattern;
            if (($flags & 16) > 0) {
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(193));
                var$4 = 0;
                while (true) {
                    var$5 = jl_String_indexOf1($pattern, $rt_s(194), var$4);
                    if (var$5 < 0) {
                        var$6 = $pattern.$characters;
                        var$5 = var$6.data.length;
                        var$7 = $rt_compare(var$4, var$5);
                        if (var$7 > 0) {
                            $pattern = new jl_IndexOutOfBoundsException;
                            $pattern.$suppressionEnabled = 1;
                            $pattern.$writableStackTrace = 1;
                            $rt_throw($pattern);
                        }
                        if (!var$7)
                            $pattern = jl_String_EMPTY;
                        else if (!(!var$4 && var$5 == var$5)) {
                            $pattern = new jl_String;
                            var$7 = var$5 - var$4 | 0;
                            var$8 = $rt_createCharArray(var$7);
                            $pattern.$characters = var$8;
                            jl_System_fastArraycopy(var$6, var$4, var$8, 0, var$7);
                        }
                        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $pattern);
                        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(194));
                        $pattern = new jl_String;
                        var$8 = var$3.$buffer;
                        var$5 = var$3.$length;
                        var$6 = $rt_createCharArray(var$5);
                        $pattern.$characters = var$6;
                        jl_System_fastArraycopy(var$8, 0, var$6, 0, var$5);
                        break a;
                    }
                    var$9 = var$5 + 2 | 0;
                    var$7 = $rt_compare(var$4, var$9);
                    if (var$7 > 0)
                        break;
                    if (!var$7)
                        var$10 = jl_String_EMPTY;
                    else if (!var$4 && var$9 == $pattern.$characters.data.length)
                        var$10 = $pattern;
                    else {
                        var$10 = new jl_String;
                        var$6 = $pattern.$characters;
                        var$7 = var$9 - var$4 | 0;
                        var$8 = $rt_createCharArray(var$7);
                        var$10.$characters = var$8;
                        jl_System_fastArraycopy(var$6, var$4, var$8, 0, var$7);
                    }
                    jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$10);
                    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(195));
                    var$4 = var$9;
                }
                $pattern = new jl_IndexOutOfBoundsException;
                $pattern.$suppressionEnabled = 1;
                $pattern.$writableStackTrace = 1;
                $rt_throw($pattern);
            } else if (($flags & 128) <= 0) {
            }
        }
        var$8 = $pattern.$characters.data;
        var$5 = var$8.length;
        var$6 = $rt_createCharArray(var$5 + 2 | 0);
        $this.$pattern1 = var$6;
        var$11 = $rt_createCharArray(var$5);
        var$12 = var$11.data;
        var$7 = 0;
        var$4 = var$12.length;
        while (var$7 < var$4) {
            var$12[var$7] = var$8[var$7];
            var$7 = var$7 + 1 | 0;
        }
        jl_System_fastArraycopy(var$11, 0, var$6, 0, var$5);
        var$8 = $this.$pattern1.data;
        var$7 = var$8.length;
        var$8[var$7 - 1 | 0] = 0;
        var$8[var$7 - 2 | 0] = 0;
        $this.$patternFullLength = var$7;
        $this.$flags0 = $flags;
        jur_Lexer_movePointer($this);
        jur_Lexer_movePointer($this);
    }
    function jur_Lexer_peek($this) {
        return $this.$ch;
    }
    function jur_Lexer_setMode($this, $mode) {
        if ($mode > 0 && $mode < 3)
            $this.$mode0 = $mode;
        if ($mode == 1) {
            $this.$lookAhead = $this.$ch;
            $this.$lookAheadST = $this.$curST;
            $this.$index = $this.$lookAheadToc;
            $this.$lookAheadToc = $this.$curToc;
            jur_Lexer_movePointer($this);
        }
    }
    function jur_Lexer_restoreFlags($this, $flags) {
        var var$2;
        $this.$flags0 = $flags;
        $this.$lookAhead = $this.$ch;
        $this.$lookAheadST = $this.$curST;
        var$2 = $this.$curToc;
        $this.$index = var$2 + 1 | 0;
        $this.$lookAheadToc = var$2;
        jur_Lexer_movePointer($this);
    }
    function jur_Lexer_peekSpecial($this) {
        return $this.$curST;
    }
    function jur_Lexer_isSpecial($this) {
        return $this.$curST === null ? 0 : 1;
    }
    function jur_Lexer_next($this) {
        jur_Lexer_movePointer($this);
        return $this.$lookBack;
    }
    function jur_Lexer_nextSpecial($this) {
        var $res;
        $res = $this.$curST;
        jur_Lexer_movePointer($this);
        return $res;
    }
    function jur_Lexer_lookAhead($this) {
        return $this.$lookAhead;
    }
    function jur_Lexer_back($this) {
        return $this.$lookBack;
    }
    function jur_Lexer_movePointer($this) {
        var $reread, $nonCap, var$3, $behind, $mod, $cs, $negative, $$je;
        $this.$lookBack = $this.$ch;
        $this.$ch = $this.$lookAhead;
        $this.$curST = $this.$lookAheadST;
        $this.$curToc = $this.$lookAheadToc;
        $this.$lookAheadToc = $this.$index;
        while (true) {
            $reread = 0;
            $nonCap = $this.$index >= $this.$pattern1.data.length ? 0 : jur_Lexer_nextCodePoint($this);
            $this.$lookAhead = $nonCap;
            $this.$lookAheadST = null;
            if ($this.$mode0 == 4) {
                if ($nonCap != 92)
                    return;
                $nonCap = $this.$index;
                var$3 = $this.$pattern1.data;
                $nonCap = $nonCap >= var$3.length ? 0 : var$3[jur_Lexer_nextIndex($this)];
                $this.$lookAhead = $nonCap;
                switch ($nonCap) {
                    case 69:
                        break;
                    default:
                        $this.$lookAhead = 92;
                        $this.$index = $this.$prevNW;
                        return;
                }
                $this.$mode0 = $this.$savedMode;
                $this.$lookAhead = $this.$index > ($this.$pattern1.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
            }
            a: {
                $nonCap = $this.$lookAhead;
                if ($nonCap != 92) {
                    $behind = $this.$mode0;
                    if ($behind == 1)
                        switch ($nonCap) {
                            case 36:
                                $this.$lookAhead = (-536870876);
                                break a;
                            case 40:
                                if ($this.$pattern1.data[$this.$index] != 63) {
                                    $this.$lookAhead = (-2147483608);
                                    break a;
                                }
                                jur_Lexer_nextIndex($this);
                                $nonCap = $this.$pattern1.data[$this.$index];
                                $behind = 0;
                                while (true) {
                                    b: {
                                        if ($behind) {
                                            $behind = 0;
                                            switch ($nonCap) {
                                                case 33:
                                                    break;
                                                case 61:
                                                    $this.$lookAhead = (-134217688);
                                                    jur_Lexer_nextIndex($this);
                                                    break b;
                                                default:
                                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Lexer_toString($this), $this.$index));
                                            }
                                            $this.$lookAhead = (-67108824);
                                            jur_Lexer_nextIndex($this);
                                        } else {
                                            switch ($nonCap) {
                                                case 33:
                                                    break;
                                                case 60:
                                                    jur_Lexer_nextIndex($this);
                                                    $nonCap = $this.$pattern1.data[$this.$index];
                                                    $behind = 1;
                                                    break b;
                                                case 61:
                                                    $this.$lookAhead = (-536870872);
                                                    jur_Lexer_nextIndex($this);
                                                    break b;
                                                case 62:
                                                    $this.$lookAhead = (-33554392);
                                                    jur_Lexer_nextIndex($this);
                                                    break b;
                                                default:
                                                    $mod = jur_Lexer_readFlags($this);
                                                    $this.$lookAhead = $mod;
                                                    if ($mod < 256) {
                                                        $this.$flags0 = $mod;
                                                        $mod = $mod << 16;
                                                        $this.$lookAhead = $mod;
                                                        $this.$lookAhead = (-1073741784) | $mod;
                                                        break b;
                                                    }
                                                    $mod = $mod & 255;
                                                    $this.$lookAhead = $mod;
                                                    $this.$flags0 = $mod;
                                                    $mod = $mod << 16;
                                                    $this.$lookAhead = $mod;
                                                    $this.$lookAhead = (-16777176) | $mod;
                                                    break b;
                                            }
                                            $this.$lookAhead = (-268435416);
                                            jur_Lexer_nextIndex($this);
                                        }
                                    }
                                    if (!$behind)
                                        break;
                                }
                                break a;
                            case 41:
                                $this.$lookAhead = (-536870871);
                                break a;
                            case 42:
                            case 43:
                            case 63:
                                $behind = $this.$index;
                                var$3 = $this.$pattern1.data;
                                switch ($behind >= var$3.length ? 42 : var$3[$behind]) {
                                    case 43:
                                        $this.$lookAhead = $nonCap | (-2147483648);
                                        jur_Lexer_nextIndex($this);
                                        break a;
                                    case 63:
                                        $this.$lookAhead = $nonCap | (-1073741824);
                                        jur_Lexer_nextIndex($this);
                                        break a;
                                    default:
                                }
                                $this.$lookAhead = $nonCap | (-536870912);
                                break a;
                            case 46:
                                $this.$lookAhead = (-536870866);
                                break a;
                            case 91:
                                $this.$lookAhead = (-536870821);
                                jur_Lexer_setMode($this, 2);
                                break a;
                            case 93:
                                if ($behind != 2)
                                    break a;
                                $this.$lookAhead = (-536870819);
                                break a;
                            case 94:
                                $this.$lookAhead = (-536870818);
                                break a;
                            case 123:
                                $this.$lookAheadST = jur_Lexer_processQuantifier($this, $nonCap);
                                break a;
                            case 124:
                                $this.$lookAhead = (-536870788);
                                break a;
                            default:
                        }
                    else if ($behind == 2)
                        switch ($nonCap) {
                            case 38:
                                $this.$lookAhead = (-536870874);
                                break a;
                            case 45:
                                $this.$lookAhead = (-536870867);
                                break a;
                            case 91:
                                $this.$lookAhead = (-536870821);
                                break a;
                            case 93:
                                $this.$lookAhead = (-536870819);
                                break a;
                            case 94:
                                $this.$lookAhead = (-536870818);
                                break a;
                            default:
                        }
                } else {
                    $nonCap = $this.$index >= ($this.$pattern1.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                    c: {
                        $this.$lookAhead = $nonCap;
                        switch ($nonCap) {
                            case -1:
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Lexer_toString($this), $this.$index));
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                            case 10:
                            case 11:
                            case 12:
                            case 13:
                            case 14:
                            case 15:
                            case 16:
                            case 17:
                            case 18:
                            case 19:
                            case 20:
                            case 21:
                            case 22:
                            case 23:
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 29:
                            case 30:
                            case 31:
                            case 32:
                            case 33:
                            case 34:
                            case 35:
                            case 36:
                            case 37:
                            case 38:
                            case 39:
                            case 40:
                            case 41:
                            case 42:
                            case 43:
                            case 44:
                            case 45:
                            case 46:
                            case 47:
                            case 58:
                            case 59:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 64:
                            case 91:
                            case 92:
                            case 93:
                            case 94:
                            case 95:
                            case 96:
                            case 118:
                                break;
                            case 48:
                                $this.$lookAhead = jur_Lexer_readOctals($this);
                                break a;
                            case 49:
                            case 50:
                            case 51:
                            case 52:
                            case 53:
                            case 54:
                            case 55:
                            case 56:
                            case 57:
                                if ($this.$mode0 != 1)
                                    break a;
                                $this.$lookAhead = (-2147483648) | $nonCap;
                                break a;
                            case 65:
                                $this.$lookAhead = (-2147483583);
                                break a;
                            case 66:
                                $this.$lookAhead = (-2147483582);
                                break a;
                            case 67:
                            case 69:
                            case 70:
                            case 72:
                            case 73:
                            case 74:
                            case 75:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 82:
                            case 84:
                            case 85:
                            case 86:
                            case 88:
                            case 89:
                            case 103:
                            case 104:
                            case 105:
                            case 106:
                            case 107:
                            case 108:
                            case 109:
                            case 111:
                            case 113:
                            case 121:
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Lexer_toString($this), $this.$index));
                            case 68:
                            case 83:
                            case 87:
                            case 100:
                            case 115:
                            case 119:
                                $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_1($this.$pattern1, $this.$prevNW, 1), 0);
                                $this.$lookAhead = 0;
                                break a;
                            case 71:
                                $this.$lookAhead = (-2147483577);
                                break a;
                            case 80:
                            case 112:
                                break c;
                            case 81:
                                $this.$savedMode = $this.$mode0;
                                $this.$mode0 = 4;
                                $reread = 1;
                                break a;
                            case 90:
                                $this.$lookAhead = (-2147483558);
                                break a;
                            case 97:
                                $this.$lookAhead = 7;
                                break a;
                            case 98:
                                $this.$lookAhead = (-2147483550);
                                break a;
                            case 99:
                                $nonCap = $this.$index;
                                var$3 = $this.$pattern1.data;
                                if ($nonCap >= (var$3.length - 2 | 0))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Lexer_toString($this), $this.$index));
                                $this.$lookAhead = var$3[jur_Lexer_nextIndex($this)] & 31;
                                break a;
                            case 101:
                                $this.$lookAhead = 27;
                                break a;
                            case 102:
                                $this.$lookAhead = 12;
                                break a;
                            case 110:
                                $this.$lookAhead = 10;
                                break a;
                            case 114:
                                $this.$lookAhead = 13;
                                break a;
                            case 116:
                                $this.$lookAhead = 9;
                                break a;
                            case 117:
                                $this.$lookAhead = jur_Lexer_readHex($this, 4);
                                break a;
                            case 120:
                                $this.$lookAhead = jur_Lexer_readHex($this, 2);
                                break a;
                            case 122:
                                $this.$lookAhead = (-2147483526);
                                break a;
                            default:
                        }
                        break a;
                    }
                    $cs = jur_Lexer_parseCharClassName($this);
                    $negative = 0;
                    if ($this.$lookAhead == 80)
                        $negative = 1;
                    try {
                        $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof ju_MissingResourceException) {
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(45), jur_Lexer_toString($this), $this.$index));
                        } else {
                            throw $$e;
                        }
                    }
                    $this.$lookAhead = 0;
                }
            }
            if ($reread)
                continue;
            else
                break;
        }
    }
    function jur_Lexer_parseCharClassName($this) {
        var $sb, $ch, var$3, var$4, var$5, var$6, var$7, var$8;
        $sb = new jl_StringBuilder;
        $sb.$buffer = $rt_createCharArray(10);
        $ch = $this.$index;
        var$3 = $this.$pattern1;
        var$4 = var$3.data;
        if ($ch < (var$4.length - 2 | 0)) {
            if (var$4[$ch] != 123) {
                $sb = new jl_String;
                $this.$prevNW = $ch;
                if ($this.$flags0 & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index = $ch + 1 | 0;
                var$5 = $this.$prevNW;
                jl_String_$callClinit();
                var$4 = $rt_createCharArray(1);
                $sb.$characters = var$4;
                jl_System_fastArraycopy(var$3, var$5, var$4, 0, 1);
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(196));
                jl_AbstractStringBuilder_insert(var$6, var$6.$length, $sb);
                $sb = new jl_String;
                var$3 = var$6.$buffer;
                var$7 = var$6.$length;
                var$4 = $rt_createCharArray(var$7);
                $sb.$characters = var$4;
                jl_System_fastArraycopy(var$3, 0, var$4, 0, var$7);
                return $sb;
            }
            $this.$prevNW = $ch;
            if ($this.$flags0 & 4)
                jur_Lexer_skipComments($this);
            else
                $this.$index = $ch + 1 | 0;
            $ch = 0;
            a: {
                while (true) {
                    var$7 = $this.$index;
                    var$3 = $this.$pattern1.data;
                    if (var$7 >= (var$3.length - 2 | 0))
                        break;
                    $this.$prevNW = var$7;
                    if ($this.$flags0 & 4)
                        jur_Lexer_skipComments($this);
                    else
                        $this.$index = var$7 + 1 | 0;
                    $ch = var$3[$this.$prevNW];
                    if ($ch == 125)
                        break a;
                    var$7 = $sb.$length;
                    jl_AbstractStringBuilder_insertSpace($sb, var$7, var$7 + 1 | 0);
                    $sb.$buffer.data[var$7] = $ch;
                }
            }
            if ($ch != 125) {
                $sb = new jur_PatternSyntaxException;
                var$8 = $this.$orig;
                $ch = $this.$index;
                $sb.$suppressionEnabled = 1;
                $sb.$writableStackTrace = 1;
                $sb.$index0 = (-1);
                $sb.$desc = $rt_s(45);
                $sb.$pattern = var$8;
                $sb.$index0 = $ch;
                $rt_throw($sb);
            }
        }
        $ch = $sb.$length;
        if (!$ch) {
            $sb = new jur_PatternSyntaxException;
            var$8 = $this.$orig;
            $ch = $this.$index;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $sb.$index0 = (-1);
            $sb.$desc = $rt_s(45);
            $sb.$pattern = var$8;
            $sb.$index0 = $ch;
            $rt_throw($sb);
        }
        var$6 = new jl_String;
        var$3 = $sb.$buffer;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray($ch);
        var$6.$characters = var$4;
        jl_System_fastArraycopy(var$3, 0, var$4, 0, $ch);
        var$7 = var$6.$characters.data.length;
        if (var$7 == 1) {
            $sb = new jl_StringBuilder;
            $sb.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($sb, $sb.$length, $rt_s(196));
            jl_AbstractStringBuilder_insert($sb, $sb.$length, var$6);
            var$6 = new jl_String;
            var$3 = $sb.$buffer;
            var$7 = $sb.$length;
            var$4 = $rt_createCharArray(var$7);
            var$6.$characters = var$4;
            jl_System_fastArraycopy(var$3, 0, var$4, 0, var$7);
            return var$6;
        }
        b: {
            c: {
                if (var$7 > 3) {
                    if (var$6 === $rt_s(196) ? 1 : jl_String_startsWith(var$6, $rt_s(196), 0))
                        break c;
                    if (var$6 === $rt_s(197) ? 1 : jl_String_startsWith(var$6, $rt_s(197), 0))
                        break c;
                }
                break b;
            }
            var$6 = jl_String_substring(var$6, 2, var$6.$characters.data.length);
        }
        return var$6;
    }
    function jur_Lexer_processQuantifier($this, $ch) {
        var $sb, $min, $max, var$5, var$6, $mod, var$8, $$je;
        $sb = new jl_StringBuilder;
        $sb.$buffer = $rt_createCharArray(4);
        $min = (-1);
        $max = 2147483647;
        a: {
            while (true) {
                var$5 = $this.$index;
                var$6 = $this.$pattern1.data;
                if (var$5 >= var$6.length)
                    break a;
                $this.$prevNW = var$5;
                if ($this.$flags0 & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index = var$5 + 1 | 0;
                $ch = var$6[$this.$prevNW];
                if ($ch == 125)
                    break a;
                if ($ch == 44 && $min < 0)
                    try {
                        $min = jl_Integer_parseInt(jl_StringBuilder_toString($sb), 10);
                        jl_StringBuilder_delete($sb, 0, jl_StringBuilder_length($sb));
                        continue;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_NumberFormatException) {
                            break;
                        } else {
                            throw $$e;
                        }
                    }
                $mod = $ch & 65535;
                var$5 = $sb.$length;
                jl_AbstractStringBuilder_insertSpace($sb, var$5, var$5 + 1 | 0);
                $sb.$buffer.data[var$5] = $mod;
            }
            $sb = new jur_PatternSyntaxException;
            var$8 = $this.$orig;
            $ch = $this.$index;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $sb.$index0 = (-1);
            $sb.$desc = $rt_s(45);
            $sb.$pattern = var$8;
            $sb.$index0 = $ch;
            $rt_throw($sb);
        }
        if ($ch != 125) {
            $sb = new jur_PatternSyntaxException;
            var$8 = $this.$orig;
            $ch = $this.$index;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $sb.$index0 = (-1);
            $sb.$desc = $rt_s(45);
            $sb.$pattern = var$8;
            $sb.$index0 = $ch;
            $rt_throw($sb);
        }
        if ($sb.$length > 0)
            b: {
                try {
                    $max = jl_Integer_parseInt(jl_StringBuilder_toString($sb), 10);
                    if ($min >= 0)
                        break b;
                    $min = $max;
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                    } else {
                        throw $$e;
                    }
                }
                $sb = new jur_PatternSyntaxException;
                var$8 = $this.$orig;
                $ch = $this.$index;
                $sb.$suppressionEnabled = 1;
                $sb.$writableStackTrace = 1;
                $sb.$index0 = (-1);
                $sb.$desc = $rt_s(45);
                $sb.$pattern = var$8;
                $sb.$index0 = $ch;
                $rt_throw($sb);
            }
        else if ($min < 0) {
            $sb = new jur_PatternSyntaxException;
            var$8 = $this.$orig;
            $ch = $this.$index;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $sb.$index0 = (-1);
            $sb.$desc = $rt_s(45);
            $sb.$pattern = var$8;
            $sb.$index0 = $ch;
            $rt_throw($sb);
        }
        if (($min | $max | ($max - $min | 0)) < 0) {
            $sb = new jur_PatternSyntaxException;
            var$8 = $this.$orig;
            $ch = $this.$index;
            $sb.$suppressionEnabled = 1;
            $sb.$writableStackTrace = 1;
            $sb.$index0 = (-1);
            $sb.$desc = $rt_s(45);
            $sb.$pattern = var$8;
            $sb.$index0 = $ch;
            $rt_throw($sb);
        }
        var$5 = $this.$index;
        var$6 = $this.$pattern1.data;
        $mod = var$5 >= var$6.length ? 42 : var$6[var$5];
        c: {
            switch ($mod) {
                case 43:
                    $this.$lookAhead = (-2147483525);
                    $this.$prevNW = var$5;
                    if ($this.$flags0 & 4)
                        jur_Lexer_skipComments($this);
                    else
                        $this.$index = var$5 + 1 | 0;
                    break c;
                case 63:
                    $this.$lookAhead = (-1073741701);
                    $this.$prevNW = var$5;
                    if ($this.$flags0 & 4)
                        jur_Lexer_skipComments($this);
                    else
                        $this.$index = var$5 + 1 | 0;
                    break c;
                default:
            }
            $this.$lookAhead = (-536870789);
        }
        $sb = new jur_Quantifier;
        $sb.$min1 = $min;
        $sb.$max2 = $max;
        return $sb;
    }
    function jur_Lexer_toString($this) {
        return $this.$orig;
    }
    function jur_Lexer_isEmpty($this) {
        return !$this.$ch && !$this.$lookAhead && $this.$index == $this.$patternFullLength && !($this.$curST === null ? 0 : 1) ? 1 : 0;
    }
    function jur_Lexer_isLetter0($ch) {
        return $ch < 0 ? 0 : 1;
    }
    function jur_Lexer_isLetter($this) {
        var var$1, var$2;
        var$1 = $this.$ch;
        var$2 = !var$1 && !$this.$lookAhead && $this.$index == $this.$patternFullLength && !($this.$curST === null ? 0 : 1) ? 1 : 0;
        return !var$2 && !($this.$curST === null ? 0 : 1) && (var$1 < 0 ? 0 : 1) ? 1 : 0;
    }
    function jur_Lexer_isLowSurrogate($this) {
        var var$1;
        var$1 = $this.$ch;
        return var$1 <= 57343 && var$1 >= 56320 ? 1 : 0;
    }
    function jur_Lexer_isHighSurrogate($ch) {
        return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
    }
    function jur_Lexer_isLowSurrogate0($ch) {
        return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
    }
    function jur_Lexer_readHex($this, $max) {
        var $st, $length, $i, var$5, var$6, var$7, var$8, var$9, $$je;
        $st = new jl_StringBuilder;
        $st.$buffer = $rt_createCharArray($max);
        $length = $this.$pattern1.data.length - 2 | 0;
        $i = 0;
        while (true) {
            var$5 = $rt_compare($i, $max);
            if (var$5 >= 0)
                break;
            var$6 = $this.$index;
            if (var$6 >= $length)
                break;
            var$7 = $this.$pattern1;
            $this.$prevNW = var$6;
            if ($this.$flags0 & 4)
                jur_Lexer_skipComments($this);
            else
                $this.$index = var$6 + 1 | 0;
            var$6 = var$7.data[$this.$prevNW];
            var$8 = $st.$length;
            jl_AbstractStringBuilder_insertSpace($st, var$8, var$8 + 1 | 0);
            $st.$buffer.data[var$8] = var$6;
            $i = $i + 1 | 0;
        }
        if (!var$5)
            a: {
                try {
                    $max = jl_Integer_parseInt(jl_StringBuilder_toString($st), 16);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break a;
                    } else {
                        throw $$e;
                    }
                }
                return $max;
            }
        $st = new jur_PatternSyntaxException;
        var$9 = $this.$orig;
        $max = $this.$index;
        $st.$suppressionEnabled = 1;
        $st.$writableStackTrace = 1;
        $st.$index0 = (-1);
        $st.$desc = $rt_s(45);
        $st.$pattern = var$9;
        $st.$index0 = $max;
        $rt_throw($st);
    }
    function jur_Lexer_readOctals($this) {
        var $max, $i, var$3, $length, $first, var$6, var$7, var$8, var$9, var$10;
        $max = 3;
        $i = 1;
        var$3 = $this.$pattern1.data;
        $length = var$3.length - 2 | 0;
        $first = jl_Character_getNumericValue(var$3[$this.$index]);
        if ($first >= 8)
            $first = (-1);
        switch ($first) {
            case -1:
                break;
            default:
                if ($first > 3)
                    $max = 2;
                var$6 = $this.$index;
                $this.$prevNW = var$6;
                if ($this.$flags0 & 4)
                    jur_Lexer_skipComments($this);
                else
                    $this.$index = var$6 + 1 | 0;
                a: {
                    while (true) {
                        if ($i >= $max)
                            break a;
                        var$7 = $this.$index;
                        if (var$7 >= $length)
                            break a;
                        var$8 = jl_Character_getNumericValue($this.$pattern1.data[var$7]);
                        if (var$8 >= 8)
                            var$8 = (-1);
                        if (var$8 < 0)
                            break;
                        $first = ($first * 8 | 0) + var$8 | 0;
                        var$6 = $this.$index;
                        $this.$prevNW = var$6;
                        if ($this.$flags0 & 4)
                            jur_Lexer_skipComments($this);
                        else
                            $this.$index = var$6 + 1 | 0;
                        $i = $i + 1 | 0;
                    }
                }
                return $first;
        }
        var$9 = new jur_PatternSyntaxException;
        var$10 = $this.$orig;
        $max = $this.$index;
        var$9.$suppressionEnabled = 1;
        var$9.$writableStackTrace = 1;
        var$9.$index0 = (-1);
        var$9.$desc = $rt_s(45);
        var$9.$pattern = var$10;
        var$9.$index0 = $max;
        $rt_throw(var$9);
    }
    function jur_Lexer_readFlags($this) {
        var $pos, $res, var$3, var$4, var$5, var$6, var$7;
        $pos = 1;
        $res = $this.$flags0;
        a: while (true) {
            var$3 = $this.$index;
            var$4 = $this.$pattern1.data;
            if (var$3 >= var$4.length) {
                var$5 = new jur_PatternSyntaxException;
                var$6 = $this.$orig;
                var$5.$suppressionEnabled = 1;
                var$5.$writableStackTrace = 1;
                var$5.$index0 = (-1);
                var$5.$desc = $rt_s(45);
                var$5.$pattern = var$6;
                var$5.$index0 = var$3;
                $rt_throw(var$5);
            }
            b: {
                c: {
                    switch (var$4[var$3]) {
                        case 41:
                            $this.$prevNW = var$3;
                            if ($this.$flags0 & 4)
                                jur_Lexer_skipComments($this);
                            else
                                $this.$index = var$3 + 1 | 0;
                            return $res | 256;
                        case 45:
                            if (!$pos) {
                                var$7 = new jur_PatternSyntaxException;
                                var$6 = $this.$orig;
                                var$7.$suppressionEnabled = 1;
                                var$7.$writableStackTrace = 1;
                                var$7.$index0 = (-1);
                                var$7.$desc = $rt_s(45);
                                var$7.$pattern = var$6;
                                var$7.$index0 = var$3;
                                $rt_throw(var$7);
                            }
                            $pos = 0;
                            break b;
                        case 58:
                            break a;
                        case 100:
                            break c;
                        case 105:
                            $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                            break b;
                        case 109:
                            $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                            break b;
                        case 115:
                            $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                            break b;
                        case 117:
                            $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                            break b;
                        case 120:
                            $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                            break b;
                        default:
                    }
                    break b;
                }
                $res = $pos ? $res | 1 : ($res ^ 1) & $res;
            }
            $this.$prevNW = var$3;
            if ($this.$flags0 & 4)
                jur_Lexer_skipComments($this);
            else
                $this.$index = var$3 + 1 | 0;
        }
        $this.$prevNW = var$3;
        if ($this.$flags0 & 4)
            jur_Lexer_skipComments($this);
        else
            $this.$index = var$3 + 1 | 0;
        return $res;
    }
    function jur_Lexer_nextIndex($this) {
        var var$1;
        var$1 = $this.$index;
        $this.$prevNW = var$1;
        if ($this.$flags0 & 4)
            jur_Lexer_skipComments($this);
        else
            $this.$index = var$1 + 1 | 0;
        return $this.$prevNW;
    }
    function jur_Lexer_skipComments($this) {
        var $length, var$2, var$3, var$4;
        $length = $this.$pattern1.data.length - 2 | 0;
        $this.$index = $this.$index + 1 | 0;
        a: while (true) {
            var$2 = $this.$index;
            if (var$2 < $length) {
                b: {
                    var$2 = $this.$pattern1.data[var$2];
                    switch (var$2) {
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                            break;
                        case 160:
                        case 8199:
                        case 8239:
                            var$2 = 0;
                            break b;
                        default:
                            c: {
                                switch (jl_Character_getType(var$2)) {
                                    case 12:
                                    case 13:
                                    case 14:
                                        break;
                                    default:
                                        var$2 = 0;
                                        break c;
                                }
                                var$2 = 1;
                            }
                            break b;
                    }
                    var$2 = 1;
                }
                if (var$2) {
                    $this.$index = $this.$index + 1 | 0;
                    continue;
                }
            }
            var$2 = $this.$index;
            if (var$2 >= $length)
                break;
            var$3 = $this.$pattern1.data;
            if (var$3[var$2] != 35)
                break;
            $this.$index = var$2 + 1 | 0;
            while (true) {
                var$4 = $this.$index;
                if (var$4 >= $length)
                    continue a;
                var$2 = var$3[var$4];
                if (var$2 != 10 && var$2 != 13 && var$2 != 133 && (var$2 | 1) != 8233 ? 0 : 1)
                    continue a;
                $this.$index = var$4 + 1 | 0;
            }
        }
        return var$2;
    }
    function jur_Lexer_getHangulDecomposition($ch) {
        var $sIndex, $l, $v, $t;
        $sIndex = $ch - 44032 | 0;
        if ($sIndex >= 0 && $sIndex < 11172) {
            $l = 4352 + ($sIndex / 588 | 0) | 0;
            $v = 4449 + (($sIndex % 588 | 0) / 28 | 0) | 0;
            $t = $sIndex % 28 | 0;
            return !$t ? $rt_createIntArrayFromData([$l, $v]) : $rt_createIntArrayFromData([$l, $v, 4519 + $t | 0]);
        }
        return null;
    }
    function jur_Lexer_hasSingleCodepointDecomposition($ch) {
        return jur_Lexer_singleDecompTable.$get($ch) == jur_Lexer_singleDecompTableSize ? 0 : 1;
    }
    function jur_Lexer_hasDecompositionNonNullCanClass($ch) {
        return ($ch != 832 ? 0 : 1) | ($ch != 833 ? 0 : 1) | ($ch != 835 ? 0 : 1) | ($ch != 836 ? 0 : 1);
    }
    function jur_Lexer_nextCodePoint($this) {
        var var$1, $lowExpectedIndex, var$3, $high, $low;
        var$1 = $this.$pattern1;
        $lowExpectedIndex = $this.$index;
        $this.$prevNW = $lowExpectedIndex;
        if ($this.$flags0 & 4)
            jur_Lexer_skipComments($this);
        else
            $this.$index = $lowExpectedIndex + 1 | 0;
        var$1 = var$1.data;
        var$3 = $this.$prevNW;
        $high = var$1[var$3];
        if (($high & 64512) != 55296 ? 0 : 1) {
            $lowExpectedIndex = var$3 + 1 | 0;
            var$1 = $this.$pattern1.data;
            if ($lowExpectedIndex < var$1.length) {
                $low = var$1[$lowExpectedIndex];
                if (($low & 64512) != 56320 ? 0 : 1) {
                    var$3 = $this.$index;
                    $this.$prevNW = var$3;
                    if ($this.$flags0 & 4)
                        jur_Lexer_skipComments($this);
                    else
                        $this.$index = var$3 + 1 | 0;
                    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
                }
            }
        }
        return $high;
    }
    function jur_Lexer_getIndex($this) {
        return $this.$curToc;
    }
    function jur_PatternSyntaxException() {
        var a = this; jl_IllegalArgumentException.call(a);
        a.$desc = null;
        a.$pattern = null;
        a.$index0 = 0;
    }
    function jur_PatternSyntaxException__init_(var_0, var_1, var_2) {
        var var_3 = new jur_PatternSyntaxException();
        jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_PatternSyntaxException__init_0($this, $description, $pattern, $index) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$index0 = (-1);
        $this.$desc = $description;
        $this.$pattern = $pattern;
        $this.$index0 = $index;
    }
    function jur_PatternSyntaxException_getMessage($this) {
        var $filler, var$2, $temp, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        $filler = $rt_s(45);
        var$2 = $this.$index0;
        if (var$2 >= 1) {
            $temp = $rt_createCharArray(var$2);
            var$4 = $temp.data;
            var$2 = 0;
            var$5 = var$4.length;
            if (var$2 > var$5) {
                $filler = new jl_IllegalArgumentException;
                $filler.$suppressionEnabled = 1;
                $filler.$writableStackTrace = 1;
                $rt_throw($filler);
            }
            while (var$2 < var$5) {
                var$6 = var$2 + 1 | 0;
                var$4[var$2] = 32;
                var$2 = var$6;
            }
            $filler = new jl_String;
            jl_String_$callClinit();
            var$4 = $rt_createCharArray(var$5);
            $filler.$characters = var$4;
            jl_System_fastArraycopy($temp, 0, var$4, 0, var$5);
        }
        var$7 = $this.$desc;
        var$8 = $this.$pattern;
        if (var$8 !== null && var$8.$characters.data.length) {
            var$9 = $this.$index0;
            var$10 = new jl_StringBuilder;
            var$10.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert0(var$10, var$10.$length, var$9, 10);
            jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(61));
            jl_AbstractStringBuilder_insert(var$10, var$10.$length, var$8);
            jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(61));
            jl_AbstractStringBuilder_insert(var$10, var$10.$length, $filler);
            $filler = new jl_String;
            $temp = var$10.$buffer;
            var$2 = var$10.$length;
            jl_String_$callClinit();
            var$4 = $rt_createCharArray(var$2);
            $filler.$characters = var$4;
            jl_System_fastArraycopy($temp, 0, var$4, 0, var$2);
        } else
            $filler = $rt_s(45);
        var$8 = new jl_StringBuilder;
        var$8.$buffer = $rt_createCharArray(16);
        var$9 = var$8.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$8, var$9, var$7);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $filler);
        $filler = new jl_String;
        $temp = var$8.$buffer;
        var$2 = var$8.$length;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray(var$2);
        $filler.$characters = var$4;
        jl_System_fastArraycopy($temp, 0, var$4, 0, var$2);
        return $filler;
    }
    var ju_Collection = $rt_classWithoutFields(0);
    var ju_AbstractCollection = $rt_classWithoutFields();
    function ju_AbstractCollection_toArray($this, $a) {
        var var$2, $i, $i_0, var$5, $iter$index, var$7, var$8, var$9, $iter$index_0;
        var$2 = $a.data;
        $i = $this.$size6;
        $i_0 = var$2.length;
        if ($i_0 >= $i)
            while ($i < $i_0) {
                var$2[$i] = null;
                $i = $i + 1 | 0;
            }
        else {
            var$5 = $a.constructor;
            if (var$5 === null)
                $a = null;
            else {
                $a = var$5.classObject;
                if ($a === null) {
                    $a = new jl_Class;
                    $a.$platformClass = var$5;
                    var$2 = $a;
                    var$5.classObject = var$2;
                }
            }
            $a = jl_Class_getComponentType($a);
            if ($a === null) {
                $a = new jl_NullPointerException;
                $a.$suppressionEnabled = 1;
                $a.$writableStackTrace = 1;
                $rt_throw($a);
            }
            if ($a === $rt_cls($rt_voidcls())) {
                $a = new jl_IllegalArgumentException;
                $a.$suppressionEnabled = 1;
                $a.$writableStackTrace = 1;
                $rt_throw($a);
            }
            if ($i < 0) {
                $a = new jl_NegativeArraySizeException;
                $a.$suppressionEnabled = 1;
                $a.$writableStackTrace = 1;
                $rt_throw($a);
            }
            $a = jlr_Array_newInstanceImpl($a.$platformClass, $i);
        }
        $i_0 = 0;
        $iter$index = 0;
        var$7 = $this.$modCount1;
        var$8 = $this.$size6;
        $i = $rt_compare(var$7, var$7);
        a: {
            while (true) {
                var$9 = $rt_compare($iter$index, var$8);
                if (!(var$9 >= 0 ? 0 : 1))
                    break;
                var$7 = $i_0 + 1 | 0;
                if ($i < 0) {
                    $a = new ju_ConcurrentModificationException;
                    $a.$suppressionEnabled = 1;
                    $a.$writableStackTrace = 1;
                    $rt_throw($a);
                }
                $iter$index_0 = $iter$index + 1 | 0;
                if ($iter$index < 0)
                    break a;
                if (var$9 >= 0)
                    break a;
                $a.data[$i_0] = $this.$array4.data[$iter$index];
                $i_0 = var$7;
                $iter$index = $iter$index_0;
            }
            return $a;
        }
        $a = new jl_IndexOutOfBoundsException;
        $a.$suppressionEnabled = 1;
        $a.$writableStackTrace = 1;
        $rt_throw($a);
    }
    function ju_AbstractCollection_addAll($this, $c) {
        var $changed, $iter$index, var$4, var$5, $iter$index_0, var$7, var$8, var$9;
        $changed = 0;
        $iter$index = 0;
        var$4 = $c.$modCount1;
        var$5 = $c.$size6;
        a: {
            while ($iter$index >= var$5 ? 0 : 1) {
                if (var$4 < $c.$modCount1) {
                    $c = new ju_ConcurrentModificationException;
                    $c.$suppressionEnabled = 1;
                    $c.$writableStackTrace = 1;
                    $rt_throw($c);
                }
                $iter$index_0 = $iter$index + 1 | 0;
                if ($iter$index < 0)
                    break a;
                if ($iter$index >= $c.$size6)
                    break a;
                var$7 = $c.$array4.data[$iter$index];
                ju_ArrayList_ensureCapacity($this, $this.$size6 + 1 | 0);
                var$8 = $this.$array4.data;
                var$9 = $this.$size6;
                $this.$size6 = var$9 + 1 | 0;
                var$8[var$9] = var$7;
                $this.$modCount1 = $this.$modCount1 + 1 | 0;
                $changed = 1;
                $iter$index = $iter$index_0;
            }
            return $changed;
        }
        $c = new jl_IndexOutOfBoundsException;
        $c.$suppressionEnabled = 1;
        $c.$writableStackTrace = 1;
        $rt_throw($c);
    }
    var ju_SequencedCollection = $rt_classWithoutFields(0);
    var ju_List = $rt_classWithoutFields(0);
    function ju_AbstractList() {
        ju_AbstractCollection.call(this);
        this.$modCount1 = 0;
    }
    function ju_AbstractList_iterator($this) {
        var var$1;
        var$1 = new ju_AbstractList$1;
        var$1.$this$016 = $this;
        var$1.$modCount2 = $this.$modCount1;
        var$1.$size8 = $this.$size6;
        var$1.$removeIndex0 = (-1);
        return var$1;
    }
    var ju_RandomAccess = $rt_classWithoutFields(0);
    function ju_ArrayList() {
        var a = this; ju_AbstractList.call(a);
        a.$array4 = null;
        a.$size6 = 0;
    }
    function ju_ArrayList__init_() {
        var var_0 = new ju_ArrayList();
        ju_ArrayList__init_0(var_0);
        return var_0;
    }
    function ju_ArrayList__init_1(var_0) {
        var var_1 = new ju_ArrayList();
        ju_ArrayList__init_2(var_1, var_0);
        return var_1;
    }
    function ju_ArrayList__init_3(var_0) {
        var var_1 = new ju_ArrayList();
        ju_ArrayList__init_4(var_1, var_0);
        return var_1;
    }
    function ju_ArrayList__init_0($this) {
        $this.$array4 = $rt_createArray(jl_Object, 10);
    }
    function ju_ArrayList__init_2($this, $initialCapacity) {
        var var$2;
        if ($initialCapacity >= 0) {
            $this.$array4 = $rt_createArray(jl_Object, $initialCapacity);
            return;
        }
        var$2 = new jl_IllegalArgumentException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    function ju_ArrayList__init_4($this, $c) {
        var var$2, var$3, var$4, $iter$index, var$6, $i, var$8, var$9, $iter$index_0;
        var$2 = $c.$size6;
        if (var$2 < 0) {
            $c = new jl_IllegalArgumentException;
            $c.$suppressionEnabled = 1;
            $c.$writableStackTrace = 1;
            $rt_throw($c);
        }
        var$3 = $rt_createArray(jl_Object, var$2);
        var$4 = var$3.data;
        $this.$array4 = var$3;
        $iter$index = 0;
        var$6 = $c.$modCount1;
        $i = 0;
        var$8 = var$4.length;
        var$9 = $rt_compare(var$6, var$6);
        a: {
            while ($i < var$8) {
                if (var$9 < 0) {
                    $c = new ju_ConcurrentModificationException;
                    $c.$suppressionEnabled = 1;
                    $c.$writableStackTrace = 1;
                    $rt_throw($c);
                }
                $iter$index_0 = $iter$index + 1 | 0;
                if ($iter$index < 0)
                    break a;
                if ($iter$index >= var$2)
                    break a;
                var$4[$i] = $c.$array4.data[$iter$index];
                $i = $i + 1 | 0;
                $iter$index = $iter$index_0;
            }
            $this.$size6 = var$8;
            return;
        }
        $c = new jl_IndexOutOfBoundsException;
        $c.$suppressionEnabled = 1;
        $c.$writableStackTrace = 1;
        $rt_throw($c);
    }
    function ju_ArrayList_ensureCapacity($this, $minCapacity) {
        var var$2, var$3, var$4, $newLength, var$6, var$7, var$8, var$9;
        var$2 = $this.$array4;
        var$3 = var$2.data;
        var$4 = var$3.length;
        if (var$4 < $minCapacity) {
            if (var$4 >= 1073741823)
                $newLength = 2147483647;
            else {
                var$6 = var$4 * 2 | 0;
                $newLength = 5;
                if (var$6 > $newLength)
                    $newLength = var$6;
                if ($minCapacity > $newLength)
                    $newLength = $minCapacity;
            }
            var$7 = var$2.constructor;
            if (var$7 === null)
                var$8 = null;
            else {
                var$8 = var$7.classObject;
                if (var$8 === null) {
                    var$8 = new jl_Class;
                    var$8.$platformClass = var$7;
                    var$9 = var$8;
                    var$7.classObject = var$9;
                }
            }
            var$7 = jl_Class_getComponentType(var$8);
            if (var$7 === null) {
                var$8 = new jl_NullPointerException;
                var$8.$suppressionEnabled = 1;
                var$8.$writableStackTrace = 1;
                $rt_throw(var$8);
            }
            if (var$7 === $rt_cls($rt_voidcls())) {
                var$8 = new jl_IllegalArgumentException;
                var$8.$suppressionEnabled = 1;
                var$8.$writableStackTrace = 1;
                $rt_throw(var$8);
            }
            if ($newLength < 0) {
                var$8 = new jl_NegativeArraySizeException;
                var$8.$suppressionEnabled = 1;
                var$8.$writableStackTrace = 1;
                $rt_throw(var$8);
            }
            var$9 = jlr_Array_newInstanceImpl(var$7.$platformClass, $newLength);
            if ($newLength < var$4)
                var$4 = $newLength;
            $minCapacity = 0;
            while ($minCapacity < var$4) {
                var$9.data[$minCapacity] = var$3[$minCapacity];
                $minCapacity = $minCapacity + 1 | 0;
            }
            $this.$array4 = var$9;
        }
    }
    function ju_ArrayList_get($this, $index) {
        var var$2;
        if ($index >= 0 && $index < $this.$size6)
            return $this.$array4.data[$index];
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    function ju_ArrayList_size($this) {
        return $this.$size6;
    }
    function ju_ArrayList_add($this, $element) {
        var var$2, var$3;
        ju_ArrayList_ensureCapacity($this, $this.$size6 + 1 | 0);
        var$2 = $this.$array4.data;
        var$3 = $this.$size6;
        $this.$size6 = var$3 + 1 | 0;
        var$2[var$3] = $element;
        $this.$modCount1 = $this.$modCount1 + 1 | 0;
        return 1;
    }
    function ju_ArrayList_add0($this, $index, $element) {
        var var$3, $i, var$5;
        if ($index >= 0) {
            var$3 = $this.$size6;
            if ($index <= var$3) {
                ju_ArrayList_ensureCapacity($this, var$3 + 1 | 0);
                var$3 = $this.$size6;
                $i = var$3;
                while ($i > $index) {
                    var$5 = $this.$array4.data;
                    var$5[$i] = var$5[$i - 1 | 0];
                    $i = $i + (-1) | 0;
                }
                $this.$array4.data[$index] = $element;
                $this.$size6 = var$3 + 1 | 0;
                $this.$modCount1 = $this.$modCount1 + 1 | 0;
                return;
            }
        }
        $element = new jl_IndexOutOfBoundsException;
        $element.$suppressionEnabled = 1;
        $element.$writableStackTrace = 1;
        $rt_throw($element);
    }
    function ju_ArrayList_remove($this, $i) {
        var var$2, var$3, $old, $i_0;
        if ($i >= 0) {
            var$2 = $this.$size6;
            if ($i < var$2) {
                var$3 = $this.$array4.data;
                $old = var$3[$i];
                var$2 = var$2 - 1 | 0;
                $this.$size6 = var$2;
                while ($i < var$2) {
                    $i_0 = $i + 1 | 0;
                    var$3[$i] = var$3[$i_0];
                    $i = $i_0;
                }
                var$3[var$2] = null;
                $this.$modCount1 = $this.$modCount1 + 1 | 0;
                return $old;
            }
        }
        $old = new jl_IndexOutOfBoundsException;
        $old.$suppressionEnabled = 1;
        $old.$writableStackTrace = 1;
        $rt_throw($old);
    }
    var jur_NonCapFSet = $rt_classWithoutFields(jur_FSet);
    function jur_NonCapFSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $gr, var$5;
        $gr = $this.$groupIndex;
        var$5 = $matchResult.$consumers.data;
        var$5[$gr] = $stringIndex - var$5[$gr] | 0;
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    function jur_NonCapFSet_getName($this) {
        return $rt_s(198);
    }
    function jur_NonCapFSet_hasConsumed($this, $mr) {
        return 0;
    }
    var jur_AheadFSet = $rt_classWithoutFields(jur_FSet);
    function jur_AheadFSet_matches($this, $stringIndex, $testString, $matchResult) {
        return $stringIndex;
    }
    function jur_AheadFSet_getName($this) {
        return $rt_s(199);
    }
    var jur_BehindFSet = $rt_classWithoutFields(jur_FSet);
    function jur_BehindFSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $gr;
        $gr = $this.$groupIndex;
        if ($matchResult.$consumers.data[$gr] != $stringIndex)
            $stringIndex = (-1);
        return $stringIndex;
    }
    function jur_BehindFSet_getName($this) {
        return $rt_s(200);
    }
    function jur_AtomicFSet() {
        jur_FSet.call(this);
        this.$index2 = 0;
    }
    function jur_AtomicFSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $gr, var$5;
        $gr = $this.$groupIndex;
        var$5 = $matchResult.$consumers.data;
        var$5[$gr] = $stringIndex - var$5[$gr] | 0;
        $this.$index2 = $stringIndex;
        return $stringIndex;
    }
    function jur_AtomicFSet_getName($this) {
        return $rt_s(201);
    }
    function jur_AtomicFSet_hasConsumed($this, $mr) {
        return 0;
    }
    var jur_FinalSet = $rt_classWithoutFields(jur_FSet);
    function jur_FinalSet__init_() {
        var var_0 = new jur_FinalSet();
        jur_FinalSet__init_0(var_0);
        return var_0;
    }
    function jur_FinalSet__init_0($this) {
        var var$1, var$2;
        jur_FSet_$callClinit();
        var$1 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$1 + 1 | 0;
        var$2 = new jl_AbstractStringBuilder;
        var$2.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
        $this.$groupIndex = 0;
    }
    function jur_FinalSet_matches($this, $stringIndex, $testString, $matchResult) {
        if ($matchResult.$mode != 1 && $stringIndex != $matchResult.$rightBound0)
            return (-1);
        $matchResult.$valid1 = 1;
        $matchResult.$groupBounds.data[1] = $stringIndex;
        return $stringIndex;
    }
    function jur_FinalSet_getName($this) {
        return $rt_s(202);
    }
    function jur_LeafSet() {
        jur_AbstractSet.call(this);
        this.$charCount = 0;
    }
    function jur_LeafSet__init_($this, $next) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$next3 = $next;
        $this.$charCount = 1;
        $this.$type3 = 1;
    }
    function jur_LeafSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $shift;
        if (($stringIndex + $this.$charCount0() | 0) > $matchResult.$rightBound0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$accepts($stringIndex, $testString);
        if ($shift < 0)
            return (-1);
        return $this.$next3.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    function jur_LeafSet_charCount($this) {
        return $this.$charCount;
    }
    function jur_LeafSet_hasConsumed($this, $mr) {
        return 1;
    }
    var jur_EmptySet = $rt_classWithoutFields(jur_LeafSet);
    function jur_EmptySet__init_(var_0) {
        var var_1 = new jur_EmptySet();
        jur_EmptySet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_EmptySet__init_0($this, $next) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$next3 = $next;
        $this.$charCount = 1;
        $this.$type3 = 1;
        $this.$charCount = 0;
    }
    function jur_EmptySet_accepts($this, $stringIndex, $testString) {
        return 0;
    }
    function jur_EmptySet_find($this, $stringIndex, $testString, $matchResult) {
        var $strLength, $startStr, $low, var$7, $high;
        $strLength = $matchResult.$rightBound0;
        $startStr = $matchResult.$leftBound0;
        a: {
            b: {
                while (true) {
                    $low = $rt_compare($stringIndex, $strLength);
                    if ($low > 0)
                        return (-1);
                    if ($low < 0) {
                        if ($stringIndex < 0)
                            break b;
                        var$7 = $testString.$characters.data;
                        $high = var$7.length;
                        if ($stringIndex >= $high)
                            break b;
                        if (((var$7[$stringIndex] & 64512) != 56320 ? 0 : 1) && $stringIndex > $startStr) {
                            $low = $stringIndex - 1 | 0;
                            if ($low < 0)
                                break a;
                            if ($low >= $high)
                                break a;
                            if ((var$7[$low] & 64512) != 55296 ? 0 : 1) {
                                $stringIndex = $stringIndex + 1 | 0;
                                continue;
                            }
                        }
                    }
                    if ($this.$next3.$matches($stringIndex, $testString, $matchResult) >= 0)
                        break;
                    $stringIndex = $stringIndex + 1 | 0;
                }
                return $stringIndex;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_EmptySet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
        var $strLength, $startStr, var$7, var$8, $low;
        $strLength = $matchResult.$rightBound0;
        $startStr = $matchResult.$leftBound0;
        a: {
            b: {
                while (true) {
                    if ($startSearch < $stringIndex)
                        return (-1);
                    if ($startSearch < $strLength) {
                        if ($startSearch < 0)
                            break b;
                        var$7 = $testString.$characters.data;
                        var$8 = var$7.length;
                        if ($startSearch >= var$8)
                            break b;
                        if (((var$7[$startSearch] & 64512) != 56320 ? 0 : 1) && $startSearch > $startStr) {
                            $low = $startSearch - 1 | 0;
                            if ($low < 0)
                                break a;
                            if ($low >= var$8)
                                break a;
                            if ((var$7[$low] & 64512) != 55296 ? 0 : 1) {
                                $startSearch = $startSearch + (-1) | 0;
                                continue;
                            }
                        }
                    }
                    if ($this.$next3.$matches($startSearch, $testString, $matchResult) >= 0)
                        break;
                    $startSearch = $startSearch + (-1) | 0;
                }
                return $startSearch;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_EmptySet_getName($this) {
        return $rt_s(203);
    }
    function jur_EmptySet_hasConsumed($this, $mr) {
        return 0;
    }
    function jur_JointSet() {
        var a = this; jur_AbstractSet.call(a);
        a.$children = null;
        a.$fSet = null;
        a.$groupIndex0 = 0;
    }
    function jur_JointSet__init_1() {
        var var_0 = new jur_JointSet();
        jur_JointSet__init_0(var_0);
        return var_0;
    }
    function jur_JointSet__init_(var_0, var_1) {
        var var_2 = new jur_JointSet();
        jur_JointSet__init_2(var_2, var_0, var_1);
        return var_2;
    }
    function jur_JointSet__init_0($this) {
        var var$1, var$2;
        var$1 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$1 + 1 | 0;
        var$2 = new jl_AbstractStringBuilder;
        var$2.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
    }
    function jur_JointSet__init_2($this, $children, $fSet) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$children = $children;
        $this.$fSet = $fSet;
        $this.$groupIndex0 = $fSet.$groupIndex;
    }
    function jur_JointSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $e, $size, var$6, $shift, $start, $i;
        $e = $this.$children;
        if ($e === null)
            return (-1);
        $size = $this.$groupIndex0;
        var$6 = $matchResult.$groupBounds.data;
        $shift = $size * 2 | 0;
        $start = var$6[$shift];
        var$6[$shift] = $stringIndex;
        $size = $e.$size6;
        $i = 0;
        a: {
            while (true) {
                if ($i >= $size) {
                    $stringIndex = $this.$groupIndex0;
                    $matchResult.$groupBounds.data[$stringIndex * 2 | 0] = $start;
                    return (-1);
                }
                $e = $this.$children;
                if ($i < 0)
                    break a;
                if ($i >= $e.$size6)
                    break a;
                $shift = $e.$array4.data[$i].$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $i = $i + 1 | 0;
            }
            return $shift;
        }
        $testString = new jl_IndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_JointSet_setNext($this, $next) {
        $this.$fSet.$next3 = $next;
    }
    function jur_JointSet_getName($this) {
        return $rt_s(204);
    }
    function jur_JointSet_first($this, $set) {
        var var$2, $i$index, var$4, var$5, $i$index_0;
        a: {
            b: {
                var$2 = $this.$children;
                if (var$2 !== null) {
                    $i$index = 0;
                    var$4 = var$2.$modCount1;
                    var$5 = var$2.$size6;
                    while (true) {
                        if (!($i$index >= var$5 ? 0 : 1))
                            break b;
                        if (var$4 < var$2.$modCount1) {
                            $set = new ju_ConcurrentModificationException;
                            $set.$suppressionEnabled = 1;
                            $set.$writableStackTrace = 1;
                            $rt_throw($set);
                        }
                        $i$index_0 = $i$index + 1 | 0;
                        if ($i$index < 0)
                            break a;
                        if ($i$index >= var$2.$size6)
                            break a;
                        if (var$2.$array4.data[$i$index].$first1($set))
                            break;
                        $i$index = $i$index_0;
                    }
                    return 1;
                }
            }
            return 0;
        }
        $set = new jl_IndexOutOfBoundsException;
        $set.$suppressionEnabled = 1;
        $set.$writableStackTrace = 1;
        $rt_throw($set);
    }
    function jur_JointSet_hasConsumed($this, $matchResult) {
        var var$2, var$3, var$4;
        var$2 = $this.$groupIndex0;
        var$3 = $matchResult.$groupBounds.data;
        var$2 = var$2 * 2 | 0;
        var$4 = var$2 + 1 | 0;
        return var$3[var$4] >= 0 && var$3[var$2] == var$3[var$4] ? 0 : 1;
    }
    function jur_JointSet_processSecondPass($this) {
        var $child, $childrenSize, $i, $set;
        $this.$isSecondPassVisited = 1;
        $child = $this.$fSet;
        if ($child !== null && !$child.$isSecondPassVisited)
            jur_AbstractSet_processSecondPass($child);
        a: {
            b: {
                $child = $this.$children;
                if ($child !== null) {
                    $childrenSize = $child.$size6;
                    $i = 0;
                    while (true) {
                        if ($i >= $childrenSize)
                            break b;
                        $child = $this.$children;
                        if ($i < 0)
                            break a;
                        if ($i >= $child.$size6)
                            break a;
                        $child = $child.$array4.data[$i];
                        $set = $child.$processBackRefReplacement();
                        if ($set === null)
                            $set = $child;
                        else {
                            $child.$isSecondPassVisited = 1;
                            ju_ArrayList_remove($this.$children, $i);
                            ju_ArrayList_add0($this.$children, $i, $set);
                        }
                        if (!$set.$isSecondPassVisited)
                            $set.$processSecondPass();
                        $i = $i + 1 | 0;
                    }
                }
            }
            if ($this.$next3 !== null)
                jur_AbstractSet_processSecondPass($this);
            return;
        }
        $child = new jl_IndexOutOfBoundsException;
        $child.$suppressionEnabled = 1;
        $child.$writableStackTrace = 1;
        $rt_throw($child);
    }
    var jur_NonCapJointSet = $rt_classWithoutFields(jur_JointSet);
    function jur_NonCapJointSet__init_(var_0, var_1) {
        var var_2 = new jur_NonCapJointSet();
        jur_NonCapJointSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_NonCapJointSet__init_0($this, $children, $fSet) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$children = $children;
        $this.$fSet = $fSet;
        $this.$groupIndex0 = $fSet.$groupIndex;
    }
    function jur_NonCapJointSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $i, var$5, $start, $size, $e, $shift;
        $i = $this.$groupIndex0;
        var$5 = $matchResult.$consumers.data;
        $start = var$5[$i];
        var$5[$i] = $stringIndex;
        $size = $this.$children.$size6;
        $i = 0;
        a: {
            while (true) {
                if ($i >= $size) {
                    $stringIndex = $this.$groupIndex0;
                    $matchResult.$consumers.data[$stringIndex] = $start;
                    return (-1);
                }
                $e = $this.$children;
                if ($i < 0)
                    break a;
                if ($i >= $e.$size6)
                    break a;
                $shift = $e.$array4.data[$i].$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $i = $i + 1 | 0;
            }
            return $shift;
        }
        $testString = new jl_IndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_NonCapJointSet_getName($this) {
        return $rt_s(205);
    }
    function jur_NonCapJointSet_hasConsumed($this, $matchResult) {
        var $cons;
        $cons = $this.$groupIndex0;
        return !$matchResult.$consumers.data[$cons] ? 0 : 1;
    }
    var jur_AtomicJointSet = $rt_classWithoutFields(jur_NonCapJointSet);
    function jur_AtomicJointSet__init_(var_0, var_1) {
        var var_2 = new jur_AtomicJointSet();
        jur_AtomicJointSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_AtomicJointSet__init_0($this, $children, $fSet) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$children = $children;
        $this.$fSet = $fSet;
        $this.$groupIndex0 = $fSet.$groupIndex;
    }
    function jur_AtomicJointSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $shift, var$5, $start, $size, $i, $e;
        $shift = $this.$groupIndex0;
        var$5 = $matchResult.$consumers.data;
        $start = var$5[$shift];
        var$5[$shift] = $stringIndex;
        $size = $this.$children.$size6;
        $i = 0;
        a: {
            while ($i < $size) {
                $e = $this.$children;
                if ($i < 0)
                    break a;
                if ($i >= $e.$size6)
                    break a;
                if ($e.$array4.data[$i].$matches($stringIndex, $testString, $matchResult) >= 0)
                    return $this.$next3.$matches($this.$fSet.$index2, $testString, $matchResult);
                $i = $i + 1 | 0;
            }
            $stringIndex = $this.$groupIndex0;
            $matchResult.$consumers.data[$stringIndex] = $start;
            return (-1);
        }
        $testString = new jl_IndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_AtomicJointSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_AtomicJointSet_getName($this) {
        return $rt_s(205);
    }
    var jur_PositiveLookAhead = $rt_classWithoutFields(jur_AtomicJointSet);
    function jur_PositiveLookAhead__init_(var_0, var_1) {
        var var_2 = new jur_PositiveLookAhead();
        jur_PositiveLookAhead__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_PositiveLookAhead__init_0($this, $children, $fSet) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$children = $children;
        $this.$fSet = $fSet;
        $this.$groupIndex0 = $fSet.$groupIndex;
    }
    function jur_PositiveLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
        var $size, $i, $e;
        $size = $this.$children.$size6;
        $i = 0;
        a: {
            while ($i < $size) {
                $e = $this.$children;
                if ($i < 0)
                    break a;
                if ($i >= $e.$size6)
                    break a;
                if ($e.$array4.data[$i].$matches($stringIndex, $testString, $matchResult) >= 0)
                    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
                $i = $i + 1 | 0;
            }
            return (-1);
        }
        $testString = new jl_IndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_PositiveLookAhead_hasConsumed($this, $matchResult) {
        return 0;
    }
    function jur_PositiveLookAhead_getName($this) {
        return $rt_s(206);
    }
    var jur_NegativeLookAhead = $rt_classWithoutFields(jur_AtomicJointSet);
    function jur_NegativeLookAhead__init_(var_0, var_1) {
        var var_2 = new jur_NegativeLookAhead();
        jur_NegativeLookAhead__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_NegativeLookAhead__init_0($this, $children, $fSet) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$children = $children;
        $this.$fSet = $fSet;
        $this.$groupIndex0 = $fSet.$groupIndex;
    }
    function jur_NegativeLookAhead_matches($this, $stringIndex, $testString, $matchResult) {
        var $size, $i, $e;
        $size = $this.$children.$size6;
        $i = 0;
        a: {
            while (true) {
                if ($i >= $size)
                    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
                $e = $this.$children;
                if ($i < 0)
                    break a;
                if ($i >= $e.$size6)
                    break a;
                if ($e.$array4.data[$i].$matches($stringIndex, $testString, $matchResult) >= 0)
                    break;
                $i = $i + 1 | 0;
            }
            return (-1);
        }
        $testString = new jl_IndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_NegativeLookAhead_hasConsumed($this, $matchResult) {
        return 0;
    }
    function jur_NegativeLookAhead_getName($this) {
        return $rt_s(207);
    }
    var jur_PositiveLookBehind = $rt_classWithoutFields(jur_AtomicJointSet);
    function jur_PositiveLookBehind__init_(var_0, var_1) {
        var var_2 = new jur_PositiveLookBehind();
        jur_PositiveLookBehind__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_PositiveLookBehind__init_0($this, $children, $fSet) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$children = $children;
        $this.$fSet = $fSet;
        $this.$groupIndex0 = $fSet.$groupIndex;
    }
    function jur_PositiveLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
        var $size, $leftBound, $shift, $i, $e;
        $size = $this.$children.$size6;
        $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound0;
        a: {
            b: {
                $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0) {
                    $i = $this.$groupIndex0;
                    $matchResult.$consumers.data[$i] = $stringIndex;
                    $i = 0;
                    while (true) {
                        if ($i >= $size)
                            break b;
                        $e = $this.$children;
                        if ($i < 0)
                            break a;
                        if ($i >= $e.$size6)
                            break a;
                        if ($e.$array4.data[$i].$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                            $stringIndex = $this.$groupIndex0;
                            $matchResult.$consumers.data[$stringIndex] = (-1);
                            return $shift;
                        }
                        $i = $i + 1 | 0;
                    }
                }
            }
            return (-1);
        }
        $testString = new jl_IndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_PositiveLookBehind_hasConsumed($this, $matchResult) {
        return 0;
    }
    function jur_PositiveLookBehind_getName($this) {
        return $rt_s(208);
    }
    var jur_NegativeLookBehind = $rt_classWithoutFields(jur_AtomicJointSet);
    function jur_NegativeLookBehind__init_(var_0, var_1) {
        var var_2 = new jur_NegativeLookBehind();
        jur_NegativeLookBehind__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_NegativeLookBehind__init_0($this, $children, $fSet) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$children = $children;
        $this.$fSet = $fSet;
        $this.$groupIndex0 = $fSet.$groupIndex;
    }
    function jur_NegativeLookBehind_matches($this, $stringIndex, $testString, $matchResult) {
        var $size, $i, $e;
        $size = $this.$children.$size6;
        $i = $this.$groupIndex0;
        $matchResult.$consumers.data[$i] = $stringIndex;
        $i = 0;
        a: {
            while (true) {
                if ($i >= $size)
                    return $this.$next3.$matches($stringIndex, $testString, $matchResult);
                $e = $this.$children;
                if ($i < 0)
                    break a;
                if ($i >= $e.$size6)
                    break a;
                if ($e.$array4.data[$i].$findBack(0, $stringIndex, $testString, $matchResult) >= 0)
                    break;
                $i = $i + 1 | 0;
            }
            return (-1);
        }
        $testString = new jl_IndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_NegativeLookBehind_hasConsumed($this, $matchResult) {
        return 0;
    }
    function jur_NegativeLookBehind_getName($this) {
        return $rt_s(209);
    }
    function jur_SingleSet() {
        jur_JointSet.call(this);
        this.$kid = null;
    }
    function jur_SingleSet__init_(var_0, var_1) {
        var var_2 = new jur_SingleSet();
        jur_SingleSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_SingleSet__init_0($this, $child, $fSet) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$kid = $child;
        $this.$fSet = $fSet;
        $this.$groupIndex0 = $fSet.$groupIndex;
    }
    function jur_SingleSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $shift, var$5, $start;
        $shift = $this.$groupIndex0;
        var$5 = $matchResult.$groupBounds.data;
        $shift = $shift * 2 | 0;
        $start = var$5[$shift];
        var$5[$shift] = $stringIndex;
        $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $shift;
        $shift = $this.$groupIndex0;
        $matchResult.$groupBounds.data[$shift * 2 | 0] = $start;
        return (-1);
    }
    function jur_SingleSet_find($this, $stringIndex, $testString, $matchResult) {
        var $res;
        $res = $this.$kid.$find0($stringIndex, $testString, $matchResult);
        if ($res >= 0) {
            $stringIndex = $this.$groupIndex0;
            $matchResult.$groupBounds.data[$stringIndex * 2 | 0] = $res;
        }
        return $res;
    }
    function jur_SingleSet_findBack($this, $stringIndex, $lastIndex, $testString, $matchResult) {
        var $res;
        $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
        if ($res >= 0) {
            $stringIndex = $this.$groupIndex0;
            $matchResult.$groupBounds.data[$stringIndex * 2 | 0] = $res;
        }
        return $res;
    }
    function jur_SingleSet_first($this, $set) {
        return $this.$kid.$first1($set);
    }
    function jur_SingleSet_processBackRefReplacement($this) {
        var $set, var$2, var$3, var$4, var$5;
        $set = new jur_BackReferencedSingleSet;
        var$2 = $this.$kid;
        var$3 = $this.$fSet;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $set.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $set.$kid = var$2;
        $set.$fSet = var$3;
        $set.$groupIndex0 = var$3.$groupIndex;
        $this.$next3 = $set;
        return $set;
    }
    function jur_SingleSet_processSecondPass($this) {
        var $set;
        $this.$isSecondPassVisited = 1;
        $set = $this.$fSet;
        if ($set !== null && !$set.$isSecondPassVisited)
            jur_AbstractSet_processSecondPass($set);
        $set = $this.$kid;
        if ($set !== null && !$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$kid.$isSecondPassVisited = 1;
                $this.$kid = $set;
            }
            $this.$kid.$processSecondPass();
        }
    }
    var jur_SpecialToken = $rt_classWithoutFields();
    function jur_AbstractCharClass() {
        var a = this; jur_SpecialToken.call(a);
        a.$alt0 = 0;
        a.$altSurrogates = 0;
        a.$lowHighSurrogates = null;
        a.$charClassWithoutSurrogates = null;
        a.$charClassWithSurrogates = null;
        a.$mayContainSupplCodepoints = 0;
    }
    var jur_AbstractCharClass_charClasses = null;
    function jur_AbstractCharClass_$callClinit() {
        jur_AbstractCharClass_$callClinit = $rt_eraseClinit(jur_AbstractCharClass);
        jur_AbstractCharClass__clinit_();
    }
    function jur_AbstractCharClass__init_($this) {
        var var$1;
        jur_AbstractCharClass_$callClinit();
        var$1 = new ju_BitSet;
        var$1.$data2 = $rt_createIntArray(64);
        $this.$lowHighSurrogates = var$1;
    }
    function jur_AbstractCharClass_getBits($this) {
        return null;
    }
    function jur_AbstractCharClass_getLowHighSurrogates($this) {
        return $this.$lowHighSurrogates;
    }
    function jur_AbstractCharClass_hasLowHighSurrogates($this) {
        return !$this.$altSurrogates ? (ju_BitSet_nextSetBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1) : ju_BitSet_nextClearBit($this.$lowHighSurrogates, 0) >= 2048 ? 0 : 1;
    }
    function jur_AbstractCharClass_mayContainSupplCodepoints($this) {
        return $this.$mayContainSupplCodepoints;
    }
    function jur_AbstractCharClass_getInstance($this) {
        return $this;
    }
    function jur_AbstractCharClass_getSurrogates($this) {
        var $lHS, var$2;
        if ($this.$charClassWithSurrogates === null) {
            $lHS = $this.$getLowHighSurrogates();
            var$2 = new jur_AbstractCharClass$1;
            var$2.$this$017 = $this;
            var$2.$val$lHS = $lHS;
            $lHS = new ju_BitSet;
            $lHS.$data2 = $rt_createIntArray(64);
            var$2.$lowHighSurrogates = $lHS;
            $this.$charClassWithSurrogates = var$2;
            jur_AbstractCharClass_setNegative(var$2, $this.$altSurrogates);
        }
        return $this.$charClassWithSurrogates;
    }
    function jur_AbstractCharClass_getWithoutSurrogates($this) {
        var $lHS, var$2;
        if ($this.$charClassWithoutSurrogates === null) {
            $lHS = $this.$getLowHighSurrogates();
            var$2 = new jur_AbstractCharClass$2;
            var$2.$this$018 = $this;
            var$2.$val$lHS0 = $lHS;
            var$2.$val$thisClass = $this;
            $lHS = new ju_BitSet;
            $lHS.$data2 = $rt_createIntArray(64);
            var$2.$lowHighSurrogates = $lHS;
            $this.$charClassWithoutSurrogates = var$2;
            jur_AbstractCharClass_setNegative(var$2, $this.$alt0);
            $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints;
        }
        return $this.$charClassWithoutSurrogates;
    }
    function jur_AbstractCharClass_hasUCI($this) {
        return 0;
    }
    function jur_AbstractCharClass_setNegative($this, $value) {
        var var$2;
        var$2 = $this.$alt0;
        if (var$2 ^ $value) {
            $this.$alt0 = var$2 ? 0 : 1;
            $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        }
        if (!$this.$mayContainSupplCodepoints)
            $this.$mayContainSupplCodepoints = 1;
        return $this;
    }
    function jur_AbstractCharClass_isNegative($this) {
        return $this.$alt0;
    }
    function jur_AbstractCharClass_getPredefinedClass($name, $negative) {
        jur_AbstractCharClass_$callClinit();
        $name = jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name);
        if (!$negative && $name.$posValue === null)
            $name.$posValue = $name.$computeValue();
        else if ($negative && $name.$negValue === null)
            $name.$negValue = jur_AbstractCharClass_setNegative($name.$computeValue(), 1);
        return $negative ? $name.$negValue : $name.$posValue;
    }
    function jur_AbstractCharClass__clinit_() {
        var var$1;
        var$1 = new jur_AbstractCharClass$PredefinedCharacterClasses;
        jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
        jur_AbstractCharClass_charClasses = var$1;
    }
    function jur_CharClass() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$ci = 0;
        a.$uci = 0;
        a.$hasUCI0 = 0;
        a.$invertedSurrogates = 0;
        a.$inverted = 0;
        a.$hideBits = 0;
        a.$bits = null;
        a.$nonBitSet = null;
    }
    function jur_CharClass_add($this, $ch) {
        var var$2;
        a: {
            if ($this.$ci) {
                b: {
                    if (!($ch >= 97 && $ch <= 122)) {
                        if ($ch < 65)
                            break b;
                        if ($ch > 90)
                            break b;
                    }
                    if ($this.$inverted) {
                        ju_BitSet_clear($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                        break a;
                    }
                    ju_BitSet_set($this.$bits, jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                if ($this.$uci && $ch > 128) {
                    $this.$hasUCI0 = 1;
                    if (jl_Character_upperCaseMapping === null) {
                        if (jl_Character_$$metadata$$1 === null)
                            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                    }
                    $ch = jl_Character_mapChar(jl_Character_upperCaseMapping, $ch);
                    if (jl_Character_lowerCaseMapping === null) {
                        if (jl_Character_$$metadata$$0 === null)
                            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                    }
                    $ch = jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch);
                }
            }
        }
        var$2 = $ch <= 56319 && $ch >= 55296 ? 1 : 0;
        if (!(!var$2 && !($ch <= 57343 && $ch >= 56320 ? 1 : 0))) {
            if ($this.$invertedSurrogates)
                ju_BitSet_clear($this.$lowHighSurrogates, $ch - 55296 | 0);
            else
                ju_BitSet_set($this.$lowHighSurrogates, $ch - 55296 | 0);
        }
        if ($this.$inverted)
            ju_BitSet_clear($this.$bits, $ch);
        else
            ju_BitSet_set($this.$bits, $ch);
        if (!$this.$mayContainSupplCodepoints && ($ch >= 65536 && $ch <= 1114111 ? 1 : 0))
            $this.$mayContainSupplCodepoints = 1;
        return $this;
    }
    function jur_CharClass_add1($this, $cc) {
        var $curAlt, $nb, var$4;
        if (!$this.$mayContainSupplCodepoints && $cc.$mayContainSupplCodepoints)
            $this.$mayContainSupplCodepoints = 1;
        if ($this.$invertedSurrogates) {
            if (!$cc.$altSurrogates)
                ju_BitSet_andNot($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
            else
                ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        } else if (!$cc.$altSurrogates)
            ju_BitSet_or($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
        else {
            ju_BitSet_xor($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
            ju_BitSet_and($this.$lowHighSurrogates, $cc.$getLowHighSurrogates());
            $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
            $this.$invertedSurrogates = 1;
        }
        if (!$this.$hideBits && $cc.$getBits() !== null) {
            if ($this.$inverted) {
                if (!$cc.$alt0)
                    ju_BitSet_andNot($this.$bits, $cc.$getBits());
                else
                    ju_BitSet_and($this.$bits, $cc.$getBits());
            } else if (!$cc.$alt0)
                ju_BitSet_or($this.$bits, $cc.$getBits());
            else {
                ju_BitSet_xor($this.$bits, $cc.$getBits());
                ju_BitSet_and($this.$bits, $cc.$getBits());
                $this.$alt0 = $this.$alt0 ? 0 : 1;
                $this.$inverted = 1;
            }
        } else {
            $curAlt = $this.$alt0;
            $nb = $this.$nonBitSet;
            if ($nb !== null) {
                if (!$curAlt) {
                    var$4 = new jur_CharClass$5;
                    var$4.$this$019 = $this;
                    var$4.$val$curAlt = $curAlt;
                    var$4.$val$nb = $nb;
                    var$4.$val$cc = $cc;
                    jur_AbstractCharClass_$callClinit();
                    $cc = new ju_BitSet;
                    $cc.$data2 = $rt_createIntArray(64);
                    var$4.$lowHighSurrogates = $cc;
                    $this.$nonBitSet = var$4;
                } else {
                    var$4 = new jur_CharClass$4;
                    var$4.$this$020 = $this;
                    var$4.$val$curAlt0 = $curAlt;
                    var$4.$val$nb0 = $nb;
                    var$4.$val$cc0 = $cc;
                    jur_AbstractCharClass_$callClinit();
                    $cc = new ju_BitSet;
                    $cc.$data2 = $rt_createIntArray(64);
                    var$4.$lowHighSurrogates = $cc;
                    $this.$nonBitSet = var$4;
                }
            } else {
                if ($curAlt && !$this.$inverted && ($this.$bits.$length3 ? 0 : 1)) {
                    $nb = new jur_CharClass$1;
                    $nb.$this$021 = $this;
                    $nb.$val$cc1 = $cc;
                    jur_AbstractCharClass_$callClinit();
                    $cc = new ju_BitSet;
                    $cc.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $cc;
                    $this.$nonBitSet = $nb;
                } else if (!$curAlt) {
                    $nb = new jur_CharClass$3;
                    $nb.$this$022 = $this;
                    $nb.$val$curAlt1 = $curAlt;
                    $nb.$val$cc2 = $cc;
                    jur_AbstractCharClass_$callClinit();
                    $cc = new ju_BitSet;
                    $cc.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $cc;
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$2;
                    $nb.$this$023 = $this;
                    $nb.$val$curAlt2 = $curAlt;
                    $nb.$val$cc3 = $cc;
                    jur_AbstractCharClass_$callClinit();
                    $cc = new ju_BitSet;
                    $cc.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $cc;
                    $this.$nonBitSet = $nb;
                }
                $this.$hideBits = 1;
            }
        }
        return $this;
    }
    function jur_CharClass_add0($this, $i, $end) {
        var var$3;
        if ($i > $end) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        a: {
            b: {
                if (!$this.$ci) {
                    if ($end < 55296)
                        break b;
                    if ($i > 57343)
                        break b;
                }
                $end = $end + 1 | 0;
                while (true) {
                    if ($i >= $end)
                        break a;
                    jur_CharClass_add($this, $i);
                    $i = $i + 1 | 0;
                }
            }
            if ($this.$inverted)
                ju_BitSet_clear0($this.$bits, $i, $end + 1 | 0);
            else
                ju_BitSet_set0($this.$bits, $i, $end + 1 | 0);
        }
        return $this;
    }
    function jur_CharClass_union($this, $clazz) {
        var $curAlt, var$3, $nb, var$5;
        if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
            $this.$mayContainSupplCodepoints = 1;
        if ($clazz.$hasUCI0)
            $this.$hasUCI0 = 1;
        $curAlt = $this.$altSurrogates;
        if (!($curAlt ^ $clazz.$altSurrogates)) {
            if (!$curAlt)
                ju_BitSet_or($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
            else
                ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        } else if ($curAlt)
            ju_BitSet_andNot($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        else {
            ju_BitSet_xor($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
            ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
            $this.$altSurrogates = 1;
        }
        a: {
            if (!$this.$hideBits) {
                var$3 = $clazz.$hideBits;
                if ((!var$3 ? $clazz.$bits : null) !== null) {
                    $curAlt = $this.$alt0;
                    if (!($curAlt ^ $clazz.$alt0)) {
                        if (!$curAlt) {
                            ju_BitSet_or($this.$bits, !var$3 ? $clazz.$bits : null);
                            break a;
                        }
                        ju_BitSet_and($this.$bits, !var$3 ? $clazz.$bits : null);
                        break a;
                    }
                    if ($curAlt) {
                        ju_BitSet_andNot($this.$bits, !var$3 ? $clazz.$bits : null);
                        break a;
                    }
                    ju_BitSet_xor($this.$bits, !var$3 ? $clazz.$bits : null);
                    ju_BitSet_and($this.$bits, !$clazz.$hideBits ? $clazz.$bits : null);
                    $this.$alt0 = 1;
                    break a;
                }
            }
            $curAlt = $this.$alt0;
            $nb = $this.$nonBitSet;
            if ($nb !== null) {
                if ($curAlt) {
                    var$5 = new jur_CharClass$10;
                    var$5.$this$024 = $this;
                    var$5.$val$curAlt3 = $curAlt;
                    var$5.$val$nb1 = $nb;
                    var$5.$val$clazz = $clazz;
                    jur_AbstractCharClass__init_(var$5);
                    $this.$nonBitSet = var$5;
                } else {
                    var$5 = new jur_CharClass$11;
                    var$5.$this$025 = $this;
                    var$5.$val$curAlt4 = $curAlt;
                    var$5.$val$nb2 = $nb;
                    var$5.$val$clazz0 = $clazz;
                    jur_AbstractCharClass_$callClinit();
                    var$5.$lowHighSurrogates = ju_BitSet__init_(2048);
                    $this.$nonBitSet = var$5;
                }
            } else {
                if (!$this.$inverted && ($this.$bits.$length3 ? 0 : 1)) {
                    if (!$curAlt) {
                        $nb = new jur_CharClass$7;
                        $nb.$this$026 = $this;
                        $nb.$val$clazz1 = $clazz;
                        jur_AbstractCharClass_$callClinit();
                        $clazz = new ju_BitSet;
                        $clazz.$data2 = $rt_createIntArray(64);
                        $nb.$lowHighSurrogates = $clazz;
                        $this.$nonBitSet = $nb;
                    } else {
                        $nb = new jur_CharClass$6;
                        $nb.$this$027 = $this;
                        $nb.$val$clazz2 = $clazz;
                        jur_AbstractCharClass_$callClinit();
                        $clazz = new ju_BitSet;
                        $clazz.$data2 = $rt_createIntArray(64);
                        $nb.$lowHighSurrogates = $clazz;
                        $this.$nonBitSet = $nb;
                    }
                } else if (!$curAlt) {
                    $nb = new jur_CharClass$9;
                    $nb.$this$028 = $this;
                    $nb.$val$clazz3 = $clazz;
                    $nb.$val$curAlt5 = $curAlt;
                    jur_AbstractCharClass_$callClinit();
                    $clazz = new ju_BitSet;
                    $clazz.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$8;
                    $nb.$this$029 = $this;
                    $nb.$val$clazz4 = $clazz;
                    $nb.$val$curAlt6 = $curAlt;
                    jur_AbstractCharClass_$callClinit();
                    $clazz = new ju_BitSet;
                    $clazz.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                }
                $this.$hideBits = 1;
            }
        }
    }
    function jur_CharClass_intersection($this, $clazz) {
        var $curAlt, var$3, $nb, var$5;
        if (!$this.$mayContainSupplCodepoints && $clazz.$mayContainSupplCodepoints)
            $this.$mayContainSupplCodepoints = 1;
        if ($clazz.$hasUCI0)
            $this.$hasUCI0 = 1;
        $curAlt = $this.$altSurrogates;
        if (!($curAlt ^ $clazz.$altSurrogates)) {
            if (!$curAlt)
                ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
            else
                ju_BitSet_or($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        } else if (!$curAlt)
            ju_BitSet_andNot($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
        else {
            ju_BitSet_xor($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
            ju_BitSet_and($this.$lowHighSurrogates, $clazz.$lowHighSurrogates);
            $this.$altSurrogates = 0;
        }
        a: {
            if (!$this.$hideBits) {
                var$3 = $clazz.$hideBits;
                if ((!var$3 ? $clazz.$bits : null) !== null) {
                    $curAlt = $this.$alt0;
                    if (!($curAlt ^ $clazz.$alt0)) {
                        if (!$curAlt) {
                            ju_BitSet_and($this.$bits, !var$3 ? $clazz.$bits : null);
                            break a;
                        }
                        ju_BitSet_or($this.$bits, !var$3 ? $clazz.$bits : null);
                        break a;
                    }
                    if (!$curAlt) {
                        ju_BitSet_andNot($this.$bits, !var$3 ? $clazz.$bits : null);
                        break a;
                    }
                    ju_BitSet_xor($this.$bits, !var$3 ? $clazz.$bits : null);
                    ju_BitSet_and($this.$bits, !$clazz.$hideBits ? $clazz.$bits : null);
                    $this.$alt0 = 0;
                    break a;
                }
            }
            $curAlt = $this.$alt0;
            $nb = $this.$nonBitSet;
            if ($nb !== null) {
                if ($curAlt) {
                    var$5 = new jur_CharClass$16;
                    var$5.$this$030 = $this;
                    var$5.$val$curAlt7 = $curAlt;
                    var$5.$val$nb3 = $nb;
                    var$5.$val$clazz5 = $clazz;
                    jur_AbstractCharClass__init_(var$5);
                    $this.$nonBitSet = var$5;
                } else {
                    var$5 = new jur_CharClass$17;
                    var$5.$this$031 = $this;
                    var$5.$val$curAlt8 = $curAlt;
                    var$5.$val$nb4 = $nb;
                    var$5.$val$clazz6 = $clazz;
                    jur_AbstractCharClass_$callClinit();
                    var$5.$lowHighSurrogates = ju_BitSet__init_(2048);
                    $this.$nonBitSet = var$5;
                }
            } else {
                if (!$this.$inverted && ($this.$bits.$length3 ? 0 : 1)) {
                    if (!$curAlt) {
                        $nb = new jur_CharClass$13;
                        $nb.$this$032 = $this;
                        $nb.$val$clazz7 = $clazz;
                        jur_AbstractCharClass_$callClinit();
                        $clazz = new ju_BitSet;
                        $clazz.$data2 = $rt_createIntArray(64);
                        $nb.$lowHighSurrogates = $clazz;
                        $this.$nonBitSet = $nb;
                    } else {
                        $nb = new jur_CharClass$12;
                        $nb.$this$033 = $this;
                        $nb.$val$clazz8 = $clazz;
                        jur_AbstractCharClass_$callClinit();
                        $clazz = new ju_BitSet;
                        $clazz.$data2 = $rt_createIntArray(64);
                        $nb.$lowHighSurrogates = $clazz;
                        $this.$nonBitSet = $nb;
                    }
                } else if (!$curAlt) {
                    $nb = new jur_CharClass$15;
                    $nb.$this$034 = $this;
                    $nb.$val$clazz9 = $clazz;
                    $nb.$val$curAlt9 = $curAlt;
                    jur_AbstractCharClass_$callClinit();
                    $clazz = new ju_BitSet;
                    $clazz.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                } else {
                    $nb = new jur_CharClass$14;
                    $nb.$this$035 = $this;
                    $nb.$val$clazz10 = $clazz;
                    $nb.$val$curAlt10 = $curAlt;
                    jur_AbstractCharClass_$callClinit();
                    $clazz = new ju_BitSet;
                    $clazz.$data2 = $rt_createIntArray(64);
                    $nb.$lowHighSurrogates = $clazz;
                    $this.$nonBitSet = $nb;
                }
                $this.$hideBits = 1;
            }
        }
    }
    function jur_CharClass_contains($this, $ch) {
        var var$2;
        var$2 = $this.$nonBitSet;
        if (var$2 !== null)
            return $this.$alt0 ^ var$2.$contains1($ch);
        return $this.$alt0 ^ ju_BitSet_get($this.$bits, $ch);
    }
    function jur_CharClass_getBits($this) {
        if (!$this.$hideBits)
            return $this.$bits;
        return null;
    }
    function jur_CharClass_getLowHighSurrogates($this) {
        return $this.$lowHighSurrogates;
    }
    function jur_CharClass_getInstance($this) {
        var $bs, $res;
        if ($this.$nonBitSet !== null)
            return $this;
        $bs = !$this.$hideBits ? $this.$bits : null;
        $res = new jur_CharClass$18;
        $res.$this$036 = $this;
        $res.$val$bs = $bs;
        jur_AbstractCharClass_$callClinit();
        $bs = new ju_BitSet;
        $bs.$data2 = $rt_createIntArray(64);
        $res.$lowHighSurrogates = $bs;
        return jur_AbstractCharClass_setNegative($res, $this.$alt0);
    }
    function jur_CharClass_toString($this) {
        var $temp, $i, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        $temp = new jl_StringBuilder;
        $temp.$buffer = $rt_createCharArray(16);
        $i = ju_BitSet_nextSetBit($this.$bits, 0);
        while ($i >= 0) {
            if ($i < 65536) {
                var$3 = $rt_createCharArray(1);
                var$3.data[0] = $i & 65535;
            } else
                var$3 = $rt_createCharArrayFromData([(55296 | ($i - 65536 | 0) >> 10 & 1023) & 65535, (56320 | $i & 1023) & 65535]);
            var$4 = var$3.data;
            var$5 = 0;
            var$6 = var$4.length;
            var$7 = $temp.$length;
            jl_AbstractStringBuilder_insertSpace($temp, var$7, var$7 + var$6 | 0);
            var$6 = var$6 + var$5 | 0;
            while (var$5 < var$6) {
                var$3 = $temp.$buffer.data;
                var$8 = var$7 + 1 | 0;
                var$9 = var$5 + 1 | 0;
                var$3[var$7] = var$4[var$5];
                var$7 = var$8;
                var$5 = var$9;
            }
            var$6 = $temp.$length;
            jl_AbstractStringBuilder_insertSpace($temp, var$6, var$6 + 1 | 0);
            $temp.$buffer.data[var$6] = 124;
            $i = ju_BitSet_nextSetBit($this.$bits, $i + 1 | 0);
        }
        var$7 = $temp.$length;
        if (var$7 > 0)
            jl_AbstractStringBuilder_deleteCharAt($temp, var$7 - 1 | 0);
        var$10 = new jl_String;
        var$3 = $temp.$buffer;
        var$7 = $temp.$length;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray(var$7);
        var$10.$characters = var$4;
        jl_System_fastArraycopy(var$3, 0, var$4, 0, var$7);
        return var$10;
    }
    function jur_CharClass_hasUCI($this) {
        return $this.$hasUCI0;
    }
    function ju_MissingResourceException() {
        var a = this; jl_RuntimeException.call(a);
        a.$className = null;
        a.$key0 = null;
    }
    function jur_QuantifierSet() {
        jur_AbstractSet.call(this);
        this.$innerSet = null;
    }
    function jur_QuantifierSet__init_($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
    }
    function jur_QuantifierSet_getInnerSet($this) {
        return $this.$innerSet;
    }
    function jur_QuantifierSet_first($this, $set) {
        return !$this.$innerSet.$first1($set) && !$this.$next3.$first1($set) ? 0 : 1;
    }
    function jur_QuantifierSet_hasConsumed($this, $mr) {
        return 1;
    }
    function jur_QuantifierSet_processSecondPass($this) {
        var $set;
        $this.$isSecondPassVisited = 1;
        $set = $this.$next3;
        if ($set !== null && !$set.$isSecondPassVisited) {
            $set = $set.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next3.$isSecondPassVisited = 1;
                $this.$next3 = $set;
            }
            $this.$next3.$processSecondPass();
        }
        $set = $this.$innerSet;
        if ($set !== null) {
            if (!$set.$isSecondPassVisited) {
                $set = $set.$processBackRefReplacement();
                if ($set !== null) {
                    $this.$innerSet.$isSecondPassVisited = 1;
                    $this.$innerSet = $set;
                }
                $this.$innerSet.$processSecondPass();
            } else if ($set instanceof jur_SingleSet && $set.$fSet.$isBackReferenced)
                $this.$innerSet = $set.$next3;
        }
    }
    function jur_LeafQuantifierSet() {
        jur_QuantifierSet.call(this);
        this.$leaf = null;
    }
    function jur_LeafQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_LeafQuantifierSet();
        jur_LeafQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_LeafQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$leaf = $innerSet;
    }
    function jur_LeafQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $i, var$5;
        $i = 0;
        a: {
            while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
                var$5 = $this.$leaf.$accepts($stringIndex, $testString);
                if (var$5 <= 0)
                    break a;
                $stringIndex = $stringIndex + var$5 | 0;
                $i = $i + 1 | 0;
            }
        }
        while (true) {
            if ($i < 0)
                return (-1);
            var$5 = $this.$next3.$matches($stringIndex, $testString, $matchResult);
            if (var$5 >= 0)
                break;
            $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
            $i = $i + (-1) | 0;
        }
        return var$5;
    }
    function jur_LeafQuantifierSet_getName($this) {
        return $rt_s(210);
    }
    function jur_CompositeQuantifierSet() {
        jur_LeafQuantifierSet.call(this);
        this.$quantifier0 = null;
    }
    function jur_CompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
        var var_4 = new jur_CompositeQuantifierSet();
        jur_CompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function jur_CompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
        var var$5, var$6;
        var$5 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$5 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$leaf = $innerSet;
        $this.$quantifier0 = $quant;
    }
    function jur_CompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var var$4, $min, $max, $i, $shift;
        var$4 = $this.$quantifier0;
        $min = var$4.$min1;
        $max = var$4.$max2;
        $i = 0;
        while (true) {
            if ($i >= $min) {
                a: {
                    while ($i < $max) {
                        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0)
                            break a;
                        $shift = $this.$leaf.$accepts($stringIndex, $testString);
                        if ($shift < 1)
                            break a;
                        $stringIndex = $stringIndex + $shift | 0;
                        $i = $i + 1 | 0;
                    }
                }
                while (true) {
                    if ($i < $min)
                        return (-1);
                    $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
                    if ($shift >= 0)
                        break;
                    $stringIndex = $stringIndex - $this.$leaf.$charCount0() | 0;
                    $i = $i + (-1) | 0;
                }
                return $shift;
            }
            if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0) {
                $matchResult.$hitEnd = 1;
                return (-1);
            }
            $shift = $this.$leaf.$accepts($stringIndex, $testString);
            if ($shift < 1)
                break;
            $stringIndex = $stringIndex + $shift | 0;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    function jur_CompositeQuantifierSet_getName($this) {
        return jur_Quantifier_toString($this.$quantifier0);
    }
    var jur_GroupQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet);
    function jur_GroupQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_GroupQuantifierSet();
        jur_GroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_GroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
    }
    function jur_GroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $nextIndex;
        if (!$this.$innerSet.$hasConsumed($matchResult))
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0)
            return $nextIndex;
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    function jur_GroupQuantifierSet_getName($this) {
        return $rt_s(211);
    }
    var jur_AltQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
    function jur_AltQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_AltQuantifierSet();
        jur_AltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_AltQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$leaf = $innerSet;
    }
    function jur_AltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $shift;
        $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($shift < 0)
            $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
        return $shift;
    }
    function jur_AltQuantifierSet_setNext($this, $next) {
        $this.$next3 = $next;
        $this.$innerSet.$setNext($next);
    }
    var jur_UnifiedQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
    function jur_UnifiedQuantifierSet__init_(var_0) {
        var var_1 = new jur_UnifiedQuantifierSet();
        jur_UnifiedQuantifierSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_UnifiedQuantifierSet__init_0($this, $quant) {
        var var$2, var$3, var$4, var$5;
        var$2 = $quant.$innerSet;
        var$3 = $quant.$next3;
        var$4 = $quant.$type3;
        var$5 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$5 + 1 | 0;
        $quant = new jl_AbstractStringBuilder;
        $quant.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0($quant, $quant.$length, var$5, 10)).$toString();
        $this.$next3 = var$3;
        $this.$innerSet = var$2;
        $this.$type3 = var$4;
        $this.$leaf = var$2;
        var$2.$setNext($this);
    }
    function jur_UnifiedQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        while (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0 && $this.$leaf.$accepts($stringIndex, $testString) > 0) {
            $stringIndex = $stringIndex + $this.$leaf.$charCount0() | 0;
        }
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    function jur_UnifiedQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
        var $startSearch, $newSearch, $newSearch_0;
        $startSearch = $this.$next3.$find0($stringIndex, $testString, $matchResult);
        if ($startSearch < 0)
            return (-1);
        $newSearch = $startSearch - $this.$leaf.$charCount0() | 0;
        while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
            $newSearch_0 = $newSearch - $this.$leaf.$charCount0() | 0;
            $startSearch = $newSearch;
            $newSearch = $newSearch_0;
        }
        return $startSearch;
    }
    function jur_AbstractCharClass$LazyCharClass() {
        var a = this; jl_Object.call(a);
        a.$posValue = null;
        a.$negValue = null;
    }
    function jur_AbstractCharClass$LazyCharClass_getValue($this, $negative) {
        if (!$negative && $this.$posValue === null)
            $this.$posValue = $this.$computeValue();
        else if ($negative && $this.$negValue === null)
            $this.$negValue = jur_AbstractCharClass_setNegative($this.$computeValue(), 1);
        if ($negative)
            return $this.$negValue;
        return $this.$posValue;
    }
    function jur_Quantifier() {
        var a = this; jur_SpecialToken.call(a);
        a.$min1 = 0;
        a.$max2 = 0;
    }
    function jur_Quantifier_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.$min1;
        var$2 = $this.$max2;
        if (var$2 == 2147483647)
            var$3 = $rt_s(45);
        else {
            var$3 = new jl_AbstractStringBuilder;
            var$3.$buffer = $rt_createCharArray(20);
            var$3 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        }
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        var$2 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$2, var$2 + 1 | 0);
        var$4.$buffer.data[var$2] = 123;
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$1, 10);
        var$1 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$1, var$1 + 1 | 0);
        var$4.$buffer.data[var$1] = 44;
        var$5 = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, var$5, var$3);
        var$1 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$1, var$1 + 1 | 0);
        var$6 = var$4.$buffer;
        var$6.data[var$1] = 125;
        var$3 = new jl_String;
        var$1 = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$1);
        var$3.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$1);
        return var$3;
    }
    var jur_FSet$PossessiveFSet = $rt_classWithoutFields(jur_AbstractSet);
    function jur_FSet$PossessiveFSet_matches($this, $stringIndex, $testString, $matchResult) {
        return $stringIndex;
    }
    function jur_FSet$PossessiveFSet_getName($this) {
        return $rt_s(212);
    }
    function jur_FSet$PossessiveFSet_hasConsumed($this, $mr) {
        return 0;
    }
    function ju_BitSet() {
        var a = this; jl_Object.call(a);
        a.$data2 = null;
        a.$length3 = 0;
    }
    function ju_BitSet__init_(var_0) {
        var var_1 = new ju_BitSet();
        ju_BitSet__init_0(var_1, var_0);
        return var_1;
    }
    function ju_BitSet__init_0($this, $nbits) {
        var var$2;
        if ($nbits >= 0) {
            $this.$data2 = $rt_createIntArray((($nbits + 32 | 0) - 1 | 0) / 32 | 0);
            return;
        }
        var$2 = new jl_NegativeArraySizeException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    function ju_BitSet_set($this, $bitIndex) {
        var var$2, $index, var$4;
        if ($bitIndex < 0) {
            var$2 = new jl_IndexOutOfBoundsException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        $index = $bitIndex / 32 | 0;
        if ($bitIndex >= $this.$length3) {
            ju_BitSet_ensureCapacity($this, $index + 1 | 0);
            $this.$length3 = $bitIndex + 1 | 0;
        }
        var$4 = $this.$data2.data;
        var$4[$index] = var$4[$index] | 1 << ($bitIndex % 32 | 0);
    }
    function ju_BitSet_set0($this, $fromIndex, $toIndex) {
        var $fromDataIndex, $toDataIndex, var$5, var$6, $i, var$8;
        if ($fromIndex >= 0) {
            $fromDataIndex = $rt_compare($fromIndex, $toIndex);
            if ($fromDataIndex <= 0) {
                if (!$fromDataIndex)
                    return;
                $fromDataIndex = $fromIndex / 32 | 0;
                $toDataIndex = $toIndex / 32 | 0;
                if ($toIndex > $this.$length3) {
                    ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
                    $this.$length3 = $toIndex;
                }
                if ($fromDataIndex == $toDataIndex) {
                    var$5 = $this.$data2.data;
                    $toDataIndex = var$5[$fromDataIndex];
                    var$6 = (-1) << ($fromIndex % 32 | 0);
                    $fromIndex = $toIndex % 32 | 0;
                    var$5[$fromDataIndex] = $toDataIndex | var$6 & (!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0);
                } else {
                    var$5 = $this.$data2.data;
                    var$5[$fromDataIndex] = var$5[$fromDataIndex] | (-1) << ($fromIndex % 32 | 0);
                    $i = $fromDataIndex + 1 | 0;
                    while ($i < $toDataIndex) {
                        var$5[$i] = (-1);
                        $i = $i + 1 | 0;
                    }
                    if ($toIndex & 31) {
                        $i = var$5[$toDataIndex];
                        $fromIndex = $toIndex % 32 | 0;
                        var$5[$toDataIndex] = $i | (!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0);
                    }
                }
                return;
            }
        }
        var$8 = new jl_IndexOutOfBoundsException;
        var$8.$suppressionEnabled = 1;
        var$8.$writableStackTrace = 1;
        $rt_throw(var$8);
    }
    function ju_BitSet_clear($this, $bitIndex) {
        var var$2, $index, var$4, var$5, var$6;
        if ($bitIndex < 0) {
            var$2 = new jl_IndexOutOfBoundsException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        $index = $bitIndex / 32 | 0;
        var$4 = $this.$data2.data;
        if ($index < var$4.length) {
            var$5 = var$4[$index];
            var$6 = ($bitIndex % 32 | 0) & 31;
            var$4[$index] = var$5 & ((-2) << var$6 | ((-2) >>> (32 - var$6 | 0) | 0));
            if ($bitIndex == ($this.$length3 - 1 | 0))
                ju_BitSet_recalculateLength($this);
        }
    }
    function ju_BitSet_clear0($this, $fromIndex, $toIndex) {
        var $fromDataIndex, $toDataIndex, var$5, $i, var$7, var$8;
        if ($fromIndex >= 0 && $fromIndex <= $toIndex) {
            $fromDataIndex = $this.$length3;
            if ($fromIndex >= $fromDataIndex)
                return;
            if ($fromDataIndex < $toIndex)
                $toIndex = $fromDataIndex;
            if ($fromIndex == $toIndex)
                return;
            $fromDataIndex = $fromIndex / 32 | 0;
            $toDataIndex = $toIndex / 32 | 0;
            if ($fromDataIndex == $toDataIndex) {
                var$5 = $this.$data2.data;
                $i = var$5[$fromDataIndex];
                $fromIndex = $fromIndex % 32 | 0;
                var$5[$fromDataIndex] = $i & ((!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0) | (-1) << ($toIndex % 32 | 0));
            } else {
                var$5 = $this.$data2.data;
                var$7 = var$5[$fromDataIndex];
                $fromIndex = $fromIndex % 32 | 0;
                var$5[$fromDataIndex] = var$7 & (!$fromIndex ? 0 : (-1) >>> (32 - $fromIndex | 0) | 0);
                $i = $fromDataIndex + 1 | 0;
                while ($i < $toDataIndex) {
                    var$5[$i] = 0;
                    $i = $i + 1 | 0;
                }
                if ($toIndex & 31)
                    var$5[$toDataIndex] = var$5[$toDataIndex] & (-1) << ($toIndex % 32 | 0);
            }
            ju_BitSet_recalculateLength($this);
            return;
        }
        var$8 = new jl_IndexOutOfBoundsException;
        var$8.$suppressionEnabled = 1;
        var$8.$writableStackTrace = 1;
        $rt_throw(var$8);
    }
    function ju_BitSet_get($this, $bitIndex) {
        var var$2, $index, var$4;
        if ($bitIndex < 0) {
            var$2 = new jl_IndexOutOfBoundsException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        $index = $bitIndex / 32 | 0;
        var$4 = $this.$data2.data;
        return $index < var$4.length && var$4[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
    }
    function ju_BitSet_nextSetBit($this, $fromIndex) {
        var var$2, $top, $index, var$5, $i;
        if ($fromIndex < 0) {
            var$2 = new jl_IndexOutOfBoundsException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        $top = $this.$length3;
        if ($fromIndex >= $top)
            return (-1);
        $index = $fromIndex / 32 | 0;
        var$5 = $this.$data2.data;
        $i = var$5[$index] >>> ($fromIndex % 32 | 0) | 0;
        if ($i)
            return jl_Integer_numberOfTrailingZeros($i) + $fromIndex | 0;
        $top = ($top + 31 | 0) / 32 | 0;
        $i = $index + 1 | 0;
        while ($i < $top) {
            if (var$5[$i])
                return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$5[$i]) | 0;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    function ju_BitSet_nextClearBit($this, $fromIndex) {
        var var$2, var$3, $index, var$5, $top, $i;
        if ($fromIndex < 0) {
            var$2 = new jl_IndexOutOfBoundsException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        var$3 = $this.$length3;
        if ($fromIndex >= var$3)
            return $fromIndex;
        $index = $fromIndex / 32 | 0;
        var$5 = $this.$data2.data;
        $top = (var$5[$index] ^ (-1)) >>> ($fromIndex % 32 | 0) | 0;
        if ($top)
            return jl_Integer_numberOfTrailingZeros($top) + $fromIndex | 0;
        $top = (var$3 + 31 | 0) / 32 | 0;
        $i = $index + 1 | 0;
        while ($i < $top) {
            if (var$5[$i] != (-1))
                return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros(var$5[$i] ^ (-1)) | 0;
            $i = $i + 1 | 0;
        }
        return var$3;
    }
    function ju_BitSet_ensureCapacity($this, $capacity) {
        var var$2, var$3, $newArrayLength, $newArrayLength_0, var$6, var$7;
        var$2 = $this.$data2.data;
        var$3 = var$2.length;
        if (var$3 >= $capacity)
            return;
        $newArrayLength = ($capacity * 3 | 0) / 2 | 0;
        $newArrayLength_0 = (var$3 * 2 | 0) + 1 | 0;
        if ($newArrayLength > $newArrayLength_0)
            $newArrayLength_0 = $newArrayLength;
        var$6 = $rt_createIntArray($newArrayLength_0);
        if ($newArrayLength_0 < var$3)
            var$3 = $newArrayLength_0;
        var$7 = var$6.data;
        $capacity = 0;
        while ($capacity < var$3) {
            var$7[$capacity] = var$2[$capacity];
            $capacity = $capacity + 1 | 0;
        }
        $this.$data2 = var$6;
    }
    function ju_BitSet_recalculateLength($this) {
        var $top, $i, $sz;
        $top = ($this.$length3 + 31 | 0) / 32 | 0;
        $this.$length3 = $top * 32 | 0;
        $i = $top - 1 | 0;
        a: {
            while (true) {
                if ($i < 0)
                    break a;
                $sz = jl_Integer_numberOfLeadingZeros($this.$data2.data[$i]);
                if ($sz < 32)
                    break;
                $i = $i + (-1) | 0;
                $this.$length3 = $this.$length3 - 32 | 0;
            }
            $this.$length3 = $this.$length3 - $sz | 0;
        }
    }
    function ju_BitSet_intersects($this, $set) {
        var var$2, $sz, var$4, $sz_0, $i;
        var$2 = $this.$data2.data;
        $sz = var$2.length;
        var$4 = $set.$data2.data;
        $sz_0 = var$4.length;
        if ($sz < $sz_0)
            $sz_0 = $sz;
        $i = 0;
        while ($i < $sz_0) {
            if (var$2[$i] & var$4[$i])
                return 1;
            $i = $i + 1 | 0;
        }
        return 0;
    }
    function ju_BitSet_and($this, $set) {
        var var$2, var$3, var$4, $sz, $i, var$7, var$8;
        var$2 = $this.$data2.data;
        var$3 = var$2.length;
        var$4 = $set.$data2.data;
        $sz = var$4.length;
        if (var$3 < $sz)
            $sz = var$3;
        $i = 0;
        while ($i < $sz) {
            var$2[$i] = var$2[$i] & var$4[$i];
            $i = $i + 1 | 0;
        }
        while ($sz < var$3) {
            var$2[$sz] = 0;
            $sz = $sz + 1 | 0;
        }
        var$7 = $this.$length3;
        var$8 = $set.$length3;
        if (var$7 < var$8)
            var$8 = var$7;
        $this.$length3 = var$8;
        ju_BitSet_recalculateLength($this);
    }
    function ju_BitSet_andNot($this, $set) {
        var var$2, $sz, var$4, $sz_0, $i;
        var$2 = $this.$data2.data;
        $sz = var$2.length;
        var$4 = $set.$data2.data;
        $sz_0 = var$4.length;
        if ($sz < $sz_0)
            $sz_0 = $sz;
        $i = 0;
        while ($i < $sz_0) {
            var$2[$i] = var$2[$i] & (var$4[$i] ^ (-1));
            $i = $i + 1 | 0;
        }
        ju_BitSet_recalculateLength($this);
    }
    function ju_BitSet_or($this, $set) {
        var $sz, $sz_0, var$4, var$5, $i;
        $sz = $this.$length3;
        $sz_0 = $set.$length3;
        if ($sz > $sz_0)
            $sz_0 = $sz;
        $this.$length3 = $sz_0;
        ju_BitSet_ensureCapacity($this, ($sz_0 + 31 | 0) / 32 | 0);
        var$4 = $this.$data2.data;
        $sz = var$4.length;
        var$5 = $set.$data2.data;
        $sz_0 = var$5.length;
        if ($sz < $sz_0)
            $sz_0 = $sz;
        $i = 0;
        while ($i < $sz_0) {
            var$4[$i] = var$4[$i] | var$5[$i];
            $i = $i + 1 | 0;
        }
    }
    function ju_BitSet_xor($this, $set) {
        var $sz, $i, var$4, var$5, $sz_0;
        $sz = $this.$length3;
        $i = $set.$length3;
        if ($sz > $i)
            $i = $sz;
        $this.$length3 = $i;
        ju_BitSet_ensureCapacity($this, ($i + 31 | 0) / 32 | 0);
        var$4 = $this.$data2.data;
        $sz = var$4.length;
        var$5 = $set.$data2.data;
        $sz_0 = var$5.length;
        if ($sz < $sz_0)
            $sz_0 = $sz;
        $i = 0;
        while ($i < $sz_0) {
            var$4[$i] = var$4[$i] ^ var$5[$i];
            $i = $i + 1 | 0;
        }
        ju_BitSet_recalculateLength($this);
    }
    function jur_LowHighSurrogateRangeSet() {
        var a = this; jur_JointSet.call(a);
        a.$surrChars = null;
        a.$alt = 0;
    }
    function jur_LowHighSurrogateRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $startStr, $strLength, var$6, var$7, $ch, $low, $high;
        $startStr = $matchResult.$leftBound0;
        $strLength = $matchResult.$rightBound0;
        var$6 = $stringIndex + 1 | 0;
        $strLength = $rt_compare(var$6, $strLength);
        if ($strLength > 0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        if ($stringIndex >= 0) {
            var$7 = $testString.$characters.data;
            if ($stringIndex < var$7.length) {
                $ch = var$7[$stringIndex];
                if (!$this.$surrChars.$contains1($ch))
                    return (-1);
                $low = $ch & 64512;
                $high = $low != 55296 ? 0 : 1;
                a: {
                    if ($high) {
                        if ($strLength >= 0)
                            break a;
                        if (var$6 >= 0) {
                            var$7 = $testString.$characters.data;
                            if (var$6 < var$7.length) {
                                if ((var$7[var$6] & 64512) != 56320 ? 0 : 1)
                                    return (-1);
                                break a;
                            }
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                    if (($low != 56320 ? 0 : 1) && $stringIndex > $startStr) {
                        $high = $stringIndex - 1 | 0;
                        if ($high >= 0) {
                            var$7 = $testString.$characters.data;
                            if ($high < var$7.length) {
                                if (!((var$7[$high] & 64512) != 55296 ? 0 : 1))
                                    break a;
                                return (-1);
                            }
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
                return $this.$next3.$matches(var$6, $testString, $matchResult);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_LowHighSurrogateRangeSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = !$this.$alt ? $rt_s(213) : $rt_s(214);
        var$2 = $this.$surrChars.$toString();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(215));
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
        var$4 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
        var$1 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        return var$1;
    }
    function jur_CompositeRangeSet() {
        var a = this; jur_JointSet.call(a);
        a.$withoutSurrogates = null;
        a.$withSurrogates = null;
    }
    function jur_CompositeRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $shift;
        $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
        if ($shift < 0)
            $shift = jur_LowHighSurrogateRangeSet_matches($this.$withSurrogates, $stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $shift;
        return (-1);
    }
    function jur_CompositeRangeSet_setNext($this, $next) {
        $this.$next3 = $next;
        $this.$withSurrogates.$next3 = $next;
        $this.$withoutSurrogates.$setNext($next);
    }
    function jur_CompositeRangeSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$1 = $this.$withoutSurrogates;
        var$2 = $this.$withSurrogates;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(216));
        var$4 = var$3.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        else {
            var$5 = var$1.$index1;
            var$1 = var$1.$getName0();
            var$6 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$6);
            jl_AbstractStringBuilder_append3(var$6, 60);
            jl_AbstractStringBuilder_append0(var$6, var$5);
            jl_AbstractStringBuilder_append3(var$6, 58);
            jl_AbstractStringBuilder_append0(var$6, var$1);
            jl_AbstractStringBuilder_append3(var$6, 62);
            var$1 = jl_AbstractStringBuilder_toString(var$6);
        }
        jl_AbstractStringBuilder_insert(var$3, var$4, var$1);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(217));
        var$4 = var$3.$length;
        if (var$2 === null)
            var$1 = $rt_s(1);
        else {
            var$1 = var$2.$index1;
            var$5 = !var$2.$alt ? $rt_s(213) : $rt_s(214);
            var$6 = var$2.$surrChars.$toString();
            var$7 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(215)), var$5), var$6);
            var$5 = jl_StringBuilder_toString(var$7);
            var$2 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$2);
            jl_AbstractStringBuilder_append3(var$2, 60);
            jl_AbstractStringBuilder_append0(var$2, var$1);
            jl_AbstractStringBuilder_append3(var$2, 58);
            jl_AbstractStringBuilder_append0(var$2, var$5);
            jl_AbstractStringBuilder_append3(var$2, 62);
            var$1 = jl_AbstractStringBuilder_toString(var$2);
        }
        jl_AbstractStringBuilder_insert(var$3, var$4, var$1);
        var$1 = new jl_String;
        var$8 = var$3.$buffer;
        var$9 = var$3.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray(var$9);
        var$1.$characters = var$10;
        jl_System_fastArraycopy(var$8, 0, var$10, 0, var$9);
        return var$1;
    }
    function jur_CompositeRangeSet_hasConsumed($this, $matchResult) {
        return 1;
    }
    function jur_CompositeRangeSet_first($this, $set) {
        return 1;
    }
    function jur_SupplRangeSet() {
        var a = this; jur_JointSet.call(a);
        a.$chars2 = null;
        a.$alt3 = 0;
    }
    function jur_SupplRangeSet__init_(var_0) {
        var var_1 = new jur_SupplRangeSet();
        jur_SupplRangeSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_SupplRangeSet__init_0($this, $cc) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$chars2 = $cc.$getInstance1();
        $this.$alt3 = $cc.$alt0;
    }
    function jur_SupplRangeSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $strLength, $low, var$6, $high, $offset;
        a: {
            $strLength = $matchResult.$rightBound0;
            if ($stringIndex < $strLength) {
                $low = $stringIndex + 1 | 0;
                if ($stringIndex >= 0) {
                    var$6 = $testString.$characters.data;
                    if ($stringIndex < var$6.length) {
                        $high = var$6[$stringIndex];
                        if ($this.$contains1($high)) {
                            $offset = $this.$next3.$matches($low, $testString, $matchResult);
                            if ($offset > 0)
                                return $offset;
                        }
                        if ($low >= $strLength)
                            break a;
                        $strLength = $low + 1 | 0;
                        if ($low >= 0) {
                            var$6 = $testString.$characters.data;
                            if ($low < var$6.length) {
                                $low = var$6[$low];
                                $stringIndex = ($high & 64512) != 55296 ? 0 : 1;
                                if (!($stringIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0))
                                    break a;
                                if (!$this.$contains1((($high & 1023) << 10 | $low & 1023) + 65536 | 0))
                                    break a;
                                else
                                    return $this.$next3.$matches($strLength, $testString, $matchResult);
                            }
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        return (-1);
    }
    function jur_SupplRangeSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = !$this.$alt3 ? $rt_s(213) : $rt_s(214);
        var$2 = $this.$chars2.$toString();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(215));
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
        var$4 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
        var$1 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        return var$1;
    }
    function jur_SupplRangeSet_contains($this, $ch) {
        return $this.$chars2.$contains1($ch);
    }
    function jur_SupplRangeSet_first($this, $set) {
        var var$2, var$3, var$4;
        if ($set instanceof jur_SupplCharSet) {
            var$2 = $this.$chars2;
            var$3 = $set.$ch4;
            jur_AbstractCharClass_$callClinit();
            return var$2.$contains1(var$3);
        }
        if ($set instanceof jur_CharSet) {
            var$2 = $this.$chars2;
            var$3 = $set.$ch0;
            jur_AbstractCharClass_$callClinit();
            return var$2.$contains1(var$3);
        }
        if ($set instanceof jur_SupplRangeSet) {
            var$2 = $this.$chars2;
            $set = $set.$chars2;
            jur_AbstractCharClass_$callClinit();
            return var$2.$getBits() !== null && $set.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), $set.$getBits()) : 1;
        }
        if (!($set instanceof jur_RangeSet))
            return 1;
        var$2 = $this.$chars2;
        var$4 = $set.$chars0;
        jur_AbstractCharClass_$callClinit();
        return var$2.$getBits() !== null && var$4.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), var$4.$getBits()) : 1;
    }
    function jur_SupplRangeSet_getChars($this) {
        return $this.$chars2;
    }
    function jur_SupplRangeSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_SupplRangeSet_hasConsumed($this, $mr) {
        return 1;
    }
    var jur_UCISupplRangeSet = $rt_classWithoutFields(jur_SupplRangeSet);
    function jur_UCISupplRangeSet__init_(var_0) {
        var var_1 = new jur_UCISupplRangeSet();
        jur_UCISupplRangeSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_UCISupplRangeSet__init_0($this, $cc) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$chars2 = $cc.$getInstance1();
        $this.$alt3 = $cc.$alt0;
    }
    function jur_UCISupplRangeSet_contains($this, $ch) {
        var var$2;
        var$2 = $this.$chars2;
        if (jl_Character_upperCaseMapping === null) {
            if (jl_Character_$$metadata$$1 === null)
                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
        }
        $ch = jl_Character_mapChar(jl_Character_upperCaseMapping, $ch);
        if (jl_Character_lowerCaseMapping === null) {
            if (jl_Character_$$metadata$$0 === null)
                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
        }
        return var$2.$contains1(jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch));
    }
    function jur_UCISupplRangeSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = !$this.$alt3 ? $rt_s(213) : $rt_s(214);
        var$2 = $this.$chars2.$toString();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(218));
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
        var$4 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
        var$1 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        return var$1;
    }
    function jur_UCIRangeSet() {
        var a = this; jur_LeafSet.call(a);
        a.$chars1 = null;
        a.$alt2 = 0;
    }
    function jur_UCIRangeSet__init_(var_0) {
        var var_1 = new jur_UCIRangeSet();
        jur_UCIRangeSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_UCIRangeSet__init_0($this, $cc) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$charCount = 1;
        $this.$chars1 = $cc.$getInstance1();
        $this.$alt2 = $cc.$alt0;
    }
    function jur_UCIRangeSet_accepts($this, $strIndex, $testString) {
        var var$3, var$4;
        var$3 = $this.$chars1;
        if ($strIndex >= 0) {
            var$4 = $testString.$characters.data;
            if ($strIndex < var$4.length) {
                $strIndex = var$4[$strIndex];
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                }
                $strIndex = jl_Character_mapChar(jl_Character_upperCaseMapping, $strIndex) & 65535;
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                }
                return !var$3.$contains1(jl_Character_mapChar(jl_Character_lowerCaseMapping, $strIndex) & 65535) ? (-1) : 1;
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_UCIRangeSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = !$this.$alt2 ? $rt_s(213) : $rt_s(214);
        var$2 = $this.$chars1.$toString();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(218));
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
        var$4 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
        var$1 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        return var$1;
    }
    function jur_RangeSet() {
        var a = this; jur_LeafSet.call(a);
        a.$chars0 = null;
        a.$alt1 = 0;
    }
    function jur_RangeSet__init_(var_0) {
        var var_1 = new jur_RangeSet();
        jur_RangeSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_RangeSet__init_0($this, $cc) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$charCount = 1;
        $this.$chars0 = $cc.$getInstance1();
        $this.$alt1 = $cc.$alt0;
    }
    function jur_RangeSet_accepts($this, $strIndex, $testString) {
        var var$3, var$4;
        var$3 = $this.$chars0;
        if ($strIndex >= 0) {
            var$4 = $testString.$characters.data;
            if ($strIndex < var$4.length)
                return !var$3.$contains1(var$4[$strIndex]) ? (-1) : 1;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_RangeSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = !$this.$alt1 ? $rt_s(213) : $rt_s(214);
        var$2 = $this.$chars0.$toString();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(215));
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$1);
        var$4 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
        var$1 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        return var$1;
    }
    function jur_RangeSet_first($this, $set) {
        var var$2, var$3, var$4;
        if ($set instanceof jur_CharSet) {
            var$2 = $this.$chars0;
            var$3 = $set.$ch0;
            jur_AbstractCharClass_$callClinit();
            return var$2.$contains1(var$3);
        }
        if ($set instanceof jur_RangeSet) {
            var$2 = $this.$chars0;
            $set = $set.$chars0;
            jur_AbstractCharClass_$callClinit();
            return var$2.$getBits() !== null && $set.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), $set.$getBits()) : 1;
        }
        if (!($set instanceof jur_SupplRangeSet)) {
            if (!($set instanceof jur_SupplCharSet))
                return 1;
            return 0;
        }
        var$2 = $this.$chars0;
        var$4 = $set.$chars2;
        jur_AbstractCharClass_$callClinit();
        return var$2.$getBits() !== null && var$4.$getBits() !== null ? ju_BitSet_intersects(var$2.$getBits(), var$4.$getBits()) : 1;
    }
    function jur_HangulDecomposedCharSet() {
        var a = this; jur_JointSet.call(a);
        a.$decomposedChar = null;
        a.$decomposedCharUTF16 = null;
        a.$decomposedCharLength = 0;
    }
    function jur_HangulDecomposedCharSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_HangulDecomposedCharSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        if ($this.$decomposedCharUTF16 === null) {
            var$1 = new jl_String;
            var$2 = $this.$decomposedChar;
            var$3 = var$2.data;
            jl_String_$callClinit();
            var$4 = var$3.length;
            var$3 = $rt_createCharArray(var$4);
            var$1.$characters = var$3;
            jl_System_fastArraycopy(var$2, 0, var$3, 0, var$4);
            $this.$decomposedCharUTF16 = var$1;
        }
        var$5 = $this.$decomposedCharUTF16;
        var$1 = new jl_StringBuilder;
        var$1.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(219));
        var$6 = var$1.$length;
        if (var$5 === null)
            var$5 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$1, var$6, var$5);
        var$7 = new jl_String;
        var$2 = var$1.$buffer;
        var$4 = var$1.$length;
        jl_String_$callClinit();
        var$3 = $rt_createCharArray(var$4);
        var$7.$characters = var$3;
        jl_System_fastArraycopy(var$2, 0, var$3, 0, var$4);
        return var$7;
    }
    function jur_HangulDecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
        var $rightBound, $decompSyllable, $vIndex, $tIndex, var$8, $decompCurSymb, $curSymb, $i, $lIndex;
        $rightBound = $matchResult.$rightBound0;
        $decompSyllable = $rt_createIntArray(3);
        $vIndex = (-1);
        $tIndex = (-1);
        if ($strIndex >= $rightBound)
            return (-1);
        var$8 = $strIndex + 1 | 0;
        if ($strIndex >= 0) {
            $decompCurSymb = $testString.$characters.data;
            if ($strIndex < $decompCurSymb.length) {
                $curSymb = $decompCurSymb[$strIndex];
                $decompCurSymb = jur_Lexer_getHangulDecomposition($curSymb);
                if ($decompCurSymb !== null) {
                    $decompCurSymb = $decompCurSymb.data;
                    $i = 0;
                    $strIndex = $decompCurSymb.length;
                    $curSymb = $this.$decomposedCharLength;
                    if ($strIndex != $curSymb)
                        return (-1);
                    while (true) {
                        if ($i >= $curSymb)
                            return $this.$next3.$matches(var$8, $testString, $matchResult);
                        if ($decompCurSymb[$i] != $this.$decomposedChar.data[$i])
                            break;
                        $i = $i + 1 | 0;
                    }
                    return (-1);
                }
                $decompSyllable = $decompSyllable.data;
                $decompSyllable[0] = $curSymb;
                $lIndex = $curSymb - 4352 | 0;
                if ($lIndex >= 0 && $lIndex < 19) {
                    a: {
                        if (var$8 < $rightBound) {
                            if (var$8 >= 0) {
                                $decompCurSymb = $testString.$characters.data;
                                if (var$8 < $decompCurSymb.length) {
                                    $curSymb = $decompCurSymb[var$8];
                                    $vIndex = $curSymb - 4449 | 0;
                                    break a;
                                }
                            }
                            $testString = new jl_StringIndexOutOfBoundsException;
                            $testString.$suppressionEnabled = 1;
                            $testString.$writableStackTrace = 1;
                            $rt_throw($testString);
                        }
                    }
                    if ($vIndex >= 0 && $vIndex < 21) {
                        b: {
                            $strIndex = var$8 + 1 | 0;
                            $decompSyllable[1] = $curSymb;
                            if ($strIndex < $rightBound) {
                                if ($strIndex >= 0) {
                                    $decompCurSymb = $testString.$characters.data;
                                    if ($strIndex < $decompCurSymb.length) {
                                        $curSymb = $decompCurSymb[$strIndex];
                                        $tIndex = $curSymb - 4519 | 0;
                                        break b;
                                    }
                                }
                                $testString = new jl_StringIndexOutOfBoundsException;
                                $testString.$suppressionEnabled = 1;
                                $testString.$writableStackTrace = 1;
                                $rt_throw($testString);
                            }
                        }
                        if ($tIndex >= 0 && $tIndex < 28) {
                            c: {
                                $strIndex = $strIndex + 1 | 0;
                                $decompSyllable[2] = $curSymb;
                                if ($this.$decomposedCharLength == 3) {
                                    $curSymb = $decompSyllable[0];
                                    $decompCurSymb = $this.$decomposedChar.data;
                                    if ($curSymb == $decompCurSymb[0] && $decompSyllable[1] == $decompCurSymb[1] && $decompSyllable[2] == $decompCurSymb[2]) {
                                        $strIndex = $this.$next3.$matches($strIndex, $testString, $matchResult);
                                        break c;
                                    }
                                }
                                $strIndex = (-1);
                            }
                            return $strIndex;
                        }
                        d: {
                            if ($this.$decomposedCharLength == 2) {
                                $curSymb = $decompSyllable[0];
                                $decompCurSymb = $this.$decomposedChar.data;
                                if ($curSymb == $decompCurSymb[0] && $decompSyllable[1] == $decompCurSymb[1]) {
                                    $strIndex = $this.$next3.$matches($strIndex, $testString, $matchResult);
                                    break d;
                                }
                            }
                            $strIndex = (-1);
                        }
                        return $strIndex;
                    }
                    return (-1);
                }
                return (-1);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_HangulDecomposedCharSet_first($this, $set) {
        var var$2, var$3, var$4, var$5, var$6;
        a: {
            if ($set instanceof jur_HangulDecomposedCharSet) {
                $set = $set;
                if ($set.$decomposedCharUTF16 === null) {
                    var$2 = new jl_String;
                    var$3 = $set.$decomposedChar;
                    var$4 = var$3.data;
                    jl_String_$callClinit();
                    var$5 = var$4.length;
                    var$4 = $rt_createCharArray(var$5);
                    var$2.$characters = var$4;
                    jl_System_fastArraycopy(var$3, 0, var$4, 0, var$5);
                    $set.$decomposedCharUTF16 = var$2;
                }
                var$2 = $set.$decomposedCharUTF16;
                if ($this.$decomposedCharUTF16 === null) {
                    $set = new jl_String;
                    var$3 = $this.$decomposedChar;
                    var$4 = var$3.data;
                    jl_String_$callClinit();
                    var$5 = var$4.length;
                    var$4 = $rt_createCharArray(var$5);
                    $set.$characters = var$4;
                    jl_System_fastArraycopy(var$3, 0, var$4, 0, var$5);
                    $this.$decomposedCharUTF16 = $set;
                }
                if (!jl_String_equals(var$2, $this.$decomposedCharUTF16)) {
                    var$6 = 0;
                    break a;
                }
            }
            var$6 = 1;
        }
        return var$6;
    }
    function jur_HangulDecomposedCharSet_hasConsumed($this, $matchResult) {
        return 1;
    }
    function jur_CharSet() {
        jur_LeafSet.call(this);
        this.$ch0 = 0;
    }
    function jur_CharSet__init_(var_0) {
        var var_1 = new jur_CharSet();
        jur_CharSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_CharSet__init_0($this, $ch) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$charCount = 1;
        $this.$ch0 = $ch;
    }
    function jur_CharSet_charCount($this) {
        return 1;
    }
    function jur_CharSet_accepts($this, $strIndex, $testString) {
        var var$3, var$4;
        var$3 = $this.$ch0;
        if ($strIndex >= 0) {
            var$4 = $testString.$characters.data;
            if ($strIndex < var$4.length)
                return var$3 != var$4[$strIndex] ? (-1) : 1;
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_CharSet_find($this, $strIndex, $testStr, $matchResult) {
        var $strLength, var$5, var$6, var$7, var$8, var$9;
        if ($testStr instanceof jl_String) {
            $strLength = $matchResult.$rightBound0;
            while (true) {
                if ($strIndex >= $strLength)
                    return (-1);
                var$5 = jl_String_indexOf($testStr, $this.$ch0, $strIndex);
                if (var$5 < 0)
                    return (-1);
                var$6 = $this.$next3;
                $strIndex = var$5 + 1 | 0;
                if (var$6.$matches($strIndex, $testStr, $matchResult) >= 0)
                    break;
            }
            return var$5;
        }
        var$7 = $matchResult.$rightBound0;
        a: {
            b: {
                while (true) {
                    if ($strIndex > var$7) {
                        $strIndex = (-1);
                        break b;
                    }
                    var$5 = $strIndex + 1 | 0;
                    if (var$5 > $matchResult.$rightBound0) {
                        $matchResult.$hitEnd = 1;
                        var$8 = (-1);
                    } else {
                        var$8 = $this.$ch0;
                        if ($strIndex < 0)
                            break a;
                        var$9 = $testStr.$characters.data;
                        if ($strIndex >= var$9.length)
                            break a;
                        var$8 = var$8 != var$9[$strIndex] ? (-1) : 1;
                        var$8 = var$8 < 0 ? (-1) : $this.$next3.$matches($strIndex + var$8 | 0, $testStr, $matchResult);
                    }
                    if (var$8 >= 0)
                        break;
                    $strIndex = var$5;
                }
            }
            return $strIndex;
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        jl_Throwable__init_0($testStr);
        $rt_throw($testStr);
    }
    function jur_CharSet_findBack($this, $strIndex, $lastIndex, $testStr, $matchResult) {
        var var$5, var$6;
        if ($testStr instanceof jl_String) {
            a: {
                while (true) {
                    if ($lastIndex < $strIndex)
                        return (-1);
                    var$5 = jl_String_lastIndexOf($testStr, $this.$ch0, $lastIndex);
                    if (var$5 < 0)
                        break a;
                    if (var$5 < $strIndex)
                        break a;
                    if ($this.$next3.$matches(var$5 + 1 | 0, $testStr, $matchResult) >= 0)
                        break;
                    $lastIndex = var$5 + (-1) | 0;
                }
                return var$5;
            }
            return (-1);
        }
        b: {
            c: {
                while (true) {
                    if ($lastIndex < $strIndex) {
                        $lastIndex = (-1);
                        break c;
                    }
                    if (($lastIndex + 1 | 0) > $matchResult.$rightBound0) {
                        $matchResult.$hitEnd = 1;
                        var$5 = (-1);
                    } else {
                        var$5 = $this.$ch0;
                        if ($lastIndex < 0)
                            break b;
                        var$6 = $testStr.$characters.data;
                        if ($lastIndex >= var$6.length)
                            break b;
                        var$5 = var$5 != var$6[$lastIndex] ? (-1) : 1;
                        var$5 = var$5 < 0 ? (-1) : $this.$next3.$matches($lastIndex + var$5 | 0, $testStr, $matchResult);
                    }
                    if (var$5 >= 0)
                        break;
                    $lastIndex = $lastIndex + (-1) | 0;
                }
            }
            return $lastIndex;
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        jl_Throwable__init_0($testStr);
        $rt_throw($testStr);
    }
    function jur_CharSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$ch0;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        var$3 = var$2.$length;
        jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
        var$4 = var$2.$buffer;
        var$4.data[var$3] = var$1;
        var$5 = new jl_String;
        var$3 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$3);
        var$5.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$3);
        return var$5;
    }
    function jur_CharSet_first($this, $set) {
        var var$2, var$3, var$4, var$5, var$6;
        if ($set instanceof jur_CharSet)
            return $set.$ch0 != $this.$ch0 ? 0 : 1;
        if (!($set instanceof jur_RangeSet)) {
            if ($set instanceof jur_SupplRangeSet)
                return $set.$contains1($this.$ch0);
            if (!($set instanceof jur_SupplCharSet))
                return 1;
            return 0;
        }
        $set = $set;
        var$2 = $this.$ch0;
        var$3 = $rt_createCharArray(1);
        var$4 = var$3.data;
        var$4[0] = var$2;
        jl_String_$callClinit();
        var$5 = var$4.length;
        var$6 = $rt_createCharArray(var$5);
        var$4 = var$6.data;
        jl_System_fastArraycopy(var$3, 0, var$6, 0, var$5);
        $set = $set.$chars0;
        if (0 >= var$4.length) {
            $set = new jl_StringIndexOutOfBoundsException;
            $set.$suppressionEnabled = 1;
            $set.$writableStackTrace = 1;
            $rt_throw($set);
        }
        return (!$set.$contains1(var$4[0]) ? (-1) : 1) <= 0 ? 0 : 1;
    }
    function jur_UCICharSet() {
        jur_LeafSet.call(this);
        this.$ch3 = 0;
    }
    function jur_UCICharSet__init_(var_0) {
        var var_1 = new jur_UCICharSet();
        jur_UCICharSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_UCICharSet__init_0($this, $ch) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$charCount = 1;
        if (jl_Character_upperCaseMapping === null) {
            if (jl_Character_$$metadata$$1 === null)
                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
        }
        $ch = jl_Character_mapChar(jl_Character_upperCaseMapping, $ch) & 65535;
        if (jl_Character_lowerCaseMapping === null) {
            if (jl_Character_$$metadata$$0 === null)
                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
        }
        $this.$ch3 = jl_Character_mapChar(jl_Character_lowerCaseMapping, $ch) & 65535;
    }
    function jur_UCICharSet_accepts($this, $strIndex, $testString) {
        var var$3, var$4;
        var$3 = $this.$ch3;
        if ($strIndex >= 0) {
            var$4 = $testString.$characters.data;
            if ($strIndex < var$4.length) {
                $strIndex = var$4[$strIndex];
                if (jl_Character_upperCaseMapping === null) {
                    if (jl_Character_$$metadata$$1 === null)
                        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                    jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                }
                $strIndex = jl_Character_mapChar(jl_Character_upperCaseMapping, $strIndex) & 65535;
                if (jl_Character_lowerCaseMapping === null) {
                    if (jl_Character_$$metadata$$0 === null)
                        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                    jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                }
                return var$3 != (jl_Character_mapChar(jl_Character_lowerCaseMapping, $strIndex) & 65535) ? (-1) : 1;
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_UCICharSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$ch3;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(220));
        var$3 = var$2.$length;
        jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
        var$4 = var$2.$buffer;
        var$4.data[var$3] = var$1;
        var$5 = new jl_String;
        var$3 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$3);
        var$5.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$3);
        return var$5;
    }
    function jur_CICharSet() {
        var a = this; jur_LeafSet.call(a);
        a.$ch1 = 0;
        a.$supplement = 0;
    }
    function jur_CICharSet__init_(var_0) {
        var var_1 = new jur_CICharSet();
        jur_CICharSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_CICharSet__init_0($this, $ch) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$charCount = 1;
        $this.$ch1 = $ch;
        $this.$supplement = jur_Pattern_getSupplement($ch);
    }
    function jur_CICharSet_accepts($this, $strIndex, $testString) {
        var var$3, var$4, var$5;
        var$3 = $this.$ch1;
        if ($strIndex >= 0) {
            var$4 = $testString.$characters.data;
            var$5 = $rt_compare($strIndex, var$4.length);
            if (var$5 < 0) {
                a: {
                    b: {
                        if (var$3 != var$4[$strIndex]) {
                            var$3 = $this.$supplement;
                            if ($strIndex < 0)
                                break a;
                            if (var$5 >= 0)
                                break a;
                            if (var$3 != var$4[$strIndex]) {
                                $strIndex = (-1);
                                break b;
                            }
                        }
                        $strIndex = 1;
                    }
                    return $strIndex;
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_CICharSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$ch1;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(221));
        var$3 = var$2.$length;
        jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
        var$4 = var$2.$buffer;
        var$4.data[var$3] = var$1;
        var$5 = new jl_String;
        var$3 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$3);
        var$5.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$3);
        return var$5;
    }
    function jur_DecomposedCharSet() {
        var a = this; jur_JointSet.call(a);
        a.$readCharsForCodePoint = 0;
        a.$decomposedCharUTF160 = null;
        a.$decomposedChar0 = null;
        a.$decomposedCharLength0 = 0;
    }
    function jur_DecomposedCharSet__init_(var_0, var_1) {
        var var_2 = new jur_DecomposedCharSet();
        jur_DecomposedCharSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_DecomposedCharSet__init_0($this, $decomposedChar, $decomposedCharLength) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$readCharsForCodePoint = 1;
        $this.$decomposedChar0 = $decomposedChar;
        $this.$decomposedCharLength0 = $decomposedCharLength;
    }
    function jur_DecomposedCharSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_DecomposedCharSet_matches($this, $strIndex, $testString, $matchResult) {
        var $decCodePoint, $rightBound, $curChar, var$7, $decCurCodePoint, var$9, var$10;
        $decCodePoint = $rt_createIntArray(4);
        $rightBound = $matchResult.$rightBound0;
        if ($strIndex >= $rightBound)
            return (-1);
        $curChar = jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound);
        var$7 = $strIndex + $this.$readCharsForCodePoint | 0;
        $decCurCodePoint = jur_Lexer_decompTable.$get7($curChar);
        if ($decCurCodePoint === null) {
            var$9 = $decCodePoint.data;
            $strIndex = 1;
            var$9[0] = $curChar;
        } else {
            $strIndex = $decCurCodePoint.data.length;
            jl_System_fastArraycopy($decCurCodePoint, 0, $decCodePoint, 0, $strIndex);
            $strIndex = 0 + $strIndex | 0;
        }
        a: {
            if (var$7 < $rightBound) {
                $decCurCodePoint = $decCodePoint.data;
                $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
                while ($strIndex < 4) {
                    if (!jur_Lexer_hasDecompositionNonNullCanClass($curChar)) {
                        var$10 = $strIndex + 1 | 0;
                        $decCurCodePoint[$strIndex] = $curChar;
                    } else {
                        var$9 = (jur_Lexer_decompTable.$get7($curChar)).data;
                        if (var$9.length != 2) {
                            var$10 = $strIndex + 1 | 0;
                            $decCurCodePoint[$strIndex] = var$9[0];
                        } else {
                            $curChar = $strIndex + 1 | 0;
                            $decCurCodePoint[$strIndex] = var$9[0];
                            var$10 = $curChar + 1 | 0;
                            $decCurCodePoint[$curChar] = var$9[1];
                        }
                    }
                    var$7 = var$7 + $this.$readCharsForCodePoint | 0;
                    if (var$7 >= $rightBound) {
                        $strIndex = var$10;
                        break a;
                    }
                    $curChar = jur_DecomposedCharSet_codePointAt($this, var$7, $testString, $rightBound);
                    $strIndex = var$10;
                }
            }
        }
        if ($strIndex != $this.$decomposedCharLength0)
            return (-1);
        var$9 = $decCodePoint.data;
        $curChar = 0;
        while (true) {
            if ($curChar >= $strIndex)
                return $this.$next3.$matches(var$7, $testString, $matchResult);
            if (var$9[$curChar] != $this.$decomposedChar0.data[$curChar])
                break;
            $curChar = $curChar + 1 | 0;
        }
        return (-1);
    }
    function jur_DecomposedCharSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        if ($this.$decomposedCharUTF160 === null) {
            var$1 = new jl_StringBuilder;
            var$1.$buffer = $rt_createCharArray(16);
            var$2 = 0;
            while (var$2 < $this.$decomposedCharLength0) {
                var$3 = $this.$decomposedChar0.data[var$2];
                if (var$3 < 65536) {
                    var$4 = $rt_createCharArray(1);
                    var$4.data[0] = var$3 & 65535;
                } else
                    var$4 = $rt_createCharArrayFromData([(55296 | (var$3 - 65536 | 0) >> 10 & 1023) & 65535, (56320 | var$3 & 1023) & 65535]);
                var$5 = var$4.data.length;
                jl_AbstractStringBuilder_insert7(var$1, var$1.$length, var$4, 0, var$5);
                var$2 = var$2 + 1 | 0;
            }
            var$6 = new jl_String;
            var$7 = var$1.$buffer;
            var$3 = var$1.$length;
            jl_String_$callClinit();
            var$4 = $rt_createCharArray(var$3);
            var$6.$characters = var$4;
            jl_System_fastArraycopy(var$7, 0, var$4, 0, var$3);
            $this.$decomposedCharUTF160 = var$6;
        }
        var$8 = $this.$decomposedCharUTF160;
        var$1 = new jl_StringBuilder;
        var$1.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(222));
        var$2 = var$1.$length;
        if (var$8 === null)
            var$8 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$1, var$2, var$8);
        var$6 = new jl_String;
        var$7 = var$1.$buffer;
        var$3 = var$1.$length;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray(var$3);
        var$6.$characters = var$4;
        jl_System_fastArraycopy(var$7, 0, var$4, 0, var$3);
        return var$6;
    }
    function jur_DecomposedCharSet_codePointAt($this, $strIndex, $testString, $rightBound) {
        var $curCodePointUTF16, $curChar, $low, var$7;
        a: {
            $this.$readCharsForCodePoint = 1;
            if ($strIndex >= ($rightBound - 1 | 0)) {
                if ($strIndex >= 0) {
                    $curCodePointUTF16 = $testString.$characters.data;
                    if ($strIndex < $curCodePointUTF16.length) {
                        $curChar = $curCodePointUTF16[$strIndex];
                        break a;
                    }
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $rightBound = $strIndex + 1 | 0;
            if ($strIndex >= 0) {
                $curCodePointUTF16 = $testString.$characters.data;
                $low = $curCodePointUTF16.length;
                if ($strIndex < $low) {
                    $curChar = $curCodePointUTF16[$strIndex];
                    if ($rightBound >= 0 && $rightBound < $low) {
                        $low = $curCodePointUTF16[$rightBound];
                        $strIndex = ($curChar & 64512) != 55296 ? 0 : 1;
                        if ($strIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0) {
                            $curCodePointUTF16 = $rt_createCharArray(2);
                            var$7 = $curCodePointUTF16.data;
                            var$7[0] = $curChar;
                            var$7[1] = $low;
                            $curChar = jl_Character_codePointAt($curCodePointUTF16, 0, var$7.length);
                            $this.$readCharsForCodePoint = 2;
                        }
                        break a;
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        return $curChar;
    }
    function jur_DecomposedCharSet_first($this, $set) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        a: {
            if ($set instanceof jur_DecomposedCharSet) {
                $set = $set;
                if ($set.$decomposedCharUTF160 === null) {
                    var$2 = new jl_StringBuilder;
                    var$2.$buffer = $rt_createCharArray(16);
                    var$3 = 0;
                    while (var$3 < $set.$decomposedCharLength0) {
                        var$4 = $set.$decomposedChar0.data[var$3];
                        if (var$4 < 65536) {
                            var$5 = $rt_createCharArray(1);
                            var$5.data[0] = var$4 & 65535;
                        } else
                            var$5 = $rt_createCharArrayFromData([(55296 | (var$4 - 65536 | 0) >> 10 & 1023) & 65535, (56320 | var$4 & 1023) & 65535]);
                        var$6 = var$5.data.length;
                        jl_AbstractStringBuilder_insert7(var$2, var$2.$length, var$5, 0, var$6);
                        var$3 = var$3 + 1 | 0;
                    }
                    var$7 = new jl_String;
                    var$5 = var$2.$buffer;
                    var$4 = var$2.$length;
                    jl_String_$callClinit();
                    var$8 = $rt_createCharArray(var$4);
                    var$7.$characters = var$8;
                    jl_System_fastArraycopy(var$5, 0, var$8, 0, var$4);
                    $set.$decomposedCharUTF160 = var$7;
                }
                var$2 = $set.$decomposedCharUTF160;
                if ($this.$decomposedCharUTF160 === null) {
                    $set = new jl_StringBuilder;
                    $set.$buffer = $rt_createCharArray(16);
                    var$3 = 0;
                    while (var$3 < $this.$decomposedCharLength0) {
                        var$9 = $this.$decomposedChar0.data[var$3];
                        if (var$9 < 65536) {
                            var$5 = $rt_createCharArray(1);
                            var$5.data[0] = var$9 & 65535;
                        } else
                            var$5 = $rt_createCharArrayFromData([(55296 | (var$9 - 65536 | 0) >> 10 & 1023) & 65535, (56320 | var$9 & 1023) & 65535]);
                        var$10 = var$5.data.length;
                        jl_AbstractStringBuilder_insert7($set, $set.$length, var$5, 0, var$10);
                        var$3 = var$3 + 1 | 0;
                    }
                    var$7 = new jl_String;
                    var$5 = $set.$buffer;
                    var$4 = $set.$length;
                    jl_String_$callClinit();
                    var$8 = $rt_createCharArray(var$4);
                    var$7.$characters = var$8;
                    jl_System_fastArraycopy(var$5, 0, var$8, 0, var$4);
                    $this.$decomposedCharUTF160 = var$7;
                }
                if (!jl_String_equals(var$2, $this.$decomposedCharUTF160)) {
                    var$3 = 0;
                    break a;
                }
            }
            var$3 = 1;
        }
        return var$3;
    }
    function jur_DecomposedCharSet_hasConsumed($this, $matchResult) {
        return 1;
    }
    var jur_UCIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet);
    function jur_UCIDecomposedCharSet__init_(var_0, var_1) {
        var var_2 = new jur_UCIDecomposedCharSet();
        jur_UCIDecomposedCharSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_UCIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$readCharsForCodePoint = 1;
        $this.$decomposedChar0 = $decomp;
        $this.$decomposedCharLength0 = $decomposedCharLength;
    }
    var jur_CIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet);
    function jur_CIDecomposedCharSet__init_(var_0, var_1) {
        var var_2 = new jur_CIDecomposedCharSet();
        jur_CIDecomposedCharSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_CIDecomposedCharSet__init_0($this, $decomp, $decomposedCharLength) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$readCharsForCodePoint = 1;
        $this.$decomposedChar0 = $decomp;
        $this.$decomposedCharLength0 = $decomposedCharLength;
    }
    var jur_PossessiveGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
    function jur_PossessiveGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $stringIndex_0;
        while (true) {
            $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($stringIndex_0 <= 0)
                break;
            $stringIndex = $stringIndex_0;
        }
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    var jur_PosPlusGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
    function jur_PosPlusGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $nextIndex;
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex < 0)
            return (-1);
        if ($nextIndex > $stringIndex) {
            while (true) {
                $stringIndex = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
                if ($stringIndex <= $nextIndex)
                    break;
                $nextIndex = $stringIndex;
            }
            $stringIndex = $nextIndex;
        }
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    var jur_AltGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
    function jur_AltGroupQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_AltGroupQuantifierSet();
        jur_AltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_AltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
    }
    function jur_AltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $nextIndex;
        if (!$this.$innerSet.$hasConsumed($matchResult))
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0)
            return $nextIndex;
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    function jur_AltGroupQuantifierSet_setNext($this, $next) {
        $this.$next3 = $next;
        $this.$innerSet.$setNext($next);
    }
    var jur_PosAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet);
    function jur_PosAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $nextIndex;
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex <= 0)
            $nextIndex = $stringIndex;
        return $this.$next3.$matches($nextIndex, $testString, $matchResult);
    }
    function jur_PosAltGroupQuantifierSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_CompositeGroupQuantifierSet() {
        var a = this; jur_GroupQuantifierSet.call(a);
        a.$quantifier = null;
        a.$setCounter = 0;
    }
    function jur_CompositeGroupQuantifierSet__init_0(var_0, var_1, var_2, var_3, var_4) {
        var var_5 = new jur_CompositeGroupQuantifierSet();
        jur_CompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
        return var_5;
    }
    function jur_CompositeGroupQuantifierSet__init_($this, $quant, $innerSet, $next, $type, $setCounter) {
        var var$6, var$7;
        var$6 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$6 + 1 | 0;
        var$7 = new jl_AbstractStringBuilder;
        var$7.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$7, var$7.$length, var$6, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$quantifier = $quant;
        $this.$setCounter = $setCounter;
    }
    function jur_CompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $enterCounter, var$5, $nextIndex, var$7;
        $enterCounter = $this.$setCounter;
        $enterCounter = $matchResult.$compQuantCounters.data[$enterCounter];
        if (!$this.$innerSet.$hasConsumed($matchResult))
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        if ($enterCounter >= $this.$quantifier.$max2)
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        var$5 = $this.$setCounter;
        $enterCounter = $enterCounter + 1 | 0;
        $matchResult.$compQuantCounters.data[var$5] = $enterCounter;
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            $stringIndex = $this.$setCounter;
            $matchResult.$compQuantCounters.data[$stringIndex] = 0;
            return $nextIndex;
        }
        $nextIndex = $this.$setCounter;
        $enterCounter = $enterCounter + (-1) | 0;
        var$7 = $matchResult.$compQuantCounters.data;
        var$7[$nextIndex] = $enterCounter;
        if ($enterCounter >= $this.$quantifier.$min1)
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        var$7[$nextIndex] = 0;
        return (-1);
    }
    function jur_CompositeGroupQuantifierSet_getName($this) {
        return jur_Quantifier_toString($this.$quantifier);
    }
    var jur_PosCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet);
    function jur_PosCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $counter, $max, $nextIndex;
        $counter = 0;
        $max = $this.$quantifier.$max2;
        a: {
            while (true) {
                $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
                if ($nextIndex <= $stringIndex)
                    break a;
                if ($counter >= $max)
                    break;
                $counter = $counter + 1 | 0;
                $stringIndex = $nextIndex;
            }
        }
        if ($nextIndex < 0 && $counter < $this.$quantifier.$min1)
            return (-1);
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    var jur_ReluctantGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet);
    function jur_ReluctantGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $res;
        if (!$this.$innerSet.$hasConsumed($matchResult))
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        $res = $this.$next3.$matches($stringIndex, $testString, $matchResult);
        if ($res >= 0)
            return $res;
        return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    var jur_RelAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet);
    function jur_RelAltGroupQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_RelAltGroupQuantifierSet();
        jur_RelAltGroupQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_RelAltGroupQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
    }
    function jur_RelAltGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $nextIndex;
        if (!$this.$innerSet.$hasConsumed($matchResult))
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        $nextIndex = $this.$next3.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex < 0)
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        return $nextIndex;
    }
    var jur_RelCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet);
    function jur_RelCompositeGroupQuantifierSet__init_0(var_0, var_1, var_2, var_3, var_4) {
        var var_5 = new jur_RelCompositeGroupQuantifierSet();
        jur_RelCompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
        return var_5;
    }
    function jur_RelCompositeGroupQuantifierSet__init_($this, $quant, $innerSet, $next, $type, $setCounter) {
        var var$6, var$7;
        var$6 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$6 + 1 | 0;
        var$7 = new jl_AbstractStringBuilder;
        var$7.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$7, var$7.$length, var$6, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$quantifier = $quant;
        $this.$setCounter = $setCounter;
    }
    function jur_RelCompositeGroupQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $nextIndex, $enterCounter, var$6;
        $nextIndex = $this.$setCounter;
        $enterCounter = $matchResult.$compQuantCounters.data[$nextIndex];
        if (!$this.$innerSet.$hasConsumed($matchResult))
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        var$6 = $this.$quantifier;
        if ($enterCounter >= var$6.$max2) {
            $nextIndex = $this.$setCounter;
            $matchResult.$compQuantCounters.data[$nextIndex] = 0;
            return $this.$next3.$matches($stringIndex, $testString, $matchResult);
        }
        if ($enterCounter < var$6.$min1) {
            $nextIndex = $this.$setCounter;
            $matchResult.$compQuantCounters.data[$nextIndex] = $enterCounter + 1 | 0;
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        } else {
            $nextIndex = $this.$next3.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex >= 0) {
                $stringIndex = $this.$setCounter;
                $matchResult.$compQuantCounters.data[$stringIndex] = 0;
                return $nextIndex;
            }
            $nextIndex = $this.$setCounter;
            $matchResult.$compQuantCounters.data[$nextIndex] = $enterCounter + 1 | 0;
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        }
        return $nextIndex;
    }
    var jur_DotAllQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet);
    function jur_DotAllQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_DotAllQuantifierSet();
        jur_DotAllQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_DotAllQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
    }
    function jur_DotAllQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $strLength;
        $strLength = $matchResult.$rightBound0;
        if ($strLength > $stringIndex)
            return $this.$next3.$findBack($stringIndex, $strLength, $testString, $matchResult);
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    function jur_DotAllQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
        var $strLength;
        $strLength = $matchResult.$rightBound0;
        if ($this.$next3.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
            return $stringIndex;
        return (-1);
    }
    function jur_DotAllQuantifierSet_getName($this) {
        return $rt_s(223);
    }
    function jur_DotQuantifierSet() {
        jur_QuantifierSet.call(this);
        this.$lt = null;
    }
    function jur_DotQuantifierSet__init_(var_0, var_1, var_2, var_3) {
        var var_4 = new jur_DotQuantifierSet();
        jur_DotQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function jur_DotQuantifierSet__init_0($this, $innerSet, $next, $type, $lt) {
        var var$5, var$6;
        var$5 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$5 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$lt = $lt;
    }
    function jur_DotQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $strLength, $startSearch, var$6, var$7;
        $strLength = $matchResult.$rightBound0;
        $startSearch = $stringIndex;
        a: {
            while (true) {
                if ($startSearch >= $strLength) {
                    $startSearch = (-1);
                    break a;
                }
                var$6 = $this.$lt;
                if ($startSearch < 0)
                    break;
                var$7 = $testString.$characters.data;
                if ($startSearch >= var$7.length)
                    break;
                if (var$6.$isLineTerminator(var$7[$startSearch]))
                    break a;
                $startSearch = $startSearch + 1 | 0;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        if ($startSearch >= 0)
            $strLength = $startSearch;
        if ($strLength > $stringIndex)
            return $this.$next3.$findBack($stringIndex, $strLength, $testString, $matchResult);
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    function jur_DotQuantifierSet_find($this, $stringIndex, $testString, $matchResult) {
        var $strLength, $res, $nextSearch, var$7, var$8, var$9, $leftBound;
        $strLength = $matchResult.$rightBound0;
        $res = $this.$next3.$find0($stringIndex, $testString, $matchResult);
        if ($res < 0)
            return (-1);
        $nextSearch = $res;
        a: {
            while (true) {
                if ($nextSearch >= $strLength) {
                    $nextSearch = (-1);
                    break a;
                }
                var$7 = $this.$lt;
                if ($nextSearch < 0)
                    break;
                var$8 = $testString.$characters.data;
                if ($nextSearch >= var$8.length)
                    break;
                if (var$7.$isLineTerminator(var$8[$nextSearch]))
                    break a;
                $nextSearch = $nextSearch + 1 | 0;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        if ($nextSearch >= 0)
            $strLength = $nextSearch;
        var$9 = $this.$next3.$findBack($res, $strLength, $testString, $matchResult);
        if ($res > var$9)
            var$9 = $res;
        if (var$9 <= 0)
            $leftBound = var$9 ? (-1) : 0;
        else {
            $leftBound = var$9 - 1 | 0;
            b: {
                while (true) {
                    if ($leftBound < $stringIndex) {
                        $leftBound = (-1);
                        break b;
                    }
                    $matchResult = $this.$lt;
                    if ($leftBound < 0)
                        break;
                    var$8 = $testString.$characters.data;
                    if ($leftBound >= var$8.length)
                        break;
                    if ($matchResult.$isLineTerminator(var$8[$leftBound]))
                        break b;
                    $leftBound = $leftBound + (-1) | 0;
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        if ($leftBound >= $stringIndex)
            $stringIndex = $leftBound >= var$9 ? $leftBound : $leftBound + 1 | 0;
        return $stringIndex;
    }
    function jur_DotQuantifierSet_getName($this) {
        return $rt_s(224);
    }
    var jur_AbstractLineTerminator = $rt_classWithoutFields();
    var jur_AbstractLineTerminator_unixLT = null;
    var jur_AbstractLineTerminator_unicodeLT = null;
    function jur_AbstractLineTerminator_getInstance($flag) {
        var var$2;
        if (!($flag & 1)) {
            var$2 = jur_AbstractLineTerminator_unicodeLT;
            if (var$2 !== null)
                return var$2;
            var$2 = new jur_AbstractLineTerminator$2;
            jur_AbstractLineTerminator_unicodeLT = var$2;
            return var$2;
        }
        var$2 = jur_AbstractLineTerminator_unixLT;
        if (var$2 !== null)
            return var$2;
        var$2 = new jur_AbstractLineTerminator$1;
        jur_AbstractLineTerminator_unixLT = var$2;
        return var$2;
    }
    var jur_PossessiveQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
    function jur_PossessiveQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_PossessiveQuantifierSet();
        jur_PossessiveQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_PossessiveQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$leaf = $innerSet;
    }
    function jur_PossessiveQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var var$4;
        a: {
            while (true) {
                if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0)
                    break a;
                var$4 = $this.$leaf.$accepts($stringIndex, $testString);
                if (var$4 < 1)
                    break;
                $stringIndex = $stringIndex + var$4 | 0;
            }
        }
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    var jur_PossessiveAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet);
    function jur_PossessiveAltQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_PossessiveAltQuantifierSet();
        jur_PossessiveAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_PossessiveAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$leaf = $innerSet;
    }
    function jur_PossessiveAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var var$4;
        if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 >= 1)
                $stringIndex = $stringIndex + var$4 | 0;
        }
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    var jur_PossessiveCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet);
    function jur_PossessiveCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
        var var_4 = new jur_PossessiveCompositeQuantifierSet();
        jur_PossessiveCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function jur_PossessiveCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
        var var$5, var$6;
        var$5 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$5 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$leaf = $innerSet;
        $this.$quantifier0 = $quant;
    }
    function jur_PossessiveCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var var$4, $min, $max, $i, $shift;
        var$4 = $this.$quantifier0;
        $min = var$4.$min1;
        $max = var$4.$max2;
        $i = 0;
        while (true) {
            if ($i >= $min) {
                a: {
                    while (true) {
                        if ($i >= $max)
                            break a;
                        if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0)
                            break a;
                        $shift = $this.$leaf.$accepts($stringIndex, $testString);
                        if ($shift < 1)
                            break;
                        $stringIndex = $stringIndex + $shift | 0;
                        $i = $i + 1 | 0;
                    }
                }
                return $this.$next3.$matches($stringIndex, $testString, $matchResult);
            }
            if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0) {
                $matchResult.$hitEnd = 1;
                return (-1);
            }
            $shift = $this.$leaf.$accepts($stringIndex, $testString);
            if ($shift < 1)
                break;
            $stringIndex = $stringIndex + $shift | 0;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    var jur_ReluctantQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet);
    function jur_ReluctantQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_ReluctantQuantifierSet();
        jur_ReluctantQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_ReluctantQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$leaf = $innerSet;
    }
    function jur_ReluctantQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var var$4;
        while (true) {
            var$4 = $this.$next3.$matches($stringIndex, $testString, $matchResult);
            if (var$4 >= 0)
                break;
            if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
                var$4 = $this.$leaf.$accepts($stringIndex, $testString);
                $stringIndex = $stringIndex + var$4 | 0;
            }
            if (var$4 < 1)
                return (-1);
        }
        return var$4;
    }
    var jur_ReluctantAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet);
    function jur_ReluctantAltQuantifierSet__init_(var_0, var_1, var_2) {
        var var_3 = new jur_ReluctantAltQuantifierSet();
        jur_ReluctantAltQuantifierSet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_ReluctantAltQuantifierSet__init_0($this, $innerSet, $next, $type) {
        var var$4, var$5;
        var$4 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$4 + 1 | 0;
        var$5 = new jl_AbstractStringBuilder;
        var$5.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$leaf = $innerSet;
    }
    function jur_ReluctantAltQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $shift;
        $shift = $this.$next3.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $shift;
        return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    var jur_ReluctantCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet);
    function jur_ReluctantCompositeQuantifierSet__init_(var_0, var_1, var_2, var_3) {
        var var_4 = new jur_ReluctantCompositeQuantifierSet();
        jur_ReluctantCompositeQuantifierSet__init_0(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function jur_ReluctantCompositeQuantifierSet__init_0($this, $quant, $innerSet, $next, $type) {
        var var$5, var$6;
        var$5 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$5 + 1 | 0;
        var$6 = new jl_AbstractStringBuilder;
        var$6.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10)).$toString();
        $this.$next3 = $next;
        $this.$innerSet = $innerSet;
        $this.$type3 = $type;
        $this.$leaf = $innerSet;
        $this.$quantifier0 = $quant;
    }
    function jur_ReluctantCompositeQuantifierSet_matches($this, $stringIndex, $testString, $matchResult) {
        var var$4, $min, $max, $i, var$8, var$9;
        var$4 = $this.$quantifier0;
        $min = var$4.$min1;
        $max = var$4.$max2;
        $i = 0;
        while (true) {
            if ($i >= $min) {
                a: {
                    while (true) {
                        var$8 = $this.$next3.$matches($stringIndex, $testString, $matchResult);
                        if (var$8 >= 0)
                            break;
                        if (($stringIndex + $this.$leaf.$charCount0() | 0) <= $matchResult.$rightBound0) {
                            var$8 = $this.$leaf.$accepts($stringIndex, $testString);
                            $stringIndex = $stringIndex + var$8 | 0;
                            $i = $i + 1 | 0;
                        }
                        if (var$8 < 1)
                            break a;
                        if ($i > $max)
                            break a;
                    }
                    return var$8;
                }
                return (-1);
            }
            if (($stringIndex + $this.$leaf.$charCount0() | 0) > $matchResult.$rightBound0) {
                $matchResult.$hitEnd = 1;
                return (-1);
            }
            var$9 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$9 < 1)
                break;
            $stringIndex = $stringIndex + var$9 | 0;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    var jur_SOLSet = $rt_classWithoutFields(jur_AbstractSet);
    function jur_SOLSet__init_() {
        var var_0 = new jur_SOLSet();
        jur_SOLSet__init_0(var_0);
        return var_0;
    }
    function jur_SOLSet__init_0($this) {
        var var$1, var$2;
        var$1 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$1 + 1 | 0;
        var$2 = new jl_AbstractStringBuilder;
        var$2.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
    }
    function jur_SOLSet_matches($this, $strIndex, $testString, $matchResult) {
        if ($strIndex && !($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound0))
            return (-1);
        return $this.$next3.$matches($strIndex, $testString, $matchResult);
    }
    function jur_SOLSet_hasConsumed($this, $matchResult) {
        return 0;
    }
    function jur_SOLSet_getName($this) {
        return $rt_s(225);
    }
    function jur_WordBoundary() {
        jur_AbstractSet.call(this);
        this.$positive = 0;
    }
    function jur_WordBoundary__init_(var_0) {
        var var_1 = new jur_WordBoundary();
        jur_WordBoundary__init_0(var_1, var_0);
        return var_1;
    }
    function jur_WordBoundary__init_0($this, $positive) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$positive = $positive;
    }
    function jur_WordBoundary_matches($this, $stringIndex, $testString, $matchResult) {
        var $ch1, var$5, $ch2, $leftBound;
        a: {
            if ($stringIndex >= $matchResult.$rightBound0)
                $ch1 = 32;
            else {
                if ($stringIndex >= 0) {
                    var$5 = $testString.$characters.data;
                    if ($stringIndex < var$5.length) {
                        $ch1 = var$5[$stringIndex];
                        break a;
                    }
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        b: {
            if (!$stringIndex)
                $ch2 = 32;
            else {
                $ch2 = $stringIndex - 1 | 0;
                if ($ch2 >= 0) {
                    var$5 = $testString.$characters.data;
                    if ($ch2 < var$5.length) {
                        $ch2 = var$5[$ch2];
                        break b;
                    }
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        $leftBound = $matchResult.$transparentBounds ? 0 : $matchResult.$leftBound0;
        return ($ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1) ^ ($ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1) ^ $this.$positive ? (-1) : $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    function jur_WordBoundary_hasConsumed($this, $matchResult) {
        return 0;
    }
    function jur_WordBoundary_getName($this) {
        return $rt_s(226);
    }
    function jur_WordBoundary_isSpace($this, $ch, $index, $leftBound, $testString) {
        var var$5, var$6;
        a: {
            b: {
                switch (jl_Character_getType($ch)) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 9:
                        break;
                    case 6:
                    case 7:
                    case 8:
                        break b;
                    default:
                        break b;
                }
                var$5 = 1;
                break a;
            }
            var$5 = 0;
        }
        if (!var$5 && $ch != 95) {
            c: {
                d: {
                    if (jl_Character_getType($ch) == 6)
                        while (true) {
                            $index = $index + (-1) | 0;
                            if ($index < $leftBound)
                                break d;
                            if ($index < 0)
                                break c;
                            var$6 = $testString.$characters.data;
                            if ($index >= var$6.length)
                                break c;
                            e: {
                                f: {
                                    $ch = var$6[$index];
                                    switch (jl_Character_getType($ch)) {
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 9:
                                            break;
                                        case 6:
                                        case 7:
                                        case 8:
                                            break f;
                                        default:
                                            break f;
                                    }
                                    var$5 = 1;
                                    break e;
                                }
                                var$5 = 0;
                            }
                            if (var$5)
                                return 0;
                            if (jl_Character_getType($ch) != 6)
                                return 1;
                        }
                }
                return 1;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        return 0;
    }
    var jur_PreviousMatch = $rt_classWithoutFields(jur_AbstractSet);
    function jur_PreviousMatch__init_() {
        var var_0 = new jur_PreviousMatch();
        jur_PreviousMatch__init_0(var_0);
        return var_0;
    }
    function jur_PreviousMatch__init_0($this) {
        var var$1, var$2;
        var$1 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$1 + 1 | 0;
        var$2 = new jl_AbstractStringBuilder;
        var$2.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
    }
    function jur_PreviousMatch_matches($this, $stringIndex, $testString, $matchResult) {
        if ($stringIndex != $matchResult.$previousMatch)
            return (-1);
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    function jur_PreviousMatch_hasConsumed($this, $matchResult) {
        return 0;
    }
    function jur_PreviousMatch_getName($this) {
        return $rt_s(227);
    }
    function jur_EOLSet() {
        jur_AbstractSet.call(this);
        this.$consCounter = 0;
    }
    function jur_EOLSet__init_0(var_0) {
        var var_1 = new jur_EOLSet();
        jur_EOLSet__init_(var_1, var_0);
        return var_1;
    }
    function jur_EOLSet__init_($this, $counter) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$consCounter = $counter;
    }
    function jur_EOLSet_matches($this, $strIndex, $testString, $matchResult) {
        var $rightBound, $ch, var$6, var$7;
        $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound0 : $testString.$characters.data.length;
        if ($strIndex >= $rightBound) {
            $ch = $this.$consCounter;
            $matchResult.$consumers.data[$ch] = 0;
            return $this.$next3.$matches($strIndex, $testString, $matchResult);
        }
        a: {
            var$6 = $rightBound - $strIndex | 0;
            if (var$6 == 2) {
                if ($strIndex >= 0) {
                    var$7 = $testString.$characters.data;
                    $ch = var$7.length;
                    if ($strIndex < $ch) {
                        if (var$7[$strIndex] != 13)
                            break a;
                        $rightBound = $strIndex + 1 | 0;
                        if ($rightBound >= 0 && $rightBound < $ch) {
                            if (var$7[$rightBound] != 10)
                                break a;
                            $ch = $this.$consCounter;
                            $matchResult.$consumers.data[$ch] = 0;
                            return $this.$next3.$matches($strIndex, $testString, $matchResult);
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        b: {
            c: {
                if (var$6 == 1) {
                    if ($strIndex >= 0) {
                        var$7 = $testString.$characters.data;
                        if ($strIndex < var$7.length) {
                            $ch = var$7[$strIndex];
                            if ($ch == 10)
                                break b;
                            if ($ch == 13)
                                break b;
                            if ($ch == 133)
                                break b;
                            if (($ch | 1) != 8233)
                                break c;
                            else
                                break b;
                        }
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            return (-1);
        }
        $rightBound = $this.$consCounter;
        $matchResult.$consumers.data[$rightBound] = 0;
        return $this.$next3.$matches($strIndex, $testString, $matchResult);
    }
    function jur_EOLSet_hasConsumed($this, $matchResult) {
        var var$2, var$3, $res;
        var$2 = $this.$consCounter;
        var$3 = $matchResult.$consumers.data;
        $res = !var$3[var$2] ? 0 : 1;
        var$3[var$2] = (-1);
        return $res;
    }
    function jur_EOLSet_getName($this) {
        return $rt_s(228);
    }
    var jur_EOISet = $rt_classWithoutFields(jur_AbstractSet);
    function jur_EOISet__init_() {
        var var_0 = new jur_EOISet();
        jur_EOISet__init_0(var_0);
        return var_0;
    }
    function jur_EOISet__init_0($this) {
        var var$1, var$2;
        var$1 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$1 + 1 | 0;
        var$2 = new jl_AbstractStringBuilder;
        var$2.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
    }
    function jur_EOISet_matches($this, $stringIndex, $testString, $matchResult) {
        if ($stringIndex < (!$matchResult.$transparentBounds ? $matchResult.$rightBound0 : $testString.$characters.data.length))
            return (-1);
        $matchResult.$hitEnd = 1;
        $matchResult.$requireEnd = 1;
        return $this.$next3.$matches($stringIndex, $testString, $matchResult);
    }
    function jur_EOISet_hasConsumed($this, $matchResult) {
        return 0;
    }
    function jur_EOISet_getName($this) {
        return $rt_s(229);
    }
    function jur_MultiLineSOLSet() {
        jur_AbstractSet.call(this);
        this.$lt0 = null;
    }
    function jur_MultiLineSOLSet__init_(var_0) {
        var var_1 = new jur_MultiLineSOLSet();
        jur_MultiLineSOLSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_MultiLineSOLSet__init_0($this, $lt) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$lt0 = $lt;
    }
    function jur_MultiLineSOLSet_matches($this, $strIndex, $testString, $matchResult) {
        var var$4, var$5, var$6, var$7, var$8;
        a: {
            b: {
                c: {
                    if ($strIndex != $matchResult.$rightBound0) {
                        if (!$strIndex)
                            break b;
                        if ($matchResult.$anchoringBounds && $strIndex == $matchResult.$leftBound0)
                            break b;
                        var$4 = $this.$lt0;
                        var$5 = $strIndex - 1 | 0;
                        if (var$5 >= 0) {
                            var$6 = $testString.$characters.data;
                            var$7 = var$6.length;
                            if (var$5 < var$7) {
                                var$8 = var$6[var$5];
                                if ($strIndex < 0)
                                    break a;
                                if ($strIndex >= var$7)
                                    break a;
                                if (!var$4.$isAfterLineTerminator(var$8, var$6[$strIndex]))
                                    break c;
                                else
                                    break b;
                            }
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
                return (-1);
            }
            return $this.$next3.$matches($strIndex, $testString, $matchResult);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_MultiLineSOLSet_hasConsumed($this, $matchResult) {
        return 0;
    }
    function jur_MultiLineSOLSet_getName($this) {
        return $rt_s(230);
    }
    var jur_DotAllSet = $rt_classWithoutFields(jur_JointSet);
    function jur_DotAllSet__init_() {
        var var_0 = new jur_DotAllSet();
        jur_DotAllSet__init_0(var_0);
        return var_0;
    }
    function jur_DotAllSet__init_0($this) {
        var var$1, var$2;
        var$1 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$1 + 1 | 0;
        var$2 = new jl_AbstractStringBuilder;
        var$2.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10)).$toString();
    }
    function jur_DotAllSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $strLength, var$5, var$6, var$7, $high, $low, var$10;
        $strLength = $matchResult.$rightBound0;
        var$5 = $stringIndex + 1 | 0;
        if (var$5 > $strLength) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        if ($stringIndex >= 0) {
            var$6 = $testString.$characters.data;
            var$7 = var$6.length;
            if ($stringIndex < var$7) {
                $high = $rt_compare(var$6[$stringIndex] & 64512, 55296);
                $low = $high ? 0 : 1;
                a: {
                    if ($low) {
                        var$10 = $stringIndex + 2 | 0;
                        if (var$10 <= $strLength) {
                            if (var$5 >= 0 && var$5 < var$7) {
                                $low = var$6[var$5];
                                $stringIndex = $high ? 0 : 1;
                                if (!($stringIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0))
                                    break a;
                                else
                                    return $this.$next3.$matches(var$10, $testString, $matchResult);
                            }
                            $testString = new jl_StringIndexOutOfBoundsException;
                            $testString.$suppressionEnabled = 1;
                            $testString.$writableStackTrace = 1;
                            $rt_throw($testString);
                        }
                    }
                }
                return $this.$next3.$matches(var$5, $testString, $matchResult);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_DotAllSet_getName($this) {
        return $rt_s(231);
    }
    function jur_DotAllSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_DotAllSet_getType($this) {
        return (-2147483602);
    }
    function jur_DotAllSet_hasConsumed($this, $matchResult) {
        return 1;
    }
    function jur_DotSet() {
        jur_JointSet.call(this);
        this.$lt1 = null;
    }
    function jur_DotSet__init_(var_0) {
        var var_1 = new jur_DotSet();
        jur_DotSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_DotSet__init_0($this, $lt) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$lt1 = $lt;
    }
    function jur_DotSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $strLength, var$5, var$6, var$7, $high, var$9, $low, var$11;
        $strLength = $matchResult.$rightBound0;
        var$5 = $stringIndex + 1 | 0;
        if (var$5 > $strLength) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        if ($stringIndex >= 0) {
            var$6 = $testString.$characters.data;
            var$7 = var$6.length;
            if ($stringIndex < var$7) {
                $high = var$6[$stringIndex];
                var$9 = $rt_compare($high & 64512, 55296);
                $low = var$9 ? 0 : 1;
                a: {
                    if ($low) {
                        var$11 = $stringIndex + 2 | 0;
                        if (var$11 <= $strLength) {
                            if (var$5 >= 0 && var$5 < var$7) {
                                $low = var$6[var$5];
                                $stringIndex = var$9 ? 0 : 1;
                                if (!($stringIndex && (($low & 64512) != 56320 ? 0 : 1) ? 1 : 0))
                                    break a;
                                else
                                    return $this.$lt1.$isLineTerminator((($high & 1023) << 10 | $low & 1023) + 65536 | 0) ? (-1) : $this.$next3.$matches(var$11, $testString, $matchResult);
                            }
                            $testString = new jl_StringIndexOutOfBoundsException;
                            $testString.$suppressionEnabled = 1;
                            $testString.$writableStackTrace = 1;
                            $rt_throw($testString);
                        }
                    }
                }
                return $this.$lt1.$isLineTerminator($high) ? (-1) : $this.$next3.$matches(var$5, $testString, $matchResult);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_DotSet_getName($this) {
        return $rt_s(90);
    }
    function jur_DotSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_DotSet_getType($this) {
        return (-2147483602);
    }
    function jur_DotSet_hasConsumed($this, $matchResult) {
        return 1;
    }
    function jur_UEOLSet() {
        jur_AbstractSet.call(this);
        this.$consCounter0 = 0;
    }
    function jur_UEOLSet__init_(var_0) {
        var var_1 = new jur_UEOLSet();
        jur_UEOLSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_UEOLSet__init_0($this, $counter) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$consCounter0 = $counter;
    }
    function jur_UEOLSet_matches($this, $strIndex, $testString, $matchResult) {
        var $rightBound, var$5, var$6;
        $rightBound = $matchResult.$anchoringBounds ? $matchResult.$rightBound0 : $testString.$characters.data.length;
        if ($strIndex >= $rightBound) {
            $rightBound = $this.$consCounter0;
            $matchResult.$consumers.data[$rightBound] = 0;
            return $this.$next3.$matches($strIndex, $testString, $matchResult);
        }
        a: {
            if (($rightBound - $strIndex | 0) == 1) {
                if ($strIndex >= 0) {
                    var$5 = $testString.$characters.data;
                    if ($strIndex < var$5.length) {
                        if (var$5[$strIndex] != 10)
                            break a;
                        else {
                            var$6 = $this.$consCounter0;
                            $matchResult.$consumers.data[var$6] = 1;
                            return $this.$next3.$matches($strIndex + 1 | 0, $testString, $matchResult);
                        }
                    }
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        return (-1);
    }
    function jur_UEOLSet_hasConsumed($this, $matchResult) {
        var var$2, var$3, $res;
        var$2 = $this.$consCounter0;
        var$3 = $matchResult.$consumers.data;
        $res = !var$3[var$2] ? 0 : 1;
        var$3[var$2] = (-1);
        return $res;
    }
    function jur_UEOLSet_getName($this) {
        return $rt_s(228);
    }
    function jur_UMultiLineEOLSet() {
        jur_AbstractSet.call(this);
        this.$consCounter1 = 0;
    }
    function jur_UMultiLineEOLSet__init_(var_0) {
        var var_1 = new jur_UMultiLineEOLSet();
        jur_UMultiLineEOLSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_UMultiLineEOLSet__init_0($this, $counter) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$consCounter1 = $counter;
    }
    function jur_UMultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
        var $strDif, var$5, var$6;
        if (($matchResult.$anchoringBounds ? $matchResult.$rightBound0 - $strIndex | 0 : $testString.$characters.data.length - $strIndex | 0) <= 0) {
            $strDif = $this.$consCounter1;
            $matchResult.$consumers.data[$strDif] = 0;
            return $this.$next3.$matches($strIndex, $testString, $matchResult);
        }
        if ($strIndex >= 0) {
            var$5 = $testString.$characters.data;
            if ($strIndex < var$5.length) {
                if (var$5[$strIndex] != 10)
                    return (-1);
                var$6 = $this.$consCounter1;
                $matchResult.$consumers.data[var$6] = 1;
                return $this.$next3.$matches($strIndex + 1 | 0, $testString, $matchResult);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_UMultiLineEOLSet_hasConsumed($this, $matchResult) {
        var var$2, var$3, $res;
        var$2 = $this.$consCounter1;
        var$3 = $matchResult.$consumers.data;
        $res = !var$3[var$2] ? 0 : 1;
        var$3[var$2] = (-1);
        return $res;
    }
    function jur_UMultiLineEOLSet_getName($this) {
        return $rt_s(232);
    }
    function jur_MultiLineEOLSet() {
        jur_AbstractSet.call(this);
        this.$consCounter2 = 0;
    }
    function jur_MultiLineEOLSet__init_(var_0) {
        var var_1 = new jur_MultiLineEOLSet();
        jur_MultiLineEOLSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_MultiLineEOLSet__init_0($this, $counter) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$consCounter2 = $counter;
    }
    function jur_MultiLineEOLSet_matches($this, $strIndex, $testString, $matchResult) {
        var $strDif, var$5, $ch1, $ch2;
        $strDif = $matchResult.$anchoringBounds ? $matchResult.$rightBound0 - $strIndex | 0 : $testString.$characters.data.length - $strIndex | 0;
        if (!$strDif) {
            $strDif = $this.$consCounter2;
            $matchResult.$consumers.data[$strDif] = 0;
            return $this.$next3.$matches($strIndex, $testString, $matchResult);
        }
        a: {
            if ($strDif < 2) {
                if ($strIndex >= 0) {
                    var$5 = $testString.$characters.data;
                    if ($strIndex < var$5.length) {
                        $ch1 = var$5[$strIndex];
                        $ch2 = 97;
                        break a;
                    }
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            if ($strIndex >= 0) {
                var$5 = $testString.$characters.data;
                $ch2 = var$5.length;
                if ($strIndex < $ch2) {
                    $ch1 = var$5[$strIndex];
                    $strDif = $strIndex + 1 | 0;
                    if ($strDif >= 0 && $strDif < $ch2) {
                        $ch2 = var$5[$strDif];
                        break a;
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        switch ($ch1) {
            case 10:
            case 133:
            case 8232:
            case 8233:
                $strDif = $this.$consCounter2;
                $matchResult.$consumers.data[$strDif] = 0;
                return $this.$next3.$matches($strIndex, $testString, $matchResult);
            case 13:
                if ($ch2 != 10) {
                    $strDif = $this.$consCounter2;
                    $matchResult.$consumers.data[$strDif] = 0;
                    return $this.$next3.$matches($strIndex, $testString, $matchResult);
                }
                $strDif = $this.$consCounter2;
                $matchResult.$consumers.data[$strDif] = 0;
                return $this.$next3.$matches($strIndex, $testString, $matchResult);
            default:
        }
        return (-1);
    }
    function jur_MultiLineEOLSet_hasConsumed($this, $matchResult) {
        var var$2, var$3, $res;
        var$2 = $this.$consCounter2;
        var$3 = $matchResult.$consumers.data;
        $res = !var$3[var$2] ? 0 : 1;
        var$3[var$2] = (-1);
        return $res;
    }
    function jur_MultiLineEOLSet_getName($this) {
        return $rt_s(233);
    }
    function jur_CIBackReferenceSet() {
        var a = this; jur_JointSet.call(a);
        a.$referencedGroup = 0;
        a.$consCounter3 = 0;
    }
    function jur_CIBackReferenceSet__init_(var_0, var_1) {
        var var_2 = new jur_CIBackReferenceSet();
        jur_CIBackReferenceSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_CIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$referencedGroup = $groupIndex;
        $this.$consCounter3 = $consCounter;
    }
    function jur_CIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $group, $i, var$6, var$7, var$8, var$9, var$10;
        $group = jur_CIBackReferenceSet_getString($this, $matchResult);
        if ($group !== null && ($stringIndex + $group.$characters.data.length | 0) <= $matchResult.$rightBound0) {
            $i = 0;
            a: {
                b: {
                    c: {
                        d: {
                            while (true) {
                                var$6 = $group.$characters.data;
                                var$7 = var$6.length;
                                var$8 = $rt_compare($i, var$7);
                                if (var$8 >= 0) {
                                    $i = $this.$consCounter3;
                                    $matchResult.$consumers.data[$i] = var$7;
                                    return $this.$next3.$matches($stringIndex + var$7 | 0, $testString, $matchResult);
                                }
                                if ($i < 0)
                                    break c;
                                if (var$8 >= 0)
                                    break c;
                                var$9 = var$6[$i];
                                var$7 = $stringIndex + $i | 0;
                                if (var$7 < 0)
                                    break d;
                                var$10 = $testString.$characters.data;
                                if (var$7 >= var$10.length)
                                    break d;
                                if (var$9 != var$10[var$7]) {
                                    if ($i < 0)
                                        break a;
                                    if (var$8 >= 0)
                                        break a;
                                    var$8 = jur_Pattern_getSupplement(var$6[$i]);
                                    if (var$7 < 0)
                                        break b;
                                    var$10 = $testString.$characters.data;
                                    if (var$7 >= var$10.length)
                                        break b;
                                    if (var$8 != var$10[var$7])
                                        break;
                                }
                                $i = $i + 1 | 0;
                            }
                            return (-1);
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        return (-1);
    }
    function jur_CIBackReferenceSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_CIBackReferenceSet_getString($this, $matchResult) {
        var var$2, var$3, var$4, var$5, var$6, $res, var$8;
        a: {
            var$2 = $this.$referencedGroup;
            var$3 = $matchResult.$groupBounds.data;
            var$4 = var$2 * 2 | 0;
            var$5 = var$3[var$4];
            var$6 = var$3[var$4 + 1 | 0];
            var$2 = var$6 | var$5;
            var$4 = var$6 - var$5 | 0;
            if ((var$2 | var$4) >= 0) {
                $res = $matchResult.$string0;
                var$8 = $res.$characters;
                var$2 = $rt_compare(var$6, var$8.data.length);
                if (var$2 <= 0) {
                    var$6 = $rt_compare(var$5, var$6);
                    if (var$6 > 0) {
                        $matchResult = new jl_IndexOutOfBoundsException;
                        $matchResult.$suppressionEnabled = 1;
                        $matchResult.$writableStackTrace = 1;
                        $rt_throw($matchResult);
                    }
                    if (!var$6) {
                        jl_String_$callClinit();
                        $res = jl_String_EMPTY;
                    } else if (!(!var$5 && !var$2)) {
                        $res = new jl_String;
                        jl_String_$callClinit();
                        var$3 = $rt_createCharArray(var$4);
                        $res.$characters = var$3;
                        jl_System_fastArraycopy(var$8, var$5, var$3, 0, var$4);
                    }
                    break a;
                }
            }
            $res = null;
        }
        return $res;
    }
    function jur_CIBackReferenceSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$groupIndex0;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(234));
        jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
        var$3 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$3.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$3;
    }
    function jur_CIBackReferenceSet_hasConsumed($this, $matchResult) {
        var var$2, var$3, $res;
        var$2 = $this.$consCounter3;
        var$3 = $matchResult.$consumers.data;
        $res = !var$3[var$2] ? 0 : 1;
        var$3[var$2] = (-1);
        return $res;
    }
    var jur_BackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet);
    function jur_BackReferenceSet__init_(var_0, var_1) {
        var var_2 = new jur_BackReferenceSet();
        jur_BackReferenceSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_BackReferenceSet__init_0($this, $groupIndex, $consCounter) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$referencedGroup = $groupIndex;
        $this.$consCounter3 = $consCounter;
    }
    function jur_BackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $group, $shift, var$6;
        $group = jur_CIBackReferenceSet_getString($this, $matchResult);
        if ($group !== null && ($stringIndex + $group.$characters.data.length | 0) <= $matchResult.$rightBound0) {
            $shift = !jl_String_startsWith($testString, $group, $stringIndex) ? (-1) : $group.$characters.data.length;
            if ($shift < 0)
                return (-1);
            var$6 = $this.$consCounter3;
            $matchResult.$consumers.data[var$6] = $shift;
            return $this.$next3.$matches($stringIndex + $shift | 0, $testString, $matchResult);
        }
        return (-1);
    }
    function jur_BackReferenceSet_find($this, $strIndex, $testString, $matchResult) {
        var $group, $strLength;
        $group = jur_CIBackReferenceSet_getString($this, $matchResult);
        $strLength = $matchResult.$leftBound0;
        if ($group !== null && ($strIndex + $group.$characters.data.length | 0) <= $strLength) {
            while (true) {
                if ($strIndex > $strLength)
                    return (-1);
                $strIndex = jl_String_indexOf1($testString, $group, $strIndex);
                if ($strIndex < 0)
                    return (-1);
                if ($this.$next3.$matches($strIndex + $group.$characters.data.length | 0, $testString, $matchResult) >= 0)
                    break;
                $strIndex = $strIndex + 1 | 0;
            }
            return $strIndex;
        }
        return (-1);
    }
    function jur_BackReferenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
        var $group, var$6;
        $group = jur_CIBackReferenceSet_getString($this, $matchResult);
        if ($group === null)
            return (-1);
        a: {
            while (true) {
                if ($lastIndex < $strIndex)
                    return (-1);
                var$6 = jl_String_lastIndexOf0($testString, $group, $lastIndex);
                if (var$6 < 0)
                    break a;
                if (var$6 < $strIndex)
                    break a;
                if ($this.$next3.$matches(var$6 + $group.$characters.data.length | 0, $testString, $matchResult) >= 0)
                    break;
                $lastIndex = var$6 + (-1) | 0;
            }
            return var$6;
        }
        return (-1);
    }
    function jur_BackReferenceSet_first($this, $set) {
        return 1;
    }
    function jur_BackReferenceSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$groupIndex0;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(235));
        jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
        var$3 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$3.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$3;
    }
    function jur_UCIBackReferenceSet() {
        jur_CIBackReferenceSet.call(this);
        this.$groupIndex1 = 0;
    }
    function jur_UCIBackReferenceSet__init_(var_0, var_1) {
        var var_2 = new jur_UCIBackReferenceSet();
        jur_UCIBackReferenceSet__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_UCIBackReferenceSet__init_0($this, $groupIndex, $consCounter) {
        var var$3, var$4;
        var$3 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$3 + 1 | 0;
        var$4 = new jl_AbstractStringBuilder;
        var$4.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10)).$toString();
        $this.$referencedGroup = $groupIndex;
        $this.$consCounter3 = $consCounter;
    }
    function jur_UCIBackReferenceSet_matches($this, $stringIndex, $testString, $matchResult) {
        var var$4, var$5, var$6, var$7, $i, $group, var$10;
        a: {
            var$4 = $this.$referencedGroup;
            var$5 = $matchResult.$groupBounds.data;
            var$6 = var$4 * 2 | 0;
            var$7 = var$5[var$6];
            $i = var$5[var$6 + 1 | 0];
            var$4 = $i | var$7;
            var$6 = $i - var$7 | 0;
            if ((var$4 | var$6) >= 0) {
                $group = $matchResult.$string0;
                var$10 = $group.$characters;
                var$4 = $rt_compare($i, var$10.data.length);
                if (var$4 <= 0) {
                    $i = $rt_compare(var$7, $i);
                    if ($i > 0) {
                        $testString = new jl_IndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        jl_Throwable_fillInStackTrace($testString);
                        $rt_throw($testString);
                    }
                    if (!$i) {
                        jl_String_$callClinit();
                        $group = jl_String_EMPTY;
                    } else if (!(!var$7 && !var$4)) {
                        $group = new jl_String;
                        jl_String_$callClinit();
                        var$5 = $rt_createCharArray(var$6);
                        $group.$characters = var$5;
                        jl_System_fastArraycopy(var$10, var$7, var$5, 0, var$6);
                    }
                    break a;
                }
            }
            $group = null;
        }
        if ($group !== null && ($stringIndex + $group.$characters.data.length | 0) <= $matchResult.$rightBound0) {
            $i = 0;
            b: {
                c: {
                    while (true) {
                        var$5 = $group.$characters.data;
                        var$6 = var$5.length;
                        var$4 = $rt_compare($i, var$6);
                        if (var$4 >= 0) {
                            var$4 = $this.$consCounter3;
                            $matchResult.$consumers.data[var$4] = var$6;
                            return $this.$next3.$matches($stringIndex + var$6 | 0, $testString, $matchResult);
                        }
                        if ($i < 0)
                            break b;
                        if (var$4 >= 0)
                            break b;
                        var$4 = var$5[$i];
                        if (jl_Character_upperCaseMapping === null) {
                            if (jl_Character_$$metadata$$1 === null)
                                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                        }
                        var$4 = jl_Character_mapChar(jl_Character_upperCaseMapping, var$4) & 65535;
                        if (jl_Character_lowerCaseMapping === null) {
                            if (jl_Character_$$metadata$$0 === null)
                                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                        }
                        var$6 = jl_Character_mapChar(jl_Character_lowerCaseMapping, var$4) & 65535;
                        var$7 = $stringIndex + $i | 0;
                        if (var$7 < 0)
                            break c;
                        var$5 = $testString.$characters.data;
                        if (var$7 >= var$5.length)
                            break c;
                        var$4 = var$5[var$7];
                        if (jl_Character_upperCaseMapping === null) {
                            if (jl_Character_$$metadata$$1 === null)
                                jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                            jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                        }
                        var$4 = jl_Character_mapChar(jl_Character_upperCaseMapping, var$4) & 65535;
                        if (jl_Character_lowerCaseMapping === null) {
                            if (jl_Character_$$metadata$$0 === null)
                                jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                            jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                        }
                        if (var$6 != (jl_Character_mapChar(jl_Character_lowerCaseMapping, var$4) & 65535))
                            break;
                        $i = $i + 1 | 0;
                    }
                    return (-1);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        return (-1);
    }
    function jur_UCIBackReferenceSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$groupIndex1;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(236));
        jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
        var$3 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$3.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$3;
    }
    var jl_StringBuffer = $rt_classWithoutFields(jl_AbstractStringBuilder);
    function jl_StringBuffer_insert($this, $index, $s, $start, $end) {
        jl_AbstractStringBuilder_insert6($this, $index, $s, $start, $end);
        return $this;
    }
    function jl_StringBuffer_insert0($this, var$1, var$2, var$3, var$4) {
        var var$5, var$6, var$7, var$8;
        jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + var$4 | 0);
        var$5 = var$4 + var$3 | 0;
        while (var$3 < var$5) {
            var$6 = var$2.data;
            var$7 = $this.$buffer.data;
            var$4 = var$1 + 1 | 0;
            var$8 = var$3 + 1 | 0;
            var$7[var$1] = var$6[var$3];
            var$1 = var$4;
            var$3 = var$8;
        }
        return $this;
    }
    function jl_StringBuffer_append($this, var$1, var$2, var$3) {
        var var$4, var$5, var$6, var$7, var$8;
        var$4 = $this.$length;
        jl_AbstractStringBuilder_insertSpace($this, var$4, var$4 + var$3 | 0);
        var$5 = var$3 + var$2 | 0;
        while (var$2 < var$5) {
            var$6 = var$1.data;
            var$7 = $this.$buffer.data;
            var$3 = var$4 + 1 | 0;
            var$8 = var$2 + 1 | 0;
            var$7[var$4] = var$6[var$2];
            var$4 = var$3;
            var$2 = var$8;
        }
        return $this;
    }
    function jl_StringBuffer_charAt($this, var$1) {
        var var$2;
        if (var$1 >= 0 && var$1 < $this.$length)
            return $this.$buffer.data[var$1];
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    function jl_StringBuffer_length($this) {
        return $this.$length;
    }
    function jl_StringBuffer_ensureCapacity($this, var$1) {
        jl_AbstractStringBuilder_ensureCapacity($this, var$1);
    }
    function jl_StringBuffer_insert1($this, var$1, var$2) {
        jl_AbstractStringBuilder_insertSpace($this, var$1, var$1 + 1 | 0);
        $this.$buffer.data[var$1] = var$2;
        return $this;
    }
    function jl_StringBuffer_insert2($this, var$1, var$2) {
        jl_AbstractStringBuilder_insert($this, var$1, var$2);
        return $this;
    }
    function jur_SequenceSet() {
        var a = this; jur_LeafSet.call(a);
        a.$string2 = null;
        a.$leftToRight = null;
        a.$rightToLeft = null;
    }
    function jur_SequenceSet__init_(var_0) {
        var var_1 = new jur_SequenceSet();
        jur_SequenceSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_SequenceSet__init_0($this, $substring) {
        var $j, var$3, var$4, var$5, var$6, var$7;
        $j = jur_AbstractSet_counter;
        jur_AbstractSet_counter = $j + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $j, 10)).$toString();
        $this.$charCount = 1;
        var$3 = new jl_String;
        var$4 = $substring.$buffer;
        var$5 = $substring.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$3.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        $this.$string2 = var$3;
        $j = $substring.$length;
        $this.$charCount = $j;
        $this.$leftToRight = jur_SequenceSet$IntHash__init_($j);
        $this.$rightToLeft = jur_SequenceSet$IntHash__init_($this.$charCount);
        $j = 0;
        a: {
            b: {
                while (true) {
                    var$5 = $this.$charCount;
                    if ($j >= (var$5 - 1 | 0))
                        break;
                    $substring = $this.$leftToRight;
                    var$3 = $this.$string2;
                    if ($j < 0)
                        break a;
                    var$4 = var$3.$characters.data;
                    if ($j >= var$4.length)
                        break a;
                    jur_SequenceSet$IntHash_put($substring, var$4[$j], (var$5 - $j | 0) - 1 | 0);
                    $substring = $this.$rightToLeft;
                    var$3 = $this.$string2;
                    var$7 = ($this.$charCount - $j | 0) - 1 | 0;
                    if (var$7 < 0)
                        break b;
                    var$4 = var$3.$characters.data;
                    if (var$7 >= var$4.length)
                        break b;
                    jur_SequenceSet$IntHash_put($substring, var$4[var$7], var$7);
                    $j = $j + 1 | 0;
                }
                return;
            }
            $substring = new jl_StringIndexOutOfBoundsException;
            $substring.$suppressionEnabled = 1;
            $substring.$writableStackTrace = 1;
            $rt_throw($substring);
        }
        $substring = new jl_StringIndexOutOfBoundsException;
        $substring.$suppressionEnabled = 1;
        $substring.$writableStackTrace = 1;
        $rt_throw($substring);
    }
    function jur_SequenceSet_accepts($this, $strIndex, $testString) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        var$3 = 0;
        a: {
            b: {
                c: {
                    while (true) {
                        var$4 = $this.$charCount;
                        if (var$3 >= var$4)
                            break;
                        var$5 = var$3 + $strIndex | 0;
                        if (var$5 < 0)
                            break a;
                        var$6 = $testString.$characters.data;
                        if (var$5 >= var$6.length)
                            break a;
                        var$7 = var$6[var$5];
                        var$8 = $this.$string2;
                        if (var$3 < 0)
                            break b;
                        var$6 = var$8.$characters.data;
                        if (var$3 >= var$6.length)
                            break b;
                        if (var$7 != var$6[var$3]) {
                            $strIndex = 0;
                            break c;
                        }
                        var$3 = var$3 + 1 | 0;
                    }
                    $strIndex = 1;
                }
                if (!$strIndex)
                    var$4 = (-1);
                return var$4;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_SequenceSet_find($this, $strIndex, $testString, $matchResult) {
        var $strLength, var$5;
        $strLength = $matchResult.$rightBound0;
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            var$5 = jur_SequenceSet_indexOf($this, $testString, $strIndex, $strLength);
            if (var$5 < 0)
                return (-1);
            if ($this.$next3.$matches(var$5 + $this.$charCount | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = var$5 + 1 | 0;
        }
        return var$5;
    }
    function jur_SequenceSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult) {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            $lastIndex = jur_SequenceSet_lastIndexOf($this, $testString, $strIndex, $lastIndex);
            if ($lastIndex < 0)
                return (-1);
            if ($this.$next3.$matches($lastIndex + $this.$charCount | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = $lastIndex + (-1) | 0;
        }
        return $lastIndex;
    }
    function jur_SequenceSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$string2;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(237));
        var$3 = var$2.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$2, var$3, var$1);
        var$1 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$1.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$1;
    }
    function jur_SequenceSet_first($this, $set) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        if ($set instanceof jur_CharSet) {
            var$2 = $set.$ch0;
            var$3 = $this.$string2.$characters.data;
            if (0 < var$3.length)
                return var$2 != var$3[0] ? 0 : 1;
            $set = new jl_StringIndexOutOfBoundsException;
            $set.$suppressionEnabled = 1;
            $set.$writableStackTrace = 1;
            $rt_throw($set);
        }
        if ($set instanceof jur_RangeSet) {
            $set = $set;
            var$4 = $this.$string2;
            var$3 = var$4.$characters;
            if (1 != var$3.data.length) {
                var$4 = new jl_String;
                jl_String_$callClinit();
                var$5 = $rt_createCharArray(1);
                var$4.$characters = var$5;
                jl_System_fastArraycopy(var$3, 0, var$5, 0, 1);
            }
            $set = $set.$chars0;
            var$3 = var$4.$characters.data;
            if (0 >= var$3.length) {
                $set = new jl_StringIndexOutOfBoundsException;
                $set.$suppressionEnabled = 1;
                $set.$writableStackTrace = 1;
                $rt_throw($set);
            }
            return (!$set.$contains1(var$3[0]) ? (-1) : 1) <= 0 ? 0 : 1;
        }
        if (!($set instanceof jur_SupplRangeSet)) {
            if (!($set instanceof jur_SupplCharSet))
                return 1;
            a: {
                var$3 = $this.$string2.$characters.data;
                var$6 = var$3.length;
                if (var$6 > 1) {
                    var$7 = $set.$ch4;
                    if (0 >= var$6) {
                        $set = new jl_StringIndexOutOfBoundsException;
                        $set.$suppressionEnabled = 1;
                        $set.$writableStackTrace = 1;
                        $rt_throw($set);
                    }
                    var$8 = var$3[0];
                    if (1 >= var$6) {
                        $set = new jl_StringIndexOutOfBoundsException;
                        jl_IndexOutOfBoundsException__init_0($set);
                        $rt_throw($set);
                    }
                    if (var$7 == jl_Character_toCodePoint(var$8, var$3[1])) {
                        var$2 = 1;
                        break a;
                    }
                }
                var$2 = 0;
            }
            return var$2;
        }
        $set = $set;
        var$3 = $this.$string2.$characters.data;
        if (0 >= var$3.length) {
            $set = new jl_StringIndexOutOfBoundsException;
            $set.$suppressionEnabled = 1;
            $set.$writableStackTrace = 1;
            $rt_throw($set);
        }
        b: {
            c: {
                if (!$set.$contains1(var$3[0])) {
                    var$3 = $this.$string2.$characters.data;
                    var$8 = var$3.length;
                    if (var$8 <= 1)
                        break c;
                    if (0 >= var$8) {
                        $set = new jl_StringIndexOutOfBoundsException;
                        $set.$suppressionEnabled = 1;
                        $set.$writableStackTrace = 1;
                        $rt_throw($set);
                    }
                    var$7 = var$3[0];
                    if (1 >= var$8) {
                        $set = new jl_StringIndexOutOfBoundsException;
                        $set.$suppressionEnabled = 1;
                        $set.$writableStackTrace = 1;
                        $rt_throw($set);
                    }
                    if (!$set.$contains1(((var$7 & 1023) << 10 | var$3[1] & 1023) + 65536 | 0))
                        break c;
                }
                var$2 = 1;
                break b;
            }
            var$2 = 0;
        }
        return var$2;
    }
    function jur_SequenceSet_indexOf($this, $str, $i, $to) {
        var var$4, $ch, var$6, $last, var$8, var$9, var$10, var$11, var$12, var$13;
        var$4 = $this.$string2;
        $ch = $this.$charCount - 1 | 0;
        if ($ch >= 0) {
            var$6 = var$4.$characters.data;
            if ($ch < var$6.length) {
                $last = var$6[$ch];
                a: {
                    b: {
                        c: {
                            while (true) {
                                var$8 = $this.$charCount;
                                if ($i > ($to - var$8 | 0))
                                    return (-1);
                                var$9 = ($i + var$8 | 0) - 1 | 0;
                                if (var$9 < 0)
                                    break c;
                                var$6 = $str.$characters.data;
                                var$10 = var$6.length;
                                if (var$9 >= var$10)
                                    break c;
                                $ch = var$6[var$9];
                                if ($ch == $last) {
                                    var$9 = 0;
                                    d: {
                                        while (var$9 < var$8) {
                                            var$11 = var$9 + $i | 0;
                                            if (var$11 < 0)
                                                break a;
                                            if (var$11 >= var$10)
                                                break a;
                                            var$12 = var$6[var$11];
                                            var$4 = $this.$string2;
                                            if (var$9 < 0)
                                                break b;
                                            var$13 = var$4.$characters.data;
                                            if (var$9 >= var$13.length)
                                                break b;
                                            if (var$12 != var$13[var$9]) {
                                                var$10 = 0;
                                                break d;
                                            }
                                            var$9 = var$9 + 1 | 0;
                                        }
                                        var$10 = 1;
                                    }
                                    if (var$10)
                                        break;
                                }
                                $i = $i + jur_SequenceSet$IntHash_get($this.$leftToRight, $ch) | 0;
                            }
                            return $i;
                        }
                        $str = new jl_StringIndexOutOfBoundsException;
                        $str.$suppressionEnabled = 1;
                        $str.$writableStackTrace = 1;
                        $rt_throw($str);
                    }
                    $str = new jl_StringIndexOutOfBoundsException;
                    $str.$suppressionEnabled = 1;
                    $str.$writableStackTrace = 1;
                    $rt_throw($str);
                }
                $str = new jl_StringIndexOutOfBoundsException;
                $str.$suppressionEnabled = 1;
                $str.$writableStackTrace = 1;
                $rt_throw($str);
            }
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    function jur_SequenceSet_lastIndexOf($this, $str, $to, $i) {
        var var$4, $first, $delta, $ch, var$8, $size, var$10, var$11;
        var$4 = $this.$string2.$characters.data;
        if (0 >= var$4.length) {
            $str = new jl_StringIndexOutOfBoundsException;
            $str.$suppressionEnabled = 1;
            $str.$writableStackTrace = 1;
            $rt_throw($str);
        }
        $first = var$4[0];
        $delta = ($str.$characters.data.length - $i | 0) - $this.$charCount | 0;
        if ($delta <= 0)
            $i = $i + $delta | 0;
        a: {
            b: {
                c: {
                    while (true) {
                        if ($i < $to)
                            return (-1);
                        if ($i < 0)
                            break c;
                        var$4 = $str.$characters.data;
                        $delta = var$4.length;
                        if ($i >= $delta)
                            break c;
                        $ch = var$4[$i];
                        if ($ch == $first) {
                            var$8 = 0;
                            d: {
                                while (var$8 < $this.$charCount) {
                                    $size = var$8 + $i | 0;
                                    if ($size < 0)
                                        break a;
                                    if ($size >= $delta)
                                        break a;
                                    $size = var$4[$size];
                                    var$10 = $this.$string2;
                                    if (var$8 < 0)
                                        break b;
                                    var$11 = var$10.$characters.data;
                                    if (var$8 >= var$11.length)
                                        break b;
                                    if ($size != var$11[var$8]) {
                                        $size = 0;
                                        break d;
                                    }
                                    var$8 = var$8 + 1 | 0;
                                }
                                $size = 1;
                            }
                            if ($size)
                                break;
                        }
                        $i = $i - jur_SequenceSet$IntHash_get($this.$rightToLeft, $ch) | 0;
                    }
                    return $i;
                }
                $str = new jl_StringIndexOutOfBoundsException;
                $str.$suppressionEnabled = 1;
                $str.$writableStackTrace = 1;
                $rt_throw($str);
            }
            $str = new jl_StringIndexOutOfBoundsException;
            $str.$suppressionEnabled = 1;
            $str.$writableStackTrace = 1;
            $rt_throw($str);
        }
        $str = new jl_StringIndexOutOfBoundsException;
        $str.$suppressionEnabled = 1;
        $str.$writableStackTrace = 1;
        $rt_throw($str);
    }
    function jur_UCISequenceSet() {
        jur_LeafSet.call(this);
        this.$string1 = null;
    }
    function jur_UCISequenceSet_accepts($this, $strIndex, $testString) {
        var $i, var$4, var$5, var$6, var$7;
        $i = 0;
        a: {
            b: {
                while (true) {
                    var$4 = $this.$string1.$characters.data;
                    var$5 = var$4.length;
                    var$6 = $rt_compare($i, var$5);
                    if (var$6 >= 0)
                        break;
                    if ($i < 0)
                        break a;
                    if (var$6 >= 0)
                        break a;
                    var$5 = var$4[$i];
                    var$7 = $strIndex + $i | 0;
                    if (var$7 < 0)
                        break b;
                    var$4 = $testString.$characters.data;
                    if (var$7 >= var$4.length)
                        break b;
                    var$6 = var$4[var$7];
                    if (jl_Character_upperCaseMapping === null) {
                        if (jl_Character_$$metadata$$1 === null)
                            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                    }
                    var$6 = jl_Character_mapChar(jl_Character_upperCaseMapping, var$6) & 65535;
                    if (jl_Character_lowerCaseMapping === null) {
                        if (jl_Character_$$metadata$$0 === null)
                            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                    }
                    if (var$5 != (jl_Character_mapChar(jl_Character_lowerCaseMapping, var$6) & 65535))
                        return (-1);
                    $i = $i + 1 | 0;
                }
                return var$5;
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_UCISequenceSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$string1;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(238));
        var$3 = var$2.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$2, var$3, var$1);
        var$1 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$1.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$1;
    }
    function jur_CISequenceSet() {
        jur_LeafSet.call(this);
        this.$string3 = null;
    }
    function jur_CISequenceSet__init_(var_0) {
        var var_1 = new jur_CISequenceSet();
        jur_CISequenceSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_CISequenceSet__init_0($this, $substring) {
        var var$2, var$3, var$4, var$5, var$6;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$charCount = 1;
        var$3 = new jl_String;
        var$4 = $substring.$buffer;
        var$5 = $substring.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$3.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        $this.$string3 = var$3;
        $this.$charCount = $substring.$length;
    }
    function jur_CISequenceSet_accepts($this, $strIndex, $testString) {
        var $i, var$4, var$5, var$6, var$7, var$8, var$9;
        $i = 0;
        a: {
            b: {
                c: {
                    d: {
                        while (true) {
                            var$4 = $this.$string3.$characters.data;
                            var$5 = var$4.length;
                            var$6 = $rt_compare($i, var$5);
                            if (var$6 >= 0)
                                break;
                            if ($i < 0)
                                break c;
                            if (var$6 >= 0)
                                break c;
                            var$7 = var$4[$i];
                            var$8 = $strIndex + $i | 0;
                            if (var$8 < 0)
                                break d;
                            var$9 = $testString.$characters.data;
                            if (var$8 >= var$9.length)
                                break d;
                            if (var$7 != var$9[var$8]) {
                                if ($i < 0)
                                    break a;
                                if (var$6 >= 0)
                                    break a;
                                var$5 = jur_Pattern_getSupplement(var$4[$i]);
                                if (var$8 < 0)
                                    break b;
                                var$4 = $testString.$characters.data;
                                if (var$8 >= var$4.length)
                                    break b;
                                if (var$5 != var$4[var$8])
                                    return (-1);
                            }
                            $i = $i + 1 | 0;
                        }
                        return var$5;
                    }
                    $testString = new jl_StringIndexOutOfBoundsException;
                    $testString.$suppressionEnabled = 1;
                    $testString.$writableStackTrace = 1;
                    $rt_throw($testString);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
            $testString = new jl_StringIndexOutOfBoundsException;
            $testString.$suppressionEnabled = 1;
            $testString.$writableStackTrace = 1;
            $rt_throw($testString);
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_CISequenceSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$string3;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(239));
        var$3 = var$2.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$2, var$3, var$1);
        var$1 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$1.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$1;
    }
    var otjc_JSObjects = $rt_classWithoutFields();
    var jur_AbstractCharClass$PredefinedCharacterClasses = $rt_classWithoutFields();
    var jur_AbstractCharClass$PredefinedCharacterClasses_space = null;
    var jur_AbstractCharClass$PredefinedCharacterClasses_digit = null;
    var jur_AbstractCharClass$PredefinedCharacterClasses_contents = null;
    function jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit() {
        jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = $rt_eraseClinit(jur_AbstractCharClass$PredefinedCharacterClasses);
        jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
    }
    function jur_AbstractCharClass$PredefinedCharacterClasses_getObject($this, $name) {
        var $i, $row, var$4;
        $i = 0;
        while (true) {
            jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
            $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data;
            if ($i >= $row.length) {
                var$4 = new ju_MissingResourceException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = $rt_s(45);
                var$4.$className = $rt_s(45);
                var$4.$key0 = $name;
                $rt_throw(var$4);
            }
            $row = $row[$i].data;
            if (jl_String_equals($name, $row[0]))
                break;
            $i = $i + 1 | 0;
        }
        return $row[1];
    }
    function jur_AbstractCharClass$PredefinedCharacterClasses__clinit_() {
        jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_();
        jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_();
        jur_AbstractCharClass$PredefinedCharacterClasses_contents = $rt_createArrayFromData($rt_arraycls(jl_Object), [$rt_createArrayFromData(jl_Object, [$rt_s(240), jur_AbstractCharClass$LazyLower__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(241), jur_AbstractCharClass$LazyUpper__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(242), jur_AbstractCharClass$LazyASCII__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(243), jur_AbstractCharClass$LazyAlpha__init_()]), $rt_createArrayFromData(jl_Object,
        [$rt_s(244), jur_AbstractCharClass$PredefinedCharacterClasses_digit]), $rt_createArrayFromData(jl_Object, [$rt_s(245), jur_AbstractCharClass$LazyAlnum__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(246), jur_AbstractCharClass$LazyPunct__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(247), jur_AbstractCharClass$LazyGraph__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(248), jur_AbstractCharClass$LazyPrint__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(249), jur_AbstractCharClass$LazyBlank__init_()]),
        $rt_createArrayFromData(jl_Object, [$rt_s(250), jur_AbstractCharClass$LazyCntrl__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(251), jur_AbstractCharClass$LazyXDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(252), jur_AbstractCharClass$LazyJavaLowerCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(253), jur_AbstractCharClass$LazyJavaUpperCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(254), jur_AbstractCharClass$LazyJavaWhitespace__init_()]), $rt_createArrayFromData(jl_Object,
        [$rt_s(255), jur_AbstractCharClass$LazyJavaMirrored__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(256), jur_AbstractCharClass$LazyJavaDefined__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(257), jur_AbstractCharClass$LazyJavaDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(258), jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(259), jur_AbstractCharClass$LazyJavaISOControl__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(260),
        jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(261), jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(262), jur_AbstractCharClass$LazyJavaLetter__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(263), jur_AbstractCharClass$LazyJavaLetterOrDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(264), jur_AbstractCharClass$LazyJavaSpaceChar__init_()]), $rt_createArrayFromData(jl_Object,
        [$rt_s(265), jur_AbstractCharClass$LazyJavaTitleCase__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(266), jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(267), jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(268), jur_AbstractCharClass$PredefinedCharacterClasses_space]), $rt_createArrayFromData(jl_Object, [$rt_s(269), jur_AbstractCharClass$LazyWord__init_()]), $rt_createArrayFromData(jl_Object,
        [$rt_s(270), jur_AbstractCharClass$LazyNonWord__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(271), jur_AbstractCharClass$PredefinedCharacterClasses_space]), $rt_createArrayFromData(jl_Object, [$rt_s(272), jur_AbstractCharClass$LazyNonSpace__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(273), jur_AbstractCharClass$PredefinedCharacterClasses_digit]), $rt_createArrayFromData(jl_Object, [$rt_s(274), jur_AbstractCharClass$LazyNonDigit__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(275),
        jur_AbstractCharClass$LazyRange__init_(0, 127)]), $rt_createArrayFromData(jl_Object, [$rt_s(276), jur_AbstractCharClass$LazyRange__init_(128, 255)]), $rt_createArrayFromData(jl_Object, [$rt_s(277), jur_AbstractCharClass$LazyRange__init_(256, 383)]), $rt_createArrayFromData(jl_Object, [$rt_s(278), jur_AbstractCharClass$LazyRange__init_(384, 591)]), $rt_createArrayFromData(jl_Object, [$rt_s(279), jur_AbstractCharClass$LazyRange__init_(592, 687)]), $rt_createArrayFromData(jl_Object, [$rt_s(280), jur_AbstractCharClass$LazyRange__init_(688,
        767)]), $rt_createArrayFromData(jl_Object, [$rt_s(281), jur_AbstractCharClass$LazyRange__init_(768, 879)]), $rt_createArrayFromData(jl_Object, [$rt_s(282), jur_AbstractCharClass$LazyRange__init_(880, 1023)]), $rt_createArrayFromData(jl_Object, [$rt_s(283), jur_AbstractCharClass$LazyRange__init_(1024, 1279)]), $rt_createArrayFromData(jl_Object, [$rt_s(284), jur_AbstractCharClass$LazyRange__init_(1280, 1327)]), $rt_createArrayFromData(jl_Object, [$rt_s(285), jur_AbstractCharClass$LazyRange__init_(1328,
        1423)]), $rt_createArrayFromData(jl_Object, [$rt_s(286), jur_AbstractCharClass$LazyRange__init_(1424, 1535)]), $rt_createArrayFromData(jl_Object, [$rt_s(287), jur_AbstractCharClass$LazyRange__init_(1536, 1791)]), $rt_createArrayFromData(jl_Object, [$rt_s(288), jur_AbstractCharClass$LazyRange__init_(1792, 1871)]), $rt_createArrayFromData(jl_Object, [$rt_s(289), jur_AbstractCharClass$LazyRange__init_(1872, 1919)]), $rt_createArrayFromData(jl_Object, [$rt_s(290), jur_AbstractCharClass$LazyRange__init_(1920,
        1983)]), $rt_createArrayFromData(jl_Object, [$rt_s(291), jur_AbstractCharClass$LazyRange__init_(2304, 2431)]), $rt_createArrayFromData(jl_Object, [$rt_s(292), jur_AbstractCharClass$LazyRange__init_(2432, 2559)]), $rt_createArrayFromData(jl_Object, [$rt_s(293), jur_AbstractCharClass$LazyRange__init_(2560, 2687)]), $rt_createArrayFromData(jl_Object, [$rt_s(294), jur_AbstractCharClass$LazyRange__init_(2688, 2815)]), $rt_createArrayFromData(jl_Object, [$rt_s(295), jur_AbstractCharClass$LazyRange__init_(2816,
        2943)]), $rt_createArrayFromData(jl_Object, [$rt_s(296), jur_AbstractCharClass$LazyRange__init_(2944, 3071)]), $rt_createArrayFromData(jl_Object, [$rt_s(297), jur_AbstractCharClass$LazyRange__init_(3072, 3199)]), $rt_createArrayFromData(jl_Object, [$rt_s(298), jur_AbstractCharClass$LazyRange__init_(3200, 3327)]), $rt_createArrayFromData(jl_Object, [$rt_s(299), jur_AbstractCharClass$LazyRange__init_(3328, 3455)]), $rt_createArrayFromData(jl_Object, [$rt_s(300), jur_AbstractCharClass$LazyRange__init_(3456,
        3583)]), $rt_createArrayFromData(jl_Object, [$rt_s(301), jur_AbstractCharClass$LazyRange__init_(3584, 3711)]), $rt_createArrayFromData(jl_Object, [$rt_s(302), jur_AbstractCharClass$LazyRange__init_(3712, 3839)]), $rt_createArrayFromData(jl_Object, [$rt_s(303), jur_AbstractCharClass$LazyRange__init_(3840, 4095)]), $rt_createArrayFromData(jl_Object, [$rt_s(304), jur_AbstractCharClass$LazyRange__init_(4096, 4255)]), $rt_createArrayFromData(jl_Object, [$rt_s(305), jur_AbstractCharClass$LazyRange__init_(4256,
        4351)]), $rt_createArrayFromData(jl_Object, [$rt_s(306), jur_AbstractCharClass$LazyRange__init_(4352, 4607)]), $rt_createArrayFromData(jl_Object, [$rt_s(307), jur_AbstractCharClass$LazyRange__init_(4608, 4991)]), $rt_createArrayFromData(jl_Object, [$rt_s(308), jur_AbstractCharClass$LazyRange__init_(4992, 5023)]), $rt_createArrayFromData(jl_Object, [$rt_s(309), jur_AbstractCharClass$LazyRange__init_(5024, 5119)]), $rt_createArrayFromData(jl_Object, [$rt_s(310), jur_AbstractCharClass$LazyRange__init_(5120,
        5759)]), $rt_createArrayFromData(jl_Object, [$rt_s(311), jur_AbstractCharClass$LazyRange__init_(5760, 5791)]), $rt_createArrayFromData(jl_Object, [$rt_s(312), jur_AbstractCharClass$LazyRange__init_(5792, 5887)]), $rt_createArrayFromData(jl_Object, [$rt_s(313), jur_AbstractCharClass$LazyRange__init_(5888, 5919)]), $rt_createArrayFromData(jl_Object, [$rt_s(314), jur_AbstractCharClass$LazyRange__init_(5920, 5951)]), $rt_createArrayFromData(jl_Object, [$rt_s(315), jur_AbstractCharClass$LazyRange__init_(5952,
        5983)]), $rt_createArrayFromData(jl_Object, [$rt_s(316), jur_AbstractCharClass$LazyRange__init_(5984, 6015)]), $rt_createArrayFromData(jl_Object, [$rt_s(317), jur_AbstractCharClass$LazyRange__init_(6016, 6143)]), $rt_createArrayFromData(jl_Object, [$rt_s(318), jur_AbstractCharClass$LazyRange__init_(6144, 6319)]), $rt_createArrayFromData(jl_Object, [$rt_s(319), jur_AbstractCharClass$LazyRange__init_(6400, 6479)]), $rt_createArrayFromData(jl_Object, [$rt_s(320), jur_AbstractCharClass$LazyRange__init_(6480,
        6527)]), $rt_createArrayFromData(jl_Object, [$rt_s(321), jur_AbstractCharClass$LazyRange__init_(6528, 6623)]), $rt_createArrayFromData(jl_Object, [$rt_s(322), jur_AbstractCharClass$LazyRange__init_(6624, 6655)]), $rt_createArrayFromData(jl_Object, [$rt_s(323), jur_AbstractCharClass$LazyRange__init_(6656, 6687)]), $rt_createArrayFromData(jl_Object, [$rt_s(324), jur_AbstractCharClass$LazyRange__init_(7424, 7551)]), $rt_createArrayFromData(jl_Object, [$rt_s(325), jur_AbstractCharClass$LazyRange__init_(7552,
        7615)]), $rt_createArrayFromData(jl_Object, [$rt_s(326), jur_AbstractCharClass$LazyRange__init_(7616, 7679)]), $rt_createArrayFromData(jl_Object, [$rt_s(327), jur_AbstractCharClass$LazyRange__init_(7680, 7935)]), $rt_createArrayFromData(jl_Object, [$rt_s(328), jur_AbstractCharClass$LazyRange__init_(7936, 8191)]), $rt_createArrayFromData(jl_Object, [$rt_s(329), jur_AbstractCharClass$LazyRange__init_(8192, 8303)]), $rt_createArrayFromData(jl_Object, [$rt_s(330), jur_AbstractCharClass$LazyRange__init_(8304,
        8351)]), $rt_createArrayFromData(jl_Object, [$rt_s(331), jur_AbstractCharClass$LazyRange__init_(8352, 8399)]), $rt_createArrayFromData(jl_Object, [$rt_s(332), jur_AbstractCharClass$LazyRange__init_(8400, 8447)]), $rt_createArrayFromData(jl_Object, [$rt_s(333), jur_AbstractCharClass$LazyRange__init_(8448, 8527)]), $rt_createArrayFromData(jl_Object, [$rt_s(334), jur_AbstractCharClass$LazyRange__init_(8528, 8591)]), $rt_createArrayFromData(jl_Object, [$rt_s(335), jur_AbstractCharClass$LazyRange__init_(8592,
        8703)]), $rt_createArrayFromData(jl_Object, [$rt_s(336), jur_AbstractCharClass$LazyRange__init_(8704, 8959)]), $rt_createArrayFromData(jl_Object, [$rt_s(337), jur_AbstractCharClass$LazyRange__init_(8960, 9215)]), $rt_createArrayFromData(jl_Object, [$rt_s(338), jur_AbstractCharClass$LazyRange__init_(9216, 9279)]), $rt_createArrayFromData(jl_Object, [$rt_s(339), jur_AbstractCharClass$LazyRange__init_(9280, 9311)]), $rt_createArrayFromData(jl_Object, [$rt_s(340), jur_AbstractCharClass$LazyRange__init_(9312,
        9471)]), $rt_createArrayFromData(jl_Object, [$rt_s(341), jur_AbstractCharClass$LazyRange__init_(9472, 9599)]), $rt_createArrayFromData(jl_Object, [$rt_s(342), jur_AbstractCharClass$LazyRange__init_(9600, 9631)]), $rt_createArrayFromData(jl_Object, [$rt_s(343), jur_AbstractCharClass$LazyRange__init_(9632, 9727)]), $rt_createArrayFromData(jl_Object, [$rt_s(344), jur_AbstractCharClass$LazyRange__init_(9728, 9983)]), $rt_createArrayFromData(jl_Object, [$rt_s(345), jur_AbstractCharClass$LazyRange__init_(9984,
        10175)]), $rt_createArrayFromData(jl_Object, [$rt_s(346), jur_AbstractCharClass$LazyRange__init_(10176, 10223)]), $rt_createArrayFromData(jl_Object, [$rt_s(347), jur_AbstractCharClass$LazyRange__init_(10224, 10239)]), $rt_createArrayFromData(jl_Object, [$rt_s(348), jur_AbstractCharClass$LazyRange__init_(10240, 10495)]), $rt_createArrayFromData(jl_Object, [$rt_s(349), jur_AbstractCharClass$LazyRange__init_(10496, 10623)]), $rt_createArrayFromData(jl_Object, [$rt_s(350), jur_AbstractCharClass$LazyRange__init_(10624,
        10751)]), $rt_createArrayFromData(jl_Object, [$rt_s(351), jur_AbstractCharClass$LazyRange__init_(10752, 11007)]), $rt_createArrayFromData(jl_Object, [$rt_s(352), jur_AbstractCharClass$LazyRange__init_(11008, 11263)]), $rt_createArrayFromData(jl_Object, [$rt_s(353), jur_AbstractCharClass$LazyRange__init_(11264, 11359)]), $rt_createArrayFromData(jl_Object, [$rt_s(354), jur_AbstractCharClass$LazyRange__init_(11392, 11519)]), $rt_createArrayFromData(jl_Object, [$rt_s(355), jur_AbstractCharClass$LazyRange__init_(11520,
        11567)]), $rt_createArrayFromData(jl_Object, [$rt_s(356), jur_AbstractCharClass$LazyRange__init_(11568, 11647)]), $rt_createArrayFromData(jl_Object, [$rt_s(357), jur_AbstractCharClass$LazyRange__init_(11648, 11743)]), $rt_createArrayFromData(jl_Object, [$rt_s(358), jur_AbstractCharClass$LazyRange__init_(11776, 11903)]), $rt_createArrayFromData(jl_Object, [$rt_s(359), jur_AbstractCharClass$LazyRange__init_(11904, 12031)]), $rt_createArrayFromData(jl_Object, [$rt_s(360), jur_AbstractCharClass$LazyRange__init_(12032,
        12255)]), $rt_createArrayFromData(jl_Object, [$rt_s(361), jur_AbstractCharClass$LazyRange__init_(12272, 12287)]), $rt_createArrayFromData(jl_Object, [$rt_s(362), jur_AbstractCharClass$LazyRange__init_(12288, 12351)]), $rt_createArrayFromData(jl_Object, [$rt_s(363), jur_AbstractCharClass$LazyRange__init_(12352, 12447)]), $rt_createArrayFromData(jl_Object, [$rt_s(364), jur_AbstractCharClass$LazyRange__init_(12448, 12543)]), $rt_createArrayFromData(jl_Object, [$rt_s(365), jur_AbstractCharClass$LazyRange__init_(12544,
        12591)]), $rt_createArrayFromData(jl_Object, [$rt_s(366), jur_AbstractCharClass$LazyRange__init_(12592, 12687)]), $rt_createArrayFromData(jl_Object, [$rt_s(367), jur_AbstractCharClass$LazyRange__init_(12688, 12703)]), $rt_createArrayFromData(jl_Object, [$rt_s(368), jur_AbstractCharClass$LazyRange__init_(12704, 12735)]), $rt_createArrayFromData(jl_Object, [$rt_s(369), jur_AbstractCharClass$LazyRange__init_(12736, 12783)]), $rt_createArrayFromData(jl_Object, [$rt_s(370), jur_AbstractCharClass$LazyRange__init_(12784,
        12799)]), $rt_createArrayFromData(jl_Object, [$rt_s(371), jur_AbstractCharClass$LazyRange__init_(12800, 13055)]), $rt_createArrayFromData(jl_Object, [$rt_s(372), jur_AbstractCharClass$LazyRange__init_(13056, 13311)]), $rt_createArrayFromData(jl_Object, [$rt_s(373), jur_AbstractCharClass$LazyRange__init_(13312, 19893)]), $rt_createArrayFromData(jl_Object, [$rt_s(374), jur_AbstractCharClass$LazyRange__init_(19904, 19967)]), $rt_createArrayFromData(jl_Object, [$rt_s(375), jur_AbstractCharClass$LazyRange__init_(19968,
        40959)]), $rt_createArrayFromData(jl_Object, [$rt_s(376), jur_AbstractCharClass$LazyRange__init_(40960, 42127)]), $rt_createArrayFromData(jl_Object, [$rt_s(377), jur_AbstractCharClass$LazyRange__init_(42128, 42191)]), $rt_createArrayFromData(jl_Object, [$rt_s(378), jur_AbstractCharClass$LazyRange__init_(42752, 42783)]), $rt_createArrayFromData(jl_Object, [$rt_s(379), jur_AbstractCharClass$LazyRange__init_(43008, 43055)]), $rt_createArrayFromData(jl_Object, [$rt_s(380), jur_AbstractCharClass$LazyRange__init_(44032,
        55203)]), $rt_createArrayFromData(jl_Object, [$rt_s(381), jur_AbstractCharClass$LazyRange__init_(55296, 56191)]), $rt_createArrayFromData(jl_Object, [$rt_s(382), jur_AbstractCharClass$LazyRange__init_(56192, 56319)]), $rt_createArrayFromData(jl_Object, [$rt_s(383), jur_AbstractCharClass$LazyRange__init_(56320, 57343)]), $rt_createArrayFromData(jl_Object, [$rt_s(384), jur_AbstractCharClass$LazyRange__init_(57344, 63743)]), $rt_createArrayFromData(jl_Object, [$rt_s(385), jur_AbstractCharClass$LazyRange__init_(63744,
        64255)]), $rt_createArrayFromData(jl_Object, [$rt_s(386), jur_AbstractCharClass$LazyRange__init_(64256, 64335)]), $rt_createArrayFromData(jl_Object, [$rt_s(387), jur_AbstractCharClass$LazyRange__init_(64336, 65023)]), $rt_createArrayFromData(jl_Object, [$rt_s(388), jur_AbstractCharClass$LazyRange__init_(65024, 65039)]), $rt_createArrayFromData(jl_Object, [$rt_s(389), jur_AbstractCharClass$LazyRange__init_(65040, 65055)]), $rt_createArrayFromData(jl_Object, [$rt_s(390), jur_AbstractCharClass$LazyRange__init_(65056,
        65071)]), $rt_createArrayFromData(jl_Object, [$rt_s(391), jur_AbstractCharClass$LazyRange__init_(65072, 65103)]), $rt_createArrayFromData(jl_Object, [$rt_s(392), jur_AbstractCharClass$LazyRange__init_(65104, 65135)]), $rt_createArrayFromData(jl_Object, [$rt_s(393), jur_AbstractCharClass$LazyRange__init_(65136, 65279)]), $rt_createArrayFromData(jl_Object, [$rt_s(394), jur_AbstractCharClass$LazyRange__init_(65280, 65519)]), $rt_createArrayFromData(jl_Object, [$rt_s(30), jur_AbstractCharClass$LazyRange__init_(0,
        1114111)]), $rt_createArrayFromData(jl_Object, [$rt_s(395), jur_AbstractCharClass$LazySpecialsBlock__init_()]), $rt_createArrayFromData(jl_Object, [$rt_s(396), jur_AbstractCharClass$LazyCategory__init_(0, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(397), jur_AbstractCharClass$LazyCategoryScope__init_(62, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(398), jur_AbstractCharClass$LazyCategory__init_(1, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(399), jur_AbstractCharClass$LazyCategory__init_(2,
        1)]), $rt_createArrayFromData(jl_Object, [$rt_s(400), jur_AbstractCharClass$LazyCategory__init_(3, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(401), jur_AbstractCharClass$LazyCategory__init_(4, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(402), jur_AbstractCharClass$LazyCategory__init_(5, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(403), jur_AbstractCharClass$LazyCategoryScope__init_(448, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(404), jur_AbstractCharClass$LazyCategory__init_(6, 1)]),
        $rt_createArrayFromData(jl_Object, [$rt_s(405), jur_AbstractCharClass$LazyCategory__init_(7, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(406), jur_AbstractCharClass$LazyCategory__init_(8, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(407), jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(408), jur_AbstractCharClass$LazyCategory__init_(9, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(409), jur_AbstractCharClass$LazyCategory__init_(10, 1)]), $rt_createArrayFromData(jl_Object,
        [$rt_s(410), jur_AbstractCharClass$LazyCategory__init_(11, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(411), jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(412), jur_AbstractCharClass$LazyCategory__init_(12, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(413), jur_AbstractCharClass$LazyCategory__init_(13, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(414), jur_AbstractCharClass$LazyCategory__init_(14, 0)]), $rt_createArrayFromData(jl_Object,
        [$rt_s(415), jur_AbstractCharClass$LazyCategoryScope__init_0(983040, 1, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(416), jur_AbstractCharClass$LazyCategory__init_(15, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(417), jur_AbstractCharClass$LazyCategory__init_(16, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(418), jur_AbstractCharClass$LazyCategory__init_(18, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(419), jur_AbstractCharClass$LazyCategory__init_0(19, 0, 1)]), $rt_createArrayFromData(jl_Object,
        [$rt_s(420), jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(421), jur_AbstractCharClass$LazyCategory__init_(20, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(422), jur_AbstractCharClass$LazyCategory__init_(21, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(423), jur_AbstractCharClass$LazyCategory__init_(22, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(424), jur_AbstractCharClass$LazyCategory__init_(23, 0)]), $rt_createArrayFromData(jl_Object,
        [$rt_s(425), jur_AbstractCharClass$LazyCategory__init_(24, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(426), jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(427), jur_AbstractCharClass$LazyCategory__init_(25, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(428), jur_AbstractCharClass$LazyCategory__init_(26, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(429), jur_AbstractCharClass$LazyCategory__init_(27, 0)]), $rt_createArrayFromData(jl_Object,
        [$rt_s(430), jur_AbstractCharClass$LazyCategory__init_(28, 1)]), $rt_createArrayFromData(jl_Object, [$rt_s(431), jur_AbstractCharClass$LazyCategory__init_(29, 0)]), $rt_createArrayFromData(jl_Object, [$rt_s(432), jur_AbstractCharClass$LazyCategory__init_(30, 0)])]);
    }
    function jur_UCISupplCharSet() {
        jur_LeafSet.call(this);
        this.$ch2 = 0;
    }
    function jur_UCISupplCharSet_accepts($this, $strIndex, $testString) {
        var $low, var$4, var$5, $high;
        $low = $strIndex + 1 | 0;
        if ($strIndex >= 0) {
            var$4 = $testString.$characters.data;
            var$5 = var$4.length;
            if ($strIndex < var$5) {
                $high = var$4[$strIndex];
                if ($low >= 0 && $low < var$5) {
                    $low = var$4[$low];
                    $strIndex = $this.$ch2;
                    $low = (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
                    if (jl_Character_upperCaseMapping === null) {
                        if (jl_Character_$$metadata$$1 === null)
                            jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
                        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$1.value !== null ? $rt_str(jl_Character_$$metadata$$1.value) : null)));
                    }
                    $low = jl_Character_mapChar(jl_Character_upperCaseMapping, $low);
                    if (jl_Character_lowerCaseMapping === null) {
                        if (jl_Character_$$metadata$$0 === null)
                            jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
                        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(otciu_UnicodeHelper_decodeCaseMapping((jl_Character_$$metadata$$0.value !== null ? $rt_str(jl_Character_$$metadata$$0.value) : null)));
                    }
                    return $strIndex != jl_Character_mapChar(jl_Character_lowerCaseMapping, $low) ? (-1) : 2;
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_UCISupplCharSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = new jl_String;
        var$2 = $this.$ch2;
        if (var$2 < 65536) {
            var$3 = $rt_createCharArray(1);
            var$3.data[0] = var$2 & 65535;
        } else
            var$3 = $rt_createCharArrayFromData([(55296 | (var$2 - 65536 | 0) >> 10 & 1023) & 65535, (56320 | var$2 & 1023) & 65535]);
        var$4 = var$3.data;
        jl_String_$callClinit();
        var$5 = var$4.length;
        var$4 = $rt_createCharArray(var$5);
        var$1.$characters = var$4;
        jl_System_fastArraycopy(var$3, 0, var$4, 0, var$5);
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(220));
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, var$1);
        var$1 = new jl_String;
        var$3 = var$6.$buffer;
        var$5 = var$6.$length;
        var$4 = $rt_createCharArray(var$5);
        var$1.$characters = var$4;
        jl_System_fastArraycopy(var$3, 0, var$4, 0, var$5);
        return var$1;
    }
    function jur_LowSurrogateCharSet() {
        jur_JointSet.call(this);
        this.$low = 0;
    }
    function jur_LowSurrogateCharSet__init_(var_0) {
        var var_1 = new jur_LowSurrogateCharSet();
        jur_LowSurrogateCharSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_LowSurrogateCharSet__init_0($this, $low) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$low = $low;
    }
    function jur_LowSurrogateCharSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_LowSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
        var var$4, var$5, var$6, $low, $high;
        var$4 = $stringIndex + 1 | 0;
        if (var$4 > $matchResult.$rightBound0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        if ($stringIndex >= 0) {
            var$5 = $testString.$characters.data;
            var$6 = var$5.length;
            if ($stringIndex < var$6) {
                a: {
                    $low = var$5[$stringIndex];
                    if ($stringIndex > $matchResult.$leftBound0) {
                        $high = $stringIndex - 1 | 0;
                        if ($high >= 0 && $high < var$6) {
                            if (!((var$5[$high] & 64512) != 55296 ? 0 : 1))
                                break a;
                            return (-1);
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
                if ($this.$low != $low)
                    return (-1);
                return $this.$next3.$matches(var$4, $testString, $matchResult);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_LowSurrogateCharSet_find($this, $strIndex, $testStr, $matchResult) {
        var var$4, $startStr, $strLength, var$7, var$8, var$9;
        if (!($testStr instanceof jl_String)) {
            var$4 = $matchResult.$rightBound0;
            a: {
                while (true) {
                    if ($strIndex > var$4) {
                        $strIndex = (-1);
                        break a;
                    }
                    if (jur_LowSurrogateCharSet_matches($this, $strIndex, $testStr, $matchResult) >= 0)
                        break;
                    $strIndex = $strIndex + 1 | 0;
                }
            }
            return $strIndex;
        }
        $startStr = $matchResult.$leftBound0;
        $strLength = $matchResult.$rightBound0;
        b: {
            while (true) {
                if ($strIndex >= $strLength)
                    return (-1);
                var$7 = jl_String_indexOf($testStr, $this.$low, $strIndex);
                if (var$7 < 0)
                    return (-1);
                if (var$7 > $startStr) {
                    $strIndex = var$7 - 1 | 0;
                    if ($strIndex < 0)
                        break b;
                    var$8 = $testStr.$characters.data;
                    if ($strIndex >= var$8.length)
                        break b;
                    if ((var$8[$strIndex] & 64512) != 55296 ? 0 : 1) {
                        $strIndex = var$7 + 1 | 0;
                        continue;
                    }
                }
                var$9 = $this.$next3;
                $strIndex = var$7 + 1 | 0;
                if (var$9.$matches($strIndex, $testStr, $matchResult) >= 0)
                    break;
            }
            return var$7;
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        $testStr.$suppressionEnabled = 1;
        $testStr.$writableStackTrace = 1;
        $rt_throw($testStr);
    }
    function jur_LowSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testStr, $matchResult) {
        var $startStr, var$6, var$7;
        if (!($testStr instanceof jl_String)) {
            a: {
                while (true) {
                    if ($lastIndex < $strIndex) {
                        $lastIndex = (-1);
                        break a;
                    }
                    if (jur_LowSurrogateCharSet_matches($this, $lastIndex, $testStr, $matchResult) >= 0)
                        break;
                    $lastIndex = $lastIndex + (-1) | 0;
                }
            }
            return $lastIndex;
        }
        $startStr = $matchResult.$leftBound0;
        b: {
            c: {
                while (true) {
                    if ($lastIndex < $strIndex)
                        return (-1);
                    var$6 = jl_String_lastIndexOf($testStr, $this.$low, $lastIndex);
                    if (var$6 < 0)
                        break c;
                    if (var$6 < $strIndex)
                        break c;
                    if (var$6 > $startStr) {
                        $lastIndex = var$6 - 1 | 0;
                        if ($lastIndex < 0)
                            break b;
                        var$7 = $testStr.$characters.data;
                        if ($lastIndex >= var$7.length)
                            break b;
                        if ((var$7[$lastIndex] & 64512) != 55296 ? 0 : 1) {
                            $lastIndex = var$6 + (-2) | 0;
                            continue;
                        }
                    }
                    if ($this.$next3.$matches(var$6 + 1 | 0, $testStr, $matchResult) >= 0)
                        break;
                    $lastIndex = var$6 + (-1) | 0;
                }
                return var$6;
            }
            return (-1);
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        $testStr.$suppressionEnabled = 1;
        $testStr.$writableStackTrace = 1;
        $rt_throw($testStr);
    }
    function jur_LowSurrogateCharSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$low;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        var$3 = var$2.$length;
        jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
        var$4 = var$2.$buffer;
        var$4.data[var$3] = var$1;
        var$5 = new jl_String;
        var$3 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$3);
        var$5.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$3);
        return var$5;
    }
    function jur_LowSurrogateCharSet_first($this, $set) {
        if ($set instanceof jur_CharSet)
            return 0;
        if ($set instanceof jur_RangeSet)
            return 0;
        if ($set instanceof jur_SupplRangeSet)
            return 0;
        if ($set instanceof jur_SupplCharSet)
            return 0;
        if ($set instanceof jur_HighSurrogateCharSet)
            return 0;
        if (!($set instanceof jur_LowSurrogateCharSet))
            return 1;
        return $set.$low != $this.$low ? 0 : 1;
    }
    function jur_LowSurrogateCharSet_hasConsumed($this, $matchResult) {
        return 1;
    }
    function jur_HighSurrogateCharSet() {
        jur_JointSet.call(this);
        this.$high = 0;
    }
    function jur_HighSurrogateCharSet__init_(var_0) {
        var var_1 = new jur_HighSurrogateCharSet();
        jur_HighSurrogateCharSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_HighSurrogateCharSet__init_0($this, $high) {
        var var$2, var$3;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$high = $high;
    }
    function jur_HighSurrogateCharSet_setNext($this, $next) {
        $this.$next3 = $next;
    }
    function jur_HighSurrogateCharSet_matches($this, $stringIndex, $testString, $matchResult) {
        var $strLength, var$5, var$6, $low, $high;
        $strLength = $matchResult.$rightBound0;
        var$5 = $stringIndex + 1 | 0;
        $strLength = $rt_compare(var$5, $strLength);
        if ($strLength > 0) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        if ($stringIndex >= 0) {
            var$6 = $testString.$characters.data;
            $low = var$6.length;
            if ($stringIndex < $low) {
                a: {
                    $high = var$6[$stringIndex];
                    if ($strLength < 0) {
                        if (var$5 >= 0 && var$5 < $low) {
                            if (!((var$6[var$5] & 64512) != 56320 ? 0 : 1))
                                break a;
                            return (-1);
                        }
                        $testString = new jl_StringIndexOutOfBoundsException;
                        $testString.$suppressionEnabled = 1;
                        $testString.$writableStackTrace = 1;
                        $rt_throw($testString);
                    }
                }
                if ($this.$high != $high)
                    return (-1);
                return $this.$next3.$matches(var$5, $testString, $matchResult);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_HighSurrogateCharSet_find($this, $strIndex, $testStr, $matchResult) {
        var $strLength, var$5, var$6;
        if (!($testStr instanceof jl_String)) {
            $strLength = $matchResult.$rightBound0;
            a: {
                while (true) {
                    if ($strIndex > $strLength) {
                        $strIndex = (-1);
                        break a;
                    }
                    if (jur_HighSurrogateCharSet_matches($this, $strIndex, $testStr, $matchResult) >= 0)
                        break;
                    $strIndex = $strIndex + 1 | 0;
                }
            }
            return $strIndex;
        }
        $strLength = $matchResult.$rightBound0;
        b: {
            while (true) {
                if ($strIndex >= $strLength)
                    return (-1);
                var$5 = jl_String_indexOf($testStr, $this.$high, $strIndex);
                if (var$5 < 0)
                    return (-1);
                $strIndex = var$5 + 1 | 0;
                if ($strIndex < $strLength) {
                    if ($strIndex < 0)
                        break b;
                    var$6 = $testStr.$characters.data;
                    if ($strIndex >= var$6.length)
                        break b;
                    if ((var$6[$strIndex] & 64512) != 56320 ? 0 : 1) {
                        $strIndex = var$5 + 2 | 0;
                        continue;
                    }
                }
                if ($this.$next3.$matches($strIndex, $testStr, $matchResult) >= 0)
                    break;
            }
            return var$5;
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        $testStr.$suppressionEnabled = 1;
        $testStr.$writableStackTrace = 1;
        $rt_throw($testStr);
    }
    function jur_HighSurrogateCharSet_findBack($this, $strIndex, $lastIndex, $testStr, $matchResult) {
        var $strLength, var$6, var$7;
        if (!($testStr instanceof jl_String)) {
            a: {
                while (true) {
                    if ($lastIndex < $strIndex) {
                        $lastIndex = (-1);
                        break a;
                    }
                    if (jur_HighSurrogateCharSet_matches($this, $lastIndex, $testStr, $matchResult) >= 0)
                        break;
                    $lastIndex = $lastIndex + (-1) | 0;
                }
            }
            return $lastIndex;
        }
        $strLength = $matchResult.$rightBound0;
        b: {
            c: {
                while (true) {
                    if ($lastIndex < $strIndex)
                        return (-1);
                    var$6 = jl_String_lastIndexOf($testStr, $this.$high, $lastIndex);
                    if (var$6 < 0)
                        break c;
                    if (var$6 < $strIndex)
                        break c;
                    $lastIndex = var$6 + 1 | 0;
                    if ($lastIndex < $strLength) {
                        if ($lastIndex < 0)
                            break b;
                        var$7 = $testStr.$characters.data;
                        if ($lastIndex >= var$7.length)
                            break b;
                        if ((var$7[$lastIndex] & 64512) != 56320 ? 0 : 1) {
                            $lastIndex = var$6 + (-1) | 0;
                            continue;
                        }
                    }
                    if ($this.$next3.$matches($lastIndex, $testStr, $matchResult) >= 0)
                        break;
                    $lastIndex = var$6 + (-1) | 0;
                }
                return var$6;
            }
            return (-1);
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        $testStr.$suppressionEnabled = 1;
        $testStr.$writableStackTrace = 1;
        $rt_throw($testStr);
    }
    function jur_HighSurrogateCharSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$high;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        var$3 = var$2.$length;
        jl_AbstractStringBuilder_insertSpace(var$2, var$3, var$3 + 1 | 0);
        var$4 = var$2.$buffer;
        var$4.data[var$3] = var$1;
        var$5 = new jl_String;
        var$3 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$3);
        var$5.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$3);
        return var$5;
    }
    function jur_HighSurrogateCharSet_first($this, $set) {
        if ($set instanceof jur_CharSet)
            return 0;
        if ($set instanceof jur_RangeSet)
            return 0;
        if ($set instanceof jur_SupplRangeSet)
            return 0;
        if ($set instanceof jur_SupplCharSet)
            return 0;
        if ($set instanceof jur_LowSurrogateCharSet)
            return 0;
        if (!($set instanceof jur_HighSurrogateCharSet))
            return 1;
        return $set.$high != $this.$high ? 0 : 1;
    }
    function jur_HighSurrogateCharSet_hasConsumed($this, $matchResult) {
        return 1;
    }
    function jur_SupplCharSet() {
        var a = this; jur_LeafSet.call(a);
        a.$high0 = 0;
        a.$low0 = 0;
        a.$ch4 = 0;
    }
    function jur_SupplCharSet__init_(var_0) {
        var var_1 = new jur_SupplCharSet();
        jur_SupplCharSet__init_0(var_1, var_0);
        return var_1;
    }
    function jur_SupplCharSet__init_0($this, $ch) {
        var var$2, var$3, $chUTF16;
        var$2 = jur_AbstractSet_counter;
        jur_AbstractSet_counter = var$2 + 1 | 0;
        var$3 = new jl_AbstractStringBuilder;
        var$3.$buffer = $rt_createCharArray(20);
        $this.$index1 = (jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10)).$toString();
        $this.$charCount = 1;
        $this.$charCount = 2;
        $this.$ch4 = $ch;
        if ($ch < 65536) {
            $chUTF16 = $rt_createCharArray(1);
            $chUTF16.data[0] = $ch & 65535;
        } else
            $chUTF16 = $rt_createCharArrayFromData([(55296 | ($ch - 65536 | 0) >> 10 & 1023) & 65535, (56320 | $ch & 1023) & 65535]);
        $chUTF16 = $chUTF16.data;
        $this.$high0 = $chUTF16[0];
        $this.$low0 = $chUTF16[1];
    }
    function jur_SupplCharSet_accepts($this, $strIndex, $testString) {
        var $low, var$4, var$5, $high;
        $low = $strIndex + 1 | 0;
        if ($strIndex >= 0) {
            var$4 = $testString.$characters.data;
            var$5 = var$4.length;
            if ($strIndex < var$5) {
                $high = var$4[$strIndex];
                if ($low >= 0 && $low < var$5) {
                    $low = var$4[$low];
                    return $this.$high0 == $high && $this.$low0 == $low ? 2 : (-1);
                }
                $testString = new jl_StringIndexOutOfBoundsException;
                $testString.$suppressionEnabled = 1;
                $testString.$writableStackTrace = 1;
                $rt_throw($testString);
            }
        }
        $testString = new jl_StringIndexOutOfBoundsException;
        $testString.$suppressionEnabled = 1;
        $testString.$writableStackTrace = 1;
        $rt_throw($testString);
    }
    function jur_SupplCharSet_find($this, $strIndex, $testStr, $matchResult) {
        var $strLength, var$5, $ch, var$7, var$8;
        if ($testStr instanceof jl_String) {
            $strLength = $matchResult.$rightBound0;
            a: {
                while ($strIndex < $strLength) {
                    $strIndex = jl_String_indexOf($testStr, $this.$high0, $strIndex);
                    if ($strIndex < 0)
                        return (-1);
                    $strIndex = $strIndex + 1 | 0;
                    if ($strIndex >= $strLength)
                        continue;
                    if ($strIndex < 0)
                        break a;
                    var$5 = $testStr.$characters.data;
                    if ($strIndex >= var$5.length)
                        break a;
                    $ch = var$5[$strIndex];
                    if ($this.$low0 == $ch && $this.$next3.$matches($strIndex + 1 | 0, $testStr, $matchResult) >= 0)
                        return $strIndex + (-1) | 0;
                    $strIndex = $strIndex + 1 | 0;
                }
                return (-1);
            }
            $testStr = new jl_StringIndexOutOfBoundsException;
            $testStr.$suppressionEnabled = 1;
            $testStr.$writableStackTrace = 1;
            $rt_throw($testStr);
        }
        var$7 = $matchResult.$rightBound0;
        b: {
            c: {
                d: {
                    while (true) {
                        if ($strIndex > var$7) {
                            $strIndex = (-1);
                            break d;
                        }
                        if (($strIndex + $this.$charCount | 0) > $matchResult.$rightBound0) {
                            $matchResult.$hitEnd = 1;
                            $ch = (-1);
                        } else {
                            $ch = $strIndex + 1 | 0;
                            if ($strIndex < 0)
                                break b;
                            var$5 = $testStr.$characters.data;
                            $strLength = var$5.length;
                            if ($strIndex >= $strLength)
                                break b;
                            var$8 = var$5[$strIndex];
                            if ($ch < 0)
                                break c;
                            if ($ch >= $strLength)
                                break c;
                            $strLength = var$5[$ch];
                            $ch = $this.$high0 == var$8 && $this.$low0 == $strLength ? 2 : (-1);
                            $ch = $ch < 0 ? (-1) : $this.$next3.$matches($strIndex + $ch | 0, $testStr, $matchResult);
                        }
                        if ($ch >= 0)
                            break;
                        $strIndex = $strIndex + 1 | 0;
                    }
                }
                return $strIndex;
            }
            $testStr = new jl_StringIndexOutOfBoundsException;
            jl_Throwable__init_0($testStr);
            $rt_throw($testStr);
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        jl_Throwable__init_0($testStr);
        $rt_throw($testStr);
    }
    function jur_SupplCharSet_findBack($this, $strIndex, $lastIndex, $testStr, $matchResult) {
        var var$5, var$6, var$7, var$8, var$9;
        if ($testStr instanceof jl_String) {
            a: {
                b: {
                    while (true) {
                        if ($lastIndex < $strIndex)
                            return (-1);
                        $lastIndex = jl_String_lastIndexOf($testStr, $this.$low0, $lastIndex) + (-1) | 0;
                        if ($lastIndex < 0)
                            break b;
                        if ($lastIndex < $strIndex)
                            break b;
                        var$5 = $this.$high0;
                        if ($lastIndex < 0)
                            break a;
                        var$6 = $testStr.$characters.data;
                        if ($lastIndex >= var$6.length)
                            break a;
                        if (var$5 == var$6[$lastIndex] && $this.$next3.$matches($lastIndex + 2 | 0, $testStr, $matchResult) >= 0)
                            break;
                        $lastIndex = $lastIndex + (-1) | 0;
                    }
                    return $lastIndex;
                }
                return (-1);
            }
            $testStr = new jl_StringIndexOutOfBoundsException;
            $testStr.$suppressionEnabled = 1;
            $testStr.$writableStackTrace = 1;
            $rt_throw($testStr);
        }
        c: {
            d: {
                e: {
                    while (true) {
                        if ($lastIndex < $strIndex) {
                            $lastIndex = (-1);
                            break e;
                        }
                        if (($lastIndex + $this.$charCount | 0) > $matchResult.$rightBound0) {
                            $matchResult.$hitEnd = 1;
                            var$5 = (-1);
                        } else {
                            var$7 = $lastIndex + 1 | 0;
                            if ($lastIndex < 0)
                                break c;
                            var$6 = $testStr.$characters.data;
                            var$5 = var$6.length;
                            if ($lastIndex >= var$5)
                                break c;
                            var$8 = var$6[$lastIndex];
                            if (var$7 < 0)
                                break d;
                            if (var$7 >= var$5)
                                break d;
                            var$9 = var$6[var$7];
                            var$5 = $this.$high0 == var$8 && $this.$low0 == var$9 ? 2 : (-1);
                            var$5 = var$5 < 0 ? (-1) : $this.$next3.$matches($lastIndex + var$5 | 0, $testStr, $matchResult);
                        }
                        if (var$5 >= 0)
                            break;
                        $lastIndex = $lastIndex + (-1) | 0;
                    }
                }
                return $lastIndex;
            }
            $testStr = new jl_StringIndexOutOfBoundsException;
            jl_Throwable__init_0($testStr);
            $rt_throw($testStr);
        }
        $testStr = new jl_StringIndexOutOfBoundsException;
        jl_Throwable__init_0($testStr);
        $rt_throw($testStr);
    }
    function jur_SupplCharSet_getName($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.$high0;
        var$2 = $this.$low0;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$4, var$4 + 1 | 0);
        var$3.$buffer.data[var$4] = var$1;
        var$1 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$1, var$1 + 1 | 0);
        var$5 = var$3.$buffer;
        var$5.data[var$1] = var$2;
        var$6 = new jl_String;
        var$2 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$2);
        var$6.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$2);
        return var$6;
    }
    function jur_SupplCharSet_first($this, $set) {
        if ($set instanceof jur_SupplCharSet)
            return $set.$ch4 != $this.$ch4 ? 0 : 1;
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains1($this.$ch4);
        if ($set instanceof jur_CharSet)
            return 0;
        if (!($set instanceof jur_RangeSet))
            return 1;
        return 0;
    }
    var jur_AbstractLineTerminator$1 = $rt_classWithoutFields(jur_AbstractLineTerminator);
    function jur_AbstractLineTerminator$1_isLineTerminator($this, $ch) {
        return $ch != 10 ? 0 : 1;
    }
    function jur_AbstractLineTerminator$1_isAfterLineTerminator($this, $ch, $ch2) {
        return $ch != 10 ? 0 : 1;
    }
    var jur_AbstractLineTerminator$2 = $rt_classWithoutFields(jur_AbstractLineTerminator);
    function jur_AbstractLineTerminator$2_isLineTerminator($this, $ch) {
        return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
    }
    function jur_AbstractLineTerminator$2_isAfterLineTerminator($this, $ch, $ch2) {
        a: {
            b: {
                if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                    if ($ch != 13)
                        break b;
                    if ($ch2 == 10)
                        break b;
                }
                $ch = 1;
                break a;
            }
            $ch = 0;
        }
        return $ch;
    }
    function jur_SequenceSet$IntHash() {
        var a = this; jl_Object.call(a);
        a.$table = null;
        a.$values0 = null;
        a.$mask2 = 0;
        a.$size9 = 0;
    }
    function jur_SequenceSet$IntHash__init_(var_0) {
        var var_1 = new jur_SequenceSet$IntHash();
        jur_SequenceSet$IntHash__init_0(var_1, var_0);
        return var_1;
    }
    function jur_SequenceSet$IntHash__init_0($this, $size) {
        var var$2, var$3;
        while (true) {
            var$2 = $this.$mask2;
            if ($size < var$2)
                break;
            $this.$mask2 = var$2 << 1 | 1;
        }
        var$3 = var$2 << 1 | 1;
        $this.$mask2 = var$3;
        var$3 = var$3 + 1 | 0;
        $this.$table = $rt_createIntArray(var$3);
        $this.$values0 = $rt_createIntArray(var$3);
        $this.$size9 = $size;
    }
    function jur_SequenceSet$IntHash_put($this, $key, $value) {
        var $i, var$4, $hashCode, var$6;
        $i = 0;
        var$4 = $this.$mask2;
        $hashCode = $key & var$4;
        while (true) {
            var$6 = $this.$table.data;
            if (!var$6[$hashCode])
                break;
            if (var$6[$hashCode] == $key)
                break;
            $i = ($i + 1 | 0) & var$4;
            $hashCode = ($hashCode + $i | 0) & var$4;
        }
        var$6[$hashCode] = $key;
        $this.$values0.data[$hashCode] = $value;
    }
    function jur_SequenceSet$IntHash_get($this, $key) {
        var var$2, $hashCode, $i, $storedKey;
        var$2 = $this.$mask2;
        $hashCode = $key & var$2;
        $i = 0;
        while (true) {
            $storedKey = $this.$table.data[$hashCode];
            if (!$storedKey)
                break;
            if ($storedKey == $key)
                return $this.$values0.data[$hashCode];
            $i = ($i + 1 | 0) & var$2;
            $hashCode = ($hashCode + $i | 0) & var$2;
        }
        return $this.$size9;
    }
    var otpp_ResourceAccessor = $rt_classWithoutFields();
    var otciu_UnicodeHelper = $rt_classWithoutFields();
    function otciu_UnicodeHelper_decodeIntPairsDiff($text) {
        var $flow, $data, var$4, var$5, $sz, $j, $lastKey, $lastValue, $i, var$11, var$12;
        $flow = new otci_CharFlow;
        $data = $text.$characters.data;
        var$4 = $rt_createCharArray($data.length);
        var$5 = var$4.data;
        $sz = 0;
        $j = var$5.length;
        while ($sz < $j) {
            var$5[$sz] = $data[$sz];
            $sz = $sz + 1 | 0;
        }
        $flow.$characters0 = var$4;
        $sz = otci_Base46_decodeUnsigned($flow);
        $data = $rt_createIntArray($sz * 2 | 0);
        var$4 = $data.data;
        $j = 0;
        $lastKey = 0;
        $lastValue = 0;
        $i = 0;
        while ($i < $sz) {
            var$11 = otci_Base46_decodeUnsigned($flow);
            var$12 = var$11 / 2 | 0;
            if (var$11 % 2 | 0)
                var$12 =  -var$12 | 0;
            $lastKey = $lastKey + var$12 | 0;
            var$11 = otci_Base46_decodeUnsigned($flow);
            var$12 = var$11 / 2 | 0;
            if (var$11 % 2 | 0)
                var$12 =  -var$12 | 0;
            $lastValue = $lastValue + var$12 | 0;
            var$12 = $j + 1 | 0;
            var$4[$j] = $lastKey;
            $j = var$12 + 1 | 0;
            var$4[var$12] = $lastValue;
            $i = $i + 1 | 0;
        }
        return $data;
    }
    function otciu_UnicodeHelper_decodeCaseMapping($text) {
        var $flow, $data, var$4, var$5, $sz, $last, $i, var$9, var$10, var$11;
        $flow = new otci_CharFlow;
        $data = $text.$characters.data;
        var$4 = $rt_createCharArray($data.length);
        var$5 = var$4.data;
        $sz = 0;
        $last = var$5.length;
        while ($sz < $last) {
            var$5[$sz] = $data[$sz];
            $sz = $sz + 1 | 0;
        }
        $flow.$characters0 = var$4;
        $sz = otci_Base46_decodeUnsigned($flow);
        $data = $rt_createIntArray($sz * 2 | 0);
        var$4 = $data.data;
        $last = 0;
        $i = 0;
        while ($i < $sz) {
            $last = $last + otci_Base46_decodeUnsigned($flow) | 0;
            var$9 = $i * 2 | 0;
            var$4[var$9] = $last;
            var$10 = var$9 + 1 | 0;
            var$11 = otci_Base46_decodeUnsigned($flow);
            var$9 = var$11 / 2 | 0;
            if (var$11 % 2 | 0)
                var$9 =  -var$9 | 0;
            var$4[var$10] = var$9;
            $i = $i + 1 | 0;
        }
        return $data;
    }
    function otciu_UnicodeHelper_createCharMapping($data) {
        var $result, var$3, $last, $lastValue, $i, var$7, $key, $value, var$10, var$11, var$12;
        $result = $rt_createIntArray(65536);
        var$3 = $result.data;
        $last = 0;
        $lastValue = 0;
        $i = 0;
        a: {
            while (true) {
                var$7 = $data.data;
                if ($i >= var$7.length)
                    break a;
                $key = var$7[$i];
                $value = var$7[$i + 1 | 0];
                var$10 = var$3.length;
                if ($key < var$10)
                    var$10 = $key;
                else if ($key == $last)
                    break;
                if ($last > var$10) {
                    var$11 = new jl_IllegalArgumentException;
                    var$11.$suppressionEnabled = 1;
                    var$11.$writableStackTrace = 1;
                    $rt_throw(var$11);
                }
                while ($last < var$10) {
                    var$12 = $last + 1 | 0;
                    var$3[$last] = $lastValue;
                    $last = var$12;
                }
                $i = $i + 2 | 0;
                $last = var$10;
                $lastValue = $value;
            }
        }
        var$11 = new otciu_CharMapping;
        var$11.$binarySearchTable = $data;
        var$11.$fastTable = $result;
        return var$11;
    }
    function otciu_UnicodeHelper_decodeByte($c) {
        if ($c > 92)
            return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
        if ($c <= 34)
            return ($c - 32 | 0) << 24 >> 24;
        return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
    }
    function otciu_UnicodeHelper_extractRle($encoded) {
        var $ranges, var$3, var$4, $index, $rangeIndex, $codePoint, $i, $buffer, $digit, var$11, var$12, $b, $count, $pos, $j, var$17, var$18;
        $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
        var$3 = $ranges.data;
        var$4 = $rt_createByteArray(16384).data;
        $index = 0;
        $rangeIndex = 0;
        $codePoint = 0;
        $i = 0;
        a: {
            b: {
                while (true) {
                    $buffer = $encoded.$characters.data;
                    $digit = $rt_compare($i, $buffer.length);
                    if ($digit >= 0) {
                        var$11 = $ranges.constructor;
                        if (var$11 === null)
                            $encoded = null;
                        else {
                            $encoded = var$11.classObject;
                            if ($encoded === null) {
                                $encoded = new jl_Class;
                                $encoded.$platformClass = var$11;
                                var$12 = $encoded;
                                var$11.classObject = var$12;
                            }
                        }
                        $encoded = jl_Class_getComponentType($encoded);
                        if ($encoded === null) {
                            $encoded = new jl_NullPointerException;
                            $encoded.$suppressionEnabled = 1;
                            $encoded.$writableStackTrace = 1;
                            $rt_throw($encoded);
                        }
                        if ($encoded === $rt_cls($rt_voidcls())) {
                            $encoded = new jl_IllegalArgumentException;
                            $encoded.$suppressionEnabled = 1;
                            $encoded.$writableStackTrace = 1;
                            $rt_throw($encoded);
                        }
                        if ($rangeIndex < 0) {
                            $encoded = new jl_NegativeArraySizeException;
                            $encoded.$suppressionEnabled = 1;
                            $encoded.$writableStackTrace = 1;
                            $rt_throw($encoded);
                        }
                        var$12 = jlr_Array_newInstanceImpl($encoded.$platformClass, $rangeIndex);
                        $index = var$3.length;
                        if ($rangeIndex < $index)
                            $index = $rangeIndex;
                        $rangeIndex = 0;
                        while ($rangeIndex < $index) {
                            var$12.data[$rangeIndex] = var$3[$rangeIndex];
                            $rangeIndex = $rangeIndex + 1 | 0;
                        }
                        return var$12;
                    }
                    if ($i < 0)
                        break;
                    if ($digit >= 0)
                        break;
                    $b = otciu_UnicodeHelper_decodeByte($buffer[$i]);
                    if ($b == 64) {
                        $i = $i + 1 | 0;
                        if ($i < 0)
                            break b;
                        $buffer = $encoded.$characters.data;
                        if ($i >= $buffer.length)
                            break b;
                        $b = otciu_UnicodeHelper_decodeByte($buffer[$i]);
                        $count = 0;
                        $pos = 1;
                        $j = 0;
                        while ($j < 3) {
                            $i = $i + 1 | 0;
                            if ($i < 0)
                                break a;
                            $buffer = $encoded.$characters.data;
                            if ($i >= $buffer.length)
                                break a;
                            $count = $count | $rt_imul($pos, otciu_UnicodeHelper_decodeByte($buffer[$i]));
                            $pos = $pos * 64 | 0;
                            $j = $j + 1 | 0;
                        }
                    } else if ($b < 32)
                        $count = 1;
                    else {
                        $b = ($b - 32 | 0) << 24 >> 24;
                        $i = $i + 1 | 0;
                        $count = otciu_UnicodeHelper_decodeByte(jl_String_charAt($encoded, $i));
                    }
                    if (!$b && $count >= 128) {
                        if ($index > 0) {
                            $digit = $rangeIndex + 1 | 0;
                            var$11 = new otciu_UnicodeHelper$Range;
                            $pos = $codePoint + $index | 0;
                            $buffer = $rt_createByteArray($index);
                            $j = var$4.length;
                            if ($index < $j)
                                $j = $index;
                            var$17 = $buffer.data;
                            var$18 = 0;
                            while (var$18 < $j) {
                                var$17[var$18] = var$4[var$18];
                                var$18 = var$18 + 1 | 0;
                            }
                            var$11.$start2 = $codePoint;
                            var$11.$end = $pos;
                            var$11.$data1 = $buffer;
                            var$3[$rangeIndex] = var$11;
                            $rangeIndex = $digit;
                        }
                        $codePoint = $codePoint + ($index + $count | 0) | 0;
                        $index = 0;
                    } else {
                        $digit = $index + $count | 0;
                        $pos = var$4.length;
                        if ($digit < $pos)
                            $j = $rangeIndex;
                        else {
                            $j = $rangeIndex + 1 | 0;
                            var$11 = new otciu_UnicodeHelper$Range;
                            var$18 = $codePoint + $index | 0;
                            $buffer = $rt_createByteArray($index);
                            if ($index < $pos)
                                $pos = $index;
                            var$17 = $buffer.data;
                            $index = 0;
                            while ($index < $pos) {
                                var$17[$index] = var$4[$index];
                                $index = $index + 1 | 0;
                            }
                            var$11.$start2 = $codePoint;
                            var$11.$end = var$18;
                            var$11.$data1 = $buffer;
                            var$3[$rangeIndex] = var$11;
                            $codePoint = $codePoint + $digit | 0;
                            $index = 0;
                        }
                        while (true) {
                            $rangeIndex = $count + (-1) | 0;
                            if ($count <= 0)
                                break;
                            $digit = $index + 1 | 0;
                            var$4[$index] = $b;
                            $index = $digit;
                            $count = $rangeIndex;
                        }
                        $rangeIndex = $j;
                    }
                    $i = $i + 1 | 0;
                }
                $encoded = new jl_StringIndexOutOfBoundsException;
                $encoded.$suppressionEnabled = 1;
                $encoded.$writableStackTrace = 1;
                $rt_throw($encoded);
            }
            $encoded = new jl_StringIndexOutOfBoundsException;
            $encoded.$suppressionEnabled = 1;
            $encoded.$writableStackTrace = 1;
            $rt_throw($encoded);
        }
        $encoded = new jl_StringIndexOutOfBoundsException;
        $encoded.$suppressionEnabled = 1;
        $encoded.$writableStackTrace = 1;
        $rt_throw($encoded);
    }
    var jur_IntHash = $rt_classWithoutFields();
    function otci_CharFlow() {
        var a = this; jl_Object.call(a);
        a.$characters0 = null;
        a.$pointer = 0;
    }
    var otci_Base46 = $rt_classWithoutFields();
    function otci_Base46_decodeUnsigned($seq) {
        var $number, $pos, var$4, $hasMore, $digit;
        $number = 0;
        $pos = 1;
        while (true) {
            var$4 = $seq.$characters0.data;
            $hasMore = $seq.$pointer;
            $seq.$pointer = $hasMore + 1 | 0;
            $digit = var$4[$hasMore];
            $digit = $digit < 34 ? $digit - 32 | 0 : $digit >= 92 ? ($digit - 32 | 0) - 2 | 0 : ($digit - 32 | 0) - 1 | 0;
            $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
            $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
            $pos = $pos * 46 | 0;
            if (!$hasMore)
                break;
        }
        return $number;
    }
    var jur_AbstractCharClass$LazySpace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazySpace__init_() {
        var var_0 = new jur_AbstractCharClass$LazySpace();
        jur_AbstractCharClass$LazySpace__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazySpace__init_0($this) {}
    function jur_AbstractCharClass$LazySpace_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add(jur_CharClass_add0(var$1, 9, 13), 32);
    }
    var jur_AbstractCharClass$LazyDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyDigit__init_() {
        var var_0 = new jur_AbstractCharClass$LazyDigit();
        jur_AbstractCharClass$LazyDigit__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyDigit__init_0($this) {}
    function jur_AbstractCharClass$LazyDigit_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(var$1, 48, 57);
    }
    var jur_AbstractCharClass$LazyLower = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyLower__init_() {
        var var_0 = new jur_AbstractCharClass$LazyLower();
        jur_AbstractCharClass$LazyLower__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyLower__init_0($this) {}
    function jur_AbstractCharClass$LazyLower_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(var$1, 97, 122);
    }
    var jur_AbstractCharClass$LazyUpper = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyUpper__init_() {
        var var_0 = new jur_AbstractCharClass$LazyUpper();
        jur_AbstractCharClass$LazyUpper__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyUpper__init_0($this) {}
    function jur_AbstractCharClass$LazyUpper_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(var$1, 65, 90);
    }
    var jur_AbstractCharClass$LazyASCII = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyASCII__init_() {
        var var_0 = new jur_AbstractCharClass$LazyASCII();
        jur_AbstractCharClass$LazyASCII__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyASCII__init_0($this) {}
    function jur_AbstractCharClass$LazyASCII_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(var$1, 0, 127);
    }
    var jur_AbstractCharClass$LazyAlpha = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyAlpha__init_() {
        var var_0 = new jur_AbstractCharClass$LazyAlpha();
        jur_AbstractCharClass$LazyAlpha__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyAlpha__init_0($this) {}
    function jur_AbstractCharClass$LazyAlpha_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90);
    }
    var jur_AbstractCharClass$LazyAlnum = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlpha);
    function jur_AbstractCharClass$LazyAlnum__init_() {
        var var_0 = new jur_AbstractCharClass$LazyAlnum();
        jur_AbstractCharClass$LazyAlnum__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyAlnum__init_0($this) {}
    function jur_AbstractCharClass$LazyAlnum_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90), 48, 57);
    }
    var jur_AbstractCharClass$LazyPunct = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyPunct__init_() {
        var var_0 = new jur_AbstractCharClass$LazyPunct();
        jur_AbstractCharClass$LazyPunct__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyPunct__init_0($this) {}
    function jur_AbstractCharClass$LazyPunct_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 33, 64), 91, 96), 123, 126);
    }
    var jur_AbstractCharClass$LazyGraph = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlnum);
    function jur_AbstractCharClass$LazyGraph__init_() {
        var var_0 = new jur_AbstractCharClass$LazyGraph();
        jur_AbstractCharClass$LazyGraph__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyGraph__init_0($this) {}
    function jur_AbstractCharClass$LazyGraph_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90), 48, 57), 33, 64), 91, 96), 123, 126);
    }
    var jur_AbstractCharClass$LazyPrint = $rt_classWithoutFields(jur_AbstractCharClass$LazyGraph);
    function jur_AbstractCharClass$LazyPrint__init_() {
        var var_0 = new jur_AbstractCharClass$LazyPrint();
        jur_AbstractCharClass$LazyPrint__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyPrint__init_0($this) {}
    function jur_AbstractCharClass$LazyPrint_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90), 48, 57), 33, 64), 91, 96), 123, 126), 32);
    }
    var jur_AbstractCharClass$LazyBlank = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyBlank__init_() {
        var var_0 = new jur_AbstractCharClass$LazyBlank();
        jur_AbstractCharClass$LazyBlank__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyBlank__init_0($this) {}
    function jur_AbstractCharClass$LazyBlank_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add(jur_CharClass_add(var$1, 32), 9);
    }
    var jur_AbstractCharClass$LazyCntrl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyCntrl__init_() {
        var var_0 = new jur_AbstractCharClass$LazyCntrl();
        jur_AbstractCharClass$LazyCntrl__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyCntrl__init_0($this) {}
    function jur_AbstractCharClass$LazyCntrl_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add(jur_CharClass_add0(var$1, 0, 31), 127);
    }
    var jur_AbstractCharClass$LazyXDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyXDigit__init_() {
        var var_0 = new jur_AbstractCharClass$LazyXDigit();
        jur_AbstractCharClass$LazyXDigit__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyXDigit__init_0($this) {}
    function jur_AbstractCharClass$LazyXDigit_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 48, 57), 97, 102), 65, 70);
    }
    var jur_AbstractCharClass$LazyJavaLowerCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaLowerCase__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
        jur_AbstractCharClass$LazyJavaLowerCase__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaLowerCase__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaLowerCase_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaLowerCase$1;
        $chCl.$this$037 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaUpperCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaUpperCase__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
        jur_AbstractCharClass$LazyJavaUpperCase__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaUpperCase__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaUpperCase_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaUpperCase$1;
        $chCl.$this$038 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaWhitespace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaWhitespace__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
        jur_AbstractCharClass$LazyJavaWhitespace__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaWhitespace__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaWhitespace_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_AbstractCharClass$LazyJavaWhitespace$1;
        var$1.$this$039 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        return var$1;
    }
    var jur_AbstractCharClass$LazyJavaMirrored = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaMirrored__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
        jur_AbstractCharClass$LazyJavaMirrored__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaMirrored__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaMirrored_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_AbstractCharClass$LazyJavaMirrored$1;
        var$1.$this$040 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        return var$1;
    }
    var jur_AbstractCharClass$LazyJavaDefined = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaDefined__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaDefined();
        jur_AbstractCharClass$LazyJavaDefined__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaDefined__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaDefined_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaDefined$1;
        $chCl.$this$041 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        ju_BitSet_set0(var$2, 0, 2048);
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaDigit__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaDigit();
        jur_AbstractCharClass$LazyJavaDigit__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaDigit__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaDigit_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaDigit$1;
        $chCl.$this$042 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaIdentifierIgnorable = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
        jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1;
        $chCl.$this$043 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaISOControl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaISOControl__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
        jur_AbstractCharClass$LazyJavaISOControl__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaISOControl__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaISOControl_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_AbstractCharClass$LazyJavaISOControl$1;
        var$1.$this$044 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        return var$1;
    }
    var jur_AbstractCharClass$LazyJavaJavaIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
        jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1;
        $chCl.$this$045 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaJavaIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
        jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1;
        $chCl.$this$046 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaLetter = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaLetter__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaLetter();
        jur_AbstractCharClass$LazyJavaLetter__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaLetter__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaLetter_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaLetter$1;
        $chCl.$this$047 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaLetterOrDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
        jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1;
        $chCl.$this$048 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaSpaceChar = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaSpaceChar__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
        jur_AbstractCharClass$LazyJavaSpaceChar__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaSpaceChar__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaSpaceChar_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1;
        var$1.$this$049 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        return var$1;
    }
    var jur_AbstractCharClass$LazyJavaTitleCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaTitleCase__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
        jur_AbstractCharClass$LazyJavaTitleCase__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaTitleCase__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaTitleCase_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_AbstractCharClass$LazyJavaTitleCase$1;
        var$1.$this$050 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        return var$1;
    }
    var jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
        jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1;
        $chCl.$this$051 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_() {
        var var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
        jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0($this) {}
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1;
        $chCl.$this$052 = $this;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazyWord__init_() {
        var var_0 = new jur_AbstractCharClass$LazyWord();
        jur_AbstractCharClass$LazyWord__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyWord__init_0($this) {}
    function jur_AbstractCharClass$LazyWord_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0(var$1, 97, 122), 65, 90), 48, 57), 95);
    }
    var jur_AbstractCharClass$LazyNonWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyWord);
    function jur_AbstractCharClass$LazyNonWord__init_() {
        var var_0 = new jur_AbstractCharClass$LazyNonWord();
        jur_AbstractCharClass$LazyNonWord__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyNonWord__init_0($this) {}
    function jur_AbstractCharClass$LazyNonWord_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        $chCl.$bits = var$2;
        $chCl = jur_AbstractCharClass_setNegative(jur_CharClass_add(jur_CharClass_add0(jur_CharClass_add0(jur_CharClass_add0($chCl, 97, 122), 65, 90), 48, 57), 95), 1);
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyNonSpace = $rt_classWithoutFields(jur_AbstractCharClass$LazySpace);
    function jur_AbstractCharClass$LazyNonSpace__init_() {
        var var_0 = new jur_AbstractCharClass$LazyNonSpace();
        jur_AbstractCharClass$LazyNonSpace__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyNonSpace__init_0($this) {}
    function jur_AbstractCharClass$LazyNonSpace_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        $chCl.$bits = var$2;
        $chCl = jur_AbstractCharClass_setNegative(jur_CharClass_add(jur_CharClass_add0($chCl, 9, 13), 32), 1);
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    var jur_AbstractCharClass$LazyNonDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyDigit);
    function jur_AbstractCharClass$LazyNonDigit__init_() {
        var var_0 = new jur_AbstractCharClass$LazyNonDigit();
        jur_AbstractCharClass$LazyNonDigit__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazyNonDigit__init_0($this) {}
    function jur_AbstractCharClass$LazyNonDigit_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        $chCl.$bits = var$2;
        $chCl = jur_AbstractCharClass_setNegative(jur_CharClass_add0($chCl, 48, 57), 1);
        $chCl.$mayContainSupplCodepoints = 1;
        return $chCl;
    }
    function jur_AbstractCharClass$LazyRange() {
        var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
        a.$start5 = 0;
        a.$end1 = 0;
    }
    function jur_AbstractCharClass$LazyRange__init_(var_0, var_1) {
        var var_2 = new jur_AbstractCharClass$LazyRange();
        jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_AbstractCharClass$LazyRange__init_0($this, $start, $end) {
        $this.$start5 = $start;
        $this.$end1 = $end;
    }
    function jur_AbstractCharClass$LazyRange_computeValue($this) {
        var $chCl, var$2;
        $chCl = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        $chCl.$bits = var$2;
        return jur_CharClass_add0($chCl, $this.$start5, $this.$end1);
    }
    var jur_AbstractCharClass$LazySpecialsBlock = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass);
    function jur_AbstractCharClass$LazySpecialsBlock__init_() {
        var var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
        jur_AbstractCharClass$LazySpecialsBlock__init_0(var_0);
        return var_0;
    }
    function jur_AbstractCharClass$LazySpecialsBlock__init_0($this) {}
    function jur_AbstractCharClass$LazySpecialsBlock_computeValue($this) {
        var var$1, var$2;
        var$1 = new jur_CharClass;
        jur_AbstractCharClass_$callClinit();
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(64);
        var$1.$lowHighSurrogates = var$2;
        var$2 = new ju_BitSet;
        var$2.$data2 = $rt_createIntArray(2);
        var$1.$bits = var$2;
        return jur_CharClass_add0(jur_CharClass_add0(var$1, 65279, 65279), 65520, 65533);
    }
    function jur_AbstractCharClass$LazyCategory() {
        var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
        a.$category = 0;
        a.$mayContainSupplCodepoints0 = 0;
        a.$containsAllSurrogates = 0;
    }
    function jur_AbstractCharClass$LazyCategory__init_(var_0, var_1) {
        var var_2 = new jur_AbstractCharClass$LazyCategory();
        jur_AbstractCharClass$LazyCategory__init_1(var_2, var_0, var_1);
        return var_2;
    }
    function jur_AbstractCharClass$LazyCategory__init_0(var_0, var_1, var_2) {
        var var_3 = new jur_AbstractCharClass$LazyCategory();
        jur_AbstractCharClass$LazyCategory__init_2(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_AbstractCharClass$LazyCategory__init_1($this, $cat, $mayContainSupplCodepoints) {
        $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
        $this.$category = $cat;
    }
    function jur_AbstractCharClass$LazyCategory__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
        $this.$containsAllSurrogates = $containsAllSurrogates;
        $this.$mayContainSupplCodepoints0 = $mayContainSupplCodepoints;
        $this.$category = $cat;
    }
    function jur_AbstractCharClass$LazyCategory_computeValue($this) {
        var $chCl, var$2, var$3;
        $chCl = new jur_UnicodeCategory;
        var$2 = $this.$category;
        jur_AbstractCharClass_$callClinit();
        var$3 = new ju_BitSet;
        var$3.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$3;
        $chCl.$category0 = var$2;
        if ($this.$containsAllSurrogates)
            ju_BitSet_set0(var$3, 0, 2048);
        $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints0;
        return $chCl;
    }
    function jur_AbstractCharClass$LazyCategoryScope() {
        var a = this; jur_AbstractCharClass$LazyCharClass.call(a);
        a.$category1 = 0;
        a.$mayContainSupplCodepoints1 = 0;
        a.$containsAllSurrogates0 = 0;
    }
    function jur_AbstractCharClass$LazyCategoryScope__init_(var_0, var_1) {
        var var_2 = new jur_AbstractCharClass$LazyCategoryScope();
        jur_AbstractCharClass$LazyCategoryScope__init_1(var_2, var_0, var_1);
        return var_2;
    }
    function jur_AbstractCharClass$LazyCategoryScope__init_0(var_0, var_1, var_2) {
        var var_3 = new jur_AbstractCharClass$LazyCategoryScope();
        jur_AbstractCharClass$LazyCategoryScope__init_2(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function jur_AbstractCharClass$LazyCategoryScope__init_1($this, $cat, $mayContainSupplCodepoints) {
        $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
        $this.$category1 = $cat;
    }
    function jur_AbstractCharClass$LazyCategoryScope__init_2($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) {
        $this.$containsAllSurrogates0 = $containsAllSurrogates;
        $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
        $this.$category1 = $cat;
    }
    function jur_AbstractCharClass$LazyCategoryScope_computeValue($this) {
        var $chCl, var$2, var$3;
        $chCl = new jur_UnicodeCategoryScope;
        var$2 = $this.$category1;
        jur_AbstractCharClass_$callClinit();
        var$3 = new ju_BitSet;
        var$3.$data2 = $rt_createIntArray(64);
        $chCl.$lowHighSurrogates = var$3;
        $chCl.$category0 = var$2;
        if ($this.$containsAllSurrogates0)
            ju_BitSet_set0(var$3, 0, 2048);
        $chCl.$mayContainSupplCodepoints = $this.$mayContainSupplCodepoints1;
        return $chCl;
    }
    function otciu_CharMapping() {
        var a = this; jl_Object.call(a);
        a.$binarySearchTable = null;
        a.$fastTable = null;
    }
    function otciu_UnicodeHelper$Range() {
        var a = this; jl_Object.call(a);
        a.$start2 = 0;
        a.$end = 0;
        a.$data1 = null;
    }
    var jl_StringIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException);
    var cbgu_NumberUtils = $rt_classWithoutFields();
    function cgxgbtp_Preloader$4() {
        var a = this; cgxgbt_AssetLoaderListener.call(a);
        a.$val$assetFileUrl = null;
        a.$val$loadAssets = 0;
        a.$this$053 = null;
    }
    function cgxgbtp_Preloader$4__init_(var_0, var_1, var_2) {
        var var_3 = new cgxgbtp_Preloader$4();
        cgxgbtp_Preloader$4__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function cgxgbtp_Preloader$4__init_0($this, $this$0, var$2, var$3) {
        $this.$this$053 = $this$0;
        $this.$val$assetFileUrl = var$2;
        $this.$val$loadAssets = var$3;
    }
    function cgxgbtp_Preloader$4_onProgress($this, $amount) {}
    function cgxgbtp_Preloader$4_onFailure($this, $url) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        if (jl_System_outCache === null) {
            var$2 = new ji_PrintStream;
            var$2.$out = otcic_StdoutOutputStream_INSTANCE;
            $url = new jl_StringBuilder;
            $url.$buffer = $rt_createCharArray(16);
            var$2.$sb = $url;
            var$2.$buffer1 = $rt_createCharArray(32);
            var$2.$autoFlush = 0;
            jnci_UTF8Charset_$callClinit();
            var$2.$charset = jnci_UTF8Charset_INSTANCE;
            jl_System_outCache = var$2;
        }
        $url = jl_System_outCache;
        var$2 = $this.$val$assetFileUrl;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(433));
        var$4 = var$3.$length;
        if (var$2 === null)
            var$2 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, var$2);
        var$5 = new jl_String;
        var$6 = var$3.$buffer;
        var$7 = var$3.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2 = $url.$sb;
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, var$5);
        var$7 = var$2.$length;
        jl_AbstractStringBuilder_insertSpace(var$2, var$7, var$7 + 1 | 0);
        var$2.$buffer.data[var$7] = 10;
        ji_PrintStream_printSB($url);
    }
    function cgxgbtp_Preloader$4_onSuccess($this, $url, $result) {
        var var$3, $i, var$5, $fileType, var$7, $line, $assetUrl, var$10, $mimeType, $type, $asset;
        var$3 = (jur_Pattern_split(jur_Pattern_compile($rt_s(124), 0), $result, 0)).data;
        $i = var$3.length;
        var$5 = 0;
        while (true) {
            if (var$5 >= $i) {
                a: {
                    $url = $this.$this$053;
                    $url.$assetTotal = $url.$assets.$size;
                    if ($this.$val$loadAssets) {
                        $i = 0;
                        while (true) {
                            $url = $this.$this$053;
                            $result = $url.$assets;
                            var$5 = $rt_compare($i, $result.$size);
                            if (var$5 >= 0)
                                break a;
                            if (var$5 >= 0) {
                                $fileType = new jl_IndexOutOfBoundsException;
                                $url = new jl_StringBuilder;
                                $url.$buffer = $rt_createCharArray(16);
                                jl_AbstractStringBuilder_insert($url, $url.$length, $rt_s(36));
                                jl_AbstractStringBuilder_insert0($url, $url.$length, $i, 10);
                                jl_AbstractStringBuilder_insert($url, $url.$length, $rt_s(37));
                                $i = $result.$size;
                                jl_AbstractStringBuilder_insert0($url, $url.$length, $i, 10);
                                $result = new jl_String;
                                var$3 = $url.$buffer;
                                var$5 = $url.$length;
                                jl_String_$callClinit();
                                var$7 = $rt_createCharArray(var$5);
                                $result.$characters = var$7;
                                jl_System_fastArraycopy(var$3, 0, var$7, 0, var$5);
                                $fileType.$suppressionEnabled = 1;
                                $fileType.$writableStackTrace = 1;
                                $fileType.$message = $result;
                                $rt_throw($fileType);
                            }
                            cgxgbtp_Preloader_loadSingleAsset($url, $result.$items.data[$i]);
                            $i = $i + 1 | 0;
                        }
                    }
                }
                return 0;
            }
            $line = var$3[var$5];
            var$7 = (jur_Pattern_split(jur_Pattern_compile($rt_s(122), 0), $line, 0)).data;
            if (var$7.length != 4)
                break;
            $fileType = var$7[0];
            $assetUrl = jl_String_trim(var$7[1]);
            $url = var$7[2];
            if ($url === null) {
                $url = new jl_NumberFormatException;
                $url.$suppressionEnabled = 1;
                $url.$writableStackTrace = 1;
                $url.$message = $rt_s(80);
                $rt_throw($url);
            }
            var$10 = jl_Long_parseLongImpl($url, 0, $url.$characters.data.length, 10);
            $mimeType = var$7[3];
            cgxgbtp_AssetType_$callClinit();
            $type = cgxgbtp_AssetType_Text;
            if (jl_String_equals($fileType, $rt_s(434)))
                $type = cgxgbtp_AssetType_Image;
            if (jl_String_equals($fileType, $rt_s(435)))
                $type = cgxgbtp_AssetType_Binary;
            if (jl_String_equals($fileType, $rt_s(436)))
                $type = cgxgbtp_AssetType_Audio;
            if (jl_String_equals($fileType, $rt_s(273)))
                $type = cgxgbtp_AssetType_Directory;
            if ($type === cgxgbtp_AssetType_Audio && !cgxgbtp_AssetDownloader_instance.$useBrowserCache)
                var$10 = Long_ZERO;
            $asset = new cgxgbtp_Preloader$Asset;
            $asset.$url = $assetUrl;
            $asset.$type1 = $type;
            $asset.$size3 = var$10;
            $asset.$mimeType = $mimeType;
            cbgu_ObjectMap_put($this.$this$053.$assetNames, $assetUrl, $assetUrl);
            cbgu_Array_add($this.$this$053.$assets, $asset);
            var$5 = var$5 + 1 | 0;
        }
        $url = new cbgu_GdxRuntimeException;
        $url.$suppressionEnabled = 1;
        $url.$writableStackTrace = 1;
        $url.$message = $rt_s(437);
        $rt_throw($url);
    }
    function cgxgbtp_Preloader$4_onSuccess0($this, var$1, var$2) {
        return cgxgbtp_Preloader$4_onSuccess($this, var$1, var$2);
    }
    var cgxgbtd_StyleWrapper$Unit = $rt_classWithoutFields(jl_Enum);
    var cgxgbtd_StyleWrapper$Unit_PX = null;
    var cgxgbtd_StyleWrapper$Unit_PCT = null;
    var cgxgbtd_StyleWrapper$Unit_EM = null;
    var cgxgbtd_StyleWrapper$Unit_EX = null;
    var cgxgbtd_StyleWrapper$Unit_PT = null;
    var cgxgbtd_StyleWrapper$Unit_PC = null;
    var cgxgbtd_StyleWrapper$Unit_IN = null;
    var cgxgbtd_StyleWrapper$Unit_CM = null;
    var cgxgbtd_StyleWrapper$Unit_MM = null;
    var cgxgbtd_StyleWrapper$Unit_$VALUES = null;
    function cgxgbtd_StyleWrapper$Unit_$callClinit() {
        cgxgbtd_StyleWrapper$Unit_$callClinit = $rt_eraseClinit(cgxgbtd_StyleWrapper$Unit);
        cgxgbtd_StyleWrapper$Unit__clinit_();
    }
    function cgxgbtd_StyleWrapper$Unit__clinit_() {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$1 = new cgxgbtd_StyleWrapper$Unit$1;
        cgxgbtd_StyleWrapper$Unit_$callClinit();
        var$1.$name0 = $rt_s(438);
        var$1.$ordinal = 0;
        cgxgbtd_StyleWrapper$Unit_PX = var$1;
        var$2 = new cgxgbtd_StyleWrapper$Unit$2;
        var$2.$name0 = $rt_s(439);
        var$2.$ordinal = 1;
        cgxgbtd_StyleWrapper$Unit_PCT = var$2;
        var$3 = new cgxgbtd_StyleWrapper$Unit$3;
        var$3.$name0 = $rt_s(440);
        var$3.$ordinal = 2;
        cgxgbtd_StyleWrapper$Unit_EM = var$3;
        var$4 = new cgxgbtd_StyleWrapper$Unit$4;
        var$4.$name0 = $rt_s(441);
        var$4.$ordinal = 3;
        cgxgbtd_StyleWrapper$Unit_EX = var$4;
        var$5 = new cgxgbtd_StyleWrapper$Unit$5;
        var$5.$name0 = $rt_s(442);
        var$5.$ordinal = 4;
        cgxgbtd_StyleWrapper$Unit_PT = var$5;
        var$6 = new cgxgbtd_StyleWrapper$Unit$6;
        var$6.$name0 = $rt_s(443);
        var$6.$ordinal = 5;
        cgxgbtd_StyleWrapper$Unit_PC = var$6;
        var$7 = new cgxgbtd_StyleWrapper$Unit$7;
        var$7.$name0 = $rt_s(444);
        var$7.$ordinal = 6;
        cgxgbtd_StyleWrapper$Unit_IN = var$7;
        var$8 = new cgxgbtd_StyleWrapper$Unit$8;
        var$8.$name0 = $rt_s(445);
        var$8.$ordinal = 7;
        cgxgbtd_StyleWrapper$Unit_CM = var$8;
        var$9 = new cgxgbtd_StyleWrapper$Unit$9;
        var$9.$name0 = $rt_s(446);
        var$9.$ordinal = 8;
        cgxgbtd_StyleWrapper$Unit_MM = var$9;
        cgxgbtd_StyleWrapper$Unit_$VALUES = $rt_createArrayFromData(cgxgbtd_StyleWrapper$Unit, [var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9]);
    }
    function ju_HashMap$HashEntry() {
        var a = this; ju_MapEntry.call(a);
        a.$origKeyHash = 0;
        a.$next = null;
    }
    var cgxgbtp_AssetFilter = $rt_classWithoutFields(0);
    function cgxgbtp_AssetFilter_isImage($extension) {
        return !jl_String_equals($extension, $rt_s(447)) && !jl_String_equals($extension, $rt_s(448)) && !jl_String_equals($extension, $rt_s(449)) && !jl_String_equals($extension, $rt_s(450)) && !jl_String_equals($extension, $rt_s(451)) ? 0 : 1;
    }
    function cgxgbtp_AssetFilter_isText($extension) {
        var var$2;
        a: {
            b: {
                if (jl_String_equals($extension, $rt_s(452)))
                    break b;
                if (jl_String_equals($extension, $rt_s(453)))
                    break b;
                if (jl_String_equals($extension, $rt_s(454)))
                    break b;
                if (jl_String_equals($extension, $rt_s(455)))
                    break b;
                if (jl_String_equals($extension, $rt_s(456)))
                    break b;
                if (jl_String_equals($extension, $rt_s(457)))
                    break b;
                if (jl_String_equals($extension, $rt_s(458)))
                    break b;
                if (jl_String_equals($extension, $rt_s(459)))
                    break b;
                if (!jl_String_equals($extension, $rt_s(460))) {
                    var$2 = 0;
                    break a;
                }
            }
            var$2 = 1;
        }
        return var$2;
    }
    var cgxgbtd_EventTargetWrapper = $rt_classWithoutFields(0);
    var cgxgbtd_FileReaderWrapper = $rt_classWithoutFields();
    function cgxgbtd_FileReaderWrapper_removeEventListener$exported$0(var$0, var$1, var$2) {
        var$0.$removeEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
    }
    function cgxgbtd_FileReaderWrapper_dispatchEvent$exported$1(var$0, var$1) {
        return !!var$0.$dispatchEvent0(var$1);
    }
    function cgxgbtd_FileReaderWrapper_addEventListener$exported$2(var$0, var$1, var$2) {
        var$0.$addEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
    }
    function cgxgbtd_FileReaderWrapper_addEventListener$exported$3(var$0, var$1, var$2, var$3) {
        var$0.$addEventListener2($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
    }
    function cgxgbtd_FileReaderWrapper_removeEventListener$exported$4(var$0, var$1, var$2, var$3) {
        var$0.$removeEventListener2($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
    }
    function cgxgbtp_Preloader$3$1() {
        var a = this; jl_Object.call(a);
        a.$val$type0 = null;
        a.$val$name = null;
        a.$val$droppedFiles = null;
        a.$val$length = 0;
        a.$this$1 = null;
    }
    function cgxgbtp_Preloader$3$1_handleEvent($this, $evt) {
        var var$2, $blob, $arrayBuffer;
        var$2 = $evt.target;
        $blob = null;
        $arrayBuffer = $this.$val$type0;
        cgxgbtp_AssetType_$callClinit();
        if ($arrayBuffer !== cgxgbtp_AssetType_Binary && $arrayBuffer !== cgxgbtp_AssetType_Audio) {
            if ($arrayBuffer === cgxgbtp_AssetType_Image) {
                $evt = $rt_globals.window.document.createElement("img");
                $blob = $rt_ustr($rt_str(var$2.result));
                $evt.src = $blob;
                $arrayBuffer = var$2.result;
                var$2 = new $rt_globals.Int8Array($arrayBuffer);
                $blob = new cgxgbtp_Blob;
                $blob.$data3 = var$2;
                $blob.$response = $arrayBuffer;
                $blob.$image0 = $evt;
            } else if ($arrayBuffer === cgxgbtp_AssetType_Text)
                $blob = $rt_str(var$2.result);
        } else {
            $arrayBuffer = var$2.result;
            $evt = new $rt_globals.Int8Array($arrayBuffer);
            $blob = new cgxgbtp_Blob;
            $blob.$data3 = $evt;
            $blob.$response = $arrayBuffer;
        }
        if ($blob !== null) {
            cgxgbtp_Preloader_putAssetInMap($this.$this$1.$this$08, $this.$val$type0, $this.$val$name, $blob);
            cbgu_Array_add($this.$val$droppedFiles, $this.$val$name);
            if ($this.$val$droppedFiles.$size == $this.$val$length) {
                $evt = $this.$this$1.$val$teaApplication;
                $blob = new cgxgbtp_Preloader$3$1$1;
                $blob.$this$2 = $this;
                cbgu_Array_add($evt.$runnables, $blob);
            }
        }
    }
    function cgxgbtp_Preloader$3$1_handleEvent$exported$0(var$0, var$1) {
        cgxgbtp_Preloader$3$1_handleEvent(var$0, var$1);
    }
    function cgxgbtp_AssetType() {
        jl_Enum.call(this);
        this.$code = null;
    }
    var cgxgbtp_AssetType_Image = null;
    var cgxgbtp_AssetType_Audio = null;
    var cgxgbtp_AssetType_Text = null;
    var cgxgbtp_AssetType_Binary = null;
    var cgxgbtp_AssetType_Directory = null;
    var cgxgbtp_AssetType_$VALUES = null;
    function cgxgbtp_AssetType_$callClinit() {
        cgxgbtp_AssetType_$callClinit = $rt_eraseClinit(cgxgbtp_AssetType);
        cgxgbtp_AssetType__clinit_();
    }
    function cgxgbtp_AssetType__clinit_() {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = new cgxgbtp_AssetType;
        cgxgbtp_AssetType_$callClinit();
        var$1.$name0 = $rt_s(461);
        var$1.$ordinal = 0;
        var$1.$code = $rt_s(434);
        cgxgbtp_AssetType_Image = var$1;
        var$2 = new cgxgbtp_AssetType;
        var$2.$name0 = $rt_s(462);
        var$2.$ordinal = 1;
        var$2.$code = $rt_s(436);
        cgxgbtp_AssetType_Audio = var$2;
        var$3 = new cgxgbtp_AssetType;
        var$3.$name0 = $rt_s(463);
        var$3.$ordinal = 2;
        var$3.$code = $rt_s(464);
        cgxgbtp_AssetType_Text = var$3;
        var$4 = new cgxgbtp_AssetType;
        var$4.$name0 = $rt_s(465);
        var$4.$ordinal = 3;
        var$4.$code = $rt_s(435);
        cgxgbtp_AssetType_Binary = var$4;
        var$5 = new cgxgbtp_AssetType;
        var$5.$name0 = $rt_s(466);
        var$5.$ordinal = 4;
        var$5.$code = $rt_s(273);
        cgxgbtp_AssetType_Directory = var$5;
        cgxgbtp_AssetType_$VALUES = $rt_createArrayFromData(cgxgbtp_AssetType, [var$1, var$2, var$3, var$4, var$5]);
    }
    var jlr_Modifier = $rt_classWithoutFields();
    var jlr_Modifier_modifierNames = null;
    var jlr_Modifier_canonicalOrder = null;
    function jlr_Modifier_toString($mod) {
        var $sb, $modifierNames, $index, var$5, var$6, var$7, var$8, var$9, $modifier, var$11;
        $sb = new jl_StringBuilder;
        $sb.$buffer = $rt_createCharArray(16);
        $modifierNames = jlr_Modifier_getModifierNames();
        $index = 0;
        var$5 = jlr_Modifier_canonicalOrder.data;
        var$6 = var$5.length;
        var$7 = 0;
        while (var$7 < var$6) {
            if ($mod & var$5[var$7]) {
                var$8 = $sb.$length;
                if (var$8 > 0) {
                    jl_AbstractStringBuilder_insertSpace($sb, var$8, var$8 + 1 | 0);
                    $sb.$buffer.data[var$8] = 32;
                }
                var$9 = $modifierNames.data[$index];
                jl_AbstractStringBuilder_insert($sb, $sb.$length, var$9);
            }
            $index = $index + 1 | 0;
            var$7 = var$7 + 1 | 0;
        }
        var$9 = new jl_String;
        $modifierNames = $sb.$buffer;
        $modifier = $sb.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray($modifier);
        var$9.$characters = var$11;
        jl_System_fastArraycopy($modifierNames, 0, var$11, 0, $modifier);
        return var$9;
    }
    function jlr_Modifier_getModifierNames() {
        if (jlr_Modifier_modifierNames === null)
            jlr_Modifier_modifierNames = $rt_createArrayFromData(jl_String, [$rt_s(467), $rt_s(468), $rt_s(469), $rt_s(470), $rt_s(471), $rt_s(472), $rt_s(473), $rt_s(474), $rt_s(475), $rt_s(476), $rt_s(477), $rt_s(478)]);
        return jlr_Modifier_modifierNames;
    }
    function jlr_Modifier__clinit_() {
        jlr_Modifier_canonicalOrder = $rt_createIntArrayFromData([1, 4, 2, 1024, 8, 16, 128, 64, 32, 256, 2048, 512]);
    }
    var jlr_AccessibleObject = $rt_classWithoutFields();
    var jlr_Member = $rt_classWithoutFields(0);
    function jlr_Constructor() {
        var a = this; jlr_AccessibleObject.call(a);
        a.$declaringClass = null;
        a.$name1 = null;
        a.$modifiers = 0;
        a.$accessLevel = 0;
        a.$parameterTypes = null;
        a.$callable = null;
    }
    function jlr_Constructor_toString($this) {
        var $sb, var$2, var$3, var$4, $i, var$6, var$7;
        $sb = new jl_StringBuilder;
        $sb.$buffer = $rt_createCharArray(16);
        var$2 = jlr_Modifier_toString(otcir_Flags_getModifiers($this.$modifiers, $this.$accessLevel));
        jl_AbstractStringBuilder_insert($sb, $sb.$length, var$2);
        var$3 = $sb.$length;
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($sb, var$3, var$3 + 1 | 0);
            $sb.$buffer.data[var$3] = 32;
        }
        var$2 = $this.$declaringClass;
        if (var$2.$name === null)
            var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
        var$2 = var$2.$name;
        jl_AbstractStringBuilder_insert($sb, $sb.$length, var$2);
        var$3 = $sb.$length;
        jl_AbstractStringBuilder_insertSpace($sb, var$3, var$3 + 1 | 0);
        $sb.$buffer.data[var$3] = 40;
        var$4 = $this.$parameterTypes.$clone();
        $i = 0;
        while (true) {
            var$6 = var$4.data;
            if ($i >= var$6.length)
                break;
            if ($i > 0) {
                var$7 = $sb.$length;
                jl_AbstractStringBuilder_insertSpace($sb, var$7, var$7 + 1 | 0);
                $sb.$buffer.data[var$7] = 44;
            }
            var$2 = var$6[$i];
            if (var$2.$name === null)
                var$2.$name = $rt_str(var$2.$platformClass.$meta.name);
            var$2 = var$2.$name;
            jl_AbstractStringBuilder_insert($sb, $sb.$length, var$2);
            $i = $i + 1 | 0;
        }
        var$3 = $sb.$length;
        jl_AbstractStringBuilder_insertSpace($sb, var$3, var$3 + 1 | 0);
        var$4 = $sb.$buffer;
        var$4.data[var$3] = 41;
        var$2 = new jl_String;
        var$3 = $sb.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$3);
        var$2.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$3);
        return var$2;
    }
    function jlr_Constructor_newInstance($this, $initargs) {
        var $jsArgs, var$3, var$4, $i, $instance;
        if ($this.$modifiers & 1) {
            $jsArgs = new jl_InstantiationException;
            $jsArgs.$suppressionEnabled = 1;
            $jsArgs.$writableStackTrace = 1;
            $rt_throw($jsArgs);
        }
        if ($this.$callable === null) {
            $jsArgs = new jl_IllegalAccessException;
            $jsArgs.$suppressionEnabled = 1;
            $jsArgs.$writableStackTrace = 1;
            $rt_throw($jsArgs);
        }
        var$3 = $initargs.data;
        var$4 = var$3.length;
        if (var$4 != $this.$parameterTypes.data.length) {
            $jsArgs = new jl_IllegalArgumentException;
            $jsArgs.$suppressionEnabled = 1;
            $jsArgs.$writableStackTrace = 1;
            $rt_throw($jsArgs);
        }
        $i = 0;
        while ($i < var$4) {
            if (!($this.$parameterTypes.data[$i].$platformClass.$meta.primitive ? 1 : 0) && var$3[$i] !== null) {
                $jsArgs = $this.$parameterTypes.data[$i];
                $instance = var$3[$i];
                $jsArgs = $jsArgs.$platformClass;
                if (!($instance !== null && !(typeof $instance.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable($instance.constructor, $jsArgs) ? 1 : 0)) {
                    $jsArgs = new jl_IllegalArgumentException;
                    $jsArgs.$suppressionEnabled = 1;
                    $jsArgs.$writableStackTrace = 1;
                    $rt_throw($jsArgs);
                }
            }
            if (($this.$parameterTypes.data[$i].$platformClass.$meta.primitive ? 1 : 0) && var$3[$i] === null) {
                $jsArgs = new jl_IllegalArgumentException;
                $jsArgs.$suppressionEnabled = 1;
                $jsArgs.$writableStackTrace = 1;
                $rt_throw($jsArgs);
            }
            $i = $i + 1 | 0;
        }
        $jsArgs = $initargs.data;
        $instance = new ($this.$declaringClass.$platformClass);
        $this.$callable.call($instance, $jsArgs);
        return $instance;
    }
    function jur_AbstractCharClass$1() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$lHS = null;
        a.$this$017 = null;
    }
    function jur_AbstractCharClass$1_contains($this, $ch) {
        var $index;
        $index = $ch - 55296 | 0;
        return $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS, $index) : 0;
    }
    function jur_AbstractCharClass$2() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$lHS0 = null;
        a.$val$thisClass = null;
        a.$this$018 = null;
    }
    function jur_AbstractCharClass$2_contains($this, $ch) {
        var $index, $containslHS;
        $index = $ch - 55296 | 0;
        $containslHS = $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ ju_BitSet_get($this.$val$lHS0, $index) : 0;
        return $this.$val$thisClass.$contains1($ch) && !$containslHS ? 1 : 0;
    }
    function jur_CharClass$18() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$bs = null;
        a.$this$036 = null;
    }
    function jur_CharClass$18_contains($this, $ch) {
        return $this.$alt0 ^ ju_BitSet_get($this.$val$bs, $ch);
    }
    function jur_CharClass$18_toString($this) {
        var $temp, $i, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        $temp = new jl_StringBuilder;
        $temp.$buffer = $rt_createCharArray(16);
        $i = ju_BitSet_nextSetBit($this.$val$bs, 0);
        while ($i >= 0) {
            if ($i < 65536) {
                var$3 = $rt_createCharArray(1);
                var$3.data[0] = $i & 65535;
            } else
                var$3 = $rt_createCharArrayFromData([(55296 | ($i - 65536 | 0) >> 10 & 1023) & 65535, (56320 | $i & 1023) & 65535]);
            var$4 = var$3.data;
            var$5 = 0;
            var$6 = var$4.length;
            var$7 = $temp.$length;
            jl_AbstractStringBuilder_insertSpace($temp, var$7, var$7 + var$6 | 0);
            var$6 = var$6 + var$5 | 0;
            while (var$5 < var$6) {
                var$3 = $temp.$buffer.data;
                var$8 = var$7 + 1 | 0;
                var$9 = var$5 + 1 | 0;
                var$3[var$7] = var$4[var$5];
                var$7 = var$8;
                var$5 = var$9;
            }
            var$6 = $temp.$length;
            jl_AbstractStringBuilder_insertSpace($temp, var$6, var$6 + 1 | 0);
            $temp.$buffer.data[var$6] = 124;
            $i = ju_BitSet_nextSetBit($this.$val$bs, $i + 1 | 0);
        }
        var$7 = $temp.$length;
        if (var$7 > 0)
            jl_AbstractStringBuilder_deleteCharAt($temp, var$7 - 1 | 0);
        var$10 = new jl_String;
        var$3 = $temp.$buffer;
        var$7 = $temp.$length;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray(var$7);
        var$10.$characters = var$4;
        jl_System_fastArraycopy(var$3, 0, var$4, 0, var$7);
        return var$10;
    }
    function jur_CharClass$1() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$cc1 = null;
        a.$this$021 = null;
    }
    function jur_CharClass$1_contains($this, $ch) {
        return $this.$val$cc1.$contains1($ch);
    }
    function jur_CharClass$3() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$curAlt1 = 0;
        a.$val$cc2 = null;
        a.$this$022 = null;
    }
    function jur_CharClass$3_contains($this, $ch) {
        return !($this.$val$curAlt1 ^ ju_BitSet_get($this.$this$022.$bits, $ch)) && !($this.$val$curAlt1 ^ $this.$this$022.$inverted ^ $this.$val$cc2.$contains1($ch)) ? 0 : 1;
    }
    function jur_CharClass$2() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$curAlt2 = 0;
        a.$val$cc3 = null;
        a.$this$023 = null;
    }
    function jur_CharClass$2_contains($this, $ch) {
        return !($this.$val$curAlt2 ^ ju_BitSet_get($this.$this$023.$bits, $ch)) && !($this.$val$curAlt2 ^ $this.$this$023.$inverted ^ $this.$val$cc3.$contains1($ch)) ? 1 : 0;
    }
    function jur_CharClass$5() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$curAlt = 0;
        a.$val$nb = null;
        a.$val$cc = null;
        a.$this$019 = null;
    }
    function jur_CharClass$5_contains($this, $ch) {
        return $this.$val$curAlt ^ (!$this.$val$nb.$contains1($ch) && !$this.$val$cc.$contains1($ch) ? 0 : 1);
    }
    function jur_CharClass$4() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$curAlt0 = 0;
        a.$val$nb0 = null;
        a.$val$cc0 = null;
        a.$this$020 = null;
    }
    function jur_CharClass$4_contains($this, $ch) {
        return $this.$val$curAlt0 ^ (!$this.$val$nb0.$contains1($ch) && !$this.$val$cc0.$contains1($ch) ? 0 : 1) ? 0 : 1;
    }
    function jur_CharClass$7() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$clazz1 = null;
        a.$this$026 = null;
    }
    function jur_CharClass$7_contains($this, $ch) {
        var var$2, var$3;
        var$2 = $this.$val$clazz1;
        var$3 = var$2.$nonBitSet;
        return var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch);
    }
    function jur_CharClass$6() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$clazz2 = null;
        a.$this$027 = null;
    }
    function jur_CharClass$6_contains($this, $ch) {
        var var$2, var$3;
        var$2 = $this.$val$clazz2;
        var$3 = var$2.$nonBitSet;
        return (var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch)) ? 0 : 1;
    }
    function jur_CharClass$9() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$clazz3 = null;
        a.$val$curAlt5 = 0;
        a.$this$028 = null;
    }
    function jur_CharClass$9_contains($this, $ch) {
        var var$2, var$3, var$4;
        var$2 = $this.$val$clazz3;
        var$3 = var$2.$nonBitSet;
        var$4 = var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch);
        return !var$4 && !($this.$val$curAlt5 ^ ju_BitSet_get($this.$this$028.$bits, $ch)) ? 0 : 1;
    }
    function jur_CharClass$8() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$clazz4 = null;
        a.$val$curAlt6 = 0;
        a.$this$029 = null;
    }
    function jur_CharClass$8_contains($this, $ch) {
        var var$2, var$3, var$4;
        var$2 = $this.$val$clazz4;
        var$3 = var$2.$nonBitSet;
        var$4 = var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch);
        return !var$4 && !($this.$val$curAlt6 ^ ju_BitSet_get($this.$this$029.$bits, $ch)) ? 1 : 0;
    }
    function jur_CharClass$11() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$curAlt4 = 0;
        a.$val$nb2 = null;
        a.$val$clazz0 = null;
        a.$this$025 = null;
    }
    function jur_CharClass$11_contains($this, $ch) {
        var var$2, var$3;
        a: {
            if (!($this.$val$curAlt4 ^ $this.$val$nb2.$contains1($ch))) {
                var$2 = $this.$val$clazz0;
                var$3 = var$2.$nonBitSet;
                if (!(var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch))) {
                    $ch = 0;
                    break a;
                }
            }
            $ch = 1;
        }
        return $ch;
    }
    function jur_CharClass$10() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$curAlt3 = 0;
        a.$val$nb1 = null;
        a.$val$clazz = null;
        a.$this$024 = null;
    }
    function jur_CharClass$10_contains($this, $ch) {
        var var$2, var$3;
        a: {
            if (!($this.$val$curAlt3 ^ $this.$val$nb1.$contains1($ch))) {
                var$2 = $this.$val$clazz;
                var$3 = var$2.$nonBitSet;
                if (!(var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch))) {
                    $ch = 1;
                    break a;
                }
            }
            $ch = 0;
        }
        return $ch;
    }
    function jur_CharClass$13() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$clazz7 = null;
        a.$this$032 = null;
    }
    function jur_CharClass$13_contains($this, $ch) {
        var var$2, var$3;
        var$2 = $this.$val$clazz7;
        var$3 = var$2.$nonBitSet;
        return var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch);
    }
    function jur_CharClass$12() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$clazz8 = null;
        a.$this$033 = null;
    }
    function jur_CharClass$12_contains($this, $ch) {
        var var$2, var$3;
        var$2 = $this.$val$clazz8;
        var$3 = var$2.$nonBitSet;
        return (var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch)) ? 0 : 1;
    }
    function jur_CharClass$15() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$clazz9 = null;
        a.$val$curAlt9 = 0;
        a.$this$034 = null;
    }
    function jur_CharClass$15_contains($this, $ch) {
        var var$2, var$3, var$4;
        var$2 = $this.$val$clazz9;
        var$3 = var$2.$nonBitSet;
        var$4 = var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch);
        return var$4 && $this.$val$curAlt9 ^ ju_BitSet_get($this.$this$034.$bits, $ch) ? 1 : 0;
    }
    function jur_CharClass$14() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$clazz10 = null;
        a.$val$curAlt10 = 0;
        a.$this$035 = null;
    }
    function jur_CharClass$14_contains($this, $ch) {
        var var$2, var$3, var$4;
        var$2 = $this.$val$clazz10;
        var$3 = var$2.$nonBitSet;
        var$4 = var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch);
        return var$4 && $this.$val$curAlt10 ^ ju_BitSet_get($this.$this$035.$bits, $ch) ? 0 : 1;
    }
    function jur_CharClass$17() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$curAlt8 = 0;
        a.$val$nb4 = null;
        a.$val$clazz6 = null;
        a.$this$031 = null;
    }
    function jur_CharClass$17_contains($this, $ch) {
        var var$2, var$3;
        a: {
            if ($this.$val$curAlt8 ^ $this.$val$nb4.$contains1($ch)) {
                var$2 = $this.$val$clazz6;
                var$3 = var$2.$nonBitSet;
                if (var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch)) {
                    $ch = 1;
                    break a;
                }
            }
            $ch = 0;
        }
        return $ch;
    }
    function jur_CharClass$16() {
        var a = this; jur_AbstractCharClass.call(a);
        a.$val$curAlt7 = 0;
        a.$val$nb3 = null;
        a.$val$clazz5 = null;
        a.$this$030 = null;
    }
    function jur_CharClass$16_contains($this, $ch) {
        var var$2, var$3;
        a: {
            if ($this.$val$curAlt7 ^ $this.$val$nb3.$contains1($ch)) {
                var$2 = $this.$val$clazz5;
                var$3 = var$2.$nonBitSet;
                if (var$3 !== null ? var$2.$alt0 ^ var$3.$contains1($ch) : var$2.$alt0 ^ ju_BitSet_get(var$2.$bits, $ch)) {
                    $ch = 0;
                    break a;
                }
            }
            $ch = 1;
        }
        return $ch;
    }
    function jl_Object$Monitor() {
        var a = this; jl_Object.call(a);
        a.$enteringThreads = null;
        a.$notifyListeners = null;
        a.$owner = null;
        a.$count = 0;
    }
    var jl_IllegalStateException = $rt_classWithoutFields(jl_RuntimeException);
    function jl_IllegalStateException__init_(var_0) {
        var var_1 = new jl_IllegalStateException();
        jl_IllegalStateException__init_0(var_1, var_0);
        return var_1;
    }
    function jl_IllegalStateException__init_0($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    var jl_IllegalMonitorStateException = $rt_classWithoutFields(jl_RuntimeException);
    function jur_MatchResultImpl() {
        var a = this; jl_Object.call(a);
        a.$groupBounds = null;
        a.$consumers = null;
        a.$compQuantCounters = null;
        a.$string0 = null;
        a.$groupCount = 0;
        a.$valid1 = 0;
        a.$leftBound0 = 0;
        a.$rightBound0 = 0;
        a.$startIndex = 0;
        a.$transparentBounds = 0;
        a.$anchoringBounds = 0;
        a.$hitEnd = 0;
        a.$requireEnd = 0;
        a.$previousMatch = 0;
        a.$mode = 0;
    }
    function jur_MatchResultImpl__init_(var_0, var_1, var_2, var_3, var_4, var_5) {
        var var_6 = new jur_MatchResultImpl();
        jur_MatchResultImpl__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
        return var_6;
    }
    function jur_MatchResultImpl__init_0($this, $string, $leftBound, $rightBound, $groupCount, $compQuantCount, $consumersCount) {
        var var$7, var$8, var$9, var$10, var$11, var$12;
        $this.$previousMatch = (-1);
        var$7 = $groupCount + 1 | 0;
        $this.$groupCount = var$7;
        var$8 = $rt_createIntArray(var$7 * 2 | 0);
        $this.$groupBounds = var$8;
        var$9 = $rt_createIntArray($consumersCount);
        var$10 = var$9.data;
        $this.$consumers = var$9;
        $groupCount = 0;
        $consumersCount = var$10.length;
        var$11 = $rt_compare($groupCount, $consumersCount);
        if (var$11 > 0) {
            $string = new jl_IllegalArgumentException;
            $string.$suppressionEnabled = 1;
            $string.$writableStackTrace = 1;
            $rt_throw($string);
        }
        while ($groupCount < $consumersCount) {
            var$7 = $groupCount + 1 | 0;
            var$10[$groupCount] = (-1);
            $groupCount = var$7;
        }
        if ($compQuantCount > 0)
            $this.$compQuantCounters = $rt_createIntArray($compQuantCount);
        var$8 = var$8.data;
        var$7 = 0;
        var$12 = var$8.length;
        $groupCount = $rt_compare(var$7, var$12);
        if ($groupCount > 0) {
            $string = new jl_IllegalArgumentException;
            $string.$suppressionEnabled = 1;
            $string.$writableStackTrace = 1;
            $rt_throw($string);
        }
        while (var$7 < var$12) {
            $compQuantCount = var$7 + 1 | 0;
            var$8[var$7] = (-1);
            var$7 = $compQuantCount;
        }
        $this.$valid1 = 0;
        $this.$mode = 2;
        $compQuantCount = 0;
        if ($groupCount > 0) {
            $string = new jl_IllegalArgumentException;
            $string.$suppressionEnabled = 1;
            $string.$writableStackTrace = 1;
            $rt_throw($string);
        }
        while ($compQuantCount < var$12) {
            $groupCount = $compQuantCount + 1 | 0;
            var$8[$compQuantCount] = (-1);
            $compQuantCount = $groupCount;
        }
        $groupCount = 0;
        if (var$11 > 0) {
            $string = new jl_IllegalArgumentException;
            $string.$suppressionEnabled = 1;
            $string.$writableStackTrace = 1;
            $rt_throw($string);
        }
        while ($groupCount < $consumersCount) {
            var$7 = $groupCount + 1 | 0;
            var$10[$groupCount] = (-1);
            $groupCount = var$7;
        }
        if ($string !== null)
            $this.$string0 = $string;
        if ($leftBound >= 0) {
            $this.$leftBound0 = $leftBound;
            $this.$rightBound0 = $rightBound;
        }
        $this.$startIndex = $this.$leftBound0;
    }
    function jur_MatchResultImpl_end($this, $group) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if (!$this.$valid1) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if ($group >= 0 && $group < $this.$groupCount)
            return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
        var$2 = new jl_IndexOutOfBoundsException;
        jl_String_$callClinit();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $group, 10);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        var$7 = $rt_createCharArray(var$6);
        var$4.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$4;
        $rt_throw(var$2);
    }
    function jur_MatchResultImpl_checkGroup($this, $group) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if (!$this.$valid1) {
            var$2 = new jl_IllegalStateException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        if ($group >= 0 && $group < $this.$groupCount)
            return;
        var$2 = new jl_IndexOutOfBoundsException;
        jl_String_$callClinit();
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $group, 10);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        var$7 = $rt_createCharArray(var$6);
        var$4.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$4;
        $rt_throw(var$2);
    }
    var cgxgbtu_KeyCodes = $rt_classWithoutFields();
    function cgxgbtu_KeyCodes_keyForCode($keyCode) {
        a: {
            switch ($keyCode) {
                case 8:
                    break;
                case 9:
                    return 61;
                case 10:
                case 11:
                case 12:
                case 14:
                case 15:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 28:
                case 29:
                case 30:
                case 31:
                case 41:
                case 42:
                case 43:
                case 44:
                case 47:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 93:
                case 94:
                case 95:
                case 108:
                case 124:
                case 125:
                case 126:
                case 127:
                case 128:
                case 129:
                case 130:
                case 131:
                case 132:
                case 133:
                case 134:
                case 135:
                case 136:
                case 137:
                case 138:
                case 139:
                case 140:
                case 141:
                case 142:
                case 143:
                case 146:
                case 147:
                case 148:
                case 149:
                case 150:
                case 151:
                case 152:
                case 153:
                case 154:
                case 155:
                case 156:
                case 157:
                case 158:
                case 159:
                case 160:
                case 161:
                case 162:
                case 163:
                case 164:
                case 165:
                case 166:
                case 167:
                case 168:
                case 169:
                case 170:
                case 171:
                case 172:
                case 173:
                case 174:
                case 175:
                case 176:
                case 177:
                case 178:
                case 179:
                case 180:
                case 181:
                case 182:
                case 183:
                case 184:
                case 185:
                case 193:
                case 194:
                case 195:
                case 196:
                case 197:
                case 198:
                case 199:
                case 200:
                case 201:
                case 202:
                case 203:
                case 204:
                case 205:
                case 206:
                case 207:
                case 208:
                case 209:
                case 210:
                case 211:
                case 212:
                case 213:
                case 214:
                case 215:
                case 216:
                case 217:
                case 218:
                    break a;
                case 13:
                    return 66;
                case 16:
                    return 59;
                case 17:
                    return 129;
                case 18:
                    return 57;
                case 19:
                    return 0;
                case 20:
                    return 0;
                case 27:
                    return 111;
                case 32:
                    return 62;
                case 33:
                    return 92;
                case 34:
                    return 93;
                case 35:
                    return 123;
                case 36:
                    return 3;
                case 37:
                    return 21;
                case 38:
                    return 19;
                case 39:
                    return 22;
                case 40:
                    return 20;
                case 45:
                    return 124;
                case 46:
                    return 112;
                case 48:
                    return 7;
                case 49:
                    return 8;
                case 50:
                    return 9;
                case 51:
                    return 10;
                case 52:
                    return 11;
                case 53:
                    return 12;
                case 54:
                    return 13;
                case 55:
                    return 14;
                case 56:
                    return 15;
                case 57:
                    return 16;
                case 65:
                    return 29;
                case 66:
                    return 30;
                case 67:
                    return 31;
                case 68:
                    return 32;
                case 69:
                    return 33;
                case 70:
                    return 34;
                case 71:
                    return 35;
                case 72:
                    return 36;
                case 73:
                    return 37;
                case 74:
                    return 38;
                case 75:
                    return 39;
                case 76:
                    return 40;
                case 77:
                    return 41;
                case 78:
                    return 42;
                case 79:
                    return 43;
                case 80:
                    return 44;
                case 81:
                    return 45;
                case 82:
                    return 46;
                case 83:
                    return 47;
                case 84:
                    return 48;
                case 85:
                    return 49;
                case 86:
                    return 50;
                case 87:
                    return 51;
                case 88:
                    return 52;
                case 89:
                    return 53;
                case 90:
                    return 54;
                case 91:
                    return 0;
                case 92:
                    return 0;
                case 96:
                    return 144;
                case 97:
                    return 145;
                case 98:
                    return 146;
                case 99:
                    return 147;
                case 100:
                    return 148;
                case 101:
                    return 149;
                case 102:
                    return 150;
                case 103:
                    return 151;
                case 104:
                    return 152;
                case 105:
                    return 153;
                case 106:
                    return 0;
                case 107:
                    return 81;
                case 109:
                    return 69;
                case 110:
                    return 56;
                case 111:
                    return 0;
                case 112:
                    return 131;
                case 113:
                    return 132;
                case 114:
                    return 133;
                case 115:
                    return 134;
                case 116:
                    return 135;
                case 117:
                    return 136;
                case 118:
                    return 137;
                case 119:
                    return 138;
                case 120:
                    return 139;
                case 121:
                    return 140;
                case 122:
                    return 141;
                case 123:
                    return 142;
                case 144:
                    return 78;
                case 145:
                    return 0;
                case 186:
                    return 74;
                case 187:
                    return 70;
                case 188:
                    return 55;
                case 189:
                    return 69;
                case 190:
                    return 56;
                case 191:
                    return 76;
                case 192:
                    return 0;
                case 219:
                    return 71;
                case 220:
                    return 73;
                case 221:
                    return 72;
                case 222:
                    return 75;
                default:
                    break a;
            }
            return 67;
        }
        return 0;
    }
    function cgxgbtu_KeyCodes_getButton($button) {
        if (!$button)
            return 0;
        if ($button == 2)
            return 1;
        if ($button != 1)
            return 0;
        return 2;
    }
    var cbgu_TimeUtils = $rt_classWithoutFields();
    function cbgu_TimeUtils_nanoTime() {
        return Long_fromNumber($rt_globals.performance.now() * 1000000.0);
    }
    var otp_PlatformQueue = $rt_classWithoutFields();
    var otp_PlatformRunnable = $rt_classWithoutFields(0);
    function jl_Object$monitorExit$lambda$_8_0() {
        jl_Object.call(this);
        this.$_00 = null;
    }
    function jl_Object$monitorExit$lambda$_8_0_run(var$0) {
        jl_Object_waitForOtherThreads(var$0.$_00);
    }
    var cgxgbtd_StyleWrapper$Unit$1 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
    var cgxgbtd_StyleWrapper$Unit$2 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
    var cgxgbtd_StyleWrapper$Unit$3 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
    var cgxgbtd_StyleWrapper$Unit$4 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
    var cgxgbtd_StyleWrapper$Unit$5 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
    var cgxgbtd_StyleWrapper$Unit$6 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
    var cgxgbtd_StyleWrapper$Unit$7 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
    var cgxgbtd_StyleWrapper$Unit$8 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
    var cgxgbtd_StyleWrapper$Unit$9 = $rt_classWithoutFields(cgxgbtd_StyleWrapper$Unit);
    var ju_Objects = $rt_classWithoutFields();
    var ka_GameKt = $rt_classWithoutFields();
    var otjb_Performance = $rt_classWithoutFields();
    var cbg_Screen = $rt_classWithoutFields(0);
    var ka_KtxScreen = $rt_classWithoutFields(0);
    var ka_GameKt$emptyScreen$1 = $rt_classWithoutFields();
    function ka_GameKt$emptyScreen$1_show($this) {}
    function ka_GameKt$emptyScreen$1_render($this, $delta) {}
    function ka_GameKt$emptyScreen$1_resize($this, $width, $height) {}
    function ka_GameKt$emptyScreen$1_pause($this) {}
    function ka_GameKt$emptyScreen$1_resume($this) {}
    function ka_GameKt$emptyScreen$1_hide($this) {}
    var oti_AsyncCallback = $rt_classWithoutFields(0);
    function otpp_AsyncCallbackWrapper() {
        jl_Object.call(this);
        this.$realAsyncCallback = null;
    }
    function otpp_AsyncCallbackWrapper_create($realAsyncCallback) {
        var var$2;
        var$2 = new otpp_AsyncCallbackWrapper;
        var$2.$realAsyncCallback = $realAsyncCallback;
        return var$2;
    }
    function otpp_AsyncCallbackWrapper_complete($this, $result) {
        $this.$realAsyncCallback.$complete($result);
    }
    function otpp_AsyncCallbackWrapper_error($this, $e) {
        $this.$realAsyncCallback.$error($e);
    }
    function jl_Object$monitorEnterWait$lambda$_6_0() {
        var a = this; jl_Object.call(a);
        a.$_0 = null;
        a.$_1 = null;
        a.$_2 = 0;
        a.$_3 = null;
    }
    var jur_BackReferencedSingleSet = $rt_classWithoutFields(jur_SingleSet);
    function jur_BackReferencedSingleSet_find($this, $startSearch, $testString, $matchResult) {
        var $res, $lastIndex, var$6, var$7, var$8, $saveStart;
        $res = 0;
        $lastIndex = $matchResult.$rightBound0;
        a: {
            while (true) {
                if ($startSearch > $lastIndex) {
                    $startSearch = $res;
                    break a;
                }
                var$6 = $this.$groupIndex0;
                var$7 = $matchResult.$groupBounds.data;
                var$8 = var$6 * 2 | 0;
                $saveStart = var$7[var$8];
                var$7[var$8] = $startSearch;
                $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
                if ($res >= 0)
                    break;
                var$8 = $this.$groupIndex0;
                $matchResult.$groupBounds.data[var$8 * 2 | 0] = $saveStart;
                $startSearch = $startSearch + 1 | 0;
            }
        }
        return $startSearch;
    }
    function jur_BackReferencedSingleSet_findBack($this, $stringIndex, $startSearch, $testString, $matchResult) {
        var $res, var$6, var$7, var$8, $saveStart;
        $res = 0;
        a: {
            while (true) {
                if ($startSearch < $stringIndex) {
                    $startSearch = $res;
                    break a;
                }
                var$6 = $this.$groupIndex0;
                var$7 = $matchResult.$groupBounds.data;
                var$8 = var$6 * 2 | 0;
                $saveStart = var$7[var$8];
                var$7[var$8] = $startSearch;
                $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
                if ($res >= 0)
                    break;
                var$8 = $this.$groupIndex0;
                $matchResult.$groupBounds.data[var$8 * 2 | 0] = $saveStart;
                $startSearch = $startSearch + (-1) | 0;
            }
        }
        return $startSearch;
    }
    function jur_BackReferencedSingleSet_processBackRefReplacement($this) {
        return null;
    }
    function ju_AbstractList$1() {
        var a = this; jl_Object.call(a);
        a.$index3 = 0;
        a.$modCount2 = 0;
        a.$size8 = 0;
        a.$removeIndex0 = 0;
        a.$this$016 = null;
    }
    function ju_AbstractList$1__init_(var_0) {
        var var_1 = new ju_AbstractList$1();
        ju_AbstractList$1__init_0(var_1, var_0);
        return var_1;
    }
    function ju_AbstractList$1__init_0($this, $this$0) {
        $this.$this$016 = $this$0;
        $this.$modCount2 = $this$0.$modCount1;
        $this.$size8 = $this$0.$size6;
        $this.$removeIndex0 = (-1);
    }
    function ju_AbstractList$1_hasNext($this) {
        return $this.$index3 >= $this.$size8 ? 0 : 1;
    }
    function ju_AbstractList$1_next($this) {
        var var$1, var$2, var$3;
        var$1 = $this.$modCount2;
        var$2 = $this.$this$016;
        if (var$1 < var$2.$modCount1) {
            var$2 = new ju_ConcurrentModificationException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        var$3 = $this.$index3;
        $this.$removeIndex0 = var$3;
        $this.$index3 = var$3 + 1 | 0;
        if (var$3 >= 0 && var$3 < var$2.$size6)
            return var$2.$array4.data[var$3];
        var$2 = new jl_IndexOutOfBoundsException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    function cgxgbtp_AssetDownloadImpl$1() {
        var a = this; jl_Thread.call(a);
        a.$val$async = 0;
        a.$val$url = null;
        a.$val$listener = null;
        a.$this$00 = null;
    }
    function cgxgbtp_AssetDownloadImpl$1_run($this) {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = new $rt_globals.XMLHttpRequest();
        var$2 = new cgxgbtp_AssetDownloadImpl$1$1;
        var$2.$this$10 = $this;
        var$2.$val$request0 = var$1;
        var$2 = otji_JS_function(var$2, "handleEvent");
        var$1.onreadystatechange = var$2;
        var$2 = $this.$this$00;
        var$3 = $this.$val$listener;
        var$4 = new cgxgbtp_AssetDownloadImpl$6;
        var$4.$this$04 = var$2;
        var$4.$val$listener3 = var$3;
        var$2 = otji_JS_function(var$4, "handleEvent");
        var$1.onprogress = var$2;
        var$3 = $this.$val$url;
        var$5 = $this.$val$async;
        var$1.open("GET", $rt_ustr(var$3), !!var$5);
        var$1.setRequestHeader("Content-Type", "text/plain; charset=utf-8");
        var$1.send();
    }
    var cgxgbt_TeaApplication$4 = $rt_classWithoutFields();
    var cgxgbt_TeaApplication$4_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = null;
    function cgxgbt_TeaApplication$4_$callClinit() {
        cgxgbt_TeaApplication$4_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$4);
        cgxgbt_TeaApplication$4__clinit_();
    }
    function cgxgbt_TeaApplication$4__clinit_() {
        var var$1, var$2;
        cgxgbt_TeaApplication$AppState_$callClinit();
        var$1 = $rt_createIntArray((cgxgbt_TeaApplication$AppState_$VALUES.$clone()).data.length);
        var$2 = var$1.data;
        cgxgbt_TeaApplication$4_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = var$1;
        var$2[cgxgbt_TeaApplication$AppState_LOAD_ASSETS.$ordinal] = 1;
        var$2[cgxgbt_TeaApplication$AppState_APP_LOOP.$ordinal] = 2;
    }
    var otja_XMLHttpRequest = $rt_classWithoutFields();
    function otja_XMLHttpRequest_addEventListener$exported$0(var$0, var$1, var$2) {
        var$0.$addEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
    }
    function otja_XMLHttpRequest_removeEventListener$exported$1(var$0, var$1, var$2) {
        var$0.$removeEventListener($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"));
    }
    function otja_XMLHttpRequest_removeEventListener$exported$2(var$0, var$1, var$2, var$3) {
        var$0.$removeEventListener0($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
    }
    function otja_XMLHttpRequest_dispatchEvent$exported$3(var$0, var$1) {
        return !!var$0.$dispatchEvent(var$1);
    }
    function otja_XMLHttpRequest_addEventListener$exported$4(var$0, var$1, var$2, var$3) {
        var$0.$addEventListener1($rt_str(var$1), otji_JS_functionAsObject(var$2, "handleEvent"), var$3 ? 1 : 0);
    }
    var cgxgbtd_EventHandlerWrapper = $rt_classWithoutFields(0);
    function cgxgbtp_AssetDownloadImpl$2() {
        var a = this; jl_Object.call(a);
        a.$val$request = null;
        a.$val$async1 = 0;
        a.$val$url1 = null;
        a.$val$listener2 = null;
        a.$this$03 = null;
    }
    function cgxgbtp_AssetDownloadImpl$2_handleEvent($this, $evt) {
        var $response, $currentWindow, var$4, $scriptElement, var$6, var$7, var$8, var$9, $$je, $ptr, $tmp;
        $ptr = 0;
        if ($rt_resuming()) {
            var $thread = $rt_nativeThread();
            $ptr = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();$scriptElement = $thread.pop();var$4 = $thread.pop();$currentWindow = $thread.pop();$response = $thread.pop();$evt = $thread.pop();$this = $thread.pop();
        }
        main: while (true) { switch ($ptr) {
        case 0:
            if ($this.$val$request.readyState == 4) {
                if ($this.$val$request.status == 200) {
                    if ($this.$this$03.$showLogs) {
                        if (jl_System_outCache === null) {
                            $response = new ji_PrintStream;
                            $response.$out = otcic_StdoutOutputStream_INSTANCE;
                            $evt = new jl_StringBuilder;
                            $evt.$buffer = $rt_createCharArray(16);
                            $response.$sb = $evt;
                            $response.$buffer1 = $rt_createCharArray(32);
                            $response.$autoFlush = 0;
                            jnci_UTF8Charset_$callClinit();
                            $response.$charset = jnci_UTF8Charset_INSTANCE;
                            jl_System_outCache = $response;
                        }
                        $currentWindow = jl_System_outCache;
                        $evt = $this.$val$url1;
                        $response = new jl_StringBuilder;
                        $response.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert($response, $response.$length, $rt_s(479));
                        var$4 = $response.$length;
                        if ($evt === null)
                            $evt = $rt_s(1);
                        jl_AbstractStringBuilder_insert($response, var$4, $evt);
                        $scriptElement = new jl_String;
                        var$6 = $response.$buffer;
                        var$7 = $response.$length;
                        jl_String_$callClinit();
                        var$8 = $rt_createCharArray(var$7);
                        $scriptElement.$characters = var$8;
                        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
                        $evt = $currentWindow.$sb;
                        jl_AbstractStringBuilder_insert($evt, $evt.$length, $scriptElement);
                        var$7 = $evt.$length;
                        jl_AbstractStringBuilder_insertSpace($evt, var$7, var$7 + 1 | 0);
                        $evt.$buffer.data[var$7] = 10;
                        ji_PrintStream_printSB($currentWindow);
                    }
                    $response = $this.$val$request.response;
                    cgxgbtdi_TeaWindow_$callClinit();
                    $currentWindow = cgxgbtdi_TeaWindow_TEA_WINDOW.$window0.document;
                    $scriptElement = $currentWindow.createElement("script");
                    $evt = $currentWindow.createTextNode($response);
                    $scriptElement.appendChild($evt);
                    $currentWindow.body.appendChild($scriptElement);
                    $rt_str($this.$val$request.responseText);
                } else if ($this.$val$request.status != 404 && $this.$val$request.status != 403) {
                    try {
                        var$9 = Long_fromInt(100);
                        $ptr = 1;
                        continue main;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                        } else {
                            throw $$e;
                        }
                    }
                    cgxgbtp_AssetDownloadImpl_loadScript($this.$this$03, $this.$val$async1, $this.$val$url1, $this.$val$listener2);
                }
                $evt = $this.$this$03;
                $evt.$queue = $evt.$queue - 1 | 0;
            }
            return;
        case 1:
            a: {
                try {
                    jl_Thread_sleep(var$9);
                    if ($rt_suspending()) {
                        break main;
                    }
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                    } else {
                        throw $$e;
                    }
                }
            }
            cgxgbtp_AssetDownloadImpl_loadScript($this.$this$03, $this.$val$async1, $this.$val$url1, $this.$val$listener2);
            $evt = $this.$this$03;
            $evt.$queue = $evt.$queue - 1 | 0;
            return;
        default: $rt_invalidPointer();
        }}
        $rt_nativeThread().push($this, $evt, $response, $currentWindow, var$4, $scriptElement, var$6, var$7, var$8, var$9, $ptr);
    }
    function cgxgbtp_AssetDownloadImpl$2_handleEvent$exported$0(var$0, var$1) {
        var $ptr, $tmp;
        $ptr = 0;
        if ($rt_resuming()) {
            var $thread = $rt_nativeThread();
            $ptr = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
        }
        main: while (true) { switch ($ptr) {
        case 0:
            $ptr = 1;
        case 1:
            cgxgbtp_AssetDownloadImpl$2_handleEvent(var$0, var$1);
            if ($rt_suspending()) {
                break main;
            }
            return;
        default: $rt_invalidPointer();
        }}
        $rt_nativeThread().push(var$0, var$1, $ptr);
    }
    var cbgu_Collections = $rt_classWithoutFields();
    var cbgu_Collections_allocateIterators = 0;
    function cbgu_Array$ArrayIterator() {
        var a = this; jl_Object.call(a);
        a.$array1 = null;
        a.$allowRemove = 0;
        a.$index4 = 0;
        a.$valid = 0;
    }
    function cbgu_Array$ArrayIterator_hasNext($this) {
        var var$1;
        if ($this.$valid)
            return $this.$index4 >= $this.$array1.$size ? 0 : 1;
        var$1 = new cbgu_GdxRuntimeException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(108);
        $rt_throw(var$1);
    }
    function cbgu_Array$ArrayIterator_next($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$index4;
        var$2 = $this.$array1;
        if (var$1 < var$2.$size) {
            if ($this.$valid) {
                var$3 = var$2.$items.data;
                $this.$index4 = var$1 + 1 | 0;
                return var$3[var$1];
            }
            var$2 = new cbgu_GdxRuntimeException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = $rt_s(108);
            $rt_throw(var$2);
        }
        var$2 = new ju_NoSuchElementException;
        jl_String_$callClinit();
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$1, 10);
        var$5 = new jl_String;
        var$3 = var$4.$buffer;
        var$1 = var$4.$length;
        var$6 = $rt_createCharArray(var$1);
        var$5.$characters = var$6;
        jl_System_fastArraycopy(var$3, 0, var$6, 0, var$1);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$5;
        $rt_throw(var$2);
    }
    function cbgu_Array$ArrayIterable() {
        var a = this; jl_Object.call(a);
        a.$array2 = null;
        a.$allowRemove0 = 0;
        a.$iterator1 = null;
        a.$iterator2 = null;
    }
    function cbgu_Array$ArrayIterable_iterator($this) {
        var var$1, var$2, var$3;
        if (cbgu_Collections_allocateIterators) {
            var$1 = new cbgu_Array$ArrayIterator;
            var$2 = $this.$array2;
            var$3 = $this.$allowRemove0;
            var$1.$valid = 1;
            var$1.$array1 = var$2;
            var$1.$allowRemove = var$3;
            return var$1;
        }
        if ($this.$iterator1 === null) {
            var$1 = new cbgu_Array$ArrayIterator;
            var$2 = $this.$array2;
            var$3 = $this.$allowRemove0;
            var$1.$valid = 1;
            var$1.$array1 = var$2;
            var$1.$allowRemove = var$3;
            $this.$iterator1 = var$1;
            var$1 = new cbgu_Array$ArrayIterator;
            var$1.$valid = 1;
            var$1.$array1 = var$2;
            var$1.$allowRemove = var$3;
            $this.$iterator2 = var$1;
        }
        var$1 = $this.$iterator1;
        if (var$1.$valid) {
            var$2 = $this.$iterator2;
            var$2.$index4 = 0;
            var$2.$valid = 1;
            var$1.$valid = 0;
            return var$2;
        }
        var$1.$index4 = 0;
        var$1.$valid = 1;
        $this.$iterator2.$valid = 0;
        return var$1;
    }
    function cgxgbtp_Blob() {
        var a = this; jl_Object.call(a);
        a.$response = null;
        a.$data3 = null;
        a.$image0 = null;
    }
    function cgxgbtp_Blob_toBase64($this) {
        var $length, $encoded, $i, $base64code, var$5, $j, var$7, $j_0, var$9;
        $length = $this.$data3.length;
        $encoded = new jl_StringBuilder;
        $encoded.$buffer = $rt_createCharArray((($length * 4 | 0) / 3 | 0) + 2 | 0);
        $i = 0;
        a: {
            b: {
                c: {
                    d: {
                        while (true) {
                            if ($i >= $length) {
                                $base64code = new jl_String;
                                var$5 = $encoded.$buffer;
                                $j = $encoded.$length;
                                jl_String_$callClinit();
                                var$7 = $rt_createCharArray($j);
                                $base64code.$characters = var$7;
                                jl_System_fastArraycopy(var$5, 0, var$7, 0, $j);
                                return $base64code;
                            }
                            $j_0 = $length - $i | 0;
                            if ($j_0 < 3) {
                                if ($j_0 >= 2) {
                                    $j = (($this.$data3[$i] & 255) << 16) + (($this.$data3[$i + 1 | 0] & 255) << 8) | 0;
                                    jl_AbstractStringBuilder_append3($encoded, jl_String_charAt($rt_s(480), $j >> 18 & 63));
                                    jl_StringBuilder_append2($encoded, jl_String_charAt($rt_s(480), $j >> 12 & 63));
                                    jl_StringBuilder_append2($encoded, jl_String_charAt($rt_s(480), $j >> 6 & 63));
                                    jl_StringBuilder_append1($encoded, $rt_s(481));
                                } else {
                                    $j_0 = ($this.$data3[$i] & 255) << 16;
                                    $j = $j_0 >> 18 & 63;
                                    if ($j < 0)
                                        break a;
                                    var$5 = $rt_s(480).$characters.data;
                                    if ($j >= var$5.length)
                                        break a;
                                    var$9 = var$5[$j];
                                    $j = $encoded.$length;
                                    jl_AbstractStringBuilder_insertSpace($encoded, $j, $j + 1 | 0);
                                    $encoded.$buffer.data[$j] = var$9;
                                    $j_0 = jl_String_charAt($rt_s(480), $j_0 >> 12 & 63);
                                    $j = $encoded.$length;
                                    jl_AbstractStringBuilder_insertSpace($encoded, $j, $j + 1 | 0);
                                    $encoded.$buffer.data[$j] = $j_0;
                                    jl_AbstractStringBuilder_insert($encoded, $encoded.$length, $rt_s(482));
                                }
                            } else {
                                $j_0 = ((($this.$data3[$i] & 255) << 16) + (($this.$data3[$i + 1 | 0] & 255) << 8) | 0) + ($this.$data3[$i + 2 | 0] & 255) | 0;
                                $j = $j_0 >> 18 & 63;
                                if ($j < 0)
                                    break b;
                                var$5 = $rt_s(480).$characters.data;
                                if ($j >= var$5.length)
                                    break b;
                                var$9 = var$5[$j];
                                $j = $encoded.$length;
                                jl_AbstractStringBuilder_insertSpace($encoded, $j, $j + 1 | 0);
                                $encoded.$buffer.data[$j] = var$9;
                                $j = $j_0 >> 12 & 63;
                                if ($j < 0)
                                    break c;
                                var$5 = $rt_s(480).$characters.data;
                                if ($j >= var$5.length)
                                    break c;
                                var$9 = var$5[$j];
                                $j = $encoded.$length;
                                jl_AbstractStringBuilder_insertSpace($encoded, $j, $j + 1 | 0);
                                $encoded.$buffer.data[$j] = var$9;
                                $j = $j_0 >> 6 & 63;
                                if ($j < 0)
                                    break d;
                                var$5 = $rt_s(480).$characters.data;
                                if ($j >= var$5.length)
                                    break d;
                                var$9 = var$5[$j];
                                $j = $encoded.$length;
                                jl_AbstractStringBuilder_insertSpace($encoded, $j, $j + 1 | 0);
                                $encoded.$buffer.data[$j] = var$9;
                                $j_0 = $j_0 & 63;
                                if ($j_0 < 0)
                                    break;
                                var$5 = $rt_s(480).$characters.data;
                                if ($j_0 >= var$5.length)
                                    break;
                                $j = var$5[$j_0];
                                $j_0 = $encoded.$length;
                                jl_AbstractStringBuilder_insertSpace($encoded, $j_0, $j_0 + 1 | 0);
                                $encoded.$buffer.data[$j_0] = $j;
                            }
                            $i = $i + 3 | 0;
                        }
                        $base64code = new jl_StringIndexOutOfBoundsException;
                        $base64code.$suppressionEnabled = 1;
                        $base64code.$writableStackTrace = 1;
                        $rt_throw($base64code);
                    }
                    $base64code = new jl_StringIndexOutOfBoundsException;
                    $base64code.$suppressionEnabled = 1;
                    $base64code.$writableStackTrace = 1;
                    $rt_throw($base64code);
                }
                $base64code = new jl_StringIndexOutOfBoundsException;
                $base64code.$suppressionEnabled = 1;
                $base64code.$writableStackTrace = 1;
                $rt_throw($base64code);
            }
            $base64code = new jl_StringIndexOutOfBoundsException;
            $base64code.$suppressionEnabled = 1;
            $base64code.$writableStackTrace = 1;
            $rt_throw($base64code);
        }
        $base64code = new jl_StringIndexOutOfBoundsException;
        $base64code.$suppressionEnabled = 1;
        $base64code.$writableStackTrace = 1;
        $rt_throw($base64code);
    }
    function cgxgbtp_Preloader$3$1$1() {
        jl_Object.call(this);
        this.$this$2 = null;
    }
    function cgxgbtp_Preloader$3$1$1_run($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, $array;
        var$1 = $this.$this$2.$val$droppedFiles;
        var$2 = var$1.$items.constructor;
        if (var$2 === null)
            var$3 = null;
        else {
            var$3 = var$2.classObject;
            if (var$3 === null) {
                var$3 = new jl_Class;
                var$3.$platformClass = var$2;
                var$4 = var$3;
                var$2.classObject = var$4;
            }
        }
        var$5 = var$3.$platformClass.$meta.item;
        if (var$5 === null)
            var$2 = null;
        else {
            var$2 = var$5.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$5;
                var$3 = var$2;
                var$5.classObject = var$3;
            }
        }
        var$6 = var$1.$size;
        if (var$2 === null) {
            var$1 = new jl_NullPointerException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$1);
            $rt_throw(var$1);
        }
        if (var$2 === $rt_cls($rt_voidcls())) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$1);
            $rt_throw(var$1);
        }
        if (var$6 < 0) {
            var$1 = new jl_NegativeArraySizeException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$1);
            $rt_throw(var$1);
        }
        var$3 = jlr_Array_newInstanceImpl(var$2.$platformClass, var$6);
        jl_System_arraycopy(var$1.$items, 0, var$3, 0, var$1.$size);
        $array = var$3;
        $this.$this$2.$this$1.$val$config.$windowListener.$filesDropped($array);
    }
    var jl_AutoCloseable = $rt_classWithoutFields(0);
    var ji_Closeable = $rt_classWithoutFields(0);
    var ji_Flushable = $rt_classWithoutFields(0);
    var ji_OutputStream = $rt_classWithoutFields();
    function ji_FilterOutputStream() {
        ji_OutputStream.call(this);
        this.$out = null;
    }
    function ji_PrintStream() {
        var a = this; ji_FilterOutputStream.call(a);
        a.$autoFlush = 0;
        a.$errorState = 0;
        a.$sb = null;
        a.$buffer1 = null;
        a.$charset = null;
    }
    function ji_PrintStream_print($this, $s, $begin, $end) {
        var $destBytes, $src, $overflow, var$7, var$8, var$9, var$10, var$11, $$je;
        $destBytes = $s.data;
        $end = $end - $begin | 0;
        $src = new jn_CharBufferOverArray;
        $overflow = $destBytes.length;
        var$7 = $begin + $end | 0;
        $src.$mark = (-1);
        $src.$capacity = $overflow;
        $src.$limit = $overflow;
        $src.$position = $begin;
        $src.$limit = var$7;
        $src.$start1 = 0;
        $src.$readOnly1 = 0;
        $src.$array3 = $s;
        var$8 = 1024;
        if ($end < var$8)
            var$8 = $end;
        if (16 > var$8)
            var$8 = 16;
        $destBytes = $rt_createByteArray(var$8);
        var$7 = $destBytes.data.length;
        var$9 = new jn_ByteBufferImpl;
        $begin = 0 + var$7 | 0;
        var$9.$mark = (-1);
        var$9.$capacity = var$7;
        var$9.$limit = var$7;
        jn_ByteOrder_$callClinit();
        var$9.$order = jn_ByteOrder_BIG_ENDIAN;
        var$9.$start0 = 0;
        var$9.$array0 = $destBytes;
        var$9.$position = 0;
        var$9.$limit = $begin;
        var$9.$direct = 0;
        var$9.$readOnly0 = 0;
        var$10 = jnci_UTF8Charset_newEncoder($this.$charset);
        jnc_CodingErrorAction_$callClinit();
        var$11 = jnc_CodingErrorAction_REPLACE;
        if (var$11 === null) {
            $src = new jl_IllegalArgumentException;
            $src.$suppressionEnabled = 1;
            $src.$writableStackTrace = 1;
            $src.$message = $rt_s(483);
            $rt_throw($src);
        }
        var$10.$malformedAction = var$11;
        var$10.$unmappableAction = var$11;
        while (true) {
            $overflow = (jnc_CharsetEncoder_encode0(var$10, $src, var$9, 1)).$kind != 1 ? 0 : 1;
            var$8 = var$9.$position;
            var$11 = $this.$out;
            if (var$11 === null)
                $this.$errorState = 1;
            if ($this.$errorState ? 0 : 1)
                a: {
                    try {
                        var$11.$write($destBytes, 0, var$8);
                        break a;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof ji_IOException) {
                        } else {
                            throw $$e;
                        }
                    }
                    $this.$errorState = 1;
                }
            var$9.$position = 0;
            var$9.$limit = var$9.$capacity;
            var$9.$mark = (-1);
            if (!$overflow)
                break;
        }
        while (true) {
            $overflow = (jnc_CharsetEncoder_flush(var$10, var$9)).$kind != 1 ? 0 : 1;
            var$8 = var$9.$position;
            $src = $this.$out;
            if ($src === null)
                $this.$errorState = 1;
            if ($this.$errorState ? 0 : 1)
                b: {
                    try {
                        $src.$write($destBytes, 0, var$8);
                        break b;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof ji_IOException) {
                        } else {
                            throw $$e;
                        }
                    }
                    $this.$errorState = 1;
                }
            var$9.$position = 0;
            var$9.$limit = var$9.$capacity;
            var$9.$mark = (-1);
            if (!$overflow)
                break;
        }
    }
    function ji_PrintStream_printSB($this) {
        var var$1, var$2, $buffer, var$4, var$5, var$6, var$7, var$8, var$9;
        var$1 = $this.$sb;
        var$2 = var$1.$length;
        $buffer = $this.$buffer1;
        if (var$2 > $buffer.data.length)
            $buffer = $rt_createCharArray(var$2);
        var$4 = 0;
        var$5 = 0;
        if (var$4 > var$2) {
            var$1 = new jl_IndexOutOfBoundsException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = $rt_s(484);
            $rt_throw(var$1);
        }
        while (var$4 < var$2) {
            var$6 = $buffer.data;
            var$7 = var$5 + 1 | 0;
            var$8 = var$1.$buffer.data;
            var$9 = var$4 + 1 | 0;
            var$6[var$5] = var$8[var$4];
            var$5 = var$7;
            var$4 = var$9;
        }
        ji_PrintStream_print($this, $buffer, 0, var$2);
        $this.$sb.$length = 0;
    }
    function otcic_ConsoleOutputStream() {
        ji_OutputStream.call(this);
        this.$buffer0 = null;
    }
    var otcic_StdoutOutputStream = $rt_classWithoutFields(otcic_ConsoleOutputStream);
    var otcic_StdoutOutputStream_INSTANCE = null;
    function otcic_StdoutOutputStream_write($this, $b, $off, $len) {
        var var$4;
        var$4 = 0;
        while (var$4 < $len) {
            $rt_putStdout($b.data[var$4 + $off | 0] & 255);
            var$4 = var$4 + 1 | 0;
        }
    }
    function otcic_StdoutOutputStream__clinit_() {
        var var$1;
        var$1 = new otcic_StdoutOutputStream;
        var$1.$buffer0 = $rt_createByteArray(1);
        otcic_StdoutOutputStream_INSTANCE = var$1;
    }
    function cgxgbtp_AssetDownloadImpl$6() {
        var a = this; jl_Object.call(a);
        a.$val$listener3 = null;
        a.$this$04 = null;
    }
    function cgxgbtp_AssetDownloadImpl$6_handleEvent$exported$0(var$0, var$1) {
        var$0.$val$listener3.$onProgress(var$1.loaded);
    }
    function jnc_Charset() {
        var a = this; jl_Object.call(a);
        a.$canonicalName = null;
        a.$aliases = null;
    }
    function jnc_Charset_checkCanonicalName($name) {
        var var$2, $c, var$4, $i;
        var$2 = $name.$characters.data;
        $c = var$2.length;
        if ($c ? 0 : 1) {
            var$4 = new jnc_IllegalCharsetNameException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$charsetName0 = $name;
            $rt_throw(var$4);
        }
        if (0 >= $c) {
            $name = new jl_StringIndexOutOfBoundsException;
            $name.$suppressionEnabled = 1;
            $name.$writableStackTrace = 1;
            $rt_throw($name);
        }
        if (!jnc_Charset_isValidCharsetStart(var$2[0])) {
            var$4 = new jnc_IllegalCharsetNameException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            var$4.$charsetName0 = $name;
            $rt_throw(var$4);
        }
        $i = 1;
        a: {
            while (true) {
                var$2 = $name.$characters.data;
                $c = $rt_compare($i, var$2.length);
                if ($c >= 0)
                    break;
                if ($i < 0)
                    break a;
                if ($c >= 0)
                    break a;
                b: {
                    $c = var$2[$i];
                    switch ($c) {
                        case 43:
                        case 45:
                        case 46:
                        case 58:
                        case 95:
                            break;
                        default:
                            if (jnc_Charset_isValidCharsetStart($c))
                                break b;
                            else {
                                var$4 = new jnc_IllegalCharsetNameException;
                                var$4.$suppressionEnabled = 1;
                                var$4.$writableStackTrace = 1;
                                var$4.$charsetName0 = $name;
                                $rt_throw(var$4);
                            }
                    }
                }
                $i = $i + 1 | 0;
            }
            return;
        }
        $name = new jl_StringIndexOutOfBoundsException;
        $name.$suppressionEnabled = 1;
        $name.$writableStackTrace = 1;
        $rt_throw($name);
    }
    function jnc_Charset_isValidCharsetStart($c) {
        a: {
            b: {
                if (!($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122)) {
                    if ($c < 65)
                        break b;
                    if ($c > 90)
                        break b;
                }
                $c = 1;
                break a;
            }
            $c = 0;
        }
        return $c;
    }
    function jnc_Charset_name($this) {
        return $this.$canonicalName;
    }
    function jnc_Charset_encode($this, $cb) {
        var var$2, $e, $$je;
        a: {
            try {
                var$2 = $this.$newEncoder();
                jnc_CodingErrorAction_$callClinit();
                $cb = jnc_CharsetEncoder_encode(jnc_CharsetEncoder_onUnmappableCharacter(jnc_CharsetEncoder_onMalformedInput(var$2, jnc_CodingErrorAction_REPLACE), jnc_CodingErrorAction_REPLACE), $cb);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jnc_CharacterCodingException) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $cb;
        }
        var$2 = new jl_AssertionError;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(79);
        var$2.$cause = $e;
        $rt_throw(var$2);
    }
    var jnci_UTF8Charset = $rt_classWithoutFields(jnc_Charset);
    var jnci_UTF8Charset_INSTANCE = null;
    function jnci_UTF8Charset_$callClinit() {
        jnci_UTF8Charset_$callClinit = $rt_eraseClinit(jnci_UTF8Charset);
        jnci_UTF8Charset__clinit_();
    }
    function jnci_UTF8Charset_newEncoder($this) {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = new jnci_UTF8Encoder;
        var$2 = $rt_createByteArray(1);
        var$3 = var$2.data;
        var$3[0] = 63;
        jnc_CodingErrorAction_$callClinit();
        var$4 = jnc_CodingErrorAction_REPORT;
        var$1.$malformedAction = var$4;
        var$1.$unmappableAction = var$4;
        var$5 = var$3.length;
        if (var$5 && var$5 >= var$1.$maxBytesPerChar) {
            var$1.$charset0 = $this;
            var$1.$replacement0 = var$2.$clone();
            var$1.$averageBytesPerChar = 2.0;
            var$1.$maxBytesPerChar = 4.0;
            var$1.$inArray = $rt_createCharArray(512);
            var$1.$outArray = $rt_createByteArray(512);
            return var$1;
        }
        var$4 = new jl_IllegalArgumentException;
        jl_Throwable__init_2(var$4, $rt_s(485));
        $rt_throw(var$4);
    }
    function jnci_UTF8Charset__clinit_() {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = new jnci_UTF8Charset;
        jnci_UTF8Charset_$callClinit();
        var$2 = $rt_createArray(jl_String, 0);
        var$3 = var$2.data;
        jnc_Charset_checkCanonicalName($rt_s(137));
        var$4 = var$3.length;
        var$5 = 0;
        while (var$5 < var$4) {
            jnc_Charset_checkCanonicalName(var$3[var$5]);
            var$5 = var$5 + 1 | 0;
        }
        var$1.$canonicalName = $rt_s(137);
        var$1.$aliases = var$2.$clone();
        jnci_UTF8Charset_INSTANCE = var$1;
    }
    function jnc_IllegalCharsetNameException() {
        jl_IllegalArgumentException.call(this);
        this.$charsetName0 = null;
    }
    function igtg_FirstScreen() {
        var a = this; jl_Object.call(a);
        a.$gasket = null;
        a.$fps = null;
        a.$seed00 = Long_ZERO;
        a.$seed10 = Long_ZERO;
        a.$preference = null;
    }
    var igtg_FirstScreen_Companion = null;
    var igtg_FirstScreen_GLOBAL_RANDOM = null;
    function igtg_FirstScreen_$callClinit() {
        igtg_FirstScreen_$callClinit = $rt_eraseClinit(igtg_FirstScreen);
        igtg_FirstScreen__clinit_();
    }
    function igtg_FirstScreen_show($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        var$1 = cbg_Gdx_input;
        var$2 = new igtg_FirstScreen$show$1;
        var$2.$this$054 = $this;
        var$1.$processor = var$2;
        var$1 = cbg_Gdx_app;
        var$3 = var$1.$prefs;
        var$4 = cbgu_ObjectMap_locateKey(var$3, $rt_s(486));
        var$3 = var$4 < 0 ? null : var$3.$valueTable.data[var$4];
        if (var$3 === null) {
            var$5 = $rt_globals.window.localStorage;
            var$3 = new cgxgbt_TeaPreferences;
            var$6 = var$1.$config.$storagePrefix;
            var$7 = new jl_StringBuilder;
            var$7.$buffer = $rt_createCharArray(16);
            var$4 = var$7.$length;
            if (var$6 === null)
                var$6 = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$7, var$4, var$6);
            jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(486));
            var$6 = new jl_String;
            var$8 = var$7.$buffer;
            var$9 = var$7.$length;
            jl_String_$callClinit();
            var$10 = $rt_createCharArray(var$9);
            var$6.$characters = var$10;
            jl_System_fastArraycopy(var$8, 0, var$10, 0, var$9);
            cgxgbt_TeaPreferences__init_(var$3, var$5, var$6);
            cbgu_ObjectMap_put(var$1.$prefs, $rt_s(486), var$3);
        }
        $this.$preference = var$3;
        var$11 = Long_ZERO;
        var$2 = var$3.$values3;
        var$4 = cbgu_ObjectMap_locateKey(var$2, $rt_s(487));
        var$1 = var$4 < 0 ? null : var$2.$valueTable.data[var$4];
        if (var$1 !== null)
            var$11 = var$1.$value6;
        $this.$seed00 = var$11;
        var$1 = $this.$preference;
        if (var$1 === null) {
            kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(488));
            var$1 = null;
        }
        var$11 = cgxgbt_TeaPreferences_getLong(var$1, $rt_s(489), Long_ZERO);
        $this.$seed10 = var$11;
        var$12 = $this.$seed00;
        if (Long_eq(var$12, Long_ZERO) && Long_eq(var$11, Long_ZERO)) {
            igtg_FirstScreen_$callClinit();
            $this.$seed00 = cbgm_RandomXS128_getState(igtg_FirstScreen_GLOBAL_RANDOM, 0);
            $this.$seed10 = cbgm_RandomXS128_getState(igtg_FirstScreen_GLOBAL_RANDOM, 1);
            var$1 = $this.$preference;
            if (var$1 === null) {
                kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(488));
                var$1 = null;
            }
            cgxgbt_TeaPreferences_putLong(var$1, $rt_s(487), $this.$seed00);
            var$1 = $this.$preference;
            if (var$1 === null) {
                kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(488));
                var$1 = null;
            }
            cgxgbt_TeaPreferences_putLong(var$1, $rt_s(489), $this.$seed10);
            var$1 = $this.$preference;
            if (var$1 === null) {
                kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(488));
                var$1 = null;
            }
            cgxgbt_TeaPreferences_flush(var$1);
        } else {
            igtg_FirstScreen_$callClinit();
            cbgm_RandomXS128_setState(igtg_FirstScreen_GLOBAL_RANDOM, var$12, var$11);
        }
        $this.$gasket = igtg_Gasket__init_();
    }
    function igtg_FirstScreen_render($this, $delta) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        cbg_Gdx_gl.$glClearColor(0.0, 0.0, 0.0, 1.0);
        cbg_Gdx_gl.$glClear(16640);
        igtg_FrameRate_update($this.$fps);
        var$2 = $this.$gasket;
        if (var$2 !== null) {
            igtg_Gasket_nextGeneration(var$2);
            var$2 = var$2.$allCircles;
            var$3 = 0;
            var$4 = var$2.$modCount1;
            var$5 = var$2.$size6;
            a: {
                while (var$3 >= var$5 ? 0 : 1) {
                    if (var$4 < var$2.$modCount1) {
                        var$2 = new ju_ConcurrentModificationException;
                        var$2.$suppressionEnabled = 1;
                        var$2.$writableStackTrace = 1;
                        $rt_throw(var$2);
                    }
                    var$6 = var$3 + 1 | 0;
                    if (var$3 < 0)
                        break a;
                    if (var$3 >= var$2.$size6)
                        break a;
                    var$7 = var$2.$array4.data[var$3];
                    igtg_Circle_$callClinit();
                    var$8 = var$7.$center;
                    igtg_Circle_draw(var$7, var$8.$real, var$8.$img, var$7.$color);
                    var$3 = var$6;
                }
                igtg_FrameRate_render($this.$fps);
                return;
            }
            var$2 = new jl_IndexOutOfBoundsException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$2);
            $rt_throw(var$2);
        }
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(86));
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(490));
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(87));
        var$2 = new jl_String;
        var$9 = var$7.$buffer;
        var$10 = var$7.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray(var$10);
        var$2.$characters = var$11;
        jl_System_fastArraycopy(var$9, 0, var$11, 0, var$10);
        var$7 = new k_UninitializedPropertyAccessException;
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$8 = $rt_cls(kji_Intrinsics).$name;
        var$9 = var$7.$stackTrace;
        var$11 = var$9 !== null ? var$9.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$9 = var$11.data;
        var$10 = var$9.length;
        var$4 = (-1);
        var$6 = 0;
        while (var$6 < var$10) {
            if (jl_String_equals(var$8, jl_StackTraceElement_getClassName(var$9[var$6])))
                var$4 = var$6;
            var$6 = var$6 + 1 | 0;
        }
        var$6 = var$4 + 1 | 0;
        var$8 = var$11.constructor;
        if (var$8 === null)
            var$2 = null;
        else {
            var$2 = var$8.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                jl_Object__init_0(var$2);
                var$2.$platformClass = var$8;
                var$12 = var$2;
                var$8.classObject = var$12;
            }
        }
        var$2 = jlr_Array_newInstance(jl_Class_getClass(var$2.$platformClass.$meta.item), var$10 - var$6 | 0);
        var$4 = var$6;
        while (var$4 < var$10) {
            var$2.data[var$4 - var$6 | 0] = var$9[var$4];
            var$4 = var$4 + 1 | 0;
        }
        var$7.$stackTrace = var$2.$clone();
        $rt_throw(var$7);
    }
    function igtg_FirstScreen_newGasket($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
        var$1 = new cbgm_RandomXS128;
        var$2 = Long_or(Long_shl(Long_fromInt(4.294967296E9 * $rt_globals.Math.random() + (-2.147483648E9) | 0), 32), Long_fromInt(4.294967296E9 * $rt_globals.Math.random() + (-2.147483648E9) | 0));
        if (Long_eq(var$2, Long_ZERO))
            var$2 = Long_create(0, 2147483648);
        var$3 = Long_mul(Long_xor(var$2, Long_shru(var$2, 33)), Long_create(3981806797, 4283543511));
        var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
        var$4 = Long_xor(var$3, Long_shru(var$3, 33));
        var$3 = Long_mul(Long_xor(var$4, Long_shru(var$4, 33)), Long_create(3981806797, 4283543511));
        var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
        var$3 = Long_xor(var$3, Long_shru(var$3, 33));
        var$1.$seed0 = var$4;
        var$1.$seed1 = var$3;
        igtg_FirstScreen_$callClinit();
        igtg_FirstScreen_GLOBAL_RANDOM = var$1;
        $this.$seed00 = var$4;
        $this.$seed10 = var$3;
        var$1 = $this.$preference;
        if (var$1 !== null) {
            var$1 = var$1.$values3;
            var$5 = new jl_Long;
            var$5.$value6 = var$4;
            cbgu_ObjectMap_put(var$1, $rt_s(487), var$5);
            var$1 = $this.$preference;
            if (var$1 === null) {
                kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(488));
                var$1 = null;
            }
            cgxgbt_TeaPreferences_putLong(var$1, $rt_s(489), $this.$seed10);
            var$1 = $this.$preference;
            if (var$1 === null) {
                kji_Intrinsics_throwUninitializedPropertyAccessException($rt_s(488));
                var$1 = null;
            }
            cgxgbt_TeaPreferences_flush(var$1);
            $this.$gasket = igtg_Gasket__init_();
            return;
        }
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(86));
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(488));
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(87));
        var$1 = new jl_String;
        var$7 = var$6.$buffer;
        var$8 = var$6.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$8);
        var$1.$characters = var$9;
        jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
        var$6 = new k_UninitializedPropertyAccessException;
        var$6.$suppressionEnabled = 1;
        var$6.$writableStackTrace = 1;
        var$6.$message = var$1;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$5 = $rt_cls(kji_Intrinsics).$name;
        var$7 = var$6.$stackTrace;
        var$9 = var$7 !== null ? var$7.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$7 = var$9.data;
        var$8 = var$7.length;
        var$10 = (-1);
        var$11 = 0;
        while (var$11 < var$8) {
            if (jl_String_equals(var$5, jl_StackTraceElement_getClassName(var$7[var$11])))
                var$10 = var$11;
            var$11 = var$11 + 1 | 0;
        }
        var$11 = var$10 + 1 | 0;
        var$5 = var$9.constructor;
        if (var$5 === null)
            var$1 = null;
        else {
            var$1 = var$5.classObject;
            if (var$1 === null) {
                var$1 = new jl_Class;
                jl_Object__init_0(var$1);
                var$1.$platformClass = var$5;
                var$12 = var$1;
                var$5.classObject = var$12;
            }
        }
        var$13 = var$1.$platformClass.$meta.item;
        if (var$13 === null)
            var$5 = null;
        else {
            var$5 = var$13.classObject;
            if (var$5 === null) {
                var$5 = new jl_Class;
                jl_Object__init_0(var$5);
                var$5.$platformClass = var$13;
                var$1 = var$5;
                var$13.classObject = var$1;
            }
        }
        var$10 = var$8 - var$11 | 0;
        if (var$5 === null) {
            var$1 = new jl_NullPointerException;
            jl_RuntimeException__init_1(var$1);
            $rt_throw(var$1);
        }
        if (var$5 === $rt_cls($rt_voidcls()))
            $rt_throw(jl_IllegalArgumentException__init_());
        if (var$10 < 0)
            $rt_throw(jl_NegativeArraySizeException__init_());
        var$12 = jlr_Array_newInstanceImpl(jl_Class_getPlatformClass(var$5), var$10);
        var$10 = var$11;
        while (var$10 < var$8) {
            var$12.data[var$10 - var$11 | 0] = var$7[var$10];
            var$10 = var$10 + 1 | 0;
        }
        jl_Throwable_setStackTrace(var$6, var$12);
        $rt_throw(var$6);
    }
    function igtg_FirstScreen_resize($this, $width, $height) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        var$3 = $this.$fps;
        var$4 = new cbgg_OrthographicCamera;
        var$5 = $width;
        var$6 = $height;
        cbgg_Camera__init_(var$4);
        var$4.$zoom = 1.0;
        var$7 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$4.$tmp = var$7;
        var$4.$viewportWidth = var$5;
        var$4.$viewportHeight = var$6;
        var$4.$near = 0.0;
        cbgg_OrthographicCamera_update(var$4, 1);
        var$3.$cam = var$4;
        var$5 = $width / 2 | 0;
        var$6 = $height / 2 | 0;
        var$7 = var$4.$position1;
        var$5 = var$7.$x2 + var$5;
        var$6 = var$7.$y2 + var$6;
        var$8 = var$7.$z1 + 0.0;
        var$7.$x2 = var$5;
        var$7.$y2 = var$6;
        var$7.$z1 = var$8;
        cbgg_OrthographicCamera_update(var$4, 1);
        var$4 = var$3.$batch;
        var$3 = var$3.$cam.$combined;
        if (var$4.$drawing)
            cbggg_SpriteBatch_flush(var$4);
        cbgm_Matrix4_set(var$4.$projectionMatrix, var$3.$val);
        if (var$4.$drawing)
            cbggg_SpriteBatch_setupMatrices(var$4);
    }
    function igtg_FirstScreen_dispose($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, $$je;
        if ($this.$gasket === null) {
            var$1 = new jl_StringBuilder;
            var$1.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(86));
            jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(490));
            jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(87));
            var$2 = new jl_String;
            var$3 = var$1.$buffer;
            var$4 = var$1.$length;
            jl_String_$callClinit();
            var$5 = $rt_createCharArray(var$4);
            var$2.$characters = var$5;
            jl_System_fastArraycopy(var$3, 0, var$5, 0, var$4);
            var$1 = new k_UninitializedPropertyAccessException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = var$2;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            var$6 = $rt_cls(kji_Intrinsics).$name;
            var$3 = var$1.$stackTrace;
            var$5 = var$3 !== null ? var$3.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$3 = var$5.data;
            var$4 = var$3.length;
            var$7 = (-1);
            var$8 = 0;
            while (var$8 < var$4) {
                if (jl_String_equals(var$6, jl_StackTraceElement_getClassName(var$3[var$8])))
                    var$7 = var$8;
                var$8 = var$8 + 1 | 0;
            }
            var$8 = var$7 + 1 | 0;
            var$6 = var$5.constructor;
            if (var$6 === null)
                var$2 = null;
            else {
                var$2 = var$6.classObject;
                if (var$2 === null) {
                    var$2 = new jl_Class;
                    jl_Object__init_0(var$2);
                    var$2.$platformClass = var$6;
                    var$9 = var$2;
                    var$6.classObject = var$9;
                }
            }
            var$10 = var$2.$platformClass.$meta.item;
            if (var$10 === null)
                var$2 = null;
            else {
                var$2 = var$10.classObject;
                if (var$2 === null) {
                    var$2 = new jl_Class;
                    jl_Object__init_0(var$2);
                    var$2.$platformClass = var$10;
                    var$6 = var$2;
                    var$10.classObject = var$6;
                }
            }
            var$2 = jlr_Array_newInstance(var$2, var$4 - var$8 | 0);
            var$7 = var$8;
            while (var$7 < var$4) {
                var$2.data[var$7 - var$8 | 0] = var$3[var$7];
                var$7 = var$7 + 1 | 0;
            }
            var$1.$stackTrace = var$2.$clone();
            $rt_throw(var$1);
        }
        igtg_Circle_$callClinit();
        var$2 = igtg_Circle_shape.$renderer;
        if (var$2.$ownsShader) {
            var$1 = var$2.$shader;
            if (var$1 !== null)
                cbggg_ShaderProgram_dispose(var$1);
        }
        var$2 = var$2.$mesh;
        var$1 = cbgg_Mesh_meshes;
        var$6 = cbg_Gdx_app;
        if (var$6 === null) {
            var$1 = var$1.$elementData.data[0];
            while (var$1 !== null && var$1.$key !== null) {
                var$1 = var$1.$next;
            }
        } else {
            var$7 = jl_Object_identity(var$6);
            var$3 = var$1.$elementData.data;
            var$1 = var$3[var$7 & (var$3.length - 1 | 0)];
            while (var$1 !== null && !(var$1.$origKeyHash == var$7 && ju_HashMap_areEqualKeys(var$6, var$1.$key))) {
                var$1 = var$1.$next;
            }
        }
        if ((var$1 === null ? null : var$1.$value4) !== null) {
            var$1 = cbgg_Mesh_meshes;
            var$6 = cbg_Gdx_app;
            if (var$6 === null) {
                var$1 = var$1.$elementData.data[0];
                while (var$1 !== null && var$1.$key !== null) {
                    var$1 = var$1.$next;
                }
            } else {
                var$7 = jl_Object_identity(var$6);
                var$3 = var$1.$elementData.data;
                var$1 = var$3[var$7 & (var$3.length - 1 | 0)];
                while (var$1 !== null && !(var$1.$origKeyHash == var$7 && ju_HashMap_areEqualKeys(var$6, var$1.$key))) {
                    var$1 = var$1.$next;
                }
            }
            cbgu_Array_removeValue(var$1 === null ? null : var$1.$value4, var$2, 1);
        }
        var$2.$vertices.$dispose();
        var$1 = var$2.$instances;
        if (var$1 !== null)
            var$1.$dispose();
        a: {
            var$2.$indices.$dispose();
            var$2 = $this.$fps;
            var$1 = var$2.$font;
            if (var$1 !== null)
                try {
                    cbggg_BitmapFont_dispose(var$1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
        }
        b: {
            var$2 = var$2.$batch;
            if (var$2 !== null)
                try {
                    cbggg_SpriteBatch_dispose(var$2);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
        }
    }
    function igtg_FirstScreen_hide($this) {}
    function igtg_FirstScreen_pause($this) {}
    function igtg_FirstScreen_resume($this) {}
    function igtg_FirstScreen__clinit_() {
        var var$1, var$2, var$3, var$4;
        igtg_FirstScreen_Companion = new igtg_FirstScreen$Companion;
        var$1 = new cbgm_RandomXS128;
        var$2 = Long_or(Long_shl(Long_fromInt(4.294967296E9 * $rt_globals.Math.random() + (-2.147483648E9) | 0), 32), Long_fromInt(4.294967296E9 * $rt_globals.Math.random() + (-2.147483648E9) | 0));
        if (Long_eq(var$2, Long_ZERO))
            var$2 = Long_create(0, 2147483648);
        var$3 = Long_mul(Long_xor(var$2, Long_shru(var$2, 33)), Long_create(3981806797, 4283543511));
        var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
        var$4 = Long_xor(var$3, Long_shru(var$3, 33));
        var$3 = Long_mul(Long_xor(var$4, Long_shru(var$4, 33)), Long_create(3981806797, 4283543511));
        var$3 = Long_mul(Long_xor(var$3, Long_shru(var$3, 33)), Long_create(444984403, 3301882366));
        var$3 = Long_xor(var$3, Long_shru(var$3, 33));
        var$1.$seed0 = var$4;
        var$1.$seed1 = var$3;
        igtg_FirstScreen_GLOBAL_RANDOM = var$1;
    }
    var cbgu_ScreenUtils = $rt_classWithoutFields();
    var ju_NoSuchElementException = $rt_classWithoutFields(jl_RuntimeException);
    var cbgu_GdxRuntimeException = $rt_classWithoutFields(jl_RuntimeException);
    function cbgu_GdxRuntimeException__init_0(var_0, var_1) {
        var var_2 = new cbgu_GdxRuntimeException();
        cbgu_GdxRuntimeException__init_1(var_2, var_0, var_1);
        return var_2;
    }
    function cbgu_GdxRuntimeException__init_2(var_0) {
        var var_1 = new cbgu_GdxRuntimeException();
        cbgu_GdxRuntimeException__init_(var_1, var_0);
        return var_1;
    }
    function cbgu_GdxRuntimeException__init_1($this, $message, $cause) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
        $this.$cause = $cause;
    }
    function cbgu_GdxRuntimeException__init_($this, $message) {
        $this.$suppressionEnabled = 1;
        $this.$writableStackTrace = 1;
        $this.$message = $message;
    }
    var otcir_Flags = $rt_classWithoutFields();
    function otcir_Flags_getModifiers($flags, $access) {
        var $modifiers;
        a: {
            $modifiers = 0;
            switch ($access) {
                case 1:
                    $modifiers = 2;
                    break a;
                case 2:
                    $modifiers = 4;
                    break a;
                case 3:
                    $modifiers = 1;
                    break a;
                default:
            }
        }
        $access = $flags >>> 6 | 0;
        return $modifiers | $access & 8 | $flags << 2 & 16 | $access & 32 | ($flags >>> 8 | 0) & 64 | ($flags >>> 5 | 0) & 128 | $flags & 256 | $flags << 8 & 512 | $flags << 10 & 1024 | $flags << 1 & 2048;
    }
    function jur_AbstractCharClass$LazyJavaLowerCase$1() {
        jur_AbstractCharClass.call(this);
        this.$this$037 = null;
    }
    function jur_AbstractCharClass$LazyJavaLowerCase$1_contains($this, $ch) {
        return jl_Character_getType($ch) != 2 ? 0 : 1;
    }
    function jur_AbstractCharClass$LazyJavaUpperCase$1() {
        jur_AbstractCharClass.call(this);
        this.$this$038 = null;
    }
    function jur_AbstractCharClass$LazyJavaUpperCase$1_contains($this, $ch) {
        return jl_Character_getType($ch) != 1 ? 0 : 1;
    }
    function jur_AbstractCharClass$LazyJavaWhitespace$1() {
        jur_AbstractCharClass.call(this);
        this.$this$039 = null;
    }
    function jur_AbstractCharClass$LazyJavaWhitespace$1_contains($this, $ch) {
        a: {
            switch ($ch) {
                case 9:
                case 10:
                case 11:
                case 12:
                case 13:
                case 28:
                case 29:
                case 30:
                case 31:
                    break;
                case 160:
                case 8199:
                case 8239:
                    $ch = 0;
                    break a;
                default:
                    b: {
                        switch (jl_Character_getType($ch)) {
                            case 12:
                            case 13:
                            case 14:
                                break;
                            default:
                                $ch = 0;
                                break b;
                        }
                        $ch = 1;
                    }
                    break a;
            }
            $ch = 1;
        }
        return $ch;
    }
    function jur_AbstractCharClass$LazyJavaMirrored$1() {
        jur_AbstractCharClass.call(this);
        this.$this$040 = null;
    }
    function jur_AbstractCharClass$LazyJavaMirrored$1_contains($this, $ch) {
        return 0;
    }
    function jur_AbstractCharClass$LazyJavaDefined$1() {
        jur_AbstractCharClass.call(this);
        this.$this$041 = null;
    }
    function jur_AbstractCharClass$LazyJavaDefined$1_contains($this, $ch) {
        return !jl_Character_getType($ch) ? 0 : 1;
    }
    function jur_AbstractCharClass$LazyJavaDigit$1() {
        jur_AbstractCharClass.call(this);
        this.$this$042 = null;
    }
    function jur_AbstractCharClass$LazyJavaDigit$1_contains($this, $ch) {
        return jl_Character_getType($ch) != 9 ? 0 : 1;
    }
    function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
        jur_AbstractCharClass.call(this);
        this.$this$043 = null;
    }
    function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains($this, $ch) {
        return jl_Character_isIdentifierIgnorable($ch);
    }
    function jur_AbstractCharClass$LazyJavaISOControl$1() {
        jur_AbstractCharClass.call(this);
        this.$this$044 = null;
    }
    function jur_AbstractCharClass$LazyJavaISOControl$1_contains($this, $ch) {
        a: {
            b: {
                if (!($ch >= 0 && $ch <= 31)) {
                    if ($ch < 127)
                        break b;
                    if ($ch > 159)
                        break b;
                }
                $ch = 1;
                break a;
            }
            $ch = 0;
        }
        return $ch;
    }
    function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
        jur_AbstractCharClass.call(this);
        this.$this$045 = null;
    }
    function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains($this, $ch) {
        a: {
            b: {
                switch (jl_Character_getType($ch)) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 8:
                    case 9:
                    case 10:
                    case 23:
                    case 26:
                        break;
                    case 7:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 24:
                    case 25:
                        break b;
                    default:
                        break b;
                }
                $ch = 1;
                break a;
            }
            $ch = jl_Character_isIdentifierIgnorable($ch);
        }
        return $ch;
    }
    function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
        jur_AbstractCharClass.call(this);
        this.$this$046 = null;
    }
    function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains($this, $ch) {
        a: {
            b: {
                switch (jl_Character_getType($ch)) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 10:
                    case 23:
                    case 26:
                        break;
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 24:
                    case 25:
                        break b;
                    default:
                        break b;
                }
                $ch = 1;
                break a;
            }
            $ch = jl_Character_isIdentifierIgnorable($ch);
        }
        return $ch;
    }
    function jur_AbstractCharClass$LazyJavaLetter$1() {
        jur_AbstractCharClass.call(this);
        this.$this$047 = null;
    }
    function jur_AbstractCharClass$LazyJavaLetter$1_contains($this, $ch) {
        a: {
            switch (jl_Character_getType($ch)) {
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    break;
                default:
                    $ch = 0;
                    break a;
            }
            $ch = 1;
        }
        return $ch;
    }
    function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
        jur_AbstractCharClass.call(this);
        this.$this$048 = null;
    }
    function jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains($this, $ch) {
        a: {
            b: {
                switch (jl_Character_getType($ch)) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 9:
                        break;
                    case 6:
                    case 7:
                    case 8:
                        break b;
                    default:
                        break b;
                }
                $ch = 1;
                break a;
            }
            $ch = 0;
        }
        return $ch;
    }
    function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
        jur_AbstractCharClass.call(this);
        this.$this$049 = null;
    }
    function jur_AbstractCharClass$LazyJavaSpaceChar$1_contains($this, $ch) {
        a: {
            switch (jl_Character_getType($ch)) {
                case 12:
                case 13:
                case 14:
                    break;
                default:
                    $ch = 0;
                    break a;
            }
            $ch = 1;
        }
        return $ch;
    }
    function jur_AbstractCharClass$LazyJavaTitleCase$1() {
        jur_AbstractCharClass.call(this);
        this.$this$050 = null;
    }
    function jur_AbstractCharClass$LazyJavaTitleCase$1_contains($this, $ch) {
        return jl_Character_getType($ch) != 3 ? 0 : 1;
    }
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
        jur_AbstractCharClass.call(this);
        this.$this$051 = null;
    }
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains($this, $ch) {
        a: {
            b: {
                switch (jl_Character_getType($ch)) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 6:
                    case 8:
                    case 9:
                    case 10:
                    case 23:
                        break;
                    case 7:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                        break b;
                    default:
                        break b;
                }
                $ch = 1;
                break a;
            }
            $ch = jl_Character_isIdentifierIgnorable($ch);
        }
        return $ch;
    }
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
        jur_AbstractCharClass.call(this);
        this.$this$052 = null;
    }
    function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains($this, $ch) {
        a: {
            b: {
                switch (jl_Character_getType($ch)) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                    case 10:
                        break;
                    case 6:
                    case 7:
                    case 8:
                    case 9:
                        break b;
                    default:
                        break b;
                }
                $ch = 1;
                break a;
            }
            $ch = jl_Character_isIdentifierIgnorable($ch);
        }
        return $ch;
    }
    function jur_UnicodeCategory() {
        jur_AbstractCharClass.call(this);
        this.$category0 = 0;
    }
    function jur_UnicodeCategory_contains($this, $ch) {
        return $this.$alt0 ^ ($this.$category0 != jl_Character_getType($ch & 65535) ? 0 : 1);
    }
    var jur_UnicodeCategoryScope = $rt_classWithoutFields(jur_UnicodeCategory);
    function jur_UnicodeCategoryScope_contains($this, $ch) {
        return $this.$alt0 ^ (!($this.$category0 >> jl_Character_getType($ch & 65535) & 1) ? 0 : 1);
    }
    function jl_Thread$start$lambda$_4_0() {
        jl_Object.call(this);
        this.$_01 = null;
    }
    function jl_Thread$start$lambda$_4_0_run(var$0) {
        jl_Thread_runThread(var$0.$_01);
    }
    var cbgur_ArrayReflection = $rt_classWithoutFields();
    var cgxgbtp_Preloader$12 = $rt_classWithoutFields();
    var cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = null;
    function cgxgbtp_Preloader$12_$callClinit() {
        cgxgbtp_Preloader$12_$callClinit = $rt_eraseClinit(cgxgbtp_Preloader$12);
        cgxgbtp_Preloader$12__clinit_();
    }
    function cgxgbtp_Preloader$12__clinit_() {
        var var$1, var$2;
        cgxgbtp_AssetType_$callClinit();
        var$1 = $rt_createIntArray((cgxgbtp_AssetType_$VALUES.$clone()).data.length);
        var$2 = var$1.data;
        cgxgbtp_Preloader$12_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = var$1;
        var$2[cgxgbtp_AssetType_Text.$ordinal] = 1;
        var$2[cgxgbtp_AssetType_Image.$ordinal] = 2;
        var$2[cgxgbtp_AssetType_Binary.$ordinal] = 3;
        var$2[cgxgbtp_AssetType_Audio.$ordinal] = 4;
        var$2[cgxgbtp_AssetType_Directory.$ordinal] = 5;
    }
    var ju_ConcurrentModificationException = $rt_classWithoutFields(jl_RuntimeException);
    function igtg_FrameRate() {
        var a = this; jl_Object.call(a);
        a.$lastTimeCounted = Long_ZERO;
        a.$isRendered = 0;
        a.$sinceChange = 0.0;
        a.$frameRate = 0.0;
        a.$font = null;
        a.$batch = null;
        a.$cam = null;
    }
    function igtg_FrameRate__init_() {
        var var_0 = new igtg_FrameRate();
        igtg_FrameRate__init_0(var_0);
        return var_0;
    }
    function igtg_FrameRate__init_0($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
        $this.$isRendered = 1;
        $this.$lastTimeCounted = jl_System_currentTimeMillis();
        $this.$frameRate = cbg_Gdx_graphics.$fps0 | 0;
        var$1 = new cbggg_BitmapFont;
        var$2 = cbg_Gdx_files;
        var$3 = new cgxgbt_TeaFileHandle;
        var$4 = var$2.$preloader;
        cbg_Files$FileType_$callClinit();
        cgxgbt_TeaFileHandle__init_0(var$3, var$4, $rt_s(491), cbg_Files$FileType_Classpath);
        var$5 = cbg_Gdx_files;
        var$4 = cgxgbt_TeaFileHandle__init_(var$5.$preloader, $rt_s(492), cbg_Files$FileType_Classpath);
        var$6 = cbggg_BitmapFont$BitmapFontData__init_(var$3, 0);
        var$3 = new cbggg_TextureRegion;
        var$7 = new cbgg_Texture;
        var$2 = null;
        var$8 = cbggg_FileTextureData__init_(var$4, cbgg_Pixmap__init_(var$4), var$2, 0);
        var$2 = cbg_Gdx_gl;
        var$5 = var$2.$gl.createTexture();
        var$9 = var$2.$nextTextureId;
        var$2.$nextTextureId = var$9 + 1 | 0;
        cbgu_IntMap_put(var$2.$textures, var$9, otji_JSWrapper_wrap(var$5));
        cbgg_Texture$TextureFilter_$callClinit();
        var$2 = cbgg_Texture$TextureFilter_Nearest;
        var$7.$minFilter = var$2;
        var$7.$magFilter = var$2;
        cbgg_Texture$TextureWrap_$callClinit();
        var$2 = cbgg_Texture$TextureWrap_ClampToEdge;
        var$7.$uWrap = var$2;
        var$7.$vWrap = var$2;
        var$7.$anisotropicFilterLevel = 1.0;
        var$7.$glTarget = 3553;
        var$7.$glHandle = var$9;
        cbgg_Texture_load(var$7, var$8);
        var$2 = cbg_Gdx_app;
        var$5 = ju_HashMap_entryByKey(cbgg_Texture_managedTextures, var$2);
        var$5 = var$5 === null ? null : var$5.$value4;
        if (var$5 === null)
            var$5 = cbgu_Array__init_1(1, 16);
        cbgu_Array_add(var$5, var$7);
        ju_HashMap_putImpl(cbgg_Texture_managedTextures, var$2, var$5);
        var$3.$texture = var$7;
        var$2 = var$7.$data0;
        cbggg_TextureRegion_setRegion(var$3, 0, 0, var$2.$width3, var$2.$height1);
        var$10 = $rt_createArray(cbggg_TextureRegion, 1);
        var$11 = var$10.data;
        var$11[0] = var$3;
        var$4 = new cbgu_Array;
        var$9 = var$11.length;
        var$5 = var$10.constructor;
        if (var$5 === null)
            var$2 = null;
        else {
            var$2 = var$5.classObject;
            if (var$2 === null)
                var$2 = jl_Class__init_(var$5);
        }
        var$5 = var$2.$platformClass.$meta.item;
        if (var$5 === null)
            var$2 = null;
        else {
            var$2 = var$5.classObject;
            if (var$2 === null)
                var$2 = jl_Class__init_(var$5);
        }
        var$4.$ordered = 1;
        var$2 = jlr_Array_newInstance(var$2, var$9);
        var$4.$items = var$2;
        var$4.$size = var$9;
        jl_System_arraycopy(var$10, 0, var$2, 0, var$9);
        cbggg_BitmapFont__init_0(var$1, var$6, var$4, 1);
        var$1.$ownsTexture = 1;
        $this.$font = var$1;
        var$1 = new cbggg_SpriteBatch;
        cbggg_SpriteBatch_$callClinit();
        cbggg_SpriteBatch__init_(var$1, 1000, null);
        $this.$batch = var$1;
        var$2 = new cbgg_OrthographicCamera;
        var$12 = cbg_Gdx_graphics.$canvas0.width;
        var$13 = cbg_Gdx_graphics.$canvas0.height;
        cbgg_Camera__init_(var$2);
        var$2.$zoom = 1.0;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$2.$tmp = var$1;
        var$2.$viewportWidth = var$12;
        var$2.$viewportHeight = var$13;
        var$2.$near = 0.0;
        cbgg_OrthographicCamera_update(var$2, 1);
        $this.$cam = var$2;
    }
    function igtg_FrameRate_update($this) {
        var var$1, $delta, var$3;
        if (!$this.$isRendered)
            return;
        var$1 = $this.$lastTimeCounted;
        $delta = Long_sub(jl_System_currentTimeMillis(), var$1);
        $this.$lastTimeCounted = jl_System_currentTimeMillis();
        var$3 = $this.$sinceChange + Long_toNumber($delta);
        $this.$sinceChange = var$3;
        if (var$3 >= 1000.0) {
            $this.$sinceChange = 0.0;
            $this.$frameRate = cbg_Gdx_graphics.$fps0 | 0;
        }
    }
    function igtg_FrameRate_render($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, $$je;
        if (!$this.$isRendered)
            return;
        cbggg_SpriteBatch_begin($this.$batch);
        var$1 = $this.$font;
        var$2 = $this.$batch;
        var$3 = $this.$frameRate | 0;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(493));
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$9 = cbg_Gdx_graphics.$canvas0.height - 3 | 0;
        cbggg_BitmapFontCache_clear(var$1.$cache);
        var$10 = var$1.$cache;
        var$11 = var$5.$characters.data.length;
        var$12 = null;
        cbgu_Pools_$callClinit();
        var$4 = cbgu_Pools_typePools;
        var$7 = cbgu_ObjectMap_locateKey(var$4, $rt_cls(cbggg_GlyphLayout));
        var$13 = var$7 < 0 ? null : var$4.$valueTable.data[var$7];
        if (var$13 === null) {
            var$13 = new cbgu_ReflectionPool;
            jl_Object__init_0(var$13);
            var$13.$freeObjects = cbgu_Array__init_1(0, 4);
            var$13.$max = 100;
            a: {
                try {
                    var$4 = cbgur_ClassReflection_getConstructor($rt_cls(cbggg_GlyphLayout), null);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                    } else {
                        throw $$e;
                    }
                }
                try {
                    var$4 = cbgur_ClassReflection_getDeclaredConstructor($rt_cls(cbggg_GlyphLayout), null);
                    cbgur_Constructor_setAccessible(var$4, 1);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof cbgur_ReflectionException) {
                    } else {
                        throw $$e;
                    }
                }
                var$4 = null;
            }
            var$13.$constructor = var$4;
            if (var$4 === null) {
                var$4 = new jl_RuntimeException;
                var$1 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_(var$1);
                jl_AbstractStringBuilder_append1(var$1, $rt_s(28));
                if ($rt_cls(cbggg_GlyphLayout).$name === null)
                    $rt_cls(cbggg_GlyphLayout).$name = otp_Platform_getName($rt_cls(cbggg_GlyphLayout).$platformClass);
                jl_AbstractStringBuilder_append1(var$1, $rt_cls(cbggg_GlyphLayout).$name);
                jl_Exception__init_4(var$4, jl_AbstractStringBuilder_toString(var$1));
                $rt_throw(var$4);
            }
            cbgu_ObjectMap_put(cbgu_Pools_typePools, $rt_cls(cbggg_GlyphLayout), var$13);
        }
        b: {
            var$4 = var$13.$freeObjects;
            var$3 = var$4.$size;
            if (var$3) {
                if (!var$3) {
                    var$4 = new jl_IllegalStateException;
                    jl_Exception__init_4(var$4, $rt_s(43));
                    $rt_throw(var$4);
                }
                var$3 = var$3 - 1 | 0;
                var$4.$size = var$3;
                var$6 = var$4.$items.data;
                var$4 = var$6[var$3];
                var$6[var$3] = null;
            } else
                try {
                    var$4 = cbgur_Constructor_newInstance(var$13.$constructor, null);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        var$1 = $$je;
                        var$2 = new cbgu_GdxRuntimeException;
                        var$4 = new jl_StringBuilder;
                        jl_AbstractStringBuilder__init_2(var$4, 16);
                        jl_StringBuilder_insert(var$4, var$4.$length, $rt_s(44));
                        var$5 = var$13.$constructor.$constructor0.$declaringClass;
                        if (var$5.$name === null)
                            var$5.$name = $rt_str(var$5.$platformClass.$meta.name);
                        var$14 = var$5.$name;
                        jl_StringBuilder_insert(var$4, var$4.$length, var$14);
                        jl_Exception__init_2(var$2, jl_String__init_1(var$4.$buffer, 0, var$4.$length), var$1);
                        $rt_throw(var$2);
                    } else {
                        throw $$e;
                    }
                }
        }
        var$4 = var$4;
        cbgu_Array_add(var$10.$pooledLayouts, var$4);
        cbggg_GlyphLayout_setText(var$4, var$10.$font0, var$5, 0, var$11, var$10.$color0, 0.0, 8, 0, var$12);
        cbggg_BitmapFontCache_addToCache(var$10, var$4, 3.0, var$9 + var$10.$font0.$data.$ascent);
        cbggg_BitmapFontCache_draw(var$1.$cache, var$2);
        cbggg_SpriteBatch_end($this.$batch);
    }
    var otcic_StderrOutputStream = $rt_classWithoutFields(otcic_ConsoleOutputStream);
    var otcic_StderrOutputStream_INSTANCE = null;
    function otcic_StderrOutputStream_write($this, $b, $off, $len) {
        var var$4;
        var$4 = 0;
        while (var$4 < $len) {
            $rt_putStderr($b.data[var$4 + $off | 0] & 255);
            var$4 = var$4 + 1 | 0;
        }
    }
    function otcic_StderrOutputStream__clinit_() {
        var var$1;
        var$1 = new otcic_StderrOutputStream;
        var$1.$buffer0 = $rt_createByteArray(1);
        otcic_StderrOutputStream_INSTANCE = var$1;
    }
    function jl_Double() {
        jl_Number.call(this);
        this.$value7 = 0.0;
    }
    var jl_Double_TYPE = null;
    function jl_Double_floatValue($this) {
        return $this.$value7;
    }
    function jl_Double_valueOf($d) {
        var var$2;
        var$2 = new jl_Double;
        var$2.$value7 = $d;
        return var$2;
    }
    function jl_Double__clinit_() {
        jl_Double_TYPE = $rt_cls($rt_doublecls());
    }
    var jl_AbstractStringBuilder$Constants = $rt_classWithoutFields();
    var jl_AbstractStringBuilder$Constants_intPowersOfTen = null;
    var jl_AbstractStringBuilder$Constants_longPowersOfTen = null;
    var jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null;
    var jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null;
    var jl_AbstractStringBuilder$Constants_floatAnalysisResult = null;
    function jl_AbstractStringBuilder$Constants__clinit_() {
        jl_AbstractStringBuilder$Constants_intPowersOfTen = $rt_createIntArrayFromData([1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000]);
        jl_AbstractStringBuilder$Constants_longPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(1000), Long_fromInt(10000), Long_fromInt(100000), Long_fromInt(1000000), Long_fromInt(10000000), Long_fromInt(100000000), Long_fromInt(1000000000), Long_create(1410065408, 2), Long_create(1215752192, 23), Long_create(3567587328, 232), Long_create(1316134912, 2328), Long_create(276447232, 23283), Long_create(2764472320, 232830), Long_create(1874919424, 2328306),
        Long_create(1569325056, 23283064), Long_create(2808348672, 232830643)]);
        jl_AbstractStringBuilder$Constants_longLogPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(10000), Long_fromInt(100000000), Long_create(1874919424, 2328306)]);
        jl_AbstractStringBuilder$Constants_doubleAnalysisResult = new otcit_DoubleAnalyzer$Result;
        jl_AbstractStringBuilder$Constants_floatAnalysisResult = new otcit_FloatAnalyzer$Result;
    }
    var otcit_DoubleAnalyzer = $rt_classWithoutFields();
    var otcit_DoubleAnalyzer_MAX_MANTISSA = Long_ZERO;
    var otcit_DoubleAnalyzer_mantissa10Table = null;
    var otcit_DoubleAnalyzer_exp10Table = null;
    function otcit_DoubleAnalyzer_analyze($d, $result) {
        var $bits, $mantissa, $exponent, var$6, $decExponent, $posCmp, $mantissaShift, $decMantissa, $decMantissaLow, $decMantissaHi, $lowerPos, $lowerPos_0, $upperPos, $upperPos_0;
        $bits = !($rt_globals.isNaN($d) ? 1 : 0) ? $rt_doubleToRawLongBits($d) : Long_create(0, 2146959360);
        $result.$sign1 = Long_eq(Long_and($bits, Long_create(0, 2147483648)), Long_ZERO) ? 0 : 1;
        $mantissa = Long_and($bits, Long_create(4294967295, 1048575));
        $exponent = Long_lo(Long_shr($bits, 52)) & 2047;
        if (Long_eq($mantissa, Long_ZERO) && !$exponent) {
            $result.$mantissa0 = Long_ZERO;
            $result.$exponent0 = 0;
            return;
        }
        if ($exponent)
            $mantissa = Long_or($mantissa, Long_create(0, 1048576));
        else {
            $mantissa = Long_shl($mantissa, 1);
            while (Long_eq(Long_and($mantissa, Long_create(0, 1048576)), Long_ZERO)) {
                $mantissa = Long_shl($mantissa, 1);
                $exponent = $exponent + (-1) | 0;
            }
        }
        var$6 = otcit_DoubleAnalyzer_exp10Table;
        $decExponent = ju_Arrays_binarySearch0(var$6, 0, var$6.data.length, $exponent << 16 >> 16);
        if ($decExponent < 0)
            $decExponent =  -$decExponent | 0;
        var$6 = otcit_DoubleAnalyzer_exp10Table.data;
        $posCmp = $decExponent + 1 | 0;
        $mantissaShift = 12 + ($exponent - var$6[$posCmp] | 0) | 0;
        $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight($mantissa, otcit_DoubleAnalyzer_mantissa10Table.data[$posCmp], $mantissaShift);
        if (Long_le($decMantissa, otcit_DoubleAnalyzer_MAX_MANTISSA)) {
            while (jl_Long_compareUnsigned($decMantissa, otcit_DoubleAnalyzer_MAX_MANTISSA) <= 0) {
                $decExponent = $decExponent + (-1) | 0;
                $decMantissa = Long_add(Long_mul($decMantissa, Long_fromInt(10)), Long_fromInt(9));
            }
            var$6 = otcit_DoubleAnalyzer_exp10Table.data;
            $posCmp = $decExponent + 1 | 0;
            $mantissaShift = 12 + ($exponent - var$6[$posCmp] | 0) | 0;
            $decMantissa = otcit_DoubleAnalyzer_mulAndShiftRight($mantissa, otcit_DoubleAnalyzer_mantissa10Table.data[$posCmp], $mantissaShift);
        }
        $mantissa = Long_shl($mantissa, 1);
        $bits = Long_add($mantissa, Long_fromInt(1));
        var$6 = otcit_DoubleAnalyzer_mantissa10Table.data;
        $posCmp = $decExponent + 1 | 0;
        $decMantissaLow = var$6[$posCmp];
        $exponent = $mantissaShift - 1 | 0;
        $decMantissaHi = otcit_DoubleAnalyzer_mulAndShiftRight($bits, $decMantissaLow, $exponent);
        $decMantissaLow = otcit_DoubleAnalyzer_mulAndShiftRight(Long_sub($mantissa, Long_fromInt(1)), otcit_DoubleAnalyzer_mantissa10Table.data[$posCmp], $exponent);
        $lowerPos = Long_fromInt(1);
        while (true) {
            $lowerPos_0 = Long_mul($lowerPos, Long_fromInt(10));
            if (jl_Long_compareUnsigned(jl_Long_divideUnsigned($decMantissa, $lowerPos_0), jl_Long_divideUnsigned($decMantissaLow, $lowerPos_0)) <= 0)
                break;
            $lowerPos = $lowerPos_0;
        }
        $upperPos = Long_fromInt(1);
        while (true) {
            $upperPos_0 = Long_mul($upperPos, Long_fromInt(10));
            if (jl_Long_compareUnsigned(jl_Long_divideUnsigned($decMantissa, $upperPos_0), jl_Long_divideUnsigned($decMantissaHi, $upperPos_0)) >= 0)
                break;
            $upperPos = $upperPos_0;
        }
        $posCmp = jl_Long_compareUnsigned($lowerPos, $upperPos);
        $mantissa = $posCmp > 0 ? Long_mul(jl_Long_divideUnsigned($decMantissa, $lowerPos), $lowerPos) : $posCmp < 0 ? Long_add(Long_mul(jl_Long_divideUnsigned($decMantissa, $upperPos), $upperPos), $upperPos) : Long_mul(jl_Long_divideUnsigned(Long_add($decMantissa, Long_div($upperPos, Long_fromInt(2))), $upperPos), $upperPos);
        if (jl_Long_compareUnsigned($mantissa, Long_create(2808348672, 232830643)) >= 0)
            while (true) {
                $decExponent = $decExponent + 1 | 0;
                $mantissa = jl_Long_divideUnsigned($mantissa, Long_fromInt(10));
                if (jl_Long_compareUnsigned($mantissa, Long_create(2808348672, 232830643)) < 0)
                    break;
            }
        else if (jl_Long_compareUnsigned($mantissa, Long_create(1569325056, 23283064)) < 0) {
            $decExponent = $decExponent + (-1) | 0;
            $mantissa = Long_mul($mantissa, Long_fromInt(10));
        }
        $result.$mantissa0 = $mantissa;
        $result.$exponent0 = $decExponent - 330 | 0;
    }
    function otcit_DoubleAnalyzer_mulAndShiftRight($a, $b, $shift) {
        var $a1, $a2, $a3, $a4, $b1, $b2, $b3, $b4;
        $a1 = Long_and($a, Long_fromInt(65535));
        $a2 = Long_and(Long_shru($a, 16), Long_fromInt(65535));
        $a3 = Long_and(Long_shru($a, 32), Long_fromInt(65535));
        $a4 = Long_and(Long_shru($a, 48), Long_fromInt(65535));
        $b1 = Long_and($b, Long_fromInt(65535));
        $b2 = Long_and(Long_shru($b, 16), Long_fromInt(65535));
        $b3 = Long_and(Long_shru($b, 32), Long_fromInt(65535));
        $b4 = Long_and(Long_shru($b, 48), Long_fromInt(65535));
        return Long_add(Long_add(Long_add(Long_shl(Long_mul($b4, $a4), 32 + $shift | 0), Long_shl(Long_add(Long_mul($b4, $a3), Long_mul($b3, $a4)), 16 + $shift | 0)), Long_shl(Long_add(Long_add(Long_mul($b4, $a2), Long_mul($b3, $a3)), Long_mul($b2, $a4)), $shift)), Long_shru(Long_add(Long_add(Long_add(Long_mul($b3, $a1), Long_mul($b2, $a2)), Long_mul($b1, $a3)), Long_shl(Long_add(Long_add(Long_add(Long_mul($b4, $a1), Long_mul($b3, $a2)), Long_mul($b2, $a3)), Long_mul($b1, $a4)), 16)), 32 - $shift | 0));
    }
    function otcit_DoubleAnalyzer__clinit_() {
        otcit_DoubleAnalyzer_MAX_MANTISSA = jl_Long_divideUnsigned(Long_fromInt(-1), Long_fromInt(10));
        otcit_DoubleAnalyzer_mantissa10Table = $rt_createLongArrayFromData([Long_create(3251292512, 2194092222), Long_create(1766094183, 3510547556), Long_create(553881887, 2808438045), Long_create(443105509, 2246750436), Long_create(3285949193, 3594800697), Long_create(910772436, 2875840558), Long_create(2446604867, 2300672446), Long_create(2196580869, 3681075914), Long_create(2616258154, 2944860731), Long_create(1234013064, 2355888585), Long_create(1974420903, 3769421736), Long_create(720543263, 3015537389),
        Long_create(1435428070, 2412429911), Long_create(578697993, 3859887858), Long_create(2180945313, 3087910286), Long_create(885762791, 2470328229), Long_create(3135207384, 3952525166), Long_create(1649172448, 3162020133), Long_create(3037324877, 2529616106), Long_create(3141732885, 4047385770), Long_create(2513386308, 3237908616), Long_create(1151715587, 2590326893), Long_create(983751480, 4144523029), Long_create(1645994643, 3315618423), Long_create(3034782633, 2652494738), Long_create(3996658754, 4243991581),
        Long_create(2338333544, 3395193265), Long_create(1870666835, 2716154612), Long_create(4073513845, 2172923689), Long_create(3940641775, 3476677903), Long_create(575533043, 2781342323), Long_create(2178413352, 2225073858), Long_create(2626467905, 3560118173), Long_create(3819161242, 2848094538), Long_create(478348616, 2278475631), Long_create(3342338164, 3645561009), Long_create(3532863990, 2916448807), Long_create(1108304273, 2333159046), Long_create(55299919, 3733054474), Long_create(903233395, 2986443579),
        Long_create(1581580175, 2389154863), Long_create(1671534821, 3822647781), Long_create(478234397, 3058118225), Long_create(382587518, 2446494580), Long_create(612140029, 3914391328), Long_create(2207698941, 3131513062), Long_create(48172235, 2505210450), Long_create(77075576, 4008336720), Long_create(61660460, 3206669376), Long_create(3485302205, 2565335500), Long_create(1281516232, 4104536801), Long_create(166219527, 3283629441), Long_create(3568949458, 2626903552), Long_create(2274345296, 4203045684),
        Long_create(2678469696, 3362436547), Long_create(424788838, 2689949238), Long_create(2057817989, 2151959390), Long_create(3292508783, 3443135024), Long_create(3493000485, 2754508019), Long_create(3653393847, 2203606415), Long_create(1550462860, 3525770265), Long_create(1240370288, 2820616212), Long_create(3569276608, 2256492969), Long_create(3133862195, 3610388751), Long_create(1648096297, 2888311001), Long_create(459483578, 2310648801), Long_create(3312154103, 3697038081), Long_create(1790729823, 2957630465),
        Long_create(1432583858, 2366104372), Long_create(3151127633, 3785766995), Long_create(2520902106, 3028613596), Long_create(1157728226, 2422890877), Long_create(2711358621, 3876625403), Long_create(3887073815, 3101300322), Long_create(1391672133, 2481040258), Long_create(1367681954, 3969664413), Long_create(2812132482, 3175731530), Long_create(2249705985, 2540585224), Long_create(1022549199, 4064936359), Long_create(1677032818, 3251949087), Long_create(3918606632, 2601559269), Long_create(3692790234, 4162494831),
        Long_create(2095238728, 3329995865), Long_create(1676190982, 2663996692), Long_create(3540899031, 4262394707), Long_create(1114732307, 3409915766), Long_create(32792386, 2727932613), Long_create(1744220827, 2182346090), Long_create(2790753324, 3491753744), Long_create(3091596118, 2793402995), Long_create(2473276894, 2234722396), Long_create(2239256113, 3575555834), Long_create(2650398349, 2860444667), Long_create(402331761, 2288355734), Long_create(2361717736, 3661369174), Long_create(2748367648, 2929095339),
        Long_create(3057687578, 2343276271), Long_create(3174313206, 3749242034), Long_create(3398444024, 2999393627), Long_create(1000768301, 2399514902), Long_create(2460222741, 3839223843), Long_create(3686165111, 3071379074), Long_create(3807925548, 2457103259), Long_create(3515700499, 3931365215), Long_create(2812560399, 3145092172), Long_create(532061401, 2516073738), Long_create(4287272078, 4025717980), Long_create(3429817663, 3220574384), Long_create(3602847589, 2576459507), Long_create(2328582306, 4122335212),
        Long_create(144878926, 3297868170), Long_create(115903141, 2638294536), Long_create(2762425404, 4221271257), Long_create(491953404, 3377017006), Long_create(3829536560, 2701613604), Long_create(3922622707, 2161290883), Long_create(1122235577, 3458065414), Long_create(1756781920, 2766452331), Long_create(546432077, 2213161865), Long_create(874291324, 3541058984), Long_create(1558426518, 2832847187), Long_create(3823721592, 2266277749), Long_create(3540974170, 3626044399), Long_create(3691772795, 2900835519),
        Long_create(3812411695, 2320668415), Long_create(1804891416, 3713069465), Long_create(1443913133, 2970455572), Long_create(3732110884, 2376364457), Long_create(2535403578, 3802183132), Long_create(310335944, 3041746506), Long_create(3684242592, 2433397204), Long_create(3317807769, 3893435527), Long_create(936259297, 3114748422), Long_create(3325987815, 2491798737), Long_create(1885606668, 3986877980), Long_create(1508485334, 3189502384), Long_create(2065781726, 2551601907), Long_create(4164244222, 4082563051),
        Long_create(2472401918, 3266050441), Long_create(1118928075, 2612840353), Long_create(931291461, 4180544565), Long_create(745033169, 3344435652), Long_create(3173006913, 2675548521), Long_create(3358824142, 4280877634), Long_create(3546052773, 3424702107), Long_create(1118855300, 2739761686), Long_create(36090780, 2191809349), Long_create(1775732167, 3506894958), Long_create(3138572652, 2805515966), Long_create(1651864662, 2244412773), Long_create(1783990001, 3591060437), Long_create(4004172378, 2872848349),
        Long_create(4062331362, 2298278679), Long_create(3922749802, 3677245887), Long_create(1420212923, 2941796710), Long_create(1136170338, 2353437368), Long_create(958879082, 3765499789), Long_create(1626096725, 3012399831), Long_create(441883920, 2409919865), Long_create(707014273, 3855871784), Long_create(1424604878, 3084697427), Long_create(3716664280, 2467757941), Long_create(4228675929, 3948412706), Long_create(2523947284, 3158730165), Long_create(2019157827, 2526984132), Long_create(4089645983, 4043174611),
        Long_create(2412723327, 3234539689), Long_create(2789172121, 2587631751), Long_create(2744688475, 4140210802), Long_create(477763862, 3312168642), Long_create(2959191467, 2649734913), Long_create(3875712888, 4239575861), Long_create(2241576851, 3391660689), Long_create(2652254940, 2713328551), Long_create(1262810493, 2170662841), Long_create(302509870, 3473060546), Long_create(3677981733, 2778448436), Long_create(2083391927, 2222758749), Long_create(756446706, 3556413999), Long_create(1464150824, 2845131199),
        Long_create(2030314118, 2276104959), Long_create(671522212, 3641767935), Long_create(537217769, 2913414348), Long_create(2147761134, 2330731478), Long_create(2577424355, 3729170365), Long_create(2061939484, 2983336292), Long_create(4226531965, 2386669033), Long_create(1608490388, 3818670454), Long_create(2145785770, 3054936363), Long_create(3434615534, 2443949090), Long_create(1200417559, 3910318545), Long_create(960334047, 3128254836), Long_create(4204241074, 2502603868), Long_create(1572824964, 4004166190),
        Long_create(1258259971, 3203332952), Long_create(3583588354, 2562666361), Long_create(4015754449, 4100266178), Long_create(635623181, 3280212943), Long_create(2226485463, 2624170354), Long_create(985396364, 4198672567), Long_create(3365297469, 3358938053), Long_create(115257597, 2687150443), Long_create(1810192996, 2149720354), Long_create(319328417, 3439552567), Long_create(2832443111, 2751642053), Long_create(3983941407, 2201313642), Long_create(2938332415, 3522101828), Long_create(4068652850, 2817681462),
        Long_create(1536935362, 2254145170), Long_create(2459096579, 3606632272), Long_create(249290345, 2885305818), Long_create(1917419194, 2308244654), Long_create(490890333, 3693191447), Long_create(2969692644, 2954553157), Long_create(657767197, 2363642526), Long_create(3629407892, 3781828041), Long_create(2044532855, 3025462433), Long_create(3353613202, 2420369946), Long_create(3647794205, 3872591914), Long_create(3777228823, 3098073531), Long_create(2162789599, 2478458825), Long_create(3460463359, 3965534120),
        Long_create(2768370687, 3172427296), Long_create(1355703090, 2537941837), Long_create(3028118404, 4060706939), Long_create(3281488183, 3248565551), Long_create(1766197087, 2598852441), Long_create(1107928421, 4158163906), Long_create(27349277, 3326531125), Long_create(21879422, 2661224900), Long_create(35007075, 4257959840), Long_create(28005660, 3406367872), Long_create(2599384905, 2725094297), Long_create(361521006, 2180075438), Long_create(4014407446, 3488120700), Long_create(3211525957, 2790496560),
        Long_create(2569220766, 2232397248), Long_create(3251759766, 3571835597), Long_create(883420894, 2857468478), Long_create(2424723634, 2285974782), Long_create(443583977, 3657559652), Long_create(2931847559, 2926047721), Long_create(1486484588, 2340838177), Long_create(3237368801, 3745341083), Long_create(12914663, 2996272867), Long_create(2587312108, 2397018293), Long_create(3280705914, 3835229269), Long_create(3483558190, 3068183415), Long_create(2786846552, 2454546732), Long_create(1022980646, 3927274772),
        Long_create(3395364895, 3141819817), Long_create(998304997, 2513455854), Long_create(3315274914, 4021529366), Long_create(1793226472, 3217223493), Long_create(3152568096, 2573778794), Long_create(2467128576, 4118046071), Long_create(1114709402, 3294436857), Long_create(3468747899, 2635549485), Long_create(1255029343, 4216879177), Long_create(3581003852, 3373503341), Long_create(2005809622, 2698802673), Long_create(3322634616, 2159042138), Long_create(162254630, 3454467422), Long_create(2706784082, 2763573937),
        Long_create(447440347, 2210859150), Long_create(715904555, 3537374640), Long_create(572723644, 2829899712), Long_create(3035159293, 2263919769), Long_create(2279274491, 3622271631), Long_create(964426134, 2897817305), Long_create(771540907, 2318253844), Long_create(2952452370, 3709206150), Long_create(2361961896, 2967364920), Long_create(1889569516, 2373891936), Long_create(1305324308, 3798227098), Long_create(2762246365, 3038581678), Long_create(3927784010, 2430865342), Long_create(2848480580, 3889384548),
        Long_create(3996771382, 3111507638), Long_create(620436728, 2489206111), Long_create(3569679143, 3982729777), Long_create(1137756396, 3186183822), Long_create(3487185494, 2548947057), Long_create(2143522954, 4078315292), Long_create(4291798741, 3262652233), Long_create(856458615, 2610121787), Long_create(2229327243, 4176194859), Long_create(2642455254, 3340955887), Long_create(395977285, 2672764710), Long_create(633563656, 4276423536), Long_create(3942824761, 3421138828), Long_create(577279431, 2736911063),
        Long_create(2179810463, 2189528850), Long_create(3487696741, 3503246160), Long_create(2790157393, 2802596928), Long_create(3950112833, 2242077542), Long_create(2884206696, 3587324068), Long_create(4025352275, 2869859254), Long_create(4079275279, 2295887403), Long_create(1372879692, 3673419846), Long_create(239310294, 2938735877), Long_create(2768428613, 2350988701), Long_create(2711498862, 3761581922), Long_create(451212171, 3009265538), Long_create(2078956655, 2407412430), Long_create(3326330649, 3851859888),
        Long_create(84084141, 3081487911), Long_create(3503241150, 2465190328), Long_create(451225085, 3944304526), Long_create(3796953905, 3155443620), Long_create(3037563124, 2524354896), Long_create(3142114080, 4038967834), Long_create(3372684723, 3231174267), Long_create(980160860, 2584939414), Long_create(3286244294, 4135903062), Long_create(911008517, 3308722450), Long_create(728806813, 2646977960), Long_create(1166090902, 4235164736), Long_create(73879262, 3388131789), Long_create(918096869, 2710505431),
        Long_create(4170451332, 2168404344), Long_create(4095741754, 3469446951), Long_create(2417599944, 2775557561), Long_create(1075086496, 2220446049), Long_create(3438125312, 3552713678), Long_create(173519872, 2842170943), Long_create(1856802816, 2273736754), Long_create(393904128, 3637978807), Long_create(2892103680, 2910383045), Long_create(2313682944, 2328306436), Long_create(1983905792, 3725290298), Long_create(3305111552, 2980232238), Long_create(67108864, 2384185791), Long_create(2684354560, 3814697265),
        Long_create(2147483648, 3051757812), Long_create(0, 2441406250), Long_create(0, 3906250000), Long_create(0, 3125000000), Long_create(0, 2500000000), Long_create(0, 4000000000), Long_create(0, 3200000000), Long_create(0, 2560000000), Long_create(0, 4096000000), Long_create(0, 3276800000), Long_create(0, 2621440000), Long_create(0, 4194304000), Long_create(0, 3355443200), Long_create(0, 2684354560), Long_create(0, 2147483648), Long_create(3435973836, 3435973836), Long_create(1889785610, 2748779069), Long_create(2370821947, 2199023255),
        Long_create(3793315115, 3518437208), Long_create(457671715, 2814749767), Long_create(2943117749, 2251799813), Long_create(3849994940, 3602879701), Long_create(2221002492, 2882303761), Long_create(917808535, 2305843009), Long_create(3186480574, 3689348814), Long_create(3408177918, 2951479051), Long_create(1867548875, 2361183241), Long_create(1270091283, 3777893186), Long_create(157079567, 3022314549), Long_create(984657113, 2417851639), Long_create(3293438299, 3868562622), Long_create(916763721, 3094850098),
        Long_create(2451397895, 2475880078), Long_create(3063243173, 3961408125), Long_create(2450594538, 3169126500), Long_create(1960475630, 2535301200), Long_create(3136761009, 4056481920), Long_create(2509408807, 3245185536), Long_create(1148533586, 2596148429), Long_create(3555640657, 4153837486), Long_create(1985519066, 3323069989), Long_create(2447408712, 2658455991), Long_create(2197867021, 4253529586), Long_create(899300158, 3402823669), Long_create(1578433585, 2722258935), Long_create(1262746868, 2177807148),
        Long_create(1161401530, 3484491437), Long_create(3506101601, 2787593149), Long_create(3663874740, 2230074519), Long_create(3285219207, 3568119231), Long_create(1769181906, 2854495385), Long_create(1415345525, 2283596308), Long_create(1405559381, 3653754093), Long_create(2842434423, 2923003274), Long_create(3132940998, 2338402619), Long_create(2435725219, 3741444191), Long_create(1089586716, 2993155353), Long_create(2589656291, 2394524282), Long_create(707476229, 3831238852), Long_create(3142961361, 3064991081),
        Long_create(1655375629, 2451992865), Long_create(2648601007, 3923188584), Long_create(2977874265, 3138550867), Long_create(664312493, 2510840694), Long_create(2780886908, 4017345110), Long_create(2224709526, 3213876088), Long_create(3497754539, 2571100870), Long_create(1301439967, 4113761393), Long_create(2759138892, 3291009114), Long_create(3066304573, 2632807291), Long_create(3188100398, 4212491666), Long_create(1691486859, 3369993333), Long_create(3071176406, 2695994666), Long_create(1597947665, 2156795733),
        Long_create(1697722806, 3450873173), Long_create(3076165163, 2760698538), Long_create(4178919049, 2208558830), Long_create(2391303182, 3533694129), Long_create(2772036005, 2826955303), Long_create(3935615722, 2261564242), Long_create(2861011319, 3618502788), Long_create(4006795973, 2894802230), Long_create(3205436779, 2315841784), Long_create(2551718468, 3705346855), Long_create(2041374775, 2964277484), Long_create(2492093279, 2371421987), Long_create(551375410, 3794275180), Long_create(441100328, 3035420144),
        Long_create(1211873721, 2428336115), Long_create(1938997954, 3885337784), Long_create(2410191822, 3108270227), Long_create(210166539, 2486616182), Long_create(1195259923, 3978585891), Long_create(97214479, 3182868713), Long_create(1795758501, 2546294970), Long_create(2873213602, 4074071952), Long_create(580583963, 3259257562), Long_create(3041447548, 2607406049), Long_create(2289335700, 4171849679), Long_create(2690462019, 3337479743), Long_create(3870356534, 2669983794), Long_create(3615590076, 4271974071),
        Long_create(2033478602, 3417579257), Long_create(4203763259, 2734063405), Long_create(3363010607, 2187250724), Long_create(2803836594, 3499601159), Long_create(3102062734, 2799680927), Long_create(763663269, 2239744742), Long_create(2080854690, 3583591587), Long_create(4241664129, 2866873269), Long_create(4252324763, 2293498615), Long_create(2508752324, 3669597785), Long_create(2007001859, 2935678228), Long_create(3323588406, 2348542582), Long_create(1881767613, 3757668132), Long_create(4082394468, 3006134505),
        Long_create(3265915574, 2404907604), Long_create(2648484541, 3847852167), Long_create(400800715, 3078281734), Long_create(1179634031, 2462625387), Long_create(2746407909, 3940200619), Long_create(3056119786, 3152160495), Long_create(2444895829, 2521728396), Long_create(2193846408, 4034765434), Long_create(2614070585, 3227812347), Long_create(373269550, 2582249878), Long_create(4033205117, 4131599804), Long_create(4085557553, 3305279843), Long_create(691465664, 2644223875), Long_create(1106345063, 4230758200),
        Long_create(885076050, 3384606560), Long_create(708060840, 2707685248), Long_create(2284435591, 2166148198), Long_create(2796103486, 3465837117), Long_create(518895870, 2772669694), Long_create(1274110155, 2218135755), Long_create(2038576249, 3549017208), Long_create(3348847917, 2839213766), Long_create(1820084875, 2271371013), Long_create(2053142340, 3634193621), Long_create(783520413, 2907354897), Long_create(3203796708, 2325883917), Long_create(1690100896, 3721414268), Long_create(3070067635, 2977131414),
        Long_create(3315047567, 2381705131), Long_create(3586089190, 3810728210), Long_create(2868871352, 3048582568), Long_create(4013084000, 2438866054), Long_create(3843954022, 3902185687), Long_create(1357176299, 3121748550), Long_create(1085741039, 2497398840), Long_create(1737185663, 3995838144), Long_create(2248741989, 3196670515), Long_create(1798993591, 2557336412), Long_create(3737383206, 4091738259), Long_create(3848900024, 3273390607), Long_create(1361133101, 2618712486), Long_create(459826043, 4189939978),
        Long_create(2085847752, 3351951982), Long_create(4245658579, 2681561585), Long_create(2498086431, 4290498537), Long_create(280482227, 3432398830), Long_create(224385781, 2745919064), Long_create(1038502084, 2196735251), Long_create(4238583712, 3514776401), Long_create(2531873511, 2811821121), Long_create(1166505349, 2249456897), Long_create(2725402018, 3599131035), Long_create(2180321615, 2879304828), Long_create(3462244210, 2303443862), Long_create(2103616899, 3685510180), Long_create(1682893519, 2948408144),
        Long_create(2205308275, 2358726515), Long_create(3528493240, 3773962424), Long_create(3681788051, 3019169939), Long_create(3804423900, 2415335951), Long_create(74124026, 3864537523), Long_create(1777286139, 3091630018), Long_create(3139815829, 2473304014), Long_create(2446724950, 3957286423), Long_create(3675366878, 3165829138), Long_create(363313125, 2532663311), Long_create(3158281377, 4052261297), Long_create(808638183, 3241809038), Long_create(2364897465, 2593447230), Long_create(3783835944, 4149515568),
        Long_create(450088378, 3319612455), Long_create(360070702, 2655689964), Long_create(2294100042, 4249103942), Long_create(117293115, 3399283154), Long_create(952827951, 2719426523), Long_create(2480249279, 2175541218), Long_create(3109405388, 3480865949), Long_create(3346517769, 2784692759), Long_create(3536207675, 2227754207), Long_create(2221958443, 3564406732), Long_create(59579836, 2851525386), Long_create(3483637705, 2281220308), Long_create(419859574, 3649952494), Long_create(1194881118, 2919961995),
        Long_create(955904894, 2335969596), Long_create(4106428209, 3737551353), Long_create(708162189, 2990041083), Long_create(2284516670, 2392032866), Long_create(1937239754, 3827252586), Long_create(690798344, 3061802069), Long_create(1411632134, 2449441655), Long_create(2258611415, 3919106648), Long_create(3524876050, 3135285318), Long_create(242920462, 2508228255), Long_create(388672740, 4013165208), Long_create(2028925110, 3210532166), Long_create(764146629, 2568425733), Long_create(363641147, 4109481173),
        Long_create(2008899836, 3287584938), Long_create(3325106787, 2630067950), Long_create(1025203564, 4208108721), Long_create(4256136688, 3366486976), Long_create(2545915891, 2693189581), Long_create(1177739254, 2154551665), Long_create(1884382806, 3447282664), Long_create(2366499704, 2757826131), Long_create(1034206304, 2206260905), Long_create(1654730086, 3530017448), Long_create(3041770987, 2824013958), Long_create(4151403708, 2259211166), Long_create(629291719, 3614737867), Long_create(3080413753, 2891790293),
        Long_create(4182317920, 2313432234), Long_create(4114728295, 3701491575), Long_create(3291782636, 2961193260), Long_create(2633426109, 2368954608), Long_create(3354488315, 3790327373), Long_create(106610275, 3032261899), Long_create(944281679, 2425809519), Long_create(3228837605, 3881295230), Long_create(2583070084, 3105036184), Long_create(2925449526, 2484028947), Long_create(1244745405, 3974446316), Long_create(136802865, 3179557053), Long_create(1827429210, 2543645642), Long_create(3782880196, 4069833027),
        Long_create(1308317238, 3255866422), Long_create(3623634168, 2604693137), Long_create(2361840832, 4167509020), Long_create(1889472666, 3334007216), Long_create(652584673, 2667205773), Long_create(185142018, 4267529237), Long_create(2725093992, 3414023389), Long_create(3039068653, 2731218711), Long_create(1572261463, 2184974969), Long_create(4233605259, 3495959950), Long_create(3386884207, 2796767960), Long_create(2709507366, 2237414368), Long_create(3476218326, 3579862989), Long_create(3639968120, 2863890391),
        Long_create(2052981037, 2291112313), Long_create(2425776200, 3665779701), Long_create(1081627501, 2932623761), Long_create(6308541, 2346099009), Long_create(1728080585, 3753758414), Long_create(2241457927, 3003006731), Long_create(934172882, 2402405385), Long_create(1494676612, 3843848616), Long_create(336747830, 3075078893), Long_create(1987385183, 2460063114), Long_create(602835915, 3936100983), Long_create(2200255650, 3148880786), Long_create(901211061, 2519104629), Long_create(3159924616, 4030567406),
        Long_create(1668946233, 3224453925), Long_create(1335156987, 2579563140), Long_create(2136251179, 4127301024), Long_create(2567994402, 3301840819), Long_create(2913388981, 2641472655), Long_create(366455074, 4226356249), Long_create(1152157518, 3381084999), Long_create(1780719474, 2704867999), Long_create(2283569038, 2163894399), Long_create(1076730083, 3462231039), Long_create(1720377526, 2769784831), Long_create(517308561, 2215827865), Long_create(827693699, 3545324584), Long_create(1521148418, 2836259667),
        Long_create(3793899112, 2269007733), Long_create(916277824, 3630412374), Long_create(1592015718, 2904329899), Long_create(2132606034, 2323463919), Long_create(835189277, 3717542271), Long_create(4104125258, 2974033816), Long_create(2424306747, 2379227053), Long_create(3019897337, 3806763285), Long_create(2415917869, 3045410628), Long_create(3650721214, 2436328502), Long_create(2405180105, 3898125604), Long_create(2783137543, 3118500483), Long_create(3944496953, 2494800386), Long_create(298240911, 3991680619),
        Long_create(1097586188, 3193344495), Long_create(878068950, 2554675596), Long_create(3981890698, 4087480953), Long_create(608532181, 3269984763), Long_create(2204812663, 2615987810), Long_create(3527700261, 4185580496), Long_create(1963166749, 3348464397), Long_create(4147513777, 2678771517), Long_create(3200048207, 4286034428), Long_create(4278025484, 3428827542), Long_create(1704433468, 2743062034), Long_create(2222540234, 2194449627), Long_create(120090538, 3511119404), Long_create(955065889, 2808895523),
        Long_create(2482039630, 2247116418), Long_create(3112269949, 3595386269), Long_create(3348809418, 2876309015), Long_create(2679047534, 2301047212), Long_create(850502218, 3681675540), Long_create(680401775, 2945340432), Long_create(3121301797, 2356272345), Long_create(699115580, 3770035753), Long_create(2277279382, 3016028602), Long_create(103836587, 2412822882), Long_create(1025131999, 3860516611), Long_create(4256079436, 3088413288), Long_create(827883168, 2470730631), Long_create(3901593088, 3953169009)]);
        otcit_DoubleAnalyzer_exp10Table = $rt_createShortArrayFromData([(-70), (-66), (-63), (-60), (-56), (-53), (-50), (-46), (-43), (-40), (-36), (-33), (-30), (-26), (-23), (-20), (-16), (-13), (-10), (-6), (-3), 0, 4, 7, 10, 14, 17, 20, 23, 27, 30, 33, 37, 40, 43, 47, 50, 53, 57, 60, 63, 67, 70, 73, 77, 80, 83, 87, 90, 93, 97, 100, 103, 107, 110, 113, 116, 120, 123, 126, 130, 133, 136, 140, 143, 146, 150, 153, 156, 160, 163, 166, 170, 173, 176, 180, 183, 186, 190, 193, 196, 200, 203, 206, 210, 213, 216,
        219, 223, 226, 229, 233, 236, 239, 243, 246, 249, 253, 256, 259, 263, 266, 269, 273, 276, 279, 283, 286, 289, 293, 296, 299, 303, 306, 309, 312, 316, 319, 322, 326, 329, 332, 336, 339, 342, 346, 349, 352, 356, 359, 362, 366, 369, 372, 376, 379, 382, 386, 389, 392, 396, 399, 402, 406, 409, 412, 415, 419, 422, 425, 429, 432, 435, 439, 442, 445, 449, 452, 455, 459, 462, 465, 469, 472, 475, 479, 482, 485, 489, 492, 495, 499, 502, 505, 508, 512, 515, 518, 522, 525, 528, 532, 535, 538, 542, 545, 548, 552,
        555, 558, 562, 565, 568, 572, 575, 578, 582, 585, 588, 592, 595, 598, 601, 605, 608, 611, 615, 618, 621, 625, 628, 631, 635, 638, 641, 645, 648, 651, 655, 658, 661, 665, 668, 671, 675, 678, 681, 685, 688, 691, 695, 698, 701, 704, 708, 711, 714, 718, 721, 724, 728, 731, 734, 738, 741, 744, 748, 751, 754, 758, 761, 764, 768, 771, 774, 778, 781, 784, 788, 791, 794, 797, 801, 804, 807, 811, 814, 817, 821, 824, 827, 831, 834, 837, 841, 844, 847, 851, 854, 857, 861, 864, 867, 871, 874, 877, 881, 884, 887,
        891, 894, 897, 900, 904, 907, 910, 914, 917, 920, 924, 927, 930, 934, 937, 940, 944, 947, 950, 954, 957, 960, 964, 967, 970, 974, 977, 980, 984, 987, 990, 993, 997, 1000, 1003, 1007, 1010, 1013, 1017, 1020, 1023, 1027, 1030, 1033, 1037, 1040, 1043, 1047, 1050, 1053, 1057, 1060, 1063, 1067, 1070, 1073, 1077, 1080, 1083, 1086, 1090, 1093, 1096, 1100, 1103, 1106, 1110, 1113, 1116, 1120, 1123, 1126, 1130, 1133, 1136, 1140, 1143, 1146, 1150, 1153, 1156, 1160, 1163, 1166, 1170, 1173, 1176, 1180, 1183, 1186,
        1189, 1193, 1196, 1199, 1203, 1206, 1209, 1213, 1216, 1219, 1223, 1226, 1229, 1233, 1236, 1239, 1243, 1246, 1249, 1253, 1256, 1259, 1263, 1266, 1269, 1273, 1276, 1279, 1282, 1286, 1289, 1292, 1296, 1299, 1302, 1306, 1309, 1312, 1316, 1319, 1322, 1326, 1329, 1332, 1336, 1339, 1342, 1346, 1349, 1352, 1356, 1359, 1362, 1366, 1369, 1372, 1376, 1379, 1382, 1385, 1389, 1392, 1395, 1399, 1402, 1405, 1409, 1412, 1415, 1419, 1422, 1425, 1429, 1432, 1435, 1439, 1442, 1445, 1449, 1452, 1455, 1459, 1462, 1465, 1469,
        1472, 1475, 1478, 1482, 1485, 1488, 1492, 1495, 1498, 1502, 1505, 1508, 1512, 1515, 1518, 1522, 1525, 1528, 1532, 1535, 1538, 1542, 1545, 1548, 1552, 1555, 1558, 1562, 1565, 1568, 1572, 1575, 1578, 1581, 1585, 1588, 1591, 1595, 1598, 1601, 1605, 1608, 1611, 1615, 1618, 1621, 1625, 1628, 1631, 1635, 1638, 1641, 1645, 1648, 1651, 1655, 1658, 1661, 1665, 1668, 1671, 1674, 1678, 1681, 1684, 1688, 1691, 1694, 1698, 1701, 1704, 1708, 1711, 1714, 1718, 1721, 1724, 1728, 1731, 1734, 1738, 1741, 1744, 1748, 1751,
        1754, 1758, 1761, 1764, 1767, 1771, 1774, 1777, 1781, 1784, 1787, 1791, 1794, 1797, 1801, 1804, 1807, 1811, 1814, 1817, 1821, 1824, 1827, 1831, 1834, 1837, 1841, 1844, 1847, 1851, 1854, 1857, 1861, 1864, 1867, 1870, 1874, 1877, 1880, 1884, 1887, 1890, 1894, 1897, 1900, 1904, 1907, 1910, 1914, 1917, 1920, 1924, 1927, 1930, 1934, 1937, 1940, 1944, 1947, 1950, 1954, 1957, 1960, 1963, 1967, 1970, 1973, 1977, 1980, 1983, 1987, 1990, 1993, 1997, 2000, 2003, 2007, 2010, 2013, 2017, 2020, 2023, 2027, 2030, 2033,
        2037, 2040, 2043, 2047, 2050, 2053, 2057, 2060, 2063, 2066, 2070, 2073, 2076, 2080, 2083, 2086, 2090, 2093, 2096, 2100, 2103, 2106, 2110, 2113, 2116, 2120]);
    }
    function otcit_DoubleAnalyzer$Result() {
        var a = this; jl_Object.call(a);
        a.$mantissa0 = Long_ZERO;
        a.$exponent0 = 0;
        a.$sign1 = 0;
    }
    var cbggg_Batch = $rt_classWithoutFields(0);
    function cbggg_SpriteBatch() {
        var a = this; jl_Object.call(a);
        a.$mesh0 = null;
        a.$vertices0 = null;
        a.$idx = 0;
        a.$lastTexture = null;
        a.$invTexWidth = 0.0;
        a.$invTexHeight = 0.0;
        a.$drawing = 0;
        a.$transformMatrix = null;
        a.$projectionMatrix = null;
        a.$combinedMatrix = null;
        a.$blendingDisabled = 0;
        a.$blendSrcFunc = 0;
        a.$blendDstFunc = 0;
        a.$blendSrcFuncAlpha = 0;
        a.$blendDstFuncAlpha = 0;
        a.$shader0 = null;
        a.$customShader = null;
        a.$ownsShader0 = 0;
        a.$color1 = null;
        a.$colorPacked = 0.0;
        a.$renderCalls = 0;
        a.$totalRenderCalls = 0;
        a.$maxSpritesInBatch = 0;
    }
    var cbggg_SpriteBatch_defaultVertexDataType = null;
    function cbggg_SpriteBatch_$callClinit() {
        cbggg_SpriteBatch_$callClinit = $rt_eraseClinit(cbggg_SpriteBatch);
        cbggg_SpriteBatch__clinit_();
    }
    function cbggg_SpriteBatch__init_0(var_0, var_1) {
        var var_2 = new cbggg_SpriteBatch();
        cbggg_SpriteBatch__init_(var_2, var_0, var_1);
        return var_2;
    }
    function cbggg_SpriteBatch__init_($this, $size, $defaultShader) {
        var var$3, var$4, var$5, var$6, $indices, $vertexDataType, var$9, var$10, var$11, var$12, var$13, $j, $i;
        cbggg_SpriteBatch_$callClinit();
        $this.$idx = 0;
        $this.$lastTexture = null;
        $this.$invTexWidth = 0.0;
        $this.$invTexHeight = 0.0;
        $this.$drawing = 0;
        $this.$transformMatrix = cbgm_Matrix4__init_();
        $this.$projectionMatrix = cbgm_Matrix4__init_();
        $this.$combinedMatrix = cbgm_Matrix4__init_();
        $this.$blendingDisabled = 0;
        $this.$blendSrcFunc = 770;
        $this.$blendDstFunc = 771;
        $this.$blendSrcFuncAlpha = 770;
        $this.$blendDstFuncAlpha = 771;
        $this.$customShader = null;
        var$3 = new cbgg_Color;
        cbgg_Color_$callClinit();
        var$3.$r = 1.0;
        var$3.$g = 1.0;
        var$3.$b = 1.0;
        var$3.$a = 1.0;
        cbgg_Color_clamp(var$3);
        $this.$color1 = var$3;
        $this.$colorPacked = cbgg_Color_WHITE_FLOAT_BITS;
        $this.$renderCalls = 0;
        $this.$totalRenderCalls = 0;
        $this.$maxSpritesInBatch = 0;
        if ($size > 8191) {
            $defaultShader = new jl_IllegalArgumentException;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(494));
            jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $size, 10);
            var$4 = new jl_String;
            var$5 = var$3.$buffer;
            var$6 = var$3.$length;
            jl_String_$callClinit();
            $indices = $rt_createCharArray(var$6);
            var$4.$characters = $indices;
            jl_System_fastArraycopy(var$5, 0, $indices, 0, var$6);
            $defaultShader.$suppressionEnabled = 1;
            $defaultShader.$writableStackTrace = 1;
            $defaultShader.$message = var$4;
            $rt_throw($defaultShader);
        }
        if (cbg_Gdx_gl30 === null)
            $vertexDataType = cbggg_SpriteBatch_defaultVertexDataType;
        else {
            cbgg_Mesh$VertexDataType_$callClinit();
            $vertexDataType = cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO;
        }
        var$9 = new cbgg_Mesh;
        var$10 = $size * 4 | 0;
        var$11 = $size * 6 | 0;
        var$5 = $rt_createArray(cbgg_VertexAttribute, 3);
        $indices = var$5.data;
        var$3 = new cbgg_VertexAttribute;
        var$3.$usage = 1;
        var$3.$numComponents = 2;
        var$3.$type0 = 5126;
        var$3.$normalized = 0;
        var$3.$alias = $rt_s(495);
        var$3.$unit = 0;
        var$3.$usageIndex = jl_Integer_numberOfTrailingZeros(1);
        $indices[0] = var$3;
        var$3 = new cbgg_VertexAttribute;
        var$3.$usage = 4;
        var$3.$numComponents = 4;
        var$3.$type0 = 5121;
        var$3.$normalized = 1;
        var$3.$alias = $rt_s(496);
        var$3.$unit = 0;
        var$3.$usageIndex = jl_Integer_numberOfTrailingZeros(4);
        $indices[1] = var$3;
        var$3 = new cbgg_VertexAttribute;
        var$3.$usage = 16;
        var$3.$numComponents = 2;
        var$3.$type0 = 5126;
        var$3.$normalized = 0;
        var$3.$alias = $rt_s(497);
        var$3.$unit = 0;
        var$3.$usageIndex = jl_Integer_numberOfTrailingZeros(16);
        $indices[2] = var$3;
        cbgg_Mesh__init_(var$9, $vertexDataType, 0, var$10, var$11, cbgg_VertexAttributes__init_(var$5));
        $this.$mesh0 = var$9;
        $vertexDataType = $this.$projectionMatrix;
        var$12 = cbg_Gdx_graphics.$canvas0.width;
        var$13 = cbg_Gdx_graphics.$canvas0.height;
        cbgm_Matrix4_setToOrtho($vertexDataType, 0.0, 0.0 + var$12, 0.0, 0.0 + var$13, 0.0, 1.0);
        $this.$vertices0 = $rt_createFloatArray($size * 20 | 0);
        $indices = $rt_createShortArray(var$11);
        var$5 = $indices.data;
        $j = 0;
        $i = 0;
        while ($i < var$11) {
            var$5[$i] = $j;
            var$5[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
            $size = $i + 2 | 0;
            var$6 = ($j + 2 | 0) << 16 >> 16;
            var$5[$size] = var$6;
            var$5[$i + 3 | 0] = var$6;
            var$5[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
            var$5[$i + 5 | 0] = $j;
            $i = $i + 6 | 0;
            $j = ($j + 4 | 0) << 16 >> 16;
        }
        $this.$mesh0.$indices.$setIndices($indices, 0, var$5.length);
        if ($defaultShader !== null)
            $this.$shader0 = $defaultShader;
        else {
            $this.$shader0 = cbggg_SpriteBatch_createDefaultShader();
            $this.$ownsShader0 = 1;
        }
    }
    function cbggg_SpriteBatch_createDefaultShader() {
        var $shader, $vertexShader, $fragmentShader, var$4, var$5, var$6, var$7;
        cbggg_SpriteBatch_$callClinit();
        $shader = cbggg_ShaderProgram__init_($rt_s(498), $rt_s(499));
        if ($shader.$isCompiled)
            return $shader;
        $vertexShader = new jl_IllegalArgumentException;
        $fragmentShader = new jl_StringBuilder;
        $fragmentShader.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($fragmentShader, $fragmentShader.$length, $rt_s(500));
        if (!$shader.$isCompiled)
            var$4 = $shader.$log;
        else {
            var$4 = cbg_Gdx_gl20.$glGetProgramInfoLog($shader.$program);
            $shader.$log = var$4;
        }
        jl_AbstractStringBuilder_insert($fragmentShader, $fragmentShader.$length, var$4);
        $shader = new jl_String;
        var$5 = $fragmentShader.$buffer;
        var$6 = $fragmentShader.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        $shader.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        $vertexShader.$suppressionEnabled = 1;
        $vertexShader.$writableStackTrace = 1;
        $vertexShader.$message = $shader;
        $rt_throw($vertexShader);
    }
    function cbggg_SpriteBatch_begin($this) {
        var var$1, var$2;
        if ($this.$drawing) {
            var$1 = new jl_IllegalStateException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = $rt_s(501);
            $rt_throw(var$1);
        }
        $this.$renderCalls = 0;
        cbg_Gdx_gl.$glDepthMask(0);
        var$2 = $this.$customShader;
        if (var$2 !== null)
            var$2.$bind();
        else {
            var$2 = $this.$shader0;
            var$1 = cbg_Gdx_gl20;
            if (var$2.$invalidated) {
                cbggg_ShaderProgram_compileShaders(var$2, var$2.$vertexShaderSource, var$2.$fragmentShaderSource);
                var$2.$invalidated = 0;
            }
            var$1.$glUseProgram(var$2.$program);
        }
        cbggg_SpriteBatch_setupMatrices($this);
        $this.$drawing = 1;
    }
    function cbggg_SpriteBatch_end($this) {
        var var$1, $gl;
        if (!$this.$drawing) {
            var$1 = new jl_IllegalStateException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = $rt_s(502);
            $rt_throw(var$1);
        }
        if ($this.$idx > 0)
            cbggg_SpriteBatch_flush($this);
        $this.$lastTexture = null;
        $this.$drawing = 0;
        $gl = cbg_Gdx_gl;
        $gl.$glDepthMask(1);
        if ($this.$blendingDisabled ? 0 : 1)
            $gl.$glDisable(3042);
    }
    function cbggg_SpriteBatch_draw($this, $texture, $spriteVertices, $offset, $count) {
        var $verticesLength, $copyCount;
        if (!$this.$drawing) {
            $texture = new jl_IllegalStateException;
            $texture.$suppressionEnabled = 1;
            $texture.$writableStackTrace = 1;
            $texture.$message = $rt_s(503);
            $rt_throw($texture);
        }
        $verticesLength = $this.$vertices0.data.length;
        if ($texture !== $this.$lastTexture) {
            cbggg_SpriteBatch_flush($this);
            $this.$lastTexture = $texture;
            $texture = $texture.$data0;
            $this.$invTexWidth = 1.0 / $texture.$width3;
            $this.$invTexHeight = 1.0 / $texture.$height1;
            $copyCount = $verticesLength;
        } else {
            $copyCount = $verticesLength - $this.$idx | 0;
            if (!$copyCount) {
                cbggg_SpriteBatch_flush($this);
                $copyCount = $verticesLength;
            }
        }
        if ($copyCount >= $count)
            $copyCount = $count;
        jl_System_fastArraycopy($spriteVertices, $offset, $this.$vertices0, $this.$idx, $copyCount);
        $this.$idx = $this.$idx + $copyCount | 0;
        $count = $count - $copyCount | 0;
        while ($count > 0) {
            $offset = $offset + $copyCount | 0;
            cbggg_SpriteBatch_flush($this);
            $copyCount = $verticesLength >= $count ? $count : $verticesLength;
            jl_System_fastArraycopy($spriteVertices, $offset, $this.$vertices0, 0, $copyCount);
            $this.$idx = $this.$idx + $copyCount | 0;
            $count = $count - $copyCount | 0;
        }
    }
    function cbggg_SpriteBatch_flush($this) {
        var $count, $spritesInBatch, $mesh, var$4, var$5, $indicesBuffer;
        $count = $this.$idx;
        if (!$count)
            return;
        $this.$renderCalls = $this.$renderCalls + 1 | 0;
        $this.$totalRenderCalls = $this.$totalRenderCalls + 1 | 0;
        $spritesInBatch = $count / 20 | 0;
        if ($spritesInBatch > $this.$maxSpritesInBatch)
            $this.$maxSpritesInBatch = $spritesInBatch;
        $count = $spritesInBatch * 6 | 0;
        $mesh = $this.$lastTexture;
        cbg_Gdx_gl.$glBindTexture($mesh.$glTarget, $mesh.$glHandle);
        $mesh = $this.$mesh0;
        var$4 = $this.$vertices0;
        var$5 = $this.$idx;
        $mesh.$vertices.$setVertices(var$4, 0, var$5);
        $indicesBuffer = $mesh.$indices.$getBuffer(1);
        jn_Buffer_position($indicesBuffer, 0);
        jn_Buffer_limit($indicesBuffer, $count);
        if ($this.$blendingDisabled)
            cbg_Gdx_gl.$glDisable(3042);
        else {
            cbg_Gdx_gl.$glEnable(3042);
            $spritesInBatch = $this.$blendSrcFunc;
            if ($spritesInBatch != (-1))
                cbg_Gdx_gl.$glBlendFuncSeparate($spritesInBatch, $this.$blendDstFunc, $this.$blendSrcFuncAlpha, $this.$blendDstFuncAlpha);
        }
        $indicesBuffer = $this.$customShader;
        if ($indicesBuffer === null)
            $indicesBuffer = $this.$shader0;
        cbgg_Mesh_render($mesh, $indicesBuffer, 4, 0, $count, $mesh.$autoBind);
        $this.$idx = 0;
    }
    function cbggg_SpriteBatch_dispose($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$1 = $this.$mesh0;
        var$2 = cbgg_Mesh_meshes;
        var$3 = cbg_Gdx_app;
        if (var$3 === null) {
            var$2 = var$2.$elementData.data[0];
            while (var$2 !== null && var$2.$key !== null) {
                var$2 = var$2.$next;
            }
        } else {
            var$4 = var$3;
            if (!var$4.$id$) {
                var$5 = $rt_nextId();
                var$4.$id$ = var$5;
            }
            var$6 = var$3.$id$;
            var$7 = var$2.$elementData.data;
            var$2 = var$7[var$6 & (var$7.length - 1 | 0)];
            while (var$2 !== null) {
                if (var$2.$origKeyHash == var$6) {
                    var$5 = var$2.$key;
                    if (var$3 !== var$5 && !(var$3 !== var$5 ? 0 : 1) ? 0 : 1)
                        break;
                }
                var$2 = var$2.$next;
            }
        }
        if ((var$2 === null ? null : var$2.$value4) !== null) {
            var$2 = cbgg_Mesh_meshes;
            var$5 = cbg_Gdx_app;
            if (var$5 === null) {
                var$2 = var$2.$elementData.data[0];
                while (var$2 !== null && var$2.$key !== null) {
                    var$2 = var$2.$next;
                }
            } else {
                var$8 = var$5;
                if (!var$8.$id$) {
                    var$3 = $rt_nextId();
                    var$8.$id$ = var$3;
                }
                var$6 = var$5.$id$;
                var$7 = var$2.$elementData.data;
                var$2 = var$7[var$6 & (var$7.length - 1 | 0)];
                while (var$2 !== null) {
                    if (var$2.$origKeyHash == var$6) {
                        var$8 = var$2.$key;
                        if (var$5 !== var$8 && !(var$5 !== var$8 ? 0 : 1) ? 0 : 1)
                            break;
                    }
                    var$2 = var$2.$next;
                }
            }
            cbgu_Array_removeValue(var$2 === null ? null : var$2.$value4, var$1, 1);
        }
        var$1.$vertices.$dispose();
        var$2 = var$1.$instances;
        if (var$2 !== null)
            var$2.$dispose();
        var$1.$indices.$dispose();
        if ($this.$ownsShader0) {
            var$1 = $this.$shader0;
            if (var$1 !== null)
                cbggg_ShaderProgram_dispose(var$1);
        }
    }
    function cbggg_SpriteBatch_setupMatrices($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
        cbgm_Matrix4_mul(cbgm_Matrix4_set($this.$combinedMatrix, $this.$projectionMatrix.$val), $this.$transformMatrix);
        var$1 = $this.$customShader;
        if (var$1 !== null) {
            var$1.$setUniformMatrix($rt_s(504), $this.$combinedMatrix);
            $this.$customShader.$setUniformi($rt_s(505), 0);
        } else {
            var$1 = $this.$shader0;
            var$2 = $this.$combinedMatrix;
            cbggg_ShaderProgram_$callClinit();
            var$3 = cbggg_ShaderProgram_fetchUniformLocation(var$1, $rt_s(504), cbggg_ShaderProgram_pedantic);
            var$4 = cbg_Gdx_gl20;
            if (var$1.$invalidated) {
                cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
                var$1.$invalidated = 0;
            }
            var$5 = var$2.$val;
            var$1 = var$4.$uniforms;
            var$6 = var$4.$currProgram;
            if (!var$6)
                var$1 = !var$1.$hasZeroValue0 ? null : var$1.$zeroValue;
            else {
                var$7 = var$1.$keyTable1;
                var$8 = Long_lo(Long_shru(Long_mul(Long_fromInt(var$6), Long_create(2135587861, 2654435769)), var$1.$shift1));
                a: {
                    while (true) {
                        var$9 = var$7.data[var$8];
                        if (!var$9) {
                            var$8 =  -(var$8 + 1 | 0) | 0;
                            break a;
                        }
                        if (var$9 == var$6)
                            break;
                        var$8 = (var$8 + 1 | 0) & var$1.$mask1;
                    }
                }
                var$1 = var$8 < 0 ? null : var$1.$valueTable0.data[var$8];
            }
            var$1 = var$1;
            if (!var$3)
                var$1 = !var$1.$hasZeroValue0 ? null : var$1.$zeroValue;
            else {
                var$7 = var$1.$keyTable1;
                var$9 = Long_lo(Long_shru(Long_mul(Long_fromInt(var$3), Long_create(2135587861, 2654435769)), var$1.$shift1));
                b: {
                    while (true) {
                        var$8 = var$7.data[var$9];
                        if (!var$8) {
                            var$9 =  -(var$9 + 1 | 0) | 0;
                            break b;
                        }
                        if (var$8 == var$3)
                            break;
                        var$9 = (var$9 + 1 | 0) & var$1.$mask1;
                    }
                }
                var$1 = var$9 < 0 ? null : var$1.$valueTable0.data[var$9];
            }
            otji_JSWrapper_$callClinit();
            var$10 = var$1 === null ? null : var$1[$rt_jso_marker] === true ? var$1 : var$1.$js;
            var$1 = var$4.$gl;
            var$4 = "uniformMatrix4fv";
            var$2 = !!0;
            if (var$5 === null)
                var$11 = null;
            else {
                var$5 = var$5.data;
                var$12 = var$5.length;
                var$11 = new $rt_globals.Array(var$12);
                var$9 = 0;
                while (var$9 < var$12) {
                    var$13 = var$5[var$9];
                    var$9;
                    var$11[var$9] = var$13;
                    var$9 = var$9 + 1 | 0;
                }
            }
            var$1[var$4](var$10, var$2, var$11);
            var$1 = $this.$shader0;
            var$2 = cbg_Gdx_gl20;
            if (var$1.$invalidated) {
                cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
                var$1.$invalidated = 0;
            }
            var$2.$glUniform1i(cbggg_ShaderProgram_fetchUniformLocation(var$1, $rt_s(505), cbggg_ShaderProgram_pedantic), 0);
        }
    }
    function cbggg_SpriteBatch__clinit_() {
        cbgg_Mesh$VertexDataType_$callClinit();
        cbggg_SpriteBatch_defaultVertexDataType = cbgg_Mesh$VertexDataType_VertexArray;
    }
    function cbgg_Camera() {
        var a = this; jl_Object.call(a);
        a.$position1 = null;
        a.$direction0 = null;
        a.$up = null;
        a.$projection = null;
        a.$view = null;
        a.$combined = null;
        a.$invProjectionView = null;
        a.$near = 0.0;
        a.$far = 0.0;
        a.$viewportWidth = 0.0;
        a.$viewportHeight = 0.0;
        a.$frustum = null;
        a.$tmpVec = null;
        a.$ray = null;
    }
    function cbgg_Camera__init_($this) {
        var var$1, var$2, var$3;
        var$1 = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        $this.$position1 = var$1;
        var$1 = new cbgm_Vector3;
        var$1.$x2 = 0.0;
        var$1.$y2 = 0.0;
        var$1.$z1 = (-1.0);
        $this.$direction0 = var$1;
        var$1 = new cbgm_Vector3;
        var$1.$x2 = 0.0;
        var$1.$y2 = 1.0;
        var$1.$z1 = 0.0;
        $this.$up = var$1;
        $this.$projection = cbgm_Matrix4__init_();
        $this.$view = cbgm_Matrix4__init_();
        $this.$combined = cbgm_Matrix4__init_();
        $this.$invProjectionView = cbgm_Matrix4__init_();
        $this.$near = 1.0;
        $this.$far = 100.0;
        $this.$viewportWidth = 0.0;
        $this.$viewportHeight = 0.0;
        $this.$frustum = cbgm_Frustum__init_();
        $this.$tmpVec = new cbgm_Vector3;
        var$1 = new cbgmc_Ray;
        cbgmc_Ray_$callClinit();
        var$2 = new cbgm_Vector3;
        var$1.$origin = var$2;
        var$3 = new cbgm_Vector3;
        var$1.$direction = var$3;
        var$2.$x2 = 0.0;
        var$2.$y2 = 0.0;
        var$2.$z1 = 0.0;
        var$3.$x2 = 0.0;
        var$3.$y2 = 0.0;
        var$3.$z1 = 0.0;
        $this.$ray = var$1;
    }
    function cbgg_OrthographicCamera() {
        var a = this; cbgg_Camera.call(a);
        a.$zoom = 0.0;
        a.$tmp = null;
    }
    function cbgg_OrthographicCamera_update($this, $updateFrustum) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        var$2 = $this.$projection;
        var$3 = $this.$zoom;
        var$4 = $this.$viewportWidth;
        var$5 = var$3 *  -var$4 / 2.0;
        var$4 = var$3 * var$4 / 2.0;
        var$6 = $this.$viewportHeight;
        cbgm_Matrix4_setToOrtho(var$2, var$5, var$4, var$3 *  -(var$6 / 2.0), var$3 * var$6 / 2.0, $this.$near, $this.$far);
        var$2 = $this.$view;
        var$7 = $this.$position1;
        var$8 = $this.$tmp;
        var$3 = var$7.$x2;
        var$9 = var$7.$y2;
        var$5 = var$7.$z1;
        var$8.$x2 = var$3;
        var$8.$y2 = var$9;
        var$8.$z1 = var$5;
        var$10 = $this.$direction0;
        var$11 = var$10.$x2;
        var$4 = var$10.$y2;
        var$6 = var$10.$z1;
        var$3 = var$3 + var$11;
        var$9 = var$9 + var$4;
        var$5 = var$5 + var$6;
        var$8.$x2 = var$3;
        var$8.$y2 = var$9;
        var$8.$z1 = var$5;
        var$8 = $this.$up;
        var$10 = cbgm_Matrix4_tmpVec;
        var$10.$x2 = var$3;
        var$10.$y2 = var$9;
        var$10.$z1 = var$5;
        var$11 = var$7.$x2;
        var$4 = var$7.$y2;
        var$6 = var$7.$z1;
        var$11 = var$3 - var$11;
        var$4 = var$9 - var$4;
        var$6 = var$5 - var$6;
        var$10.$x2 = var$11;
        var$10.$y2 = var$4;
        var$10.$z1 = var$6;
        cbgm_Matrix4_setToLookAt(var$2, var$10, var$8);
        var$8 = cbgm_Matrix4_tmpMat;
        var$11 =  -var$7.$x2;
        var$4 =  -var$7.$y2;
        var$6 =  -var$7.$z1;
        cbgm_Matrix4_idt(var$8);
        var$12 = var$8.$val.data;
        var$12[12] = var$11;
        var$12[13] = var$4;
        var$12[14] = var$6;
        cbgm_Matrix4_mul(var$2, var$8);
        cbgm_Matrix4_set($this.$combined, $this.$projection.$val);
        cbgm_Matrix4_matrix4_mul($this.$combined.$val, $this.$view.$val);
        if ($updateFrustum) {
            cbgm_Matrix4_set($this.$invProjectionView, $this.$combined.$val);
            cbgm_Matrix4_matrix4_inv($this.$invProjectionView.$val);
            cbgm_Frustum_update($this.$frustum, $this.$invProjectionView);
        }
    }
    function cbgg_OrthographicCamera_setToOrtho($this, $yDown, $viewportWidth, $viewportHeight) {
        var var$4, var$5, var$6;
        if (!$yDown) {
            var$4 = $this.$up;
            var$4.$x2 = 0.0;
            var$4.$y2 = 1.0;
            var$4.$z1 = 0.0;
            var$4 = $this.$direction0;
            var$4.$x2 = 0.0;
            var$4.$y2 = 0.0;
            var$4.$z1 = (-1.0);
        } else {
            var$4 = $this.$up;
            var$4.$x2 = 0.0;
            var$4.$y2 = (-1.0);
            var$4.$z1 = 0.0;
            var$4 = $this.$direction0;
            var$4.$x2 = 0.0;
            var$4.$y2 = 0.0;
            var$4.$z1 = 1.0;
        }
        var$4 = $this.$position1;
        var$5 = $this.$zoom;
        var$6 = var$5 * $viewportWidth / 2.0;
        var$5 = var$5 * $viewportHeight / 2.0;
        var$4.$x2 = var$6;
        var$4.$y2 = var$5;
        var$4.$z1 = 0.0;
        $this.$viewportWidth = $viewportWidth;
        $this.$viewportHeight = $viewportHeight;
        cbgg_OrthographicCamera_update($this, 1);
    }
    var igtg_FirstScreen$Companion = $rt_classWithoutFields();
    function igtg_FirstScreen$Companion_getGLOBAL_RANDOM($this) {
        igtg_FirstScreen_$callClinit();
        return igtg_FirstScreen_GLOBAL_RANDOM;
    }
    function jn_Buffer() {
        var a = this; jl_Object.call(a);
        a.$capacity = 0;
        a.$position = 0;
        a.$limit = 0;
        a.$mark = 0;
    }
    function jn_Buffer__init_($this, $capacity) {
        $this.$mark = (-1);
        $this.$capacity = $capacity;
        $this.$limit = $capacity;
    }
    function jn_Buffer_capacity($this) {
        return $this.$capacity;
    }
    function jn_Buffer_position0($this) {
        return $this.$position;
    }
    function jn_Buffer_position($this, $newPosition) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if ($newPosition >= 0 && $newPosition <= $this.$limit) {
            $this.$position = $newPosition;
            if ($newPosition < $this.$mark)
                $this.$mark = 0;
            return $this;
        }
        var$2 = new jl_IllegalArgumentException;
        var$3 = $this.$limit;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(506));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $newPosition, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
        var$3 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
        var$5 = var$4.$buffer;
        var$5.data[var$3] = 93;
        var$6 = new jl_String;
        var$3 = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$3);
        var$6.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$6;
        $rt_throw(var$2);
    }
    function jn_Buffer_limit0($this) {
        return $this.$limit;
    }
    function jn_Buffer_limit($this, $newLimit) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if ($newLimit >= 0 && $newLimit <= $this.$capacity) {
            if ($this.$mark > $newLimit)
                $this.$mark = (-1);
            $this.$limit = $newLimit;
            if ($this.$position > $newLimit)
                $this.$position = $newLimit;
            return $this;
        }
        var$2 = new jl_IllegalArgumentException;
        var$3 = $this.$capacity;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(508));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $newLimit, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
        var$3 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
        var$5 = var$4.$buffer;
        var$5.data[var$3] = 93;
        var$6 = new jl_String;
        var$3 = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$3);
        var$6.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$6;
        $rt_throw(var$2);
    }
    function jn_Buffer_flip($this) {
        $this.$limit = $this.$position;
        $this.$position = 0;
        $this.$mark = (-1);
        return $this;
    }
    function jn_Buffer_remaining($this) {
        return $this.$limit - $this.$position | 0;
    }
    var jl_Readable = $rt_classWithoutFields(0);
    var jn_CharBuffer = $rt_classWithoutFields(jn_Buffer);
    function jn_CharBuffer_get($this, $dst, $offset, $length) {
        var var$4, var$5, $i, var$7, var$8, var$9, $pos, var$11, var$12;
        if ($offset >= 0) {
            var$4 = $dst.data;
            var$5 = var$4.length;
            if ($offset <= var$5) {
                $i = $offset + $length | 0;
                if ($i > var$5) {
                    var$7 = new jl_IndexOutOfBoundsException;
                    var$8 = new jl_StringBuilder;
                    var$8.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(509));
                    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $i, 10);
                    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(510));
                    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$5, 10);
                    var$9 = new jl_String;
                    $dst = var$8.$buffer;
                    $length = var$8.$length;
                    jl_String_$callClinit();
                    var$4 = $rt_createCharArray($length);
                    var$9.$characters = var$4;
                    jl_System_fastArraycopy($dst, 0, var$4, 0, $length);
                    var$7.$suppressionEnabled = 1;
                    var$7.$writableStackTrace = 1;
                    var$7.$message = var$9;
                    $rt_throw(var$7);
                }
                var$5 = $this.$limit;
                $pos = $this.$position;
                if ((var$5 - $pos | 0) < $length) {
                    var$7 = new jn_BufferUnderflowException;
                    var$7.$suppressionEnabled = 1;
                    var$7.$writableStackTrace = 1;
                    $rt_throw(var$7);
                }
                if ($length >= 0) {
                    $i = 0;
                    var$11 = $pos;
                    while ($i < $length) {
                        var$12 = $offset + 1 | 0;
                        var$5 = var$11 + 1 | 0;
                        var$4[$offset] = $this.$array3.data[var$11 + $this.$start1 | 0];
                        $i = $i + 1 | 0;
                        $offset = var$12;
                        var$11 = var$5;
                    }
                    $this.$position = $pos + $length | 0;
                    return $this;
                }
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                var$8.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(511));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $length, 10);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(512));
                var$9 = new jl_String;
                $dst = var$8.$buffer;
                $length = var$8.$length;
                jl_String_$callClinit();
                var$4 = $rt_createCharArray($length);
                var$9.$characters = var$4;
                jl_System_fastArraycopy($dst, 0, var$4, 0, $length);
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                var$7.$message = var$9;
                $rt_throw(var$7);
            }
        }
        $dst = $dst.data;
        var$7 = new jl_IndexOutOfBoundsException;
        $length = $dst.length;
        var$8 = new jl_StringBuilder;
        var$8.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(513));
        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $offset, 10);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $length, 10);
        $length = var$8.$length;
        jl_AbstractStringBuilder_insertSpace(var$8, $length, $length + 1 | 0);
        $dst = var$8.$buffer;
        $dst.data[$length] = 41;
        var$9 = new jl_String;
        $length = var$8.$length;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray($length);
        var$9.$characters = var$4;
        jl_System_fastArraycopy($dst, 0, var$4, 0, $length);
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$9;
        $rt_throw(var$7);
    }
    function jn_CharBuffer_put($this, $src, $offset, $length) {
        var var$4, var$5, $pos, var$7, $i, var$9, var$10, var$11, var$12;
        if ($this.$readOnly1) {
            var$4 = new jn_ReadOnlyBufferException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        var$5 = $this.$limit;
        $pos = $this.$position;
        if ((var$5 - $pos | 0) < $length) {
            var$4 = new jn_BufferOverflowException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        if ($offset >= 0) {
            var$7 = $src.data;
            var$5 = var$7.length;
            if ($offset <= var$5) {
                $i = $offset + $length | 0;
                if ($i > var$5) {
                    var$4 = new jl_IndexOutOfBoundsException;
                    var$9 = new jl_StringBuilder;
                    var$9.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(514));
                    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $i, 10);
                    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(510));
                    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, var$5, 10);
                    var$10 = new jl_String;
                    $src = var$9.$buffer;
                    $length = var$9.$length;
                    jl_String_$callClinit();
                    var$7 = $rt_createCharArray($length);
                    var$10.$characters = var$7;
                    jl_System_fastArraycopy($src, 0, var$7, 0, $length);
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    var$4.$message = var$10;
                    $rt_throw(var$4);
                }
                if ($length >= 0) {
                    $i = 0;
                    var$11 = $pos;
                    while ($i < $length) {
                        var$12 = var$11 + 1 | 0;
                        var$5 = $offset + 1 | 0;
                        $this.$array3.data[var$11 + $this.$start1 | 0] = var$7[$offset];
                        $i = $i + 1 | 0;
                        var$11 = var$12;
                        $offset = var$5;
                    }
                    $this.$position = $pos + $length | 0;
                    return $this;
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$9 = new jl_StringBuilder;
                var$9.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(511));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(512));
                var$10 = new jl_String;
                $src = var$9.$buffer;
                $length = var$9.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray($length);
                var$10.$characters = var$7;
                jl_System_fastArraycopy($src, 0, var$7, 0, $length);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$10;
                $rt_throw(var$4);
            }
        }
        $src = $src.data;
        var$4 = new jl_IndexOutOfBoundsException;
        $length = $src.length;
        var$9 = new jl_StringBuilder;
        var$9.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(513));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $offset, 10);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
        var$5 = var$9.$length;
        jl_AbstractStringBuilder_insertSpace(var$9, var$5, var$5 + 1 | 0);
        $src = var$9.$buffer;
        $src.data[var$5] = 41;
        var$10 = new jl_String;
        $length = var$9.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($length);
        var$10.$characters = var$7;
        jl_System_fastArraycopy($src, 0, var$7, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$10;
        $rt_throw(var$4);
    }
    function jn_CharBuffer_put0($this, $src, $start, $end) {
        var $sz, var$5, $pos, $pos_0, var$8, var$9, var$10, var$11;
        if ($this.$readOnly1) {
            $src = new jn_ReadOnlyBufferException;
            $src.$suppressionEnabled = 1;
            $src.$writableStackTrace = 1;
            $rt_throw($src);
        }
        $sz = $end - $start | 0;
        var$5 = $this.$limit;
        $pos = $this.$position;
        if ((var$5 - $pos | 0) < $sz) {
            $src = new jn_BufferOverflowException;
            $src.$suppressionEnabled = 1;
            $src.$writableStackTrace = 1;
            $rt_throw($src);
        }
        if ($start >= 0) {
            $pos_0 = $src.$characters.data.length;
            if ($start <= $pos_0) {
                if ($end > $pos_0) {
                    $src = new jl_IndexOutOfBoundsException;
                    var$8 = new jl_StringBuilder;
                    var$8.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(514));
                    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $end, 10);
                    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(515));
                    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $pos_0, 10);
                    var$9 = new jl_String;
                    var$10 = var$8.$buffer;
                    $end = var$8.$length;
                    jl_String_$callClinit();
                    var$11 = $rt_createCharArray($end);
                    var$9.$characters = var$11;
                    jl_System_fastArraycopy(var$10, 0, var$11, 0, $end);
                    $src.$suppressionEnabled = 1;
                    $src.$writableStackTrace = 1;
                    $src.$message = var$9;
                    $rt_throw($src);
                }
                if ($start <= $end) {
                    a: {
                        while ($start < $end) {
                            $pos_0 = $pos + 1 | 0;
                            var$5 = $start + 1 | 0;
                            if ($start < 0)
                                break a;
                            var$10 = $src.$characters.data;
                            if ($start >= var$10.length)
                                break a;
                            jn_CharBufferOverArray_putChar($this, $pos, var$10[$start]);
                            $pos = $pos_0;
                            $start = var$5;
                        }
                        $this.$position = $this.$position + $sz | 0;
                        return $this;
                    }
                    $src = new jl_StringIndexOutOfBoundsException;
                    $src.$suppressionEnabled = 1;
                    $src.$writableStackTrace = 1;
                    $rt_throw($src);
                }
                $src = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                var$8.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(516));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $start, 10);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(517));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $end, 10);
                var$9 = new jl_String;
                var$10 = var$8.$buffer;
                $end = var$8.$length;
                jl_String_$callClinit();
                var$11 = $rt_createCharArray($end);
                var$9.$characters = var$11;
                jl_System_fastArraycopy(var$10, 0, var$11, 0, $end);
                $src.$suppressionEnabled = 1;
                $src.$writableStackTrace = 1;
                $src.$message = var$9;
                $rt_throw($src);
            }
        }
        var$8 = new jl_IndexOutOfBoundsException;
        $end = $src.$characters.data.length;
        $src = new jl_StringBuilder;
        $src.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($src, $src.$length, $rt_s(516));
        jl_AbstractStringBuilder_insert0($src, $src.$length, $start, 10);
        jl_AbstractStringBuilder_insert($src, $src.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0($src, $src.$length, $end, 10);
        $end = $src.$length;
        jl_AbstractStringBuilder_insertSpace($src, $end, $end + 1 | 0);
        var$10 = $src.$buffer;
        var$10.data[$end] = 41;
        var$9 = new jl_String;
        $end = $src.$length;
        jl_String_$callClinit();
        var$11 = $rt_createCharArray($end);
        var$9.$characters = var$11;
        jl_System_fastArraycopy(var$10, 0, var$11, 0, $end);
        var$8.$suppressionEnabled = 1;
        var$8.$writableStackTrace = 1;
        var$8.$message = var$9;
        $rt_throw(var$8);
    }
    function jn_ByteBuffer() {
        var a = this; jn_Buffer.call(a);
        a.$start0 = 0;
        a.$array0 = null;
        a.$order = null;
    }
    function jn_ByteBuffer_get($this, $dst, $offset, $length) {
        var var$4, var$5, $pos, var$7, var$8, var$9, var$10, $i, var$12;
        if ($offset >= 0) {
            var$4 = $dst.data;
            var$5 = var$4.length;
            if ($offset <= var$5) {
                $pos = $offset + $length | 0;
                if ($pos > var$5) {
                    var$7 = new jl_IndexOutOfBoundsException;
                    var$8 = new jl_StringBuilder;
                    var$8.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(518));
                    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $pos, 10);
                    jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(510));
                    jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$5, 10);
                    var$9 = new jl_String;
                    $dst = var$8.$buffer;
                    $length = var$8.$length;
                    jl_String_$callClinit();
                    var$4 = $rt_createCharArray($length);
                    var$9.$characters = var$4;
                    jl_System_fastArraycopy($dst, 0, var$4, 0, $length);
                    var$7.$suppressionEnabled = 1;
                    var$7.$writableStackTrace = 1;
                    var$7.$message = var$9;
                    $rt_throw(var$7);
                }
                var$5 = $this.$limit;
                var$10 = $this.$position;
                if ((var$5 - var$10 | 0) < $length) {
                    var$7 = new jn_BufferUnderflowException;
                    var$7.$suppressionEnabled = 1;
                    var$7.$writableStackTrace = 1;
                    $rt_throw(var$7);
                }
                if ($length >= 0) {
                    $pos = var$10 + $this.$start0 | 0;
                    $i = 0;
                    while ($i < $length) {
                        var$12 = $offset + 1 | 0;
                        $dst = $this.$array0.data;
                        var$5 = $pos + 1 | 0;
                        var$4[$offset] = $dst[$pos];
                        $i = $i + 1 | 0;
                        $offset = var$12;
                        $pos = var$5;
                    }
                    $this.$position = var$10 + $length | 0;
                    return $this;
                }
                var$7 = new jl_IndexOutOfBoundsException;
                var$8 = new jl_StringBuilder;
                var$8.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(511));
                jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $length, 10);
                jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(512));
                var$9 = new jl_String;
                $dst = var$8.$buffer;
                $length = var$8.$length;
                jl_String_$callClinit();
                var$4 = $rt_createCharArray($length);
                var$9.$characters = var$4;
                jl_System_fastArraycopy($dst, 0, var$4, 0, $length);
                var$7.$suppressionEnabled = 1;
                var$7.$writableStackTrace = 1;
                var$7.$message = var$9;
                $rt_throw(var$7);
            }
        }
        $dst = $dst.data;
        var$7 = new jl_IndexOutOfBoundsException;
        $length = $dst.length;
        var$8 = new jl_StringBuilder;
        var$8.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(513));
        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $offset, 10);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, $length, 10);
        $length = var$8.$length;
        jl_AbstractStringBuilder_insertSpace(var$8, $length, $length + 1 | 0);
        var$4 = var$8.$buffer;
        var$4.data[$length] = 41;
        var$9 = new jl_String;
        $length = var$8.$length;
        jl_String_$callClinit();
        $dst = $rt_createCharArray($length);
        var$9.$characters = $dst;
        jl_System_fastArraycopy(var$4, 0, $dst, 0, $length);
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$9;
        $rt_throw(var$7);
    }
    function jn_ByteBuffer_put($this, $src, $offset, $length) {
        var var$4, var$5, var$6, var$7, $pos, var$9, var$10, $i, var$12;
        if (!$length)
            return $this;
        if ($this.$readOnly0) {
            var$4 = new jn_ReadOnlyBufferException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        var$5 = $this.$limit;
        var$6 = $this.$position;
        if ((var$5 - var$6 | 0) < $length) {
            var$4 = new jn_BufferOverflowException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        if ($offset >= 0) {
            var$7 = $src.data;
            var$5 = var$7.length;
            if ($offset <= var$5) {
                $pos = $offset + $length | 0;
                if ($pos > var$5) {
                    var$4 = new jl_IndexOutOfBoundsException;
                    var$9 = new jl_StringBuilder;
                    var$9.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(519));
                    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $pos, 10);
                    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(510));
                    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, var$5, 10);
                    var$10 = new jl_String;
                    $src = var$9.$buffer;
                    $length = var$9.$length;
                    jl_String_$callClinit();
                    var$7 = $rt_createCharArray($length);
                    var$10.$characters = var$7;
                    jl_System_fastArraycopy($src, 0, var$7, 0, $length);
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    var$4.$message = var$10;
                    $rt_throw(var$4);
                }
                if ($length >= 0) {
                    $pos = var$6 + $this.$start0 | 0;
                    $i = 0;
                    while ($i < $length) {
                        $src = $this.$array0.data;
                        var$12 = $pos + 1 | 0;
                        var$5 = $offset + 1 | 0;
                        $src[$pos] = var$7[$offset];
                        $i = $i + 1 | 0;
                        $pos = var$12;
                        $offset = var$5;
                    }
                    $this.$position = var$6 + $length | 0;
                    return $this;
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$9 = new jl_StringBuilder;
                var$9.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(511));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(512));
                var$10 = new jl_String;
                $src = var$9.$buffer;
                $length = var$9.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray($length);
                var$10.$characters = var$7;
                jl_System_fastArraycopy($src, 0, var$7, 0, $length);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$10;
                $rt_throw(var$4);
            }
        }
        $src = $src.data;
        var$4 = new jl_IndexOutOfBoundsException;
        $length = $src.length;
        var$9 = new jl_StringBuilder;
        var$9.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(513));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $offset, 10);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
        $length = var$9.$length;
        jl_AbstractStringBuilder_insertSpace(var$9, $length, $length + 1 | 0);
        var$7 = var$9.$buffer;
        var$7.data[$length] = 41;
        var$10 = new jl_String;
        $length = var$9.$length;
        jl_String_$callClinit();
        $src = $rt_createCharArray($length);
        var$10.$characters = $src;
        jl_System_fastArraycopy(var$7, 0, $src, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$10;
        $rt_throw(var$4);
    }
    function jn_ByteBuffer_order($this, $bo) {
        $this.$order = $bo;
        return $this;
    }
    function jn_ByteBuffer_limit($this, var$1) {
        jn_Buffer_limit($this, var$1);
        return $this;
    }
    function jn_ByteBuffer_position($this, var$1) {
        jn_Buffer_position($this, var$1);
        return $this;
    }
    function jnc_CodingErrorAction() {
        jl_Object.call(this);
        this.$name3 = null;
    }
    var jnc_CodingErrorAction_IGNORE = null;
    var jnc_CodingErrorAction_REPLACE = null;
    var jnc_CodingErrorAction_REPORT = null;
    function jnc_CodingErrorAction_$callClinit() {
        jnc_CodingErrorAction_$callClinit = $rt_eraseClinit(jnc_CodingErrorAction);
        jnc_CodingErrorAction__clinit_();
    }
    function jnc_CodingErrorAction__clinit_() {
        var var$1;
        var$1 = new jnc_CodingErrorAction;
        jnc_CodingErrorAction_$callClinit();
        var$1.$name3 = $rt_s(520);
        jnc_CodingErrorAction_IGNORE = var$1;
        var$1 = new jnc_CodingErrorAction;
        var$1.$name3 = $rt_s(521);
        jnc_CodingErrorAction_REPLACE = var$1;
        var$1 = new jnc_CodingErrorAction;
        var$1.$name3 = $rt_s(522);
        jnc_CodingErrorAction_REPORT = var$1;
    }
    var otr_EventQueue$Event = $rt_classWithoutFields(0);
    var jl_ThreadInterruptHandler = $rt_classWithoutFields(0);
    function jl_Thread$SleepHandler() {
        var a = this; jl_Object.call(a);
        a.$thread = null;
        a.$callback = null;
        a.$isInterrupted = 0;
        a.$scheduleId = 0;
    }
    function jl_Thread$SleepHandler_run($this) {
        var var$1, var$2;
        if (!$this.$isInterrupted) {
            var$1 = $this.$thread;
            var$1.$interruptHandler = null;
            jl_Thread_$callClinit();
            if (jl_Thread_currentThread0 !== var$1)
                jl_Thread_currentThread0 = var$1;
            jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
            var$2 = $this.$callback;
            var$1 = null;
            var$2.$realAsyncCallback.$complete(var$1);
        }
    }
    var jn_CharBufferImpl = $rt_classWithoutFields(jn_CharBuffer);
    function jn_CharBufferImpl_compact($this) {
        var var$1, var$2, $src, $sz, $i, var$6, var$7, var$8;
        if ($this.$readOnly1) {
            var$1 = new jn_ReadOnlyBufferException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        a: {
            var$2 = $this.$limit;
            $src = $this.$position;
            $sz = var$2 - $src | 0;
            if ($src > 0) {
                $i = 0;
                while (true) {
                    if ($i >= $sz)
                        break a;
                    var$2 = $src + 1 | 0;
                    var$6 = $this.$array3.data;
                    var$7 = $this.$start1;
                    var$8 = var$6[$src + var$7 | 0];
                    var$6[$i + var$7 | 0] = var$8;
                    $i = $i + 1 | 0;
                    $src = var$2;
                }
            }
        }
        $this.$position = $sz;
        $this.$limit = $this.$capacity;
        $this.$mark = (-1);
        return $this;
    }
    function jn_CharBufferOverArray() {
        var a = this; jn_CharBufferImpl.call(a);
        a.$readOnly1 = 0;
        a.$start1 = 0;
        a.$array3 = null;
    }
    function jn_CharBufferOverArray_putChar($this, $index, $value) {
        $this.$array3.data[$index + $this.$start1 | 0] = $value;
    }
    function jnc_CharsetEncoder() {
        var a = this; jl_Object.call(a);
        a.$charset0 = null;
        a.$replacement0 = null;
        a.$averageBytesPerChar = 0.0;
        a.$maxBytesPerChar = 0.0;
        a.$malformedAction = null;
        a.$unmappableAction = null;
        a.$status = 0;
    }
    function jnc_CharsetEncoder_onMalformedInput($this, $newAction) {
        var var$2;
        if ($newAction !== null) {
            $this.$malformedAction = $newAction;
            return $this;
        }
        var$2 = new jl_IllegalArgumentException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(483);
        $rt_throw(var$2);
    }
    function jnc_CharsetEncoder_implOnMalformedInput($this, $newAction) {}
    function jnc_CharsetEncoder_onUnmappableCharacter($this, $newAction) {
        var var$2;
        if ($newAction !== null) {
            $this.$unmappableAction = $newAction;
            return $this;
        }
        var$2 = new jl_IllegalArgumentException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(483);
        $rt_throw(var$2);
    }
    function jnc_CharsetEncoder_implOnUnmappableCharacter($this, $newAction) {}
    function jnc_CharsetEncoder_encode0($this, $in, $out, $endOfInput) {
        var $remaining, $result, $e, $action, var$8, var$9, var$10, $$je;
        a: {
            $remaining = $this.$status;
            if ($remaining != 3) {
                if ($endOfInput)
                    break a;
                if ($remaining != 2)
                    break a;
            }
            $in = new jl_IllegalStateException;
            $in.$suppressionEnabled = 1;
            $in.$writableStackTrace = 1;
            $rt_throw($in);
        }
        $this.$status = !$endOfInput ? 1 : 2;
        while (true) {
            try {
                $result = jnci_BufferedEncoder_encodeLoop($this, $in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $in = new jnc_CoderMalfunctionError;
                    $in.$suppressionEnabled = 1;
                    $in.$writableStackTrace = 1;
                    $in.$cause = $e;
                    $rt_throw($in);
                } else {
                    throw $$e;
                }
            }
            $remaining = $result.$kind;
            if ($remaining ? 0 : 1) {
                if (!$endOfInput)
                    return $result;
                $remaining = $in.$limit - $in.$position | 0;
                if ($remaining <= 0)
                    return $result;
                $result = new jnc_CoderResult;
                $result.$kind = 2;
                $result.$length0 = $remaining;
            } else if ($remaining != 1 ? 0 : 1)
                break;
            $action = !($result.$kind != 3 ? 0 : 1) ? $this.$malformedAction : $this.$unmappableAction;
            b: {
                jnc_CodingErrorAction_$callClinit();
                if ($action !== jnc_CodingErrorAction_REPLACE) {
                    if ($action === jnc_CodingErrorAction_IGNORE)
                        break b;
                    else
                        return $result;
                }
                var$8 = $out.$limit - $out.$position | 0;
                var$9 = $this.$replacement0;
                $remaining = var$9.data.length;
                if (var$8 < $remaining)
                    return jnc_CoderResult_OVERFLOW;
                jn_ByteBuffer_put($out, var$9, 0, $remaining);
            }
            var$10 = $in.$position;
            $remaining = $result.$kind;
            var$8 = $remaining != 2 ? 0 : 1;
            if (!(!var$8 && !($remaining != 3 ? 0 : 1) ? 0 : 1)) {
                $in = new jl_UnsupportedOperationException;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $rt_throw($in);
            }
            jn_Buffer_position($in, var$10 + $result.$length0 | 0);
        }
        return $result;
    }
    function jnc_CharsetEncoder_encode($this, $in) {
        var var$2, var$3, var$4, $output, $result, var$7;
        var$2 = $in.$limit - $in.$position | 0;
        if (!var$2) {
            $in = new jn_ByteBufferImpl;
            var$3 = $rt_createByteArray(0);
            $in.$mark = (-1);
            $in.$capacity = 0;
            $in.$limit = 0;
            jn_ByteOrder_$callClinit();
            $in.$order = jn_ByteOrder_BIG_ENDIAN;
            $in.$start0 = 0;
            $in.$array0 = var$3;
            $in.$position = 0;
            $in.$limit = 0;
            $in.$direct = 0;
            $in.$readOnly0 = 0;
            return $in;
        }
        $this.$status = 0;
        var$4 = var$2 * $this.$averageBytesPerChar | 0;
        if (var$4 < 0) {
            $in = new jl_IllegalArgumentException;
            $output = new jl_StringBuilder;
            $output.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($output, $output.$length, $rt_s(523));
            jl_AbstractStringBuilder_insert0($output, $output.$length, var$4, 10);
            $result = new jl_String;
            var$3 = $output.$buffer;
            var$2 = $output.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray(var$2);
            $result.$characters = var$7;
            jl_System_fastArraycopy(var$3, 0, var$7, 0, var$2);
            $in.$suppressionEnabled = 1;
            $in.$writableStackTrace = 1;
            $in.$message = $result;
            $rt_throw($in);
        }
        $output = new jn_ByteBufferImpl;
        var$3 = $rt_createByteArray(var$4);
        $output.$mark = (-1);
        $output.$capacity = var$4;
        $output.$limit = var$4;
        jn_ByteOrder_$callClinit();
        $output.$order = jn_ByteOrder_BIG_ENDIAN;
        $output.$start0 = 0;
        $output.$array0 = var$3;
        $output.$position = 0;
        $output.$limit = var$4;
        $output.$direct = 0;
        $output.$readOnly0 = 0;
        while (true) {
            $result = jnc_CharsetEncoder_encode0($this, $in, $output, 0);
            if ($result === jnc_CoderResult_UNDERFLOW)
                break;
            if ($result === jnc_CoderResult_OVERFLOW) {
                $output = jnc_CharsetEncoder_allocateMore($this, $output);
                continue;
            }
            if (!jnc_CoderResult_isError($result))
                continue;
            jnc_CoderResult_throwException($result);
        }
        $in = jnc_CharsetEncoder_encode0($this, $in, $output, 1);
        var$2 = $in.$kind;
        var$4 = var$2 != 2 ? 0 : 1;
        var$4 = !var$4 && !(var$2 != 3 ? 0 : 1) ? 0 : 1;
        a: {
            if (var$4) {
                switch (var$2) {
                    case 0:
                        break;
                    case 1:
                        $in = new jnc_BufferOverflowException;
                        $in.$suppressionEnabled = 1;
                        $in.$writableStackTrace = 1;
                        $rt_throw($in);
                    case 2:
                        $output = new jnc_MalformedInputException;
                        var$4 = $in.$length0;
                        $output.$suppressionEnabled = 1;
                        $output.$writableStackTrace = 1;
                        $output.$length4 = var$4;
                        $rt_throw($output);
                    case 3:
                        $output = new jnc_UnmappableCharacterException;
                        var$4 = $in.$length0;
                        $output.$suppressionEnabled = 1;
                        $output.$writableStackTrace = 1;
                        $output.$length5 = var$4;
                        $rt_throw($output);
                    default:
                        break a;
                }
                $in = new jnc_BufferUnderflowException;
                $in.$suppressionEnabled = 1;
                $in.$writableStackTrace = 1;
                $rt_throw($in);
            }
        }
        while (true) {
            var$2 = (jnc_CharsetEncoder_flush($this, $output)).$kind;
            if (var$2 ? 0 : 1)
                break;
            if (!(var$2 != 1 ? 0 : 1))
                continue;
            $output = jnc_CharsetEncoder_allocateMore($this, $output);
        }
        jn_Buffer_flip($output);
        return $output;
    }
    function jnc_CharsetEncoder_allocateMore($this, $buffer) {
        var var$2, var$3, var$4, $array, var$6, var$7, var$8;
        var$2 = $buffer.$array0.data;
        var$3 = var$2.length;
        var$4 = var$3 * 2 | 0;
        $array = $rt_createByteArray(var$4);
        if (var$4 < var$3)
            var$3 = var$4;
        var$6 = $array.data;
        var$4 = 0;
        while (var$4 < var$3) {
            var$6[var$4] = var$2[var$4];
            var$4 = var$4 + 1 | 0;
        }
        var$3 = var$6.length;
        var$7 = new jn_ByteBufferImpl;
        var$8 = 0 + var$3 | 0;
        var$7.$mark = (-1);
        var$7.$capacity = var$3;
        var$7.$limit = var$3;
        jn_ByteOrder_$callClinit();
        var$7.$order = jn_ByteOrder_BIG_ENDIAN;
        var$7.$start0 = 0;
        var$7.$array0 = $array;
        var$7.$position = 0;
        var$7.$limit = var$8;
        var$7.$direct = 0;
        var$7.$readOnly0 = 0;
        jn_Buffer_position(var$7, $buffer.$position);
        return var$7;
    }
    function jnc_CharsetEncoder_flush($this, $out) {
        var var$2, $result;
        var$2 = $this.$status;
        if (var$2 != 2 && var$2 != 4) {
            $out = new jl_IllegalStateException;
            $out.$suppressionEnabled = 1;
            $out.$writableStackTrace = 1;
            $rt_throw($out);
        }
        $result = jnc_CoderResult_UNDERFLOW;
        if ($result === $result)
            $this.$status = 3;
        return $result;
    }
    function jnc_CharsetEncoder_implFlush($this, $out) {
        return jnc_CoderResult_UNDERFLOW;
    }
    function jnc_CharsetEncoder_reset($this) {
        $this.$status = 0;
        return $this;
    }
    function jnc_CharsetEncoder_implReset($this) {}
    function jnc_CoderResult() {
        var a = this; jl_Object.call(a);
        a.$kind = 0;
        a.$length0 = 0;
    }
    var jnc_CoderResult_UNDERFLOW = null;
    var jnc_CoderResult_OVERFLOW = null;
    function jnc_CoderResult__init_(var_0, var_1) {
        var var_2 = new jnc_CoderResult();
        jnc_CoderResult__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jnc_CoderResult__init_0($this, $kind, $length) {
        $this.$kind = $kind;
        $this.$length0 = $length;
    }
    function jnc_CoderResult_isError($this) {
        var var$1, var$2;
        var$1 = $this.$kind;
        var$2 = var$1 != 2 ? 0 : 1;
        return !var$2 && !(var$1 != 3 ? 0 : 1) ? 0 : 1;
    }
    function jnc_CoderResult_malformedForLength($length) {
        var var$2;
        var$2 = new jnc_CoderResult;
        var$2.$kind = 2;
        var$2.$length0 = $length;
        return var$2;
    }
    function jnc_CoderResult_throwException($this) {
        var var$1, var$2;
        switch ($this.$kind) {
            case 0:
                var$1 = new jnc_BufferUnderflowException;
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                $rt_throw(var$1);
            case 1:
                var$1 = new jnc_BufferOverflowException;
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                $rt_throw(var$1);
            case 2:
                var$1 = new jnc_MalformedInputException;
                var$2 = $this.$length0;
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                var$1.$length4 = var$2;
                $rt_throw(var$1);
            case 3:
                var$1 = new jnc_UnmappableCharacterException;
                var$2 = $this.$length0;
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                var$1.$length5 = var$2;
                $rt_throw(var$1);
            default:
        }
    }
    function jnc_CoderResult__clinit_() {
        var var$1;
        var$1 = new jnc_CoderResult;
        var$1.$kind = 0;
        var$1.$length0 = 0;
        jnc_CoderResult_UNDERFLOW = var$1;
        var$1 = new jnc_CoderResult;
        var$1.$kind = 1;
        var$1.$length0 = 0;
        jnc_CoderResult_OVERFLOW = var$1;
    }
    function otcit_FloatAnalyzer$Result() {
        var a = this; jl_Object.call(a);
        a.$mantissa = 0;
        a.$exponent = 0;
        a.$sign0 = 0;
    }
    function cbggg_BitmapFont$BitmapFontData() {
        var a = this; jl_Object.call(a);
        a.$name4 = null;
        a.$imagePaths = null;
        a.$fontFile = null;
        a.$flipped0 = 0;
        a.$padTop = 0.0;
        a.$padRight = 0.0;
        a.$padBottom = 0.0;
        a.$padLeft = 0.0;
        a.$lineHeight = 0.0;
        a.$capHeight = 0.0;
        a.$ascent = 0.0;
        a.$descent = 0.0;
        a.$down = 0.0;
        a.$blankLineScale = 0.0;
        a.$scaleX = 0.0;
        a.$scaleY = 0.0;
        a.$markupEnabled = 0;
        a.$glyphs0 = null;
        a.$missingGlyph = null;
        a.$spaceXadvance = 0.0;
        a.$xHeight = 0.0;
        a.$breakChars = null;
        a.$xChars = null;
        a.$capChars = null;
    }
    function cbggg_BitmapFont$BitmapFontData__init_(var_0, var_1) {
        var var_2 = new cbggg_BitmapFont$BitmapFontData();
        cbggg_BitmapFont$BitmapFontData__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbggg_BitmapFont$BitmapFontData__init_0($this, $fontFile, $flip) {
        $this.$capHeight = 1.0;
        $this.$blankLineScale = 1.0;
        $this.$scaleX = 1.0;
        $this.$scaleY = 1.0;
        $this.$glyphs0 = $rt_createArray($rt_arraycls(cbggg_BitmapFont$Glyph), 128);
        $this.$xHeight = 1.0;
        $this.$xChars = $rt_createCharArrayFromData([120, 101, 97, 111, 110, 115, 114, 99, 117, 109, 118, 119, 122]);
        $this.$capChars = $rt_createCharArrayFromData([77, 78, 66, 68, 67, 69, 70, 75, 65, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]);
        $this.$fontFile = $fontFile;
        $this.$flipped0 = $flip;
        cbggg_BitmapFont$BitmapFontData_load($this, $fontFile, $flip);
    }
    function cbggg_BitmapFont$BitmapFontData_load($this, $fontFile, $flip) {
        var $reader, $line, $padding, $padY, $p, $baseLine, $pageCount, $ch, $matcher, $id, $ex, $fileName, $glyph, $tokens, $first, $second, $amount, $hasMetricsOverride, $overrideAscent, $overrideDescent, $overrideDown, $overrideCapHeight, $overrideLineHeight, $overrideSpaceXAdvance, $overrideXHeight, $spaceGlyph, $xadvanceGlyph, var$30, $xGlyph, $capGlyph, $common, $page, $$je;
        if ($this.$imagePaths !== null)
            $rt_throw(jl_IllegalStateException__init_($rt_s(524)));
        $this.$name4 = cgxgbt_TeaFileHandle_nameWithoutExtension($fontFile);
        $reader = ji_BufferedReader__init_(ji_InputStreamReader__init_(cgxgbt_TeaFileHandle_read($fontFile)), 512);
        a: {
            b: {
                try {
                    $line = ji_BufferedReader_readLine($reader);
                    if ($line === null)
                        $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(525)));
                    $line = jl_String_substring0($line, jl_String_indexOf2($line, $rt_s(526)) + 8 | 0);
                    $padding = (jl_String_split0(jl_String_substring($line, 0, jl_String_indexOf0($line, 32)), $rt_s(527), 4)).data;
                    if ($padding.length != 4)
                        $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(528)));
                    $this.$padTop = jl_Integer_parseInt0($padding[0]);
                    $this.$padRight = jl_Integer_parseInt0($padding[1]);
                    $this.$padBottom = jl_Integer_parseInt0($padding[2]);
                    $this.$padLeft = jl_Integer_parseInt0($padding[3]);
                    $padY = $this.$padTop + $this.$padBottom;
                    $line = ji_BufferedReader_readLine($reader);
                    if ($line === null)
                        $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(529)));
                    $padding = (jl_String_split0($line, $rt_s(213), 9)).data;
                    $p = $padding.length;
                    if ($p < 3)
                        $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(530)));
                    if (!jl_String_startsWith0($padding[1], $rt_s(531)))
                        $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(532)));
                    $this.$lineHeight = jl_Integer_parseInt0(jl_String_substring0($padding[1], 11));
                    if (!jl_String_startsWith0($padding[2], $rt_s(533)))
                        $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(534)));
                    c: {
                        $baseLine = jl_Integer_parseInt0(jl_String_substring0($padding[2], 5));
                        $pageCount = 1;
                        if ($p < 6)
                            $ch = $pageCount;
                        else if ($padding[5] === null)
                            $ch = $pageCount;
                        else if (!jl_String_startsWith0($padding[5], $rt_s(535)))
                            $ch = $pageCount;
                        else {
                            try {
                                $ch = jl_Math_max(1, jl_Integer_parseInt0(jl_String_substring0($padding[5], 6)));
                                $pageCount = $ch;
                                break c;
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_NumberFormatException) {
                                } else {
                                    throw $$e;
                                }
                            }
                            $ch = $pageCount;
                        }
                    }
                    $this.$imagePaths = $rt_createArray(jl_String, $ch);
                    $p = 0;
                    d: {
                        e: {
                            f: {
                                while (true) {
                                    if ($p >= $ch)
                                        break d;
                                    $line = ji_BufferedReader_readLine($reader);
                                    if ($line === null)
                                        $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(536)));
                                    g: {
                                        $matcher = jur_Pattern_matcher(jur_Pattern_compile0($rt_s(537)), $line);
                                        if (jur_Matcher_find($matcher)) {
                                            $id = jur_Matcher_group($matcher, 1);
                                            try {
                                                if (jl_Integer_parseInt0($id) != $p)
                                                    break f;
                                                break g;
                                            } catch ($$e) {
                                                $$je = $rt_wrapException($$e);
                                                if ($$je instanceof jl_NumberFormatException) {
                                                    $ex = $$je;
                                                    break e;
                                                } else {
                                                    throw $$e;
                                                }
                                            }
                                        }
                                    }
                                    $line = jur_Pattern_matcher(jur_Pattern_compile0($rt_s(538)), $line);
                                    if (!jur_Matcher_find($line))
                                        break;
                                    $fileName = jur_Matcher_group($line, 1);
                                    $this.$imagePaths.data[$p] = jl_String_replaceAll(cgxgbt_TeaFileHandle_path(cgxgbt_TeaFileHandle_child(cgxgbt_TeaFileHandle_parent($fontFile), $fileName)), $rt_s(539), $rt_s(120));
                                    $p = $p + 1 | 0;
                                }
                                $rt_throw(cbgu_GdxRuntimeException__init_2($rt_s(540)));
                            }
                            try {
                                $rt_throw(cbgu_GdxRuntimeException__init_2(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(541)), $id))));
                            } catch ($$e) {
                                $$je = $rt_wrapException($$e);
                                if ($$je instanceof jl_NumberFormatException) {
                                    $ex = $$je;
                                } else {
                                    throw $$e;
                                }
                            }
                        }
                        $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(542)), $id)), $ex));
                    }
                    $this.$descent = 0.0;
                    h: {
                        while (true) {
                            $line = ji_BufferedReader_readLine($reader);
                            if ($line === null)
                                break;
                            if (jl_String_startsWith0($line, $rt_s(543)))
                                break h;
                            if (jl_String_startsWith0($line, $rt_s(544)))
                                break h;
                            if (!jl_String_startsWith0($line, $rt_s(545)))
                                continue;
                            $glyph = cbggg_BitmapFont$Glyph__init_();
                            $tokens = ju_StringTokenizer__init_($line, $rt_s(546));
                            ju_StringTokenizer_nextToken($tokens);
                            ju_StringTokenizer_nextToken($tokens);
                            $ch = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            if ($ch <= 0)
                                $this.$missingGlyph = $glyph;
                            else {
                                if ($ch > 65535)
                                    continue;
                                cbggg_BitmapFont$BitmapFontData_setGlyph($this, $ch, $glyph);
                            }
                            $glyph.$id = $ch;
                            ju_StringTokenizer_nextToken($tokens);
                            $glyph.$srcX = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            ju_StringTokenizer_nextToken($tokens);
                            $glyph.$srcY = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            ju_StringTokenizer_nextToken($tokens);
                            $glyph.$width1 = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            ju_StringTokenizer_nextToken($tokens);
                            $glyph.$height4 = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            ju_StringTokenizer_nextToken($tokens);
                            $glyph.$xoffset = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            ju_StringTokenizer_nextToken($tokens);
                            if ($flip)
                                $glyph.$yoffset = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            else
                                $glyph.$yoffset =  -($glyph.$height4 + jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens)) | 0) | 0;
                            ju_StringTokenizer_nextToken($tokens);
                            $glyph.$xadvance = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            if (ju_StringTokenizer_hasMoreTokens($tokens))
                                ju_StringTokenizer_nextToken($tokens);
                            i: {
                                if (ju_StringTokenizer_hasMoreTokens($tokens))
                                    try {
                                        $glyph.$page = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                                        break i;
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_NumberFormatException) {
                                        } else {
                                            throw $$e;
                                        }
                                    }
                            }
                            if ($glyph.$width1 > 0 && $glyph.$height4 > 0)
                                $this.$descent = jl_Math_min($baseLine + $glyph.$yoffset, $this.$descent);
                        }
                    }
                    $this.$descent = $this.$descent + $this.$padBottom;
                    j: {
                        while (true) {
                            $line = ji_BufferedReader_readLine($reader);
                            if ($line === null)
                                break;
                            if (!jl_String_startsWith0($line, $rt_s(547)))
                                break j;
                            $tokens = ju_StringTokenizer__init_($line, $rt_s(546));
                            ju_StringTokenizer_nextToken($tokens);
                            ju_StringTokenizer_nextToken($tokens);
                            $first = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            ju_StringTokenizer_nextToken($tokens);
                            $second = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            if ($first < 0)
                                continue;
                            if ($first > 65535)
                                continue;
                            if ($second < 0)
                                continue;
                            if ($second > 65535)
                                continue;
                            $glyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $first & 65535);
                            ju_StringTokenizer_nextToken($tokens);
                            $amount = jl_Integer_parseInt0(ju_StringTokenizer_nextToken($tokens));
                            if ($glyph !== null)
                                cbggg_BitmapFont$Glyph_setKerning($glyph, $second, $amount);
                        }
                    }
                    $hasMetricsOverride = 0;
                    $overrideAscent = 0.0;
                    $overrideDescent = 0.0;
                    $overrideDown = 0.0;
                    $overrideCapHeight = 0.0;
                    $overrideLineHeight = 0.0;
                    $overrideSpaceXAdvance = 0.0;
                    $overrideXHeight = 0.0;
                    if ($line !== null && jl_String_startsWith0($line, $rt_s(544))) {
                        $hasMetricsOverride = 1;
                        $tokens = ju_StringTokenizer__init_($line, $rt_s(546));
                        ju_StringTokenizer_nextToken($tokens);
                        ju_StringTokenizer_nextToken($tokens);
                        $overrideAscent = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $overrideDescent = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $overrideDown = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $overrideCapHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $overrideLineHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $overrideSpaceXAdvance = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                        ju_StringTokenizer_nextToken($tokens);
                        $overrideXHeight = jl_Float_parseFloat(ju_StringTokenizer_nextToken($tokens));
                    }
                    $spaceGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, 32);
                    if ($spaceGlyph === null) {
                        $spaceGlyph = cbggg_BitmapFont$Glyph__init_();
                        $spaceGlyph.$id = 32;
                        $xadvanceGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, 108);
                        if ($xadvanceGlyph === null)
                            $xadvanceGlyph = cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this);
                        $spaceGlyph.$xadvance = $xadvanceGlyph.$xadvance;
                        cbggg_BitmapFont$BitmapFontData_setGlyph($this, 32, $spaceGlyph);
                    }
                    if (!$spaceGlyph.$width1) {
                        var$30 = $this.$padLeft;
                        $spaceGlyph.$width1 = var$30 + $spaceGlyph.$xadvance + $this.$padRight | 0;
                        $spaceGlyph.$xoffset =  -var$30 | 0;
                    }
                    $this.$spaceXadvance = $spaceGlyph.$xadvance;
                    $xGlyph = null;
                    $padding = $this.$xChars.data;
                    $ch = $padding.length;
                    $p = 0;
                    k: {
                        while ($p < $ch) {
                            $xGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $padding[$p]);
                            if ($xGlyph !== null)
                                break k;
                            $p = $p + 1 | 0;
                        }
                    }
                    if ($xGlyph === null)
                        $xGlyph = cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this);
                    $this.$xHeight = $xGlyph.$height4 - $padY;
                    $capGlyph = null;
                    $padding = $this.$capChars.data;
                    $ch = $padding.length;
                    $p = 0;
                    l: {
                        while ($p < $ch) {
                            $capGlyph = cbggg_BitmapFont$BitmapFontData_getGlyph($this, $padding[$p]);
                            if ($capGlyph !== null)
                                break l;
                            $p = $p + 1 | 0;
                        }
                    }
                    if ($capGlyph !== null)
                        $this.$capHeight = $capGlyph.$height4;
                    else {
                        $common = $this.$glyphs0.data;
                        $pageCount = $common.length;
                        $ch = 0;
                        while ($ch < $pageCount) {
                            m: {
                                $page = $common[$ch];
                                if ($page !== null) {
                                    $padding = $page.data;
                                    $p = $padding.length;
                                    $first = 0;
                                    while (true) {
                                        if ($first >= $p)
                                            break m;
                                        $glyph = $padding[$first];
                                        if ($glyph !== null) {
                                            $second = $glyph.$height4;
                                            if ($second && $glyph.$width1)
                                                $this.$capHeight = jl_Math_max0($this.$capHeight, $second);
                                        }
                                        $first = $first + 1 | 0;
                                    }
                                }
                            }
                            $ch = $ch + 1 | 0;
                        }
                    }
                    $padY = $this.$capHeight - $padY;
                    $this.$capHeight = $padY;
                    $baseLine = $baseLine - $padY;
                    $this.$ascent = $baseLine;
                    $padY =  -$this.$lineHeight;
                    $this.$down = $padY;
                    if ($flip) {
                        $this.$ascent =  -$baseLine;
                        $this.$down =  -$padY;
                    }
                    if ($hasMetricsOverride) {
                        $this.$ascent = $overrideAscent;
                        $this.$descent = $overrideDescent;
                        $this.$down = $overrideDown;
                        $this.$capHeight = $overrideCapHeight;
                        $this.$lineHeight = $overrideLineHeight;
                        $this.$spaceXadvance = $overrideSpaceXAdvance;
                        $this.$xHeight = $overrideXHeight;
                    }
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Exception) {
                        $ex = $$je;
                        break b;
                    } else{
                        $fontFile = $$je;
                        break a;
                    }
                }
                cbgu_StreamUtils_closeQuietly($reader);
                return;
            }
            try {
                $rt_throw(cbgu_GdxRuntimeException__init_0(jl_StringBuilder_toString(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(548)), $fontFile)), $ex));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                $fontFile = $$je;

            }
        }
        cbgu_StreamUtils_closeQuietly($reader);
        $rt_throw($fontFile);
    }
    function cbggg_BitmapFont$BitmapFontData_setGlyphRegion($this, $glyph, $region) {
        var $texture, $invTexWidth, $invTexHeight, $offsetX, $offsetY, $u, $v, $regionWidth, $regionHeight, $atlasRegion, var$13, $x, var$15, $x2, $y, var$18, $y2, $amount;
        $texture = $region.$texture.$data0;
        $invTexWidth = 1.0 / $texture.$width3;
        $invTexHeight = 1.0 / $texture.$height1;
        $offsetX = 0.0;
        $offsetY = 0.0;
        $u = $region.$u;
        $v = $region.$v;
        $regionWidth = $region.$regionWidth;
        $regionHeight = $region.$regionHeight;
        if ($region instanceof cbggg_TextureAtlas$AtlasRegion) {
            $atlasRegion = $region;
            $offsetX = $atlasRegion.$offsetX;
            $offsetY = ($atlasRegion.$originalHeight - $atlasRegion.$packedHeight | 0) - $atlasRegion.$offsetY;
        }
        var$13 = $glyph.$srcX;
        $x = var$13;
        var$15 = $glyph.$width1;
        $x2 = var$13 + var$15 | 0;
        var$13 = $glyph.$srcY;
        $y = var$13;
        var$18 = $glyph.$height4;
        $y2 = var$13 + var$18 | 0;
        if ($offsetX <= 0.0)
            $regionWidth = $x2;
        else {
            $x = $x - $offsetX;
            if ($x < 0.0) {
                $glyph.$width1 = var$15 + $x | 0;
                $glyph.$xoffset = $glyph.$xoffset - $x | 0;
                $x = 0.0;
            }
            $offsetX = $x2 - $offsetX;
            if ($offsetX <= $regionWidth)
                $regionWidth = $offsetX;
            else
                $glyph.$width1 = $glyph.$width1 - ($offsetX - $regionWidth) | 0;
        }
        if ($offsetY <= 0.0)
            $regionHeight = $y2;
        else {
            $y = $y - $offsetY;
            if ($y < 0.0) {
                var$13 = var$18 + $y | 0;
                $glyph.$height4 = var$13;
                if (var$13 < 0)
                    $glyph.$height4 = 0;
                $y = 0.0;
            }
            $offsetX = $y2 - $offsetY;
            if ($offsetX <= $regionHeight)
                $regionHeight = $offsetX;
            else {
                $amount = $offsetX - $regionHeight;
                $glyph.$height4 = $glyph.$height4 - $amount | 0;
                $glyph.$yoffset = $glyph.$yoffset + $amount | 0;
            }
        }
        $glyph.$u0 = $u + $x * $invTexWidth;
        $glyph.$u20 = $u + $regionWidth * $invTexWidth;
        if (!$this.$flipped0) {
            $glyph.$v20 = $v + $y * $invTexHeight;
            $glyph.$v0 = $v + $regionHeight * $invTexHeight;
        } else {
            $glyph.$v0 = $v + $y * $invTexHeight;
            $glyph.$v20 = $v + $regionHeight * $invTexHeight;
        }
    }
    function cbggg_BitmapFont$BitmapFontData_setGlyph($this, $ch, $glyph) {
        var var$3, var$4, $page;
        var$3 = $this.$glyphs0.data;
        var$4 = $ch / 512 | 0;
        $page = var$3[var$4];
        if ($page === null) {
            $page = $rt_createArray(cbggg_BitmapFont$Glyph, 512);
            var$3[var$4] = $page;
        }
        $page.data[$ch & 511] = $glyph;
    }
    function cbggg_BitmapFont$BitmapFontData_getFirstGlyph($this) {
        var var$1, var$2, var$3, var$4, $page, var$6, var$7, $glyph;
        var$1 = $this.$glyphs0.data;
        var$2 = var$1.length;
        var$3 = 0;
        a: while (true) {
            if (var$3 >= var$2) {
                var$4 = new cbgu_GdxRuntimeException;
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = $rt_s(549);
                $rt_throw(var$4);
            }
            b: {
                $page = var$1[var$3];
                if ($page !== null) {
                    $page = $page.data;
                    var$6 = $page.length;
                    var$7 = 0;
                    while (true) {
                        if (var$7 >= var$6)
                            break b;
                        $glyph = $page[var$7];
                        if ($glyph !== null && $glyph.$height4 && $glyph.$width1)
                            break a;
                        var$7 = var$7 + 1 | 0;
                    }
                }
            }
            var$3 = var$3 + 1 | 0;
        }
        return $glyph;
    }
    function cbggg_BitmapFont$BitmapFontData_getGlyph($this, $ch) {
        var $page;
        $page = $this.$glyphs0.data[$ch / 512 | 0];
        if ($page === null)
            return null;
        return $page.data[$ch & 511];
    }
    function cbggg_BitmapFont$BitmapFontData_getGlyphs($this, $run, $str, $start, $end, $lastGlyph) {
        var $max, $markupEnabled, $scaleX, $glyphs, $xAdvances, var$11, var$12, $ch, $glyph, $lastGlyphWidth;
        $max = $end - $start | 0;
        if (!$max)
            return;
        $markupEnabled = $this.$markupEnabled;
        $scaleX = $this.$scaleX;
        $glyphs = $run.$glyphs;
        $xAdvances = $run.$xAdvances;
        cbgu_Array_ensureCapacity($glyphs, $max);
        cbgu_FloatArray_ensureCapacity($run.$xAdvances, $max + 1 | 0);
        a: {
            while (true) {
                var$11 = $start + 1 | 0;
                if ($start < 0)
                    break;
                var$12 = $str.$characters.data;
                if ($start >= var$12.length)
                    break;
                b: {
                    $ch = var$12[$start];
                    if ($ch != 13) {
                        var$12 = $this.$glyphs0.data[$ch / 512 | 0];
                        $glyph = var$12 === null ? null : var$12.data[$ch & 511];
                        if ($glyph === null) {
                            $glyph = $this.$missingGlyph;
                            if ($glyph === null)
                                break b;
                        }
                        cbgu_Array_add($glyphs, $glyph);
                        if ($lastGlyph === null)
                            $lastGlyphWidth = $glyph.$fixedWidth ? 0.0 : ( -$glyph.$xoffset | 0) * $scaleX - $this.$padLeft;
                        else {
                            c: {
                                $start = $lastGlyph.$xadvance;
                                var$12 = $lastGlyph.$kerning;
                                if (var$12 !== null) {
                                    var$12 = var$12.data[$ch >>> 9 | 0];
                                    if (var$12 !== null) {
                                        $max = var$12.data[$ch & 511];
                                        break c;
                                    }
                                }
                                $max = 0;
                            }
                            $lastGlyphWidth = ($start + $max | 0) * $scaleX;
                        }
                        cbgu_FloatArray_add($xAdvances, $lastGlyphWidth);
                        if (!$markupEnabled)
                            $lastGlyph = $glyph;
                        else if ($ch != 91)
                            $lastGlyph = $glyph;
                        else if (var$11 >= $end)
                            $lastGlyph = $glyph;
                        else {
                            if (var$11 < 0)
                                break a;
                            var$12 = $str.$characters.data;
                            if (var$11 >= var$12.length)
                                break a;
                            if (var$12[var$11] != 91)
                                $lastGlyph = $glyph;
                            else {
                                var$11 = var$11 + 1 | 0;
                                $lastGlyph = $glyph;
                            }
                        }
                    }
                }
                if (var$11 >= $end) {
                    if ($lastGlyph !== null)
                        cbgu_FloatArray_add($xAdvances, $lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $scaleX : ($lastGlyph.$width1 + $lastGlyph.$xoffset | 0) * $scaleX - $this.$padRight);
                    return;
                }
                $start = var$11;
            }
            $run = new jl_StringIndexOutOfBoundsException;
            $run.$suppressionEnabled = 1;
            $run.$writableStackTrace = 1;
            $rt_throw($run);
        }
        $run = new jl_StringIndexOutOfBoundsException;
        $run.$suppressionEnabled = 1;
        $run.$writableStackTrace = 1;
        $rt_throw($run);
    }
    function cbggg_BitmapFont$BitmapFontData_getWrapIndex($this, $glyphs, $start) {
        var $i, $glyphsItems, $ch, var$6, var$7, var$8;
        a: {
            $i = $start - 1 | 0;
            $glyphsItems = $glyphs.$items.data;
            $ch = $glyphsItems[$i].$id & 65535;
            switch ($ch) {
                case 9:
                case 10:
                case 13:
                case 32:
                    break;
                default:
                    $start = 0;
                    break a;
            }
            $start = 1;
        }
        if ($start)
            return $i;
        b: {
            var$6 = $this.$breakChars;
            if (var$6 === null)
                $start = 0;
            else {
                var$7 = var$6.data;
                $start = var$7.length;
                var$8 = 0;
                while (var$8 < $start) {
                    if ($ch == var$7[var$8]) {
                        $start = 1;
                        break b;
                    }
                    var$8 = var$8 + 1 | 0;
                }
                $start = 0;
            }
        }
        if ($start)
            $i = $i + (-1) | 0;
        c: {
            while ($i > 0) {
                d: {
                    $start = $glyphsItems[$i].$id & 65535;
                    switch ($start) {
                        case 9:
                        case 10:
                        case 13:
                        case 32:
                            break;
                        default:
                            $ch = 0;
                            break d;
                    }
                    $ch = 1;
                }
                if ($ch)
                    break c;
                e: {
                    if (var$6 === null)
                        $start = 0;
                    else {
                        var$7 = var$6.data;
                        $ch = var$7.length;
                        var$8 = 0;
                        while (var$8 < $ch) {
                            if ($start == var$7[var$8]) {
                                $start = 1;
                                break e;
                            }
                            var$8 = var$8 + 1 | 0;
                        }
                        $start = 0;
                    }
                }
                if ($start)
                    break c;
                $i = $i + (-1) | 0;
            }
            return 0;
        }
        return $i + 1 | 0;
    }
    var cbgg_Mesh$VertexDataType = $rt_classWithoutFields(jl_Enum);
    var cbgg_Mesh$VertexDataType_VertexArray = null;
    var cbgg_Mesh$VertexDataType_VertexBufferObject = null;
    var cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = null;
    var cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = null;
    var cbgg_Mesh$VertexDataType_$VALUES = null;
    function cbgg_Mesh$VertexDataType_$callClinit() {
        cbgg_Mesh$VertexDataType_$callClinit = $rt_eraseClinit(cbgg_Mesh$VertexDataType);
        cbgg_Mesh$VertexDataType__clinit_();
    }
    function cbgg_Mesh$VertexDataType__clinit_() {
        var var$1, var$2, var$3, var$4;
        var$1 = new cbgg_Mesh$VertexDataType;
        cbgg_Mesh$VertexDataType_$callClinit();
        var$1.$name0 = $rt_s(550);
        var$1.$ordinal = 0;
        cbgg_Mesh$VertexDataType_VertexArray = var$1;
        var$2 = new cbgg_Mesh$VertexDataType;
        var$2.$name0 = $rt_s(551);
        var$2.$ordinal = 1;
        cbgg_Mesh$VertexDataType_VertexBufferObject = var$2;
        var$3 = new cbgg_Mesh$VertexDataType;
        var$3.$name0 = $rt_s(552);
        var$3.$ordinal = 2;
        cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = var$3;
        var$4 = new cbgg_Mesh$VertexDataType;
        var$4.$name0 = $rt_s(553);
        var$4.$ordinal = 3;
        cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = var$4;
        cbgg_Mesh$VertexDataType_$VALUES = $rt_createArrayFromData(cbgg_Mesh$VertexDataType, [var$1, var$2, var$3, var$4]);
    }
    function cbgg_Mesh() {
        var a = this; jl_Object.call(a);
        a.$vertices = null;
        a.$indices = null;
        a.$autoBind = 0;
        a.$isVertexArray = 0;
        a.$instances = null;
        a.$isInstanced = 0;
        a.$tmpV = null;
    }
    var cbgg_Mesh_meshes = null;
    function cbgg_Mesh__init_0(var_0, var_1, var_2, var_3, var_4) {
        var var_5 = new cbgg_Mesh();
        cbgg_Mesh__init_(var_5, var_0, var_1, var_2, var_3, var_4);
        return var_5;
    }
    function cbgg_Mesh__init_($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) {
        var var$6, var$7, var$8, var$9, var$10;
        a: {
            b: {
                $this.$autoBind = 1;
                $this.$isInstanced = 0;
                var$6 = new cbgm_Vector3;
                cbgm_Vector3_$callClinit();
                $this.$tmpV = var$6;
                cbgg_Mesh$1_$callClinit();
                switch (cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[$type.$ordinal]) {
                    case 1:
                        $this.$vertices = cbggg_VertexBufferObject__init_($isStatic, $maxVertices, $attributes);
                        $type = new cbggg_IndexBufferObject;
                        $type.$isDirty = 1;
                        $type.$isBound = 0;
                        $type.$isDirect = 1;
                        if (!cgxgbt_TeaTool_isProd) {
                            var$7 = $rt_createShortArray($maxIndices);
                            $maxIndices = var$7.data.length;
                            $attributes = new jn_ShortBufferOverArray;
                            var$8 = 0 + $maxIndices | 0;
                            jl_Object__init_0($attributes);
                            $attributes.$mark = (-1);
                            $attributes.$capacity = $maxIndices;
                            $attributes.$limit = $maxIndices;
                            $attributes.$position = 0;
                            $attributes.$limit = var$8;
                            $attributes.$start6 = 0;
                            $attributes.$readOnly2 = 0;
                            $attributes.$array5 = var$7;
                        } else {
                            $maxVertices = $maxIndices * 2 | 0;
                            if ($maxVertices < 0) {
                                $type = new jl_IllegalArgumentException;
                                $attributes = new jl_StringBuilder;
                                $attributes.$buffer = $rt_createCharArray(16);
                                jl_StringBuilder_insert($attributes, $attributes.$length, jl_String_toString($rt_s(523)));
                                jl_AbstractStringBuilder_insert0($attributes, $attributes.$length, $maxVertices, 10);
                                var$6 = new jl_String;
                                var$7 = $attributes.$buffer;
                                $maxVertices = $attributes.$length;
                                var$9 = $rt_createCharArray($maxVertices);
                                var$6.$characters = var$9;
                                jl_System_fastArraycopy(var$7, 0, var$9, 0, $maxVertices);
                                $type.$suppressionEnabled = 1;
                                $type.$writableStackTrace = 1;
                                $type.$message = var$6;
                                $rt_throw($type);
                            }
                            $attributes = new jn_ByteBufferImpl;
                            var$7 = $rt_createByteArray($maxVertices);
                            $attributes.$mark = (-1);
                            $attributes.$capacity = $maxVertices;
                            $attributes.$limit = $maxVertices;
                            jn_ByteOrder_$callClinit();
                            $attributes.$order = jn_ByteOrder_BIG_ENDIAN;
                            $attributes.$start0 = 0;
                            $attributes.$array0 = var$7;
                            $attributes.$position = 0;
                            $attributes.$limit = $maxVertices;
                            $attributes.$direct = 1;
                            $attributes.$readOnly0 = 0;
                            $attributes.$order = jn_ByteOrder_nativeOrder();
                            $attributes = jn_ByteBufferImpl_asShortBuffer($attributes);
                        }
                        $type.$buffer2 = $attributes;
                        $attributes.$limit = $attributes.$position;
                        $attributes.$position = 0;
                        $attributes.$mark = (-1);
                        $attributes = cbg_Gdx_gl20;
                        var$6 = $attributes.$gl.createBuffer();
                        $maxIndices = $attributes.$nextBufferId;
                        $attributes.$nextBufferId = $maxIndices + 1 | 0;
                        cbgu_IntMap_put($attributes.$buffers, $maxIndices, otji_JSWrapper_wrap(var$6));
                        $type.$bufferHandle = $maxIndices;
                        $type.$usage0 = !$isStatic ? 35048 : 35044;
                        $this.$indices = $type;
                        $this.$isVertexArray = 0;
                        break a;
                    case 2:
                        break;
                    case 3:
                        $this.$vertices = cbggg_VertexBufferObjectWithVAO__init_($isStatic, $maxVertices, $attributes);
                        $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                        $this.$isVertexArray = 0;
                        break a;
                    case 4:
                        break b;
                    default:
                        break b;
                }
                $this.$vertices = cbggg_VertexBufferObjectSubData__init_($isStatic, $maxVertices, $attributes);
                $this.$indices = cbggg_IndexBufferObjectSubData__init_($isStatic, $maxIndices);
                $this.$isVertexArray = 0;
                break a;
            }
            $type = new cbggg_VertexArray;
            cbggg_VertexBufferObject__init_0($type, 0, $maxVertices, $attributes);
            $this.$vertices = $type;
            $type = new cbggg_IndexArray;
            $type.$isDirty = 1;
            $type.$isBound = 0;
            $type.$isDirect = 1;
            if (!cgxgbt_TeaTool_isProd) {
                var$7 = $rt_createShortArray($maxIndices);
                $maxVertices = var$7.data.length;
                $attributes = new jn_ShortBufferOverArray;
                var$10 = 0 + $maxVertices | 0;
                jn_Buffer__init_($attributes, $maxVertices);
                $attributes.$position = 0;
                $attributes.$limit = var$10;
                $attributes.$start6 = 0;
                $attributes.$readOnly2 = 0;
                $attributes.$array5 = var$7;
            } else {
                $isStatic = $maxIndices * 2 | 0;
                if ($isStatic < 0) {
                    $type = new jl_IllegalArgumentException;
                    $attributes = new jl_StringBuilder;
                    $attributes.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert5($attributes, $attributes.$length, $rt_s(523));
                    jl_AbstractStringBuilder_append($attributes, $isStatic);
                    jl_IllegalArgumentException__init_2($type, jl_StringBuilder_toString($attributes));
                    $rt_throw($type);
                }
                var$6 = new jn_ByteBufferImpl;
                var$7 = $rt_createByteArray($isStatic);
                jl_Object__init_0(var$6);
                var$6.$mark = (-1);
                var$6.$capacity = $isStatic;
                var$6.$limit = $isStatic;
                jn_ByteOrder_$callClinit();
                var$6.$order = jn_ByteOrder_BIG_ENDIAN;
                var$6.$start0 = 0;
                var$6.$array0 = var$7;
                var$6.$position = 0;
                var$6.$limit = $isStatic;
                var$6.$direct = 1;
                var$6.$readOnly0 = 0;
                jn_ByteBuffer_order(var$6, jn_ByteOrder_nativeOrder());
                $attributes = jn_ByteBufferImpl_asShortBuffer(var$6);
            }
            $type.$buffer2 = $attributes;
            jn_ShortBuffer_flip($attributes);
            $type.$bufferHandle = cgxgbt_TeaGL20_glGenBuffer(cbg_Gdx_gl20);
            $type.$usage0 = 35044;
            $this.$indices = $type;
            $this.$isVertexArray = 1;
        }
        cbgg_Mesh_addManagedMesh(cbg_Gdx_app, $this);
    }
    function cbgg_Mesh_render($this, $shader, $primitiveType, $offset, $count, $autoBind) {
        var $buffer, var$7, $oldPosition, $numInstances, var$10, var$11;
        if (!$count)
            return;
        if ($autoBind) {
            $buffer = null;
            var$7 = null;
            $this.$vertices.$bind0($shader, $buffer);
            $buffer = $this.$instances;
            if ($buffer !== null && $buffer.$getNumInstances() > 0)
                $this.$instances.$bind0($shader, var$7);
            if ($this.$indices.$getNumIndices() > 0)
                $this.$indices.$bind();
        }
        if ($this.$isVertexArray) {
            if ($this.$indices.$getNumIndices() <= 0)
                cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
            else {
                $buffer = $this.$indices.$getBuffer(0);
                $oldPosition = $buffer.$position;
                jn_Buffer_position($buffer, $offset);
                cbg_Gdx_gl20.$glDrawElements($primitiveType, $count, 5123, $buffer);
                jn_Buffer_position($buffer, $oldPosition);
            }
        } else {
            $numInstances = 0;
            if ($this.$isInstanced)
                $numInstances = $this.$instances.$getNumInstances();
            if ($this.$indices.$getNumIndices() <= 0) {
                if ($this.$isInstanced && $numInstances > 0)
                    cbg_Gdx_gl30.$glDrawArraysInstanced($primitiveType, $offset, $count, $numInstances);
                else
                    cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
            } else {
                if (($count + $offset | 0) > $this.$indices.$getNumMaxIndices()) {
                    $shader = new cbgu_GdxRuntimeException;
                    $buffer = new jl_StringBuilder;
                    $buffer.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(554));
                    jl_AbstractStringBuilder_insert0($buffer, $buffer.$length, $count, 10);
                    jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(555));
                    jl_AbstractStringBuilder_insert0($buffer, $buffer.$length, $offset, 10);
                    jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(556));
                    $primitiveType = $this.$indices.$getNumMaxIndices();
                    jl_AbstractStringBuilder_insert0($buffer, $buffer.$length, $primitiveType, 10);
                    jl_AbstractStringBuilder_insert($buffer, $buffer.$length, $rt_s(557));
                    var$7 = new jl_String;
                    var$10 = $buffer.$buffer;
                    $offset = $buffer.$length;
                    jl_String_$callClinit();
                    var$11 = $rt_createCharArray($offset);
                    var$7.$characters = var$11;
                    jl_System_fastArraycopy(var$10, 0, var$11, 0, $offset);
                    $shader.$suppressionEnabled = 1;
                    $shader.$writableStackTrace = 1;
                    $shader.$message = var$7;
                    $rt_throw($shader);
                }
                if ($this.$isInstanced && $numInstances > 0)
                    cbg_Gdx_gl30.$glDrawElementsInstanced($primitiveType, $count, 5123, $offset * 2 | 0, $numInstances);
                else
                    cbg_Gdx_gl20.$glDrawElements0($primitiveType, $count, 5123, $offset * 2 | 0);
            }
        }
        if ($autoBind) {
            $buffer = null;
            var$7 = null;
            $this.$vertices.$unbind($shader, $buffer);
            $buffer = $this.$instances;
            if ($buffer !== null && $buffer.$getNumInstances() > 0)
                $this.$instances.$unbind($shader, var$7);
            if ($this.$indices.$getNumIndices() > 0)
                $this.$indices.$unbind0();
        }
    }
    function cbgg_Mesh_getVertexAttribute($this, $usage) {
        var var$2, $len, $i;
        var$2 = ($this.$vertices.$getAttributes()).$attributes.data;
        $len = var$2.length;
        $i = 0;
        while ($i < $len) {
            if (var$2[$i].$usage == $usage)
                return var$2[$i];
            $i = $i + 1 | 0;
        }
        return null;
    }
    function cbgg_Mesh_getVertexAttributes($this) {
        return $this.$vertices.$getAttributes();
    }
    function cbgg_Mesh_addManagedMesh($app, $mesh) {
        var $managedResources, var$4, var$5, var$6, var$7;
        $managedResources = cbgg_Mesh_meshes;
        if ($app === null) {
            $managedResources = $managedResources.$elementData.data[0];
            while ($managedResources !== null && $managedResources.$key !== null) {
                $managedResources = $managedResources.$next;
            }
        } else {
            var$4 = $app;
            if (!var$4.$id$) {
                var$5 = $rt_nextId();
                var$4.$id$ = var$5;
            }
            var$6 = $app.$id$;
            var$7 = $managedResources.$elementData.data;
            $managedResources = var$7[var$6 & (var$7.length - 1 | 0)];
            while ($managedResources !== null) {
                if ($managedResources.$origKeyHash == var$6) {
                    var$5 = $managedResources.$key;
                    if ($app !== var$5 && !($app !== var$5 ? 0 : 1) ? 0 : 1)
                        break;
                }
                $managedResources = $managedResources.$next;
            }
        }
        $managedResources = $managedResources === null ? null : $managedResources.$value4;
        if ($managedResources === null) {
            $managedResources = new cbgu_Array;
            $managedResources.$ordered = 1;
            $managedResources.$items = $rt_createArray(jl_Object, 16);
        }
        cbgu_Array_add($managedResources, $mesh);
        ju_HashMap_putImpl(cbgg_Mesh_meshes, $app, $managedResources);
    }
    function cbgg_Mesh__clinit_() {
        var var$1, var$2, var$3, var$4;
        var$1 = new ju_HashMap;
        var$2 = ju_HashMap_calculateCapacity(16);
        var$1.$elementCount = 0;
        var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
        var$4 = var$3.data;
        var$1.$elementData = var$3;
        var$1.$loadFactor = 0.75;
        var$1.$threshold = var$4.length * 0.75 | 0;
        cbgg_Mesh_meshes = var$1;
    }
    var otcjn_HasArrayBufferView = $rt_classWithoutFields(0);
    function jn_ByteBufferImpl() {
        var a = this; jn_ByteBuffer.call(a);
        a.$direct = 0;
        a.$readOnly0 = 0;
    }
    function jn_ByteBufferImpl_get($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if ($index >= 0 && $index < $this.$limit)
            return $this.$array0.data[$this.$start0 + $index | 0];
        var$2 = new jl_IndexOutOfBoundsException;
        var$3 = $this.$limit;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(558));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
        var$3 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
        var$5 = var$4.$buffer;
        var$5.data[var$3] = 41;
        var$6 = new jl_String;
        var$3 = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$3);
        var$6.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$6;
        $rt_throw(var$2);
    }
    function jn_ByteBufferImpl_compact($this) {
        var var$1, $dst, var$3, $sz, $src, $i, var$7, var$8, var$9;
        if ($this.$readOnly0) {
            var$1 = new jn_ReadOnlyBufferException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        a: {
            $dst = $this.$limit;
            var$3 = $this.$position;
            $sz = $dst - var$3 | 0;
            if (var$3 > 0) {
                $dst = $this.$start0;
                $src = $dst + var$3 | 0;
                $i = 0;
                while (true) {
                    if ($i >= $sz)
                        break a;
                    var$7 = $this.$array0.data;
                    var$8 = $dst + 1 | 0;
                    var$9 = $src + 1 | 0;
                    var$7[$dst] = var$7[$src];
                    $i = $i + 1 | 0;
                    $dst = var$8;
                    $src = var$9;
                }
            }
        }
        $this.$position = $sz;
        $this.$limit = $this.$capacity;
        $this.$mark = (-1);
        return $this;
    }
    function jn_ByteBufferImpl_asShortBuffer($this) {
        var var$1, var$2, $sz, var$4, var$5, var$6;
        var$1 = $this.$limit;
        var$2 = $this.$position;
        $sz = (var$1 - var$2 | 0) / 2 | 0;
        var$4 = $this.$order;
        jn_ByteOrder_$callClinit();
        if (var$4 !== jn_ByteOrder_BIG_ENDIAN) {
            var$4 = new jn_ShortBufferOverByteBufferLittleEndian;
            var$5 = $this.$start0 + var$2 | 0;
            var$2 = $this.$readOnly0;
            var$4.$mark = (-1);
            var$4.$capacity = $sz;
            var$4.$limit = $sz;
            var$4.$position = 0;
            var$4.$limit = $sz;
            var$4.$start7 = var$5;
            var$4.$byteByffer0 = $this;
            var$4.$readOnly3 = var$2;
            return var$4;
        }
        var$4 = new jn_ShortBufferOverByteBufferBigEndian;
        var$1 = $this.$start0 + var$2 | 0;
        var$6 = $this.$readOnly0;
        var$4.$mark = (-1);
        var$4.$capacity = $sz;
        var$4.$limit = $sz;
        var$4.$position = 0;
        var$4.$limit = $sz;
        var$4.$start7 = var$1;
        var$4.$byteByffer0 = $this;
        var$4.$readOnly3 = var$6;
        return var$4;
    }
    function jn_ByteBufferImpl_getInt($this, $index) {
        var var$2, $a, $b, $c, $d, var$7, var$8, var$9, var$10;
        if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
            var$2 = $this.$array0.data;
            $index = $this.$start0 + $index | 0;
            $a = var$2[$index] & 255;
            $b = var$2[$index + 1 | 0] & 255;
            $c = var$2[$index + 2 | 0] & 255;
            $d = var$2[$index + 3 | 0] & 255;
            var$7 = $this.$order;
            jn_ByteOrder_$callClinit();
            if (var$7 !== jn_ByteOrder_BIG_ENDIAN)
                return $d << 24 | $c << 16 | $b << 8 | $a;
            return $a << 24 | $b << 16 | $c << 8 | $d;
        }
        var$8 = new jl_IndexOutOfBoundsException;
        $a = $this.$limit - 3 | 0;
        var$7 = new jl_StringBuilder;
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(558));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$7, var$7.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $a, 10);
        $a = var$7.$length;
        jl_AbstractStringBuilder_insertSpace(var$7, $a, $a + 1 | 0);
        var$2 = var$7.$buffer;
        var$2.data[$a] = 41;
        var$9 = new jl_String;
        $a = var$7.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray($a);
        var$9.$characters = var$10;
        jl_System_fastArraycopy(var$2, 0, var$10, 0, $a);
        var$8.$suppressionEnabled = 1;
        var$8.$writableStackTrace = 1;
        var$8.$message = var$9;
        $rt_throw(var$8);
    }
    function jn_ByteBufferImpl_putInt($this, $index, $value) {
        var var$3, var$4, var$5, var$6, var$7;
        if ($this.$readOnly0) {
            var$3 = new jn_ReadOnlyBufferException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        if ($index >= 0 && ($index + 3 | 0) < $this.$limit) {
            var$3 = $this.$order;
            jn_ByteOrder_$callClinit();
            if (var$3 !== jn_ByteOrder_BIG_ENDIAN) {
                var$4 = $this.$array0.data;
                $index = $this.$start0 + $index | 0;
                var$4[$index] = $value << 24 >> 24;
                var$4[$index + 1 | 0] = $value >> 8 << 24 >> 24;
                var$4[$index + 2 | 0] = $value >> 16 << 24 >> 24;
                var$4[$index + 3 | 0] = $value >> 24 << 24 >> 24;
            } else {
                var$4 = $this.$array0.data;
                $index = $this.$start0 + $index | 0;
                var$4[$index] = $value >> 24 << 24 >> 24;
                var$4[$index + 1 | 0] = $value >> 16 << 24 >> 24;
                var$4[$index + 2 | 0] = $value >> 8 << 24 >> 24;
                var$4[$index + 3 | 0] = $value << 24 >> 24;
            }
            return $this;
        }
        var$3 = new jl_IndexOutOfBoundsException;
        $value = $this.$limit - 3 | 0;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(558));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $value, 10);
        $value = var$5.$length;
        jl_AbstractStringBuilder_insertSpace(var$5, $value, $value + 1 | 0);
        var$4 = var$5.$buffer;
        var$4.data[$value] = 41;
        var$6 = new jl_String;
        $value = var$5.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($value);
        var$6.$characters = var$7;
        jl_System_fastArraycopy(var$4, 0, var$7, 0, $value);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$6;
        $rt_throw(var$3);
    }
    function jn_ByteBufferImpl_asIntBuffer($this) {
        var var$1, var$2, $sz, var$4, var$5, var$6;
        var$1 = $this.$limit;
        var$2 = $this.$position;
        $sz = (var$1 - var$2 | 0) / 4 | 0;
        var$4 = $this.$order;
        jn_ByteOrder_$callClinit();
        if (var$4 !== jn_ByteOrder_BIG_ENDIAN) {
            var$4 = new jn_IntBufferOverByteBufferLittleEndian;
            var$5 = $this.$start0 + var$2 | 0;
            var$2 = $this.$readOnly0;
            var$4.$mark = (-1);
            var$4.$capacity = $sz;
            var$4.$limit = $sz;
            var$4.$position = 0;
            var$4.$limit = $sz;
            var$4.$start8 = var$5;
            var$4.$byteByffer1 = $this;
            var$4.$readOnly4 = var$2;
            return var$4;
        }
        var$4 = new jn_IntBufferOverByteBufferBigEndian;
        var$1 = $this.$start0 + var$2 | 0;
        var$6 = $this.$readOnly0;
        var$4.$mark = (-1);
        var$4.$capacity = $sz;
        var$4.$limit = $sz;
        var$4.$position = 0;
        var$4.$limit = $sz;
        var$4.$start8 = var$1;
        var$4.$byteByffer1 = $this;
        var$4.$readOnly4 = var$6;
        return var$4;
    }
    function jn_ByteBufferImpl_asFloatBuffer($this) {
        var var$1, var$2, $sz, var$4, var$5, var$6;
        var$1 = $this.$limit;
        var$2 = $this.$position;
        $sz = (var$1 - var$2 | 0) / 4 | 0;
        var$4 = $this.$order;
        jn_ByteOrder_$callClinit();
        if (var$4 !== jn_ByteOrder_LITTLE_ENDIAN) {
            var$4 = new jn_FloatBufferOverByteBufferLittleEndian;
            var$5 = $this.$start0 + var$2 | 0;
            var$2 = $this.$readOnly0;
            var$4.$mark = (-1);
            var$4.$capacity = $sz;
            var$4.$limit = $sz;
            var$4.$position = 0;
            var$4.$limit = $sz;
            var$4.$start9 = var$5;
            var$4.$byteByffer = $this;
            var$4.$readOnly5 = var$2;
            return var$4;
        }
        var$4 = new jn_FloatBufferOverByteBufferBigEndian;
        var$1 = $this.$start0 + var$2 | 0;
        var$6 = $this.$readOnly0;
        var$4.$mark = (-1);
        var$4.$capacity = $sz;
        var$4.$limit = $sz;
        var$4.$position = 0;
        var$4.$limit = $sz;
        var$4.$start9 = var$1;
        var$4.$byteByffer = $this;
        var$4.$readOnly5 = var$6;
        return var$4;
    }
    function jn_ByteBufferImpl_getTypedArray($this) {
        return $this.$array0.data;
    }
    function cbggg_BitmapFont$Glyph() {
        var a = this; jl_Object.call(a);
        a.$id = 0;
        a.$srcX = 0;
        a.$srcY = 0;
        a.$width1 = 0;
        a.$height4 = 0;
        a.$u0 = 0.0;
        a.$v0 = 0.0;
        a.$u20 = 0.0;
        a.$v20 = 0.0;
        a.$xoffset = 0;
        a.$yoffset = 0;
        a.$xadvance = 0;
        a.$kerning = null;
        a.$fixedWidth = 0;
        a.$page = 0;
    }
    function cbggg_BitmapFont$Glyph__init_() {
        var var_0 = new cbggg_BitmapFont$Glyph();
        cbggg_BitmapFont$Glyph__init_0(var_0);
        return var_0;
    }
    function cbggg_BitmapFont$Glyph__init_0($this) {
        $this.$page = 0;
    }
    function cbggg_BitmapFont$Glyph_setKerning($this, $ch, $value) {
        var var$3, var$4, $page;
        if ($this.$kerning === null)
            $this.$kerning = $rt_createArray($rt_arraycls($rt_bytecls()), 128);
        var$3 = $this.$kerning.data;
        var$4 = $ch >>> 9 | 0;
        $page = var$3[var$4];
        if ($page === null) {
            $page = $rt_createByteArray(512);
            var$3[var$4] = $page;
        }
        $page.data[$ch & 511] = $value << 24 >> 24;
    }
    function cbggg_BitmapFont$Glyph_toString($this) {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = $this.$id & 65535;
        var$2 = new jl_String;
        var$3 = $rt_createCharArray(1);
        var$4 = var$3.data;
        var$4[0] = var$1;
        jl_String_$callClinit();
        var$5 = var$4.length;
        var$4 = $rt_createCharArray(var$5);
        var$2.$characters = var$4;
        jl_System_fastArraycopy(var$3, 0, var$4, 0, var$5);
        return var$2;
    }
    function cbgg_VertexAttributes() {
        var a = this; jl_Object.call(a);
        a.$attributes = null;
        a.$vertexSize = 0;
        a.$mask3 = Long_ZERO;
        a.$boneWeightUnits = 0;
        a.$textureCoordinates = 0;
    }
    function cbgg_VertexAttributes__init_(var_0) {
        var var_1 = new cbgg_VertexAttributes();
        cbgg_VertexAttributes__init_0(var_1, var_0);
        return var_1;
    }
    function cbgg_VertexAttributes__init_0($this, $attributes) {
        var var$2, var$3, $list, var$5, $i, var$7;
        $attributes = $attributes.data;
        $this.$mask3 = Long_fromInt(-1);
        $this.$boneWeightUnits = (-1);
        $this.$textureCoordinates = (-1);
        var$2 = $attributes.length;
        if (!var$2) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = $rt_s(559);
            $rt_throw(var$3);
        }
        $list = $rt_createArray(cbgg_VertexAttribute, var$2);
        var$5 = $list.data;
        $i = 0;
        while ($i < var$2) {
            var$5[$i] = $attributes[$i];
            $i = $i + 1 | 0;
        }
        $this.$attributes = $list;
        var$2 = 0;
        var$7 = 0;
        while (var$7 < var$5.length) {
            a: {
                b: {
                    var$3 = var$5[var$7];
                    var$3.$offset = var$2;
                    switch (var$3.$type0) {
                        case 5120:
                        case 5121:
                            break;
                        case 5122:
                        case 5123:
                            $i = 2 * var$3.$numComponents | 0;
                            break a;
                        case 5124:
                        case 5125:
                        case 5127:
                        case 5128:
                        case 5129:
                        case 5130:
                        case 5131:
                            break b;
                        case 5126:
                        case 5132:
                            $i = 4 * var$3.$numComponents | 0;
                            break a;
                        default:
                            break b;
                    }
                    $i = var$3.$numComponents;
                    break a;
                }
                $i = 0;
            }
            var$2 = var$2 + $i | 0;
            var$7 = var$7 + 1 | 0;
        }
        $this.$vertexSize = var$2;
    }
    function cbggg_ShaderProgram() {
        var a = this; jl_Object.call(a);
        a.$log = null;
        a.$isCompiled = 0;
        a.$uniforms0 = null;
        a.$uniformTypes = null;
        a.$uniformSizes = null;
        a.$uniformNames = null;
        a.$attributes0 = null;
        a.$attributeTypes = null;
        a.$attributeSizes = null;
        a.$attributeNames = null;
        a.$program = 0;
        a.$vertexShaderHandle = 0;
        a.$fragmentShaderHandle = 0;
        a.$matrix = null;
        a.$vertexShaderSource = null;
        a.$fragmentShaderSource = null;
        a.$invalidated = 0;
        a.$refCount = 0;
        a.$params = null;
        a.$type4 = null;
    }
    var cbggg_ShaderProgram_pedantic = 0;
    var cbggg_ShaderProgram_prependVertexCode = null;
    var cbggg_ShaderProgram_prependFragmentCode = null;
    var cbggg_ShaderProgram_shaders = null;
    var cbggg_ShaderProgram_intbuf = null;
    function cbggg_ShaderProgram_$callClinit() {
        cbggg_ShaderProgram_$callClinit = $rt_eraseClinit(cbggg_ShaderProgram);
        cbggg_ShaderProgram__clinit_();
    }
    function cbggg_ShaderProgram__init_(var_0, var_1) {
        var var_2 = new cbggg_ShaderProgram();
        cbggg_ShaderProgram__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbggg_ShaderProgram__init_0($this, $vertexShader, $fragmentShader) {
        var var$3, var$4, var$5, var$6, var$7;
        cbggg_ShaderProgram_$callClinit();
        $this.$log = $rt_s(45);
        $this.$uniforms0 = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
        $this.$uniformTypes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
        $this.$uniformSizes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
        $this.$attributes0 = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
        $this.$attributeTypes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
        $this.$attributeSizes = cbgu_ObjectIntMap__init_(51, 0.800000011920929);
        $this.$refCount = 0;
        if (!cgxgbt_TeaTool_isProd) {
            var$3 = $rt_createIntArray(1);
            var$4 = var$3.data.length;
            var$5 = new jn_IntBufferOverArray;
            var$6 = 0 + var$4 | 0;
            var$5.$mark = (-1);
            var$5.$capacity = var$4;
            var$5.$limit = var$4;
            var$5.$position = 0;
            var$5.$limit = var$6;
            var$5.$start10 = 0;
            var$5.$readOnly6 = 0;
            var$5.$array6 = var$3;
        } else {
            var$7 = new jn_ByteBufferImpl;
            var$3 = $rt_createByteArray(4);
            var$7.$mark = (-1);
            var$7.$capacity = 4;
            var$7.$limit = 4;
            jn_ByteOrder_$callClinit();
            var$7.$order = jn_ByteOrder_BIG_ENDIAN;
            var$7.$start0 = 0;
            var$7.$array0 = var$3;
            var$7.$position = 0;
            var$7.$limit = 4;
            var$7.$direct = 1;
            var$7.$readOnly0 = 0;
            var$7.$order = jn_ByteOrder_nativeOrder();
            var$5 = jn_ByteBufferImpl_asIntBuffer(var$7);
        }
        $this.$params = var$5;
        if (!cgxgbt_TeaTool_isProd) {
            var$3 = $rt_createIntArray(1);
            var$4 = var$3.data.length;
            var$5 = new jn_IntBufferOverArray;
            var$6 = 0 + var$4 | 0;
            var$5.$mark = (-1);
            var$5.$capacity = var$4;
            var$5.$limit = var$4;
            var$5.$position = 0;
            var$5.$limit = var$6;
            var$5.$start10 = 0;
            var$5.$readOnly6 = 0;
            var$5.$array6 = var$3;
        } else {
            var$7 = new jn_ByteBufferImpl;
            var$3 = $rt_createByteArray(4);
            var$7.$mark = (-1);
            var$7.$capacity = 4;
            var$7.$limit = 4;
            jn_ByteOrder_$callClinit();
            var$7.$order = jn_ByteOrder_BIG_ENDIAN;
            var$7.$start0 = 0;
            var$7.$array0 = var$3;
            var$7.$position = 0;
            var$7.$limit = 4;
            var$7.$direct = 1;
            var$7.$readOnly0 = 0;
            jn_ByteBuffer_order(var$7, jn_ByteOrder_nativeOrder());
            var$5 = jn_ByteBufferImpl_asIntBuffer(var$7);
        }
        $this.$type4 = var$5;
        if ($vertexShader === null)
            $rt_throw(jl_IllegalArgumentException__init_1($rt_s(560)));
        if ($fragmentShader === null)
            $rt_throw(jl_IllegalArgumentException__init_1($rt_s(561)));
        var$5 = cbggg_ShaderProgram_prependVertexCode;
        if (var$5 !== null && jl_String_length(var$5) > 0)
            $vertexShader = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), cbggg_ShaderProgram_prependVertexCode), $vertexShader));
        var$5 = cbggg_ShaderProgram_prependFragmentCode;
        if (var$5 !== null && jl_String_length(var$5) > 0)
            $fragmentShader = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder__init_(), cbggg_ShaderProgram_prependFragmentCode), $fragmentShader));
        $this.$vertexShaderSource = $vertexShader;
        $this.$fragmentShaderSource = $fragmentShader;
        $this.$matrix = cbgu_BufferUtils_newFloatBuffer(16);
        cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader);
        if (cbggg_ShaderProgram_isCompiled($this)) {
            cbggg_ShaderProgram_fetchAttributes($this);
            cbggg_ShaderProgram_fetchUniforms($this);
            cbggg_ShaderProgram_addManagedShader($this, cbg_Gdx_app, $this);
        }
    }
    function cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader) {
        var var$3;
        $this.$vertexShaderHandle = cbggg_ShaderProgram_loadShader($this, 35633, $vertexShader);
        var$3 = cbggg_ShaderProgram_loadShader($this, 35632, $fragmentShader);
        $this.$fragmentShaderHandle = var$3;
        if ($this.$vertexShaderHandle != (-1) && var$3 != (-1)) {
            var$3 = cbg_Gdx_gl20.$glCreateProgram();
            if (!var$3)
                var$3 = (-1);
            var$3 = cbggg_ShaderProgram_linkProgram($this, var$3);
            $this.$program = var$3;
            if (var$3 != (-1)) {
                $this.$isCompiled = 1;
                return;
            }
            $this.$isCompiled = 0;
            return;
        }
        $this.$isCompiled = 0;
    }
    function cbggg_ShaderProgram_loadShader($this, $type, $source) {
        var $gl, var$4, $compiled, $intbuf, var$7, $infoLog, var$9, $shader;
        $gl = cbg_Gdx_gl20;
        if (!cgxgbt_TeaTool_isProd) {
            var$4 = $rt_createIntArray(1);
            $compiled = var$4.data.length;
            $intbuf = new jn_IntBufferOverArray;
            var$7 = 0 + $compiled | 0;
            $intbuf.$mark = (-1);
            $intbuf.$capacity = $compiled;
            $intbuf.$limit = $compiled;
            $intbuf.$position = 0;
            $intbuf.$limit = var$7;
            $intbuf.$start10 = 0;
            $intbuf.$readOnly6 = 0;
            $intbuf.$array6 = var$4;
        } else {
            $infoLog = new jn_ByteBufferImpl;
            var$9 = $rt_createByteArray(4);
            $infoLog.$mark = (-1);
            $infoLog.$capacity = 4;
            $infoLog.$limit = 4;
            jn_ByteOrder_$callClinit();
            $infoLog.$order = jn_ByteOrder_BIG_ENDIAN;
            $infoLog.$start0 = 0;
            $infoLog.$array0 = var$9;
            $infoLog.$position = 0;
            $infoLog.$limit = 4;
            $infoLog.$direct = 1;
            $infoLog.$readOnly0 = 0;
            $infoLog.$order = jn_ByteOrder_nativeOrder();
            $intbuf = jn_ByteBufferImpl_asIntBuffer($infoLog);
        }
        $shader = $gl.$glCreateShader($type);
        if (!$shader)
            return (-1);
        $gl.$glShaderSource($shader, $source);
        $gl.$glCompileShader($shader);
        $gl.$glGetShaderiv($shader, 35713, $intbuf);
        if (jn_IntBufferImpl_get($intbuf, 0))
            return $shader;
        $infoLog = $gl.$glGetShaderInfoLog($shader);
        $source = new jl_StringBuilder;
        $source.$buffer = $rt_createCharArray(16);
        $gl = $this.$log;
        jl_AbstractStringBuilder_insert($source, $source.$length, $gl);
        $gl = $type != 35633 ? $rt_s(562) : $rt_s(563);
        jl_AbstractStringBuilder_insert($source, $source.$length, $gl);
        $gl = new jl_String;
        var$9 = $source.$buffer;
        $shader = $source.$length;
        jl_String_$callClinit();
        var$4 = $rt_createCharArray($shader);
        $gl.$characters = var$4;
        jl_System_fastArraycopy(var$9, 0, var$4, 0, $shader);
        $this.$log = $gl;
        $source = new jl_StringBuilder;
        $source.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($source, $source.$length, $gl);
        jl_AbstractStringBuilder_insert($source, $source.$length, $infoLog);
        $gl = new jl_String;
        var$9 = $source.$buffer;
        $shader = $source.$length;
        var$4 = $rt_createCharArray($shader);
        $gl.$characters = var$4;
        jl_System_fastArraycopy(var$9, 0, var$4, 0, $shader);
        $this.$log = $gl;
        return (-1);
    }
    function cbggg_ShaderProgram_linkProgram($this, $program) {
        var $gl, $tmp_0, var$4, $intbuf;
        $gl = cbg_Gdx_gl20;
        if ($program == (-1))
            return (-1);
        $gl.$glAttachShader($program, $this.$vertexShaderHandle);
        $gl.$glAttachShader($program, $this.$fragmentShaderHandle);
        $gl.$glLinkProgram($program);
        $tmp_0 = new jn_ByteBufferImpl;
        var$4 = $rt_createByteArray(4);
        $tmp_0.$mark = (-1);
        $tmp_0.$capacity = 4;
        $tmp_0.$limit = 4;
        jn_ByteOrder_$callClinit();
        $tmp_0.$order = jn_ByteOrder_BIG_ENDIAN;
        $tmp_0.$start0 = 0;
        $tmp_0.$array0 = var$4;
        $tmp_0.$position = 0;
        $tmp_0.$limit = 4;
        $tmp_0.$direct = 1;
        $tmp_0.$readOnly0 = 0;
        $tmp_0.$order = jn_ByteOrder_nativeOrder();
        $intbuf = jn_ByteBufferImpl_asIntBuffer($tmp_0);
        $gl.$glGetProgramiv($program, 35714, $intbuf);
        if (jn_IntBufferImpl_get($intbuf, 0))
            return $program;
        $this.$log = cbg_Gdx_gl20.$glGetProgramInfoLog($program);
        return (-1);
    }
    function cbggg_ShaderProgram_isCompiled($this) {
        return $this.$isCompiled;
    }
    function cbggg_ShaderProgram_fetchUniformLocation($this, $name, $pedantic) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        var$3 = $this.$uniforms0;
        var$4 = (-2);
        var$5 = cbgu_ObjectIntMap_locateKey(var$3, $name);
        if (var$5 >= 0)
            var$4 = var$3.$valueTable1.data[var$5];
        if (var$4 == (-2)) {
            var$4 = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
            if (var$4 == (-1) && $pedantic) {
                if ($this.$isCompiled) {
                    var$3 = new jl_IllegalArgumentException;
                    var$6 = new jl_StringBuilder;
                    var$6.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(564));
                    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $name);
                    jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(565));
                    $name = new jl_String;
                    var$7 = var$6.$buffer;
                    var$4 = var$6.$length;
                    jl_String_$callClinit();
                    var$8 = $rt_createCharArray(var$4);
                    $name.$characters = var$8;
                    jl_System_fastArraycopy(var$7, 0, var$8, 0, var$4);
                    var$3.$suppressionEnabled = 1;
                    var$3.$writableStackTrace = 1;
                    var$3.$message = $name;
                    $rt_throw(var$3);
                }
                $name = new jl_IllegalStateException;
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(566));
                if (!$this.$isCompiled)
                    var$6 = $this.$log;
                else {
                    var$6 = cbg_Gdx_gl20.$glGetProgramInfoLog($this.$program);
                    $this.$log = var$6;
                }
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$6);
                var$6 = new jl_String;
                var$7 = var$3.$buffer;
                var$4 = var$3.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray(var$4);
                var$6.$characters = var$8;
                jl_System_fastArraycopy(var$7, 0, var$8, 0, var$4);
                $name.$suppressionEnabled = 1;
                $name.$writableStackTrace = 1;
                $name.$message = var$6;
                $rt_throw($name);
            }
            cbgu_ObjectIntMap_put($this.$uniforms0, $name, var$4);
        }
        return var$4;
    }
    function cbggg_ShaderProgram_dispose($this) {
        var $gl, var$2;
        $gl = cbg_Gdx_gl20;
        $gl.$glUseProgram(0);
        $gl.$glDeleteShader($this.$vertexShaderHandle);
        $gl.$glDeleteShader($this.$fragmentShaderHandle);
        $gl.$glDeleteProgram($this.$program);
        cbggg_ShaderProgram_$callClinit();
        $gl = cbggg_ShaderProgram_shaders;
        var$2 = cbgu_ObjectMap_locateKey($gl, cbg_Gdx_app);
        if ((var$2 < 0 ? null : $gl.$valueTable.data[var$2]) !== null) {
            $gl = cbggg_ShaderProgram_shaders;
            var$2 = cbgu_ObjectMap_locateKey($gl, cbg_Gdx_app);
            cbgu_Array_removeValue(var$2 < 0 ? null : $gl.$valueTable.data[var$2], $this, 1);
        }
    }
    function cbggg_ShaderProgram_checkManaged($this) {
        if ($this.$invalidated) {
            cbggg_ShaderProgram_compileShaders($this, $this.$vertexShaderSource, $this.$fragmentShaderSource);
            $this.$invalidated = 0;
        }
    }
    function cbggg_ShaderProgram_addManagedShader($this, $app, $shaderProgram) {
        var $managedResources, var$4;
        cbggg_ShaderProgram_$callClinit();
        $managedResources = cbggg_ShaderProgram_shaders;
        var$4 = cbgu_ObjectMap_locateKey($managedResources, $app);
        $managedResources = var$4 < 0 ? null : $managedResources.$valueTable.data[var$4];
        if ($managedResources === null) {
            $managedResources = new cbgu_Array;
            $managedResources.$ordered = 1;
            $managedResources.$items = $rt_createArray(jl_Object, 16);
        }
        cbgu_Array_add($managedResources, $shaderProgram);
        cbgu_ObjectMap_put(cbggg_ShaderProgram_shaders, $app, $managedResources);
    }
    function cbggg_ShaderProgram_fetchUniforms($this) {
        var var$1, $numUniforms, $i, $name, $location;
        var$1 = $this.$params;
        var$1.$position = 0;
        var$1.$limit = var$1.$capacity;
        var$1.$mark = (-1);
        cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35718, var$1);
        $numUniforms = jn_IntBufferImpl_get($this.$params, 0);
        $this.$uniformNames = $rt_createArray(jl_String, $numUniforms);
        $i = 0;
        while ($i < $numUniforms) {
            var$1 = $this.$params;
            var$1.$position = 0;
            var$1.$limit = var$1.$capacity;
            var$1.$mark = (-1);
            jn_IntBufferImpl_put0(var$1, 0, 1);
            var$1 = $this.$type4;
            var$1.$position = 0;
            var$1.$limit = var$1.$capacity;
            var$1.$mark = (-1);
            $name = cbg_Gdx_gl20.$glGetActiveUniform($this.$program, $i, $this.$params, var$1);
            $location = cbg_Gdx_gl20.$glGetUniformLocation($this.$program, $name);
            cbgu_ObjectIntMap_put($this.$uniforms0, $name, $location);
            cbgu_ObjectIntMap_put($this.$uniformTypes, $name, jn_IntBufferImpl_get($this.$type4, 0));
            cbgu_ObjectIntMap_put($this.$uniformSizes, $name, jn_IntBufferImpl_get($this.$params, 0));
            $this.$uniformNames.data[$i] = $name;
            $i = $i + 1 | 0;
        }
    }
    function cbggg_ShaderProgram_fetchAttributes($this) {
        var var$1, $numAttributes, $i, $name, $location;
        var$1 = $this.$params;
        var$1.$position = 0;
        var$1.$limit = var$1.$capacity;
        var$1.$mark = (-1);
        cbg_Gdx_gl20.$glGetProgramiv($this.$program, 35721, var$1);
        $numAttributes = jn_IntBufferImpl_get($this.$params, 0);
        $this.$attributeNames = $rt_createArray(jl_String, $numAttributes);
        $i = 0;
        while ($i < $numAttributes) {
            var$1 = $this.$params;
            var$1.$position = 0;
            var$1.$limit = var$1.$capacity;
            var$1.$mark = (-1);
            jn_IntBufferImpl_put0(var$1, 0, 1);
            var$1 = $this.$type4;
            var$1.$position = 0;
            var$1.$limit = var$1.$capacity;
            var$1.$mark = (-1);
            $name = cbg_Gdx_gl20.$glGetActiveAttrib($this.$program, $i, $this.$params, var$1);
            $location = cbg_Gdx_gl20.$glGetAttribLocation($this.$program, $name);
            cbgu_ObjectIntMap_put($this.$attributes0, $name, $location);
            cbgu_ObjectIntMap_put($this.$attributeTypes, $name, jn_IntBufferImpl_get($this.$type4, 0));
            cbgu_ObjectIntMap_put($this.$attributeSizes, $name, jn_IntBufferImpl_get($this.$params, 0));
            $this.$attributeNames.data[$i] = $name;
            $i = $i + 1 | 0;
        }
    }
    function cbggg_ShaderProgram__clinit_() {
        var var$1, var$2, var$3, var$4;
        cbggg_ShaderProgram_pedantic = 1;
        cbggg_ShaderProgram_prependVertexCode = $rt_s(45);
        cbggg_ShaderProgram_prependFragmentCode = $rt_s(45);
        cbggg_ShaderProgram_shaders = cbgu_ObjectMap__init_(51, 0.800000011920929);
        if (!cgxgbt_TeaTool_isProd) {
            var$1 = $rt_createIntArray(1);
            var$2 = var$1.data.length;
            var$3 = new jn_IntBufferOverArray;
            var$4 = 0 + var$2 | 0;
            var$3.$mark = (-1);
            var$3.$capacity = var$2;
            var$3.$limit = var$2;
            var$3.$position = 0;
            var$3.$limit = var$4;
            var$3.$start10 = 0;
            var$3.$readOnly6 = 0;
            var$3.$array6 = var$1;
        } else {
            var$3 = new jn_ByteBufferImpl;
            var$1 = $rt_createByteArray(4);
            var$3.$mark = (-1);
            var$3.$capacity = 4;
            var$3.$limit = 4;
            jn_ByteOrder_$callClinit();
            var$3.$order = jn_ByteOrder_BIG_ENDIAN;
            var$3.$start0 = 0;
            var$3.$array0 = var$1;
            var$3.$position = 0;
            var$3.$limit = 4;
            var$3.$direct = 1;
            var$3.$readOnly0 = 0;
            var$3.$order = jn_ByteOrder_nativeOrder();
            var$3 = jn_ByteBufferImpl_asIntBuffer(var$3);
        }
        cbggg_ShaderProgram_intbuf = var$3;
    }
    var cbgg_TextureData$Factory = $rt_classWithoutFields();
    var cbgg_Mesh$1 = $rt_classWithoutFields();
    var cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = null;
    function cbgg_Mesh$1_$callClinit() {
        cbgg_Mesh$1_$callClinit = $rt_eraseClinit(cbgg_Mesh$1);
        cbgg_Mesh$1__clinit_();
    }
    function cbgg_Mesh$1__clinit_() {
        var var$1, var$2;
        cbgg_Mesh$VertexDataType_$callClinit();
        var$1 = $rt_createIntArray((cbgg_Mesh$VertexDataType_$VALUES.$clone()).data.length);
        var$2 = var$1.data;
        cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = var$1;
        var$2[cbgg_Mesh$VertexDataType_VertexBufferObject.$ordinal] = 1;
        var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectSubData.$ordinal] = 2;
        var$2[cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO.$ordinal] = 3;
        var$2[cbgg_Mesh$VertexDataType_VertexArray.$ordinal] = 4;
    }
    var cbggg_VertexData = $rt_classWithoutFields(0);
    function cbggg_VertexBufferObject() {
        var a = this; jl_Object.call(a);
        a.$attributes1 = null;
        a.$buffer3 = null;
        a.$bufferHandle0 = 0;
        a.$isStatic = 0;
        a.$usage1 = 0;
        a.$isDirty0 = 0;
        a.$isBound0 = 0;
    }
    function cbggg_VertexBufferObject__init_(var_0, var_1, var_2) {
        var var_3 = new cbggg_VertexBufferObject();
        cbggg_VertexBufferObject__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function cbggg_VertexBufferObject__init_0($this, $isStatic, $numVertices, $attributes) {
        var var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$isDirty0 = 0;
        $this.$isBound0 = 0;
        $this.$isStatic = $isStatic;
        $this.$attributes1 = $attributes;
        $numVertices = $rt_imul($attributes.$vertexSize / 4 | 0, $numVertices);
        if (!cgxgbt_TeaTool_isProd) {
            var$4 = $rt_createFloatArray($numVertices);
            var$5 = var$4.data.length;
            $attributes = new jn_FloatBufferOverArray;
            var$6 = 0 + var$5 | 0;
            $attributes.$mark = (-1);
            $attributes.$capacity = var$5;
            $attributes.$limit = var$5;
            $attributes.$position = 0;
            $attributes.$limit = var$6;
            $attributes.$start = 0;
            $attributes.$readOnly = 0;
            $attributes.$array = var$4;
        } else {
            $numVertices = $numVertices * 4 | 0;
            if ($numVertices < 0) {
                $attributes = new jl_IllegalArgumentException;
                var$7 = new jl_StringBuilder;
                var$7.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert2(var$7, var$7.$length, $rt_s(523));
                jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $numVertices, 10);
                var$8 = new jl_String;
                var$4 = var$7.$buffer;
                $numVertices = var$7.$length;
                jl_String_$callClinit();
                var$9 = $rt_createCharArray($numVertices);
                var$8.$characters = var$9;
                jl_System_fastArraycopy(var$4, 0, var$9, 0, $numVertices);
                $attributes.$suppressionEnabled = 1;
                $attributes.$writableStackTrace = 1;
                $attributes.$message = var$8;
                $rt_throw($attributes);
            }
            var$7 = new jn_ByteBufferImpl;
            var$4 = $rt_createByteArray($numVertices);
            var$7.$mark = (-1);
            var$7.$capacity = $numVertices;
            var$7.$limit = $numVertices;
            jn_ByteOrder_$callClinit();
            var$7.$order = jn_ByteOrder_BIG_ENDIAN;
            var$7.$start0 = 0;
            var$7.$array0 = var$4;
            var$7.$position = 0;
            var$7.$limit = $numVertices;
            var$7.$direct = 1;
            var$7.$readOnly0 = 0;
            var$7.$order = jn_ByteOrder_nativeOrder();
            $attributes = jn_ByteBufferImpl_asFloatBuffer(var$7);
        }
        $this.$buffer3 = $attributes;
        $attributes.$limit = $attributes.$position;
        $attributes.$position = 0;
        $attributes.$mark = (-1);
        $attributes = cbg_Gdx_gl20;
        var$7 = $attributes.$gl.createBuffer();
        var$5 = $attributes.$nextBufferId;
        $attributes.$nextBufferId = var$5 + 1 | 0;
        cbgu_IntMap_put($attributes.$buffers, var$5, otji_JSWrapper_wrap(var$7));
        $this.$bufferHandle0 = var$5;
        $this.$usage1 = !$isStatic ? 35048 : 35044;
    }
    function cbggg_VertexBufferObject_getAttributes($this) {
        return $this.$attributes1;
    }
    function cbggg_VertexBufferObject_getNumVertices($this) {
        return $this.$buffer3.$limit / ($this.$attributes1.$vertexSize / 4 | 0) | 0;
    }
    function cbggg_VertexBufferObject_setVertices($this, $vertices, $offset, $count) {
        var var$4, var$5, var$6;
        $this.$isDirty0 = 1;
        var$4 = $this.$buffer3;
        var$5 = null;
        var$6 = var$4 instanceof jn_ByteBuffer;
        if (var$6)
            var$5 = jn_ByteBufferImpl_asFloatBuffer(var$4);
        else if (var$4 instanceof jn_FloatBuffer)
            var$5 = var$4;
        if (var$5 === null) {
            var$5 = new cbgu_GdxRuntimeException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            var$5.$message = $rt_s(567);
            $rt_throw(var$5);
        }
        var$5.$position = 0;
        var$5.$limit = var$5.$capacity;
        var$5.$mark = (-1);
        jn_Buffer_position(var$4, 0);
        jn_FloatBuffer_put(var$5, $vertices, $offset, $count);
        jn_Buffer_position(var$4, 0);
        if (!var$6)
            jn_Buffer_limit(var$4, $count);
        else
            jn_Buffer_limit(var$4, $count << 2);
        jn_Buffer_position($this.$buffer3, 0);
        jn_Buffer_limit($this.$buffer3, $count);
        if ($this.$isBound0) {
            var$4 = cbg_Gdx_gl20;
            var$5 = $this.$buffer3;
            var$4.$glBufferData(34962, var$5.$limit, var$5, $this.$usage1);
            $this.$isDirty0 = 0;
        }
    }
    function cbggg_VertexBufferObject_bind($this, $shader, $locations) {
        var $gl, var$4, $numAttributes, $i, var$7, $attribute, $location, var$10, var$11, var$12, var$13, var$14, var$15;
        $gl = cbg_Gdx_gl20;
        $gl.$glBindBuffer(34962, $this.$bufferHandle0);
        if ($this.$isDirty0) {
            var$4 = $this.$buffer3;
            $gl.$glBufferData(34962, var$4.$limit, var$4, $this.$usage1);
            $this.$isDirty0 = 0;
        }
        a: {
            $numAttributes = $this.$attributes1.$attributes.data.length;
            if ($locations !== null) {
                $i = 0;
                while (true) {
                    if ($i >= $numAttributes)
                        break a;
                    var$7 = $locations.data;
                    $attribute = $this.$attributes1.$attributes.data[$i];
                    $location = var$7[$i];
                    if ($location >= 0) {
                        var$4 = cbg_Gdx_gl20;
                        if ($shader.$invalidated) {
                            cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                            $shader.$invalidated = 0;
                        }
                        var$4.$glEnableVertexAttribArray($location);
                        var$10 = $attribute.$numComponents;
                        var$11 = $attribute.$type0;
                        var$12 = $attribute.$normalized;
                        var$13 = $this.$attributes1.$vertexSize;
                        var$14 = $attribute.$offset;
                        var$4 = cbg_Gdx_gl20;
                        if ($shader.$invalidated) {
                            cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                            $shader.$invalidated = 0;
                        }
                        var$4.$glVertexAttribPointer($location, var$10, var$11, var$12, var$13, var$14);
                    }
                    $i = $i + 1 | 0;
                }
            }
            $i = 0;
            while ($i < $numAttributes) {
                $attribute = $this.$attributes1.$attributes.data[$i];
                $gl = $attribute.$alias;
                var$4 = $shader.$attributes0;
                var$15 = (-1);
                $location = cbgu_ObjectIntMap_locateKey(var$4, $gl);
                if ($location >= 0)
                    var$15 = var$4.$valueTable1.data[$location];
                if (var$15 >= 0) {
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glEnableVertexAttribArray(var$15);
                    $location = $attribute.$numComponents;
                    var$10 = $attribute.$type0;
                    var$11 = $attribute.$normalized;
                    var$12 = $this.$attributes1.$vertexSize;
                    var$13 = $attribute.$offset;
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glVertexAttribPointer(var$15, $location, var$10, var$11, var$12, var$13);
                }
                $i = $i + 1 | 0;
            }
        }
        $this.$isBound0 = 1;
    }
    function cbggg_VertexBufferObject_unbind($this, $shader, $locations) {
        var $gl, $numAttributes, $i, $location, var$7, $i_0, var$9, var$10, var$11;
        a: {
            $gl = cbg_Gdx_gl20;
            $numAttributes = $this.$attributes1.$attributes.data.length;
            if ($locations !== null) {
                $i = 0;
                while (true) {
                    if ($i >= $numAttributes)
                        break a;
                    $location = $locations.data[$i];
                    if ($location >= 0) {
                        var$7 = cbg_Gdx_gl20;
                        if ($shader.$invalidated) {
                            cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                            $shader.$invalidated = 0;
                        }
                        var$7.$glDisableVertexAttribArray($location);
                    }
                    $i = $i + 1 | 0;
                }
            }
            $i_0 = 0;
            while ($i_0 < $numAttributes) {
                var$9 = $this.$attributes1.$attributes.data[$i_0].$alias;
                var$10 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$11 = cbg_Gdx_gl20;
                var$7 = $shader.$attributes0;
                $location = (-2);
                $i = cbgu_ObjectIntMap_locateKey(var$7, var$9);
                if ($i >= 0)
                    $location = var$7.$valueTable1.data[$i];
                if ($location == (-2)) {
                    $location = var$11.$glGetAttribLocation($shader.$program, var$9);
                    cbgu_ObjectIntMap_put($shader.$attributes0, var$9, $location);
                }
                if ($location != (-1))
                    var$10.$glDisableVertexAttribArray($location);
                $i_0 = $i_0 + 1 | 0;
            }
        }
        $gl.$glBindBuffer(34962, 0);
        $this.$isBound0 = 0;
    }
    function cbggg_VertexBufferObject_dispose($this) {
        var $gl, var$2, var$3;
        $gl = cbg_Gdx_gl20;
        $gl.$glBindBuffer(34962, 0);
        var$2 = $this.$bufferHandle0;
        var$3 = cbgu_IntMap_remove($gl.$buffers, var$2);
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $gl.$gl.deleteBuffer(var$3);
        $this.$bufferHandle0 = 0;
    }
    var cbggg_IndexData = $rt_classWithoutFields(0);
    function cbggg_IndexBufferObject() {
        var a = this; jl_Object.call(a);
        a.$buffer2 = null;
        a.$bufferHandle = 0;
        a.$isDirect = 0;
        a.$isDirty = 0;
        a.$isBound = 0;
        a.$usage0 = 0;
    }
    function cbggg_IndexBufferObject_getNumIndices($this) {
        return $this.$buffer2.$limit;
    }
    function cbggg_IndexBufferObject_getNumMaxIndices($this) {
        return $this.$buffer2.$capacity;
    }
    function cbggg_IndexBufferObject_setIndices($this, $indices, $offset, $count) {
        var var$4;
        $this.$isDirty = 1;
        var$4 = $this.$buffer2;
        var$4.$position = 0;
        var$4.$limit = var$4.$capacity;
        var$4.$mark = (-1);
        jn_ShortBuffer_put(var$4, $indices, $offset, $count);
        var$4 = $this.$buffer2;
        $offset = var$4.$position;
        var$4.$limit = $offset;
        var$4.$position = 0;
        var$4.$mark = (-1);
        if ($this.$isBound) {
            cbg_Gdx_gl20.$glBufferData(34963, $offset, var$4, $this.$usage0);
            $this.$isDirty = 0;
        }
    }
    function cbggg_IndexBufferObject_getBuffer($this, $forWriting) {
        $this.$isDirty = $this.$isDirty | $forWriting;
        return $this.$buffer2;
    }
    function cbggg_IndexBufferObject_bind($this) {
        var var$1, var$2, var$3;
        var$1 = $this.$bufferHandle;
        if (!var$1) {
            var$2 = new cbgu_GdxRuntimeException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = $rt_s(568);
            $rt_throw(var$2);
        }
        cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
        if ($this.$isDirty) {
            var$2 = cbg_Gdx_gl20;
            var$3 = $this.$buffer2;
            var$2.$glBufferData(34963, var$3.$limit, var$3, $this.$usage0);
            $this.$isDirty = 0;
        }
        $this.$isBound = 1;
    }
    function cbggg_IndexBufferObject_unbind($this) {
        cbg_Gdx_gl20.$glBindBuffer(34963, 0);
        $this.$isBound = 0;
    }
    function cbggg_IndexBufferObject_dispose($this) {
        var $gl, var$2, var$3;
        $gl = cbg_Gdx_gl20;
        $gl.$glBindBuffer(34963, 0);
        var$2 = $this.$bufferHandle;
        var$3 = cbgu_IntMap_remove($gl.$buffers, var$2);
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $gl.$gl.deleteBuffer(var$3);
        $this.$bufferHandle = 0;
    }
    function cbggg_VertexBufferObjectSubData() {
        var a = this; jl_Object.call(a);
        a.$attributes2 = null;
        a.$buffer4 = null;
        a.$byteBuffer0 = null;
        a.$bufferHandle1 = 0;
        a.$isDirect0 = 0;
        a.$isStatic0 = 0;
        a.$usage2 = 0;
        a.$isDirty1 = 0;
        a.$isBound1 = 0;
    }
    function cbggg_VertexBufferObjectSubData__init_(var_0, var_1, var_2) {
        var var_3 = new cbggg_VertexBufferObjectSubData();
        cbggg_VertexBufferObjectSubData__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function cbggg_VertexBufferObjectSubData__init_0($this, $isStatic, $numVertices, $attributes) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        $this.$isDirty1 = 0;
        $this.$isBound1 = 0;
        $this.$isStatic0 = $isStatic;
        $this.$attributes2 = $attributes;
        $numVertices = $rt_imul($attributes.$vertexSize, $numVertices);
        if (!cgxgbt_TeaTool_isProd) {
            var$4 = $rt_createByteArray($numVertices);
            var$5 = var$4.data.length;
            $attributes = new jn_ByteBufferImpl;
            var$6 = 0 + var$5 | 0;
            $attributes.$mark = (-1);
            $attributes.$capacity = var$5;
            $attributes.$limit = var$5;
            jn_ByteOrder_$callClinit();
            $attributes.$order = jn_ByteOrder_BIG_ENDIAN;
            $attributes.$start0 = 0;
            $attributes.$array0 = var$4;
            $attributes.$position = 0;
            $attributes.$limit = var$6;
            $attributes.$direct = 0;
            $attributes.$readOnly0 = 0;
        } else {
            if ($numVertices < 0) {
                $attributes = new jl_IllegalArgumentException;
                var$7 = new jl_StringBuilder;
                var$7.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert2(var$7, var$7.$length, $rt_s(523));
                jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $numVertices, 10);
                var$8 = new jl_String;
                var$4 = var$7.$buffer;
                $numVertices = var$7.$length;
                jl_String_$callClinit();
                var$9 = $rt_createCharArray($numVertices);
                var$8.$characters = var$9;
                jl_System_fastArraycopy(var$4, 0, var$9, 0, $numVertices);
                $attributes.$suppressionEnabled = 1;
                $attributes.$writableStackTrace = 1;
                $attributes.$message = var$8;
                $rt_throw($attributes);
            }
            $attributes = new jn_ByteBufferImpl;
            var$4 = $rt_createByteArray($numVertices);
            $attributes.$mark = (-1);
            $attributes.$capacity = $numVertices;
            $attributes.$limit = $numVertices;
            jn_ByteOrder_$callClinit();
            $attributes.$order = jn_ByteOrder_BIG_ENDIAN;
            $attributes.$start0 = 0;
            $attributes.$array0 = var$4;
            $attributes.$position = 0;
            $attributes.$limit = $numVertices;
            $attributes.$direct = 1;
            $attributes.$readOnly0 = 0;
            $attributes.$order = jn_ByteOrder_nativeOrder();
        }
        $this.$byteBuffer0 = $attributes;
        $this.$isDirect0 = 1;
        $this.$usage2 = !$isStatic ? 35048 : 35044;
        $this.$buffer4 = jn_ByteBufferImpl_asFloatBuffer($attributes);
        $attributes = cbg_Gdx_gl20;
        var$7 = $attributes.$gl.createBuffer();
        var$10 = $attributes.$nextBufferId;
        $attributes.$nextBufferId = var$10 + 1 | 0;
        cbgu_IntMap_put($attributes.$buffers, var$10, otji_JSWrapper_wrap(var$7));
        cbg_Gdx_gl20.$glBindBuffer(34962, var$10);
        cbg_Gdx_gl20.$glBufferData(34962, $this.$byteBuffer0.$capacity, null, $this.$usage2);
        cbg_Gdx_gl20.$glBindBuffer(34962, 0);
        $this.$bufferHandle1 = var$10;
        $attributes = $this.$buffer4;
        $attributes.$limit = $attributes.$position;
        $attributes.$position = 0;
        $attributes.$mark = (-1);
        $attributes = $this.$byteBuffer0;
        $attributes.$limit = $attributes.$position;
        $attributes.$position = 0;
        $attributes.$mark = (-1);
    }
    function cbggg_VertexBufferObjectSubData_getAttributes($this) {
        return $this.$attributes2;
    }
    function cbggg_VertexBufferObjectSubData_getNumVertices($this) {
        return ($this.$buffer4.$limit * 4 | 0) / $this.$attributes2.$vertexSize | 0;
    }
    function cbggg_VertexBufferObjectSubData_setVertices($this, $vertices, $offset, $count) {
        var var$4, var$5, var$6;
        $this.$isDirty1 = 1;
        if (!$this.$isDirect0) {
            var$4 = $this.$buffer4;
            var$4.$position = 0;
            var$4.$limit = var$4.$capacity;
            var$4.$mark = (-1);
            jn_FloatBuffer_put(var$4, $vertices, $offset, $count);
            var$4 = $this.$buffer4;
            var$4.$limit = var$4.$position;
            var$4.$position = 0;
            var$4.$mark = (-1);
            jn_Buffer_position($this.$byteBuffer0, 0);
            jn_Buffer_limit($this.$byteBuffer0, $this.$buffer4.$limit << 2);
        } else {
            var$4 = $this.$byteBuffer0;
            var$5 = null;
            var$6 = var$4 instanceof jn_ByteBuffer;
            if (var$6)
                var$5 = jn_ByteBufferImpl_asFloatBuffer(var$4);
            else if (var$4 instanceof jn_FloatBuffer)
                var$5 = var$4;
            if (var$5 === null) {
                var$5 = new cbgu_GdxRuntimeException;
                var$5.$suppressionEnabled = 1;
                var$5.$writableStackTrace = 1;
                var$5.$message = $rt_s(567);
                $rt_throw(var$5);
            }
            var$5.$position = 0;
            var$5.$limit = var$5.$capacity;
            var$5.$mark = (-1);
            jn_Buffer_position(var$4, 0);
            jn_FloatBuffer_put(var$5, $vertices, $offset, $count);
            jn_Buffer_position(var$4, 0);
            if (!var$6)
                jn_Buffer_limit(var$4, $count);
            else
                jn_Buffer_limit(var$4, $count << 2);
            jn_Buffer_position($this.$buffer4, 0);
            jn_Buffer_limit($this.$buffer4, $count);
        }
        if ($this.$isBound1) {
            var$4 = cbg_Gdx_gl20;
            var$5 = $this.$byteBuffer0;
            var$4.$glBufferSubData(34962, 0, var$5.$limit, var$5);
            $this.$isDirty1 = 0;
        }
    }
    function cbggg_VertexBufferObjectSubData_bind($this, $shader, $locations) {
        var $gl, var$4, $numAttributes, $i, var$7, $attribute, $location, var$10, var$11, var$12, var$13, var$14, var$15, var$16;
        $gl = cbg_Gdx_gl20;
        $gl.$glBindBuffer(34962, $this.$bufferHandle1);
        if ($this.$isDirty1) {
            jn_Buffer_limit($this.$byteBuffer0, $this.$buffer4.$limit * 4 | 0);
            var$4 = $this.$byteBuffer0;
            $gl.$glBufferData(34962, var$4.$limit, var$4, $this.$usage2);
            $this.$isDirty1 = 0;
        }
        a: {
            $numAttributes = $this.$attributes2.$attributes.data.length;
            if ($locations !== null) {
                $i = 0;
                while (true) {
                    if ($i >= $numAttributes)
                        break a;
                    var$7 = $locations.data;
                    $attribute = $this.$attributes2.$attributes.data[$i];
                    $location = var$7[$i];
                    if ($location >= 0) {
                        var$4 = cbg_Gdx_gl20;
                        if ($shader.$invalidated) {
                            cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                            $shader.$invalidated = 0;
                        }
                        var$4.$glEnableVertexAttribArray($location);
                        var$10 = $attribute.$numComponents;
                        var$11 = $attribute.$type0;
                        var$12 = $attribute.$normalized;
                        var$13 = $this.$attributes2.$vertexSize;
                        var$14 = $attribute.$offset;
                        var$4 = cbg_Gdx_gl20;
                        if ($shader.$invalidated) {
                            cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                            $shader.$invalidated = 0;
                        }
                        var$4.$glVertexAttribPointer($location, var$10, var$11, var$12, var$13, var$14);
                    }
                    $i = $i + 1 | 0;
                }
            }
            $i = 0;
            while ($i < $numAttributes) {
                $attribute = $this.$attributes2.$attributes.data[$i];
                var$15 = $attribute.$alias;
                var$4 = $shader.$attributes0;
                var$16 = (-1);
                $location = cbgu_ObjectIntMap_locateKey(var$4, var$15);
                if ($location >= 0)
                    var$16 = var$4.$valueTable1.data[$location];
                if (var$16 >= 0) {
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glEnableVertexAttribArray(var$16);
                    $location = $attribute.$numComponents;
                    var$10 = $attribute.$type0;
                    var$11 = $attribute.$normalized;
                    var$12 = $this.$attributes2.$vertexSize;
                    var$13 = $attribute.$offset;
                    var$4 = cbg_Gdx_gl20;
                    if ($shader.$invalidated) {
                        cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                        $shader.$invalidated = 0;
                    }
                    var$4.$glVertexAttribPointer(var$16, $location, var$10, var$11, var$12, var$13);
                }
                $i = $i + 1 | 0;
            }
        }
        $this.$isBound1 = 1;
    }
    function cbggg_VertexBufferObjectSubData_unbind($this, $shader, $locations) {
        var $gl, $numAttributes, $i, $location, var$7, $i_0, var$9, var$10, var$11;
        a: {
            $gl = cbg_Gdx_gl20;
            $numAttributes = $this.$attributes2.$attributes.data.length;
            if ($locations !== null) {
                $i = 0;
                while (true) {
                    if ($i >= $numAttributes)
                        break a;
                    $location = $locations.data[$i];
                    if ($location >= 0) {
                        var$7 = cbg_Gdx_gl20;
                        if ($shader.$invalidated) {
                            cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                            $shader.$invalidated = 0;
                        }
                        var$7.$glDisableVertexAttribArray($location);
                    }
                    $i = $i + 1 | 0;
                }
            }
            $i_0 = 0;
            while ($i_0 < $numAttributes) {
                var$9 = $this.$attributes2.$attributes.data[$i_0].$alias;
                var$10 = cbg_Gdx_gl20;
                if ($shader.$invalidated) {
                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                    $shader.$invalidated = 0;
                }
                var$11 = cbg_Gdx_gl20;
                var$7 = $shader.$attributes0;
                $location = (-2);
                $i = cbgu_ObjectIntMap_locateKey(var$7, var$9);
                if ($i >= 0)
                    $location = var$7.$valueTable1.data[$i];
                if ($location == (-2)) {
                    $location = var$11.$glGetAttribLocation($shader.$program, var$9);
                    cbgu_ObjectIntMap_put($shader.$attributes0, var$9, $location);
                }
                if ($location != (-1))
                    var$10.$glDisableVertexAttribArray($location);
                $i_0 = $i_0 + 1 | 0;
            }
        }
        $gl.$glBindBuffer(34962, 0);
        $this.$isBound1 = 0;
    }
    function cbggg_VertexBufferObjectSubData_dispose($this) {
        var $gl, var$2, var$3;
        $gl = cbg_Gdx_gl20;
        $gl.$glBindBuffer(34962, 0);
        var$2 = $this.$bufferHandle1;
        var$3 = cbgu_IntMap_remove($gl.$buffers, var$2);
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $gl.$gl.deleteBuffer(var$3);
        $this.$bufferHandle1 = 0;
    }
    function cbggg_IndexBufferObjectSubData() {
        var a = this; jl_Object.call(a);
        a.$buffer5 = null;
        a.$byteBuffer1 = null;
        a.$bufferHandle2 = 0;
        a.$isDirect1 = 0;
        a.$isDirty2 = 0;
        a.$isBound2 = 0;
        a.$usage3 = 0;
    }
    function cbggg_IndexBufferObjectSubData__init_(var_0, var_1) {
        var var_2 = new cbggg_IndexBufferObjectSubData();
        cbggg_IndexBufferObjectSubData__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbggg_IndexBufferObjectSubData__init_0($this, $isStatic, $maxIndices) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        $this.$isDirty2 = 1;
        $this.$isBound2 = 0;
        $maxIndices = $maxIndices * 2 | 0;
        if (!cgxgbt_TeaTool_isProd) {
            var$3 = $rt_createByteArray($maxIndices);
            var$4 = var$3.data.length;
            var$5 = new jn_ByteBufferImpl;
            var$6 = 0 + var$4 | 0;
            var$5.$mark = (-1);
            var$5.$capacity = var$4;
            var$5.$limit = var$4;
            jn_ByteOrder_$callClinit();
            var$5.$order = jn_ByteOrder_BIG_ENDIAN;
            var$5.$start0 = 0;
            var$5.$array0 = var$3;
            var$5.$position = 0;
            var$5.$limit = var$6;
            var$5.$direct = 0;
            var$5.$readOnly0 = 0;
        } else {
            if ($maxIndices < 0) {
                var$5 = new jl_IllegalArgumentException;
                var$7 = new jl_StringBuilder;
                var$7.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert2(var$7, var$7.$length, $rt_s(523));
                jl_AbstractStringBuilder_insert0(var$7, var$7.$length, $maxIndices, 10);
                var$8 = new jl_String;
                var$3 = var$7.$buffer;
                $maxIndices = var$7.$length;
                jl_String_$callClinit();
                var$9 = $rt_createCharArray($maxIndices);
                var$8.$characters = var$9;
                jl_System_fastArraycopy(var$3, 0, var$9, 0, $maxIndices);
                var$5.$suppressionEnabled = 1;
                var$5.$writableStackTrace = 1;
                var$5.$message = var$8;
                $rt_throw(var$5);
            }
            var$5 = new jn_ByteBufferImpl;
            var$3 = $rt_createByteArray($maxIndices);
            var$5.$mark = (-1);
            var$5.$capacity = $maxIndices;
            var$5.$limit = $maxIndices;
            jn_ByteOrder_$callClinit();
            var$5.$order = jn_ByteOrder_BIG_ENDIAN;
            var$5.$start0 = 0;
            var$5.$array0 = var$3;
            var$5.$position = 0;
            var$5.$limit = $maxIndices;
            var$5.$direct = 1;
            var$5.$readOnly0 = 0;
            var$5.$order = jn_ByteOrder_nativeOrder();
        }
        $this.$byteBuffer1 = var$5;
        $this.$isDirect1 = 1;
        $this.$usage3 = !$isStatic ? 35048 : 35044;
        var$5 = jn_ByteBufferImpl_asShortBuffer(var$5);
        $this.$buffer5 = var$5;
        var$5.$limit = var$5.$position;
        var$5.$position = 0;
        var$5.$mark = (-1);
        var$5 = $this.$byteBuffer1;
        var$5.$limit = var$5.$position;
        var$5.$position = 0;
        var$5.$mark = (-1);
        var$5 = cbg_Gdx_gl20;
        var$7 = var$5.$gl.createBuffer();
        var$10 = var$5.$nextBufferId;
        var$5.$nextBufferId = var$10 + 1 | 0;
        cbgu_IntMap_put(var$5.$buffers, var$10, otji_JSWrapper_wrap(var$7));
        cbg_Gdx_gl20.$glBindBuffer(34963, var$10);
        cbg_Gdx_gl20.$glBufferData(34963, $this.$byteBuffer1.$capacity, null, $this.$usage3);
        cbg_Gdx_gl20.$glBindBuffer(34963, 0);
        $this.$bufferHandle2 = var$10;
    }
    function cbggg_IndexBufferObjectSubData_getNumIndices($this) {
        return $this.$buffer5.$limit;
    }
    function cbggg_IndexBufferObjectSubData_getNumMaxIndices($this) {
        return $this.$buffer5.$capacity;
    }
    function cbggg_IndexBufferObjectSubData_setIndices($this, $indices, $offset, $count) {
        var var$4, var$5;
        $this.$isDirty2 = 1;
        var$4 = $this.$buffer5;
        var$4.$position = 0;
        var$4.$limit = var$4.$capacity;
        var$4.$mark = (-1);
        jn_ShortBuffer_put(var$4, $indices, $offset, $count);
        var$4 = $this.$buffer5;
        var$4.$limit = var$4.$position;
        var$4.$position = 0;
        var$4.$mark = (-1);
        jn_Buffer_position($this.$byteBuffer1, 0);
        jn_Buffer_limit($this.$byteBuffer1, $count << 1);
        if ($this.$isBound2) {
            var$4 = cbg_Gdx_gl20;
            var$5 = $this.$byteBuffer1;
            var$4.$glBufferSubData(34963, 0, var$5.$limit, var$5);
            $this.$isDirty2 = 0;
        }
    }
    function cbggg_IndexBufferObjectSubData_getBuffer($this, $forWriting) {
        $this.$isDirty2 = $this.$isDirty2 | $forWriting;
        return $this.$buffer5;
    }
    function cbggg_IndexBufferObjectSubData_bind($this) {
        var var$1, var$2, var$3;
        var$1 = $this.$bufferHandle2;
        if (!var$1) {
            var$2 = new cbgu_GdxRuntimeException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = $rt_s(569);
            $rt_throw(var$2);
        }
        cbg_Gdx_gl20.$glBindBuffer(34963, var$1);
        if ($this.$isDirty2) {
            jn_Buffer_limit($this.$byteBuffer1, $this.$buffer5.$limit * 2 | 0);
            var$2 = cbg_Gdx_gl20;
            var$3 = $this.$byteBuffer1;
            var$2.$glBufferSubData(34963, 0, var$3.$limit, var$3);
            $this.$isDirty2 = 0;
        }
        $this.$isBound2 = 1;
    }
    function cbggg_IndexBufferObjectSubData_unbind($this) {
        cbg_Gdx_gl20.$glBindBuffer(34963, 0);
        $this.$isBound2 = 0;
    }
    function cbggg_IndexBufferObjectSubData_dispose($this) {
        var $gl, var$2, var$3;
        $gl = cbg_Gdx_gl20;
        $gl.$glBindBuffer(34963, 0);
        var$2 = $this.$bufferHandle2;
        var$3 = cbgu_IntMap_remove($gl.$buffers, var$2);
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $gl.$gl.deleteBuffer(var$3);
        $this.$bufferHandle2 = 0;
    }
    function cbggg_VertexBufferObjectWithVAO() {
        var a = this; jl_Object.call(a);
        a.$attributes3 = null;
        a.$buffer6 = null;
        a.$bufferHandle3 = 0;
        a.$isStatic1 = 0;
        a.$usage4 = 0;
        a.$isDirty3 = 0;
        a.$isBound3 = 0;
        a.$vaoHandle = 0;
        a.$cachedLocations = null;
    }
    var cbggg_VertexBufferObjectWithVAO_tmpHandle = null;
    function cbggg_VertexBufferObjectWithVAO_$callClinit() {
        cbggg_VertexBufferObjectWithVAO_$callClinit = $rt_eraseClinit(cbggg_VertexBufferObjectWithVAO);
        cbggg_VertexBufferObjectWithVAO__clinit_();
    }
    function cbggg_VertexBufferObjectWithVAO__init_(var_0, var_1, var_2) {
        var var_3 = new cbggg_VertexBufferObjectWithVAO();
        cbggg_VertexBufferObjectWithVAO__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function cbggg_VertexBufferObjectWithVAO__init_0($this, $isStatic, $numVertices, $attributes) {
        var var$4, var$5, var$6, var$7, var$8, var$9;
        cbggg_VertexBufferObjectWithVAO_$callClinit();
        $this.$isDirty3 = 0;
        $this.$isBound3 = 0;
        $this.$vaoHandle = (-1);
        var$4 = new cbgu_IntArray;
        var$4.$ordered0 = 1;
        var$4.$items0 = $rt_createIntArray(16);
        $this.$cachedLocations = var$4;
        $this.$isStatic1 = $isStatic;
        $this.$attributes3 = $attributes;
        $numVertices = $rt_imul($attributes.$vertexSize / 4 | 0, $numVertices);
        if (!cgxgbt_TeaTool_isProd) {
            var$5 = $rt_createFloatArray($numVertices);
            var$6 = var$5.data.length;
            $attributes = new jn_FloatBufferOverArray;
            var$7 = 0 + var$6 | 0;
            $attributes.$mark = (-1);
            $attributes.$capacity = var$6;
            $attributes.$limit = var$6;
            $attributes.$position = 0;
            $attributes.$limit = var$7;
            $attributes.$start = 0;
            $attributes.$readOnly = 0;
            $attributes.$array = var$5;
        } else {
            $numVertices = $numVertices * 4 | 0;
            if ($numVertices < 0) {
                $attributes = new jl_IllegalArgumentException;
                var$4 = new jl_StringBuilder;
                var$4.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert2(var$4, var$4.$length, $rt_s(523));
                jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $numVertices, 10);
                var$8 = new jl_String;
                var$5 = var$4.$buffer;
                $numVertices = var$4.$length;
                jl_String_$callClinit();
                var$9 = $rt_createCharArray($numVertices);
                var$8.$characters = var$9;
                jl_System_fastArraycopy(var$5, 0, var$9, 0, $numVertices);
                $attributes.$suppressionEnabled = 1;
                $attributes.$writableStackTrace = 1;
                $attributes.$message = var$8;
                $rt_throw($attributes);
            }
            var$4 = new jn_ByteBufferImpl;
            var$5 = $rt_createByteArray($numVertices);
            var$4.$mark = (-1);
            var$4.$capacity = $numVertices;
            var$4.$limit = $numVertices;
            jn_ByteOrder_$callClinit();
            var$4.$order = jn_ByteOrder_BIG_ENDIAN;
            var$4.$start0 = 0;
            var$4.$array0 = var$5;
            var$4.$position = 0;
            var$4.$limit = $numVertices;
            var$4.$direct = 1;
            var$4.$readOnly0 = 0;
            var$4.$order = jn_ByteOrder_nativeOrder();
            $attributes = jn_ByteBufferImpl_asFloatBuffer(var$4);
        }
        $this.$buffer6 = $attributes;
        $attributes.$limit = $attributes.$position;
        $attributes.$position = 0;
        $attributes.$mark = (-1);
        $attributes = cbg_Gdx_gl20;
        var$4 = $attributes.$gl.createBuffer();
        var$6 = $attributes.$nextBufferId;
        $attributes.$nextBufferId = var$6 + 1 | 0;
        cbgu_IntMap_put($attributes.$buffers, var$6, otji_JSWrapper_wrap(var$4));
        $this.$bufferHandle3 = var$6;
        $this.$usage4 = !$isStatic ? 35048 : 35044;
        $attributes = cbggg_VertexBufferObjectWithVAO_tmpHandle;
        $attributes.$position = 0;
        $attributes.$limit = $attributes.$capacity;
        $attributes.$mark = (-1);
        cbg_Gdx_gl30.$glGenVertexArrays(1, $attributes);
        $attributes = cbggg_VertexBufferObjectWithVAO_tmpHandle;
        $numVertices = $attributes.$position;
        if ($numVertices < $attributes.$limit) {
            $attributes.$position = $numVertices + 1 | 0;
            $this.$vaoHandle = $attributes.$getElement($numVertices);
            return;
        }
        $attributes = new jn_BufferUnderflowException;
        $attributes.$suppressionEnabled = 1;
        $attributes.$writableStackTrace = 1;
        $rt_throw($attributes);
    }
    function cbggg_VertexBufferObjectWithVAO_getAttributes($this) {
        return $this.$attributes3;
    }
    function cbggg_VertexBufferObjectWithVAO_getNumVertices($this) {
        return ($this.$buffer6.$limit * 4 | 0) / $this.$attributes3.$vertexSize | 0;
    }
    function cbggg_VertexBufferObjectWithVAO_setVertices($this, $vertices, $offset, $count) {
        var var$4, var$5, var$6;
        $this.$isDirty3 = 1;
        var$4 = $this.$buffer6;
        var$5 = null;
        var$6 = var$4 instanceof jn_ByteBuffer;
        if (var$6)
            var$5 = jn_ByteBufferImpl_asFloatBuffer(var$4);
        else if (var$4 instanceof jn_FloatBuffer)
            var$5 = var$4;
        if (var$5 === null) {
            var$5 = new cbgu_GdxRuntimeException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            var$5.$message = $rt_s(567);
            $rt_throw(var$5);
        }
        var$5.$position = 0;
        var$5.$limit = var$5.$capacity;
        var$5.$mark = (-1);
        jn_Buffer_position(var$4, 0);
        jn_FloatBuffer_put(var$5, $vertices, $offset, $count);
        jn_Buffer_position(var$4, 0);
        if (!var$6)
            jn_Buffer_limit(var$4, $count);
        else
            jn_Buffer_limit(var$4, $count << 2);
        jn_Buffer_position($this.$buffer6, 0);
        jn_Buffer_limit($this.$buffer6, $count);
        if ($this.$isBound3) {
            var$4 = cbg_Gdx_gl20;
            var$5 = $this.$buffer6;
            var$4.$glBufferData(34962, var$5.$limit, var$5, $this.$usage4);
            $this.$isDirty3 = 0;
        }
    }
    function cbggg_VertexBufferObjectWithVAO_bind($this, $shader, $locations) {
        var $gl;
        $gl = cbg_Gdx_gl30;
        $gl.$glBindVertexArray($this.$vaoHandle);
        cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations);
        if ($this.$isDirty3) {
            $gl.$glBindBuffer(34962, $this.$bufferHandle3);
            $shader = $this.$buffer6;
            jn_Buffer_limit($shader, $shader.$limit);
            $shader = $this.$buffer6;
            $gl.$glBufferData(34962, $shader.$limit, $shader, $this.$usage4);
            $this.$isDirty3 = 0;
        }
        $this.$isBound3 = 1;
    }
    function cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations) {
        var $i, $stillValid, $numAttributes, $attribute, var$7, $location, var$9, var$10, $attribute_0, var$12, var$13, var$14, var$15;
        $i = $this.$cachedLocations.$size0;
        $stillValid = !$i ? 0 : 1;
        a: {
            $numAttributes = $this.$attributes3.$attributes.data.length;
            if ($stillValid) {
                if ($locations === null) {
                    $i = 0;
                    b: {
                        while (true) {
                            if (!$stillValid)
                                break b;
                            if ($i >= $numAttributes)
                                break b;
                            $attribute = $this.$attributes3.$attributes.data[$i].$alias;
                            var$7 = $shader.$attributes0;
                            $location = (-1);
                            $stillValid = cbgu_ObjectIntMap_locateKey(var$7, $attribute);
                            if ($stillValid >= 0)
                                $location = var$7.$valueTable1.data[$stillValid];
                            $attribute = $this.$cachedLocations;
                            if ($i >= $attribute.$size0)
                                break;
                            $stillValid = $location != $attribute.$items0.data[$i] ? 0 : 1;
                            $i = $i + 1 | 0;
                        }
                        var$7 = new jl_IndexOutOfBoundsException;
                        $shader = new jl_StringBuilder;
                        $shader.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert($shader, $shader.$length, $rt_s(36));
                        jl_AbstractStringBuilder_insert0($shader, $shader.$length, $i, 10);
                        jl_AbstractStringBuilder_insert($shader, $shader.$length, $rt_s(37));
                        $numAttributes = $attribute.$size0;
                        jl_AbstractStringBuilder_insert0($shader, $shader.$length, $numAttributes, 10);
                        $attribute = new jl_String;
                        $locations = $shader.$buffer;
                        $i = $shader.$length;
                        jl_String_$callClinit();
                        var$9 = $rt_createCharArray($i);
                        $attribute.$characters = var$9;
                        jl_System_fastArraycopy($locations, 0, var$9, 0, $i);
                        var$7.$suppressionEnabled = 1;
                        var$7.$writableStackTrace = 1;
                        var$7.$message = $attribute;
                        $rt_throw(var$7);
                    }
                } else {
                    var$9 = $locations.data;
                    $stillValid = var$9.length != $i ? 0 : 1;
                    $i = 0;
                    while ($stillValid) {
                        if ($i >= $numAttributes)
                            break a;
                        $stillValid = var$9[$i] != cbgu_IntArray_get($this.$cachedLocations, $i) ? 0 : 1;
                        $i = $i + 1 | 0;
                    }
                }
            }
        }
        c: {
            if (!$stillValid) {
                d: {
                    cbg_Gdx_gl.$glBindBuffer(34962, $this.$bufferHandle3);
                    if ($this.$cachedLocations.$size0) {
                        var$10 = $this.$attributes3.$attributes.data.length;
                        $i = 0;
                        while (true) {
                            if ($i >= var$10)
                                break d;
                            $attribute = $this.$cachedLocations;
                            if ($i >= $attribute.$size0)
                                break;
                            $location = $attribute.$items0.data[$i];
                            if ($location >= 0) {
                                $attribute = cbg_Gdx_gl20;
                                if ($shader.$invalidated) {
                                    cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                                    $shader.$invalidated = 0;
                                }
                                $attribute.$glDisableVertexAttribArray($location);
                            }
                            $i = $i + 1 | 0;
                        }
                        var$7 = new jl_IndexOutOfBoundsException;
                        $shader = new jl_StringBuilder;
                        $shader.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert($shader, $shader.$length, $rt_s(36));
                        jl_AbstractStringBuilder_insert0($shader, $shader.$length, $i, 10);
                        jl_AbstractStringBuilder_insert($shader, $shader.$length, $rt_s(37));
                        $numAttributes = $attribute.$size0;
                        jl_AbstractStringBuilder_insert0($shader, $shader.$length, $numAttributes, 10);
                        $attribute = new jl_String;
                        $locations = $shader.$buffer;
                        $i = $shader.$length;
                        jl_String_$callClinit();
                        var$9 = $rt_createCharArray($i);
                        $attribute.$characters = var$9;
                        jl_System_fastArraycopy($locations, 0, var$9, 0, $i);
                        var$7.$suppressionEnabled = 1;
                        var$7.$writableStackTrace = 1;
                        var$7.$message = $attribute;
                        $rt_throw(var$7);
                    }
                }
                $this.$cachedLocations.$size0 = 0;
                $i = 0;
                while (true) {
                    if ($i >= $numAttributes)
                        break c;
                    $attribute_0 = $this.$attributes3.$attributes.data[$i];
                    if ($locations !== null) {
                        var$9 = $locations.data;
                        cbgu_IntArray_add0($this.$cachedLocations, var$9[$i]);
                    } else {
                        $attribute = $this.$cachedLocations;
                        var$7 = $attribute_0.$alias;
                        var$12 = $shader.$attributes0;
                        $stillValid = (-1);
                        $location = cbgu_ObjectIntMap_locateKey(var$12, var$7);
                        if ($location >= 0)
                            $stillValid = var$12.$valueTable1.data[$location];
                        cbgu_IntArray_add0($attribute, $stillValid);
                    }
                    $location = cbgu_IntArray_get($this.$cachedLocations, $i);
                    if ($location >= 0) {
                        $attribute = cbg_Gdx_gl20;
                        if ($shader.$invalidated) {
                            cbggg_ShaderProgram_compileShaders($shader, $shader.$vertexShaderSource, $shader.$fragmentShaderSource);
                            $shader.$invalidated = 0;
                        }
                        $attribute.$glEnableVertexAttribArray($location);
                        $stillValid = $attribute_0.$numComponents;
                        var$10 = $attribute_0.$type0;
                        var$13 = $attribute_0.$normalized;
                        var$14 = $this.$attributes3.$vertexSize;
                        var$15 = $attribute_0.$offset;
                        $attribute = cbg_Gdx_gl20;
                        cbggg_ShaderProgram_checkManaged($shader);
                        $attribute.$glVertexAttribPointer($location, $stillValid, var$10, var$13, var$14, var$15);
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    function cbggg_VertexBufferObjectWithVAO_unbind($this, $shader, $locations) {
        cbg_Gdx_gl30.$glBindVertexArray(0);
        $this.$isBound3 = 0;
    }
    function cbggg_VertexBufferObjectWithVAO_dispose($this) {
        var $gl, var$2, var$3, var$4;
        $gl = cbg_Gdx_gl30;
        $gl.$glBindBuffer(34962, 0);
        var$2 = $this.$bufferHandle3;
        var$3 = cbgu_IntMap_remove($gl.$buffers, var$2);
        otji_JSWrapper_$callClinit();
        var$3 = var$3 === null ? null : var$3[$rt_jso_marker] === true ? var$3 : var$3.$js;
        $gl.$gl.deleteBuffer(var$3);
        $this.$bufferHandle3 = 0;
        var$4 = $this.$vaoHandle;
        if (var$4 != (-1)) {
            cbggg_VertexBufferObjectWithVAO_$callClinit();
            $gl = cbggg_VertexBufferObjectWithVAO_tmpHandle;
            $gl.$position = 0;
            $gl.$limit = $gl.$capacity;
            $gl.$mark = (-1);
            jn_IntBufferImpl_put($gl, var$4);
            $gl = cbggg_VertexBufferObjectWithVAO_tmpHandle;
            $gl.$limit = $gl.$position;
            $gl.$position = 0;
            $gl.$mark = (-1);
            cbg_Gdx_gl30.$glDeleteVertexArrays(1, $gl);
            $this.$vaoHandle = (-1);
        }
    }
    function cbggg_VertexBufferObjectWithVAO__clinit_() {
        var var$1, var$2, var$3, var$4;
        if (!cgxgbt_TeaTool_isProd) {
            var$1 = $rt_createIntArray(1);
            var$2 = var$1.data.length;
            var$3 = new jn_IntBufferOverArray;
            var$4 = 0 + var$2 | 0;
            var$3.$mark = (-1);
            var$3.$capacity = var$2;
            var$3.$limit = var$2;
            var$3.$position = 0;
            var$3.$limit = var$4;
            var$3.$start10 = 0;
            var$3.$readOnly6 = 0;
            var$3.$array6 = var$1;
        } else {
            var$3 = new jn_ByteBufferImpl;
            var$1 = $rt_createByteArray(4);
            var$3.$mark = (-1);
            var$3.$capacity = 4;
            var$3.$limit = 4;
            jn_ByteOrder_$callClinit();
            var$3.$order = jn_ByteOrder_BIG_ENDIAN;
            var$3.$start0 = 0;
            var$3.$array0 = var$1;
            var$3.$position = 0;
            var$3.$limit = 4;
            var$3.$direct = 1;
            var$3.$readOnly0 = 0;
            var$3.$order = jn_ByteOrder_nativeOrder();
            var$3 = jn_ByteBufferImpl_asIntBuffer(var$3);
        }
        cbggg_VertexBufferObjectWithVAO_tmpHandle = var$3;
    }
    var cbggg_VertexArray = $rt_classWithoutFields(cbggg_VertexBufferObject);
    var cbggg_IndexArray = $rt_classWithoutFields(cbggg_IndexBufferObject);
    function cbgu_ObjectIntMap() {
        var a = this; jl_Object.call(a);
        a.$size10 = 0;
        a.$keyTable2 = null;
        a.$valueTable1 = null;
        a.$loadFactor4 = 0.0;
        a.$threshold4 = 0;
        a.$shift2 = 0;
        a.$mask4 = 0;
    }
    function cbgu_ObjectIntMap__init_(var_0, var_1) {
        var var_2 = new cbgu_ObjectIntMap();
        cbgu_ObjectIntMap__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbgu_ObjectIntMap__init_0($this, $initialCapacity, $loadFactor) {
        var $tableSize, var$4, var$5, var$6, var$7, var$8;
        if ($loadFactor > 0.0 && $loadFactor < 1.0) {
            $this.$loadFactor4 = $loadFactor;
            $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
            $this.$threshold4 = $tableSize * $loadFactor | 0;
            $initialCapacity = $tableSize - 1 | 0;
            $this.$mask4 = $initialCapacity;
            $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt($initialCapacity));
            $this.$keyTable2 = $rt_createArray(jl_Object, $tableSize);
            $this.$valueTable1 = $rt_createIntArray($tableSize);
            return;
        }
        var$4 = new jl_IllegalArgumentException;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(62));
        jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $loadFactor);
        var$6 = new jl_String;
        var$7 = var$5.$buffer;
        $tableSize = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($tableSize);
        var$6.$characters = var$8;
        jl_System_fastArraycopy(var$7, 0, var$8, 0, $tableSize);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$6;
        $rt_throw(var$4);
    }
    function cbgu_ObjectIntMap_locateKey($this, $key) {
        var $other, $keyTable, var$4, var$5, var$6, $i;
        if ($key === null) {
            $other = new jl_IllegalArgumentException;
            $other.$suppressionEnabled = 1;
            $other.$writableStackTrace = 1;
            $other.$message = $rt_s(63);
            $rt_throw($other);
        }
        a: {
            $keyTable = $this.$keyTable2;
            if (!$key.$hashCode0) {
                var$4 = $key.$characters.data;
                var$5 = var$4.length;
                var$6 = 0;
                while (true) {
                    if (var$6 >= var$5)
                        break a;
                    $i = var$4[var$6];
                    $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + $i | 0;
                    var$6 = var$6 + 1 | 0;
                }
            }
        }
        $i = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode0), Long_create(2135587861, 2654435769)), $this.$shift2));
        while (true) {
            $other = $keyTable.data[$i];
            if ($other === null)
                return  -($i + 1 | 0) | 0;
            if (jl_String_equals($other, $key))
                break;
            $i = ($i + 1 | 0) & $this.$mask4;
        }
        return $i;
    }
    function cbgu_ObjectIntMap_put($this, $key, $value) {
        var $i, var$4;
        $i = cbgu_ObjectIntMap_locateKey($this, $key);
        if ($i >= 0) {
            $this.$valueTable1.data[$i] = $value;
            return;
        }
        $i =  -($i + 1 | 0) | 0;
        var$4 = $this.$keyTable2.data;
        var$4[$i] = $key;
        $this.$valueTable1.data[$i] = $value;
        $value = $this.$size10 + 1 | 0;
        $this.$size10 = $value;
        if ($value >= $this.$threshold4)
            cbgu_ObjectIntMap_resize($this, var$4.length << 1);
    }
    function cbgu_ObjectIntMap_resize($this, $newSize) {
        var $oldCapacity, var$3, $oldKeyTable, $oldValueTable, var$6, var$7, var$8, $i, $key, var$11, var$12, var$13, var$14;
        a: {
            $oldCapacity = $this.$keyTable2.data.length;
            $this.$threshold4 = $newSize * $this.$loadFactor4 | 0;
            var$3 = $newSize - 1 | 0;
            $this.$mask4 = var$3;
            var$3 = jl_Long_numberOfLeadingZeros(Long_fromInt(var$3));
            $this.$shift2 = var$3;
            $oldKeyTable = $this.$keyTable2;
            $oldValueTable = $this.$valueTable1;
            var$6 = $rt_createArray(jl_Object, $newSize);
            $this.$keyTable2 = var$6;
            var$7 = $rt_createIntArray($newSize);
            $this.$valueTable1 = var$7;
            if ($this.$size10 > 0) {
                var$8 = var$7.data;
                var$7 = var$6.data;
                $i = 0;
                while (true) {
                    if ($i >= $oldCapacity)
                        break a;
                    $key = $oldKeyTable.data[$i];
                    if ($key !== null) {
                        b: {
                            var$11 = $oldValueTable.data[$i];
                            if (!$key.$hashCode0) {
                                var$6 = $key.$characters.data;
                                var$12 = var$6.length;
                                var$13 = 0;
                                while (true) {
                                    if (var$13 >= var$12)
                                        break b;
                                    var$14 = var$6[var$13];
                                    $key.$hashCode0 = (31 * $key.$hashCode0 | 0) + var$14 | 0;
                                    var$13 = var$13 + 1 | 0;
                                }
                            }
                        }
                        $newSize = Long_lo(Long_shru(Long_mul(Long_fromInt($key.$hashCode0), Long_create(2135587861, 2654435769)), var$3));
                        while (var$7[$newSize] !== null) {
                            $newSize = ($newSize + 1 | 0) & $this.$mask4;
                        }
                        var$7[$newSize] = $key;
                        var$8[$newSize] = var$11;
                    }
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    var cbgu_BufferUtils = $rt_classWithoutFields();
    function cbgu_BufferUtils_newFloatBuffer($numFloats) {
        var var$2, var$3, $buffer, var$5, var$6, var$7, var$8;
        if (!cgxgbt_TeaTool_isProd) {
            var$2 = $rt_createFloatArray($numFloats);
            var$3 = var$2.data.length;
            $buffer = new jn_FloatBufferOverArray;
            var$5 = 0 + var$3 | 0;
            $buffer.$mark = (-1);
            $buffer.$capacity = var$3;
            $buffer.$limit = var$3;
            $buffer.$position = 0;
            $buffer.$limit = var$5;
            $buffer.$start = 0;
            $buffer.$readOnly = 0;
            $buffer.$array = var$2;
            return $buffer;
        }
        $numFloats = $numFloats * 4 | 0;
        if ($numFloats >= 0) {
            $buffer = new jn_ByteBufferImpl;
            var$2 = $rt_createByteArray($numFloats);
            $buffer.$mark = (-1);
            $buffer.$capacity = $numFloats;
            $buffer.$limit = $numFloats;
            jn_ByteOrder_$callClinit();
            $buffer.$order = jn_ByteOrder_BIG_ENDIAN;
            $buffer.$start0 = 0;
            $buffer.$array0 = var$2;
            $buffer.$position = 0;
            $buffer.$limit = $numFloats;
            $buffer.$direct = 1;
            $buffer.$readOnly0 = 0;
            $buffer.$order = jn_ByteOrder_nativeOrder();
            return jn_ByteBufferImpl_asFloatBuffer($buffer);
        }
        $buffer = new jl_IllegalArgumentException;
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(523));
        jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $numFloats, 10);
        var$7 = new jl_String;
        var$2 = var$6.$buffer;
        var$3 = var$6.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$3);
        var$7.$characters = var$8;
        jl_System_fastArraycopy(var$2, 0, var$8, 0, var$3);
        $buffer.$suppressionEnabled = 1;
        $buffer.$writableStackTrace = 1;
        $buffer.$message = var$7;
        $rt_throw($buffer);
    }
    function jn_ByteOrder() {
        jl_Object.call(this);
        this.$name5 = null;
    }
    var jn_ByteOrder_BIG_ENDIAN = null;
    var jn_ByteOrder_LITTLE_ENDIAN = null;
    var jn_ByteOrder_nativeOrder0 = null;
    function jn_ByteOrder_$callClinit() {
        jn_ByteOrder_$callClinit = $rt_eraseClinit(jn_ByteOrder);
        jn_ByteOrder__clinit_();
    }
    function jn_ByteOrder_nativeOrder() {
        var $buffer, $shortArray;
        jn_ByteOrder_$callClinit();
        if (jn_ByteOrder_nativeOrder0 === null) {
            $buffer = new $rt_globals.ArrayBuffer(2);
            $shortArray = new $rt_globals.Int16Array($buffer);
            0;
            $shortArray[0] = 1;
            jn_ByteOrder_nativeOrder0 = (new $rt_globals.Int8Array($buffer))[0] ? jn_ByteOrder_LITTLE_ENDIAN : jn_ByteOrder_BIG_ENDIAN;
        }
        return jn_ByteOrder_nativeOrder0;
    }
    function jn_ByteOrder__clinit_() {
        var var$1;
        var$1 = new jn_ByteOrder;
        jn_ByteOrder_$callClinit();
        var$1.$name5 = $rt_s(570);
        jn_ByteOrder_BIG_ENDIAN = var$1;
        var$1 = new jn_ByteOrder;
        var$1.$name5 = $rt_s(571);
        jn_ByteOrder_LITTLE_ENDIAN = var$1;
    }
    var cbgg_TextureData = $rt_classWithoutFields(0);
    function cbggg_FileTextureData() {
        var a = this; jl_Object.call(a);
        a.$file = null;
        a.$width3 = 0;
        a.$height1 = 0;
        a.$format = null;
        a.$pixmap = null;
        a.$useMipMaps = 0;
        a.$isPrepared = 0;
    }
    var cbggg_FileTextureData_copyToPOT = 0;
    function cbggg_FileTextureData__init_(var_0, var_1, var_2, var_3) {
        var var_4 = new cbggg_FileTextureData();
        cbggg_FileTextureData__init_0(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function cbggg_FileTextureData__init_0($this, $file, $preloadedPixmap, $format, $useMipMaps) {
        $this.$width3 = 0;
        $this.$height1 = 0;
        $this.$isPrepared = 0;
        $this.$file = $file;
        $this.$pixmap = $preloadedPixmap;
        $this.$format = $format;
        $this.$useMipMaps = $useMipMaps;
        if ($preloadedPixmap !== null) {
            $file = cbggg_FileTextureData_ensurePot($this, $preloadedPixmap);
            $this.$pixmap = $file;
            $preloadedPixmap = $file.$nativePixmap;
            $this.$width3 = $preloadedPixmap === null ? $file.$width4 : $preloadedPixmap.$width5;
            $this.$height1 = $preloadedPixmap === null ? $file.$height2 : $preloadedPixmap.$height3;
            if ($format === null) {
                if ($preloadedPixmap === null) {
                    cbgg_Pixmap$Format_$callClinit();
                    $file = cbgg_Pixmap$Format_RGBA8888;
                } else
                    $file = cbgg_Pixmap$Format_fromGdx2DPixmapFormat($preloadedPixmap.$format0);
                $this.$format = $file;
            }
        }
    }
    function cbggg_FileTextureData_prepare($this) {
        var var$1, var$2;
        if ($this.$isPrepared) {
            var$1 = new cbgu_GdxRuntimeException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = $rt_s(572);
            $rt_throw(var$1);
        }
        if ($this.$pixmap === null) {
            var$1 = cbggg_FileTextureData_ensurePot($this, cbgg_Pixmap__init_($this.$file));
            $this.$pixmap = var$1;
            var$2 = var$1.$nativePixmap;
            $this.$width3 = var$2 === null ? var$1.$width4 : var$2.$width5;
            $this.$height1 = var$2 === null ? var$1.$height2 : var$2.$height3;
            if ($this.$format === null) {
                if (var$2 === null) {
                    cbgg_Pixmap$Format_$callClinit();
                    var$1 = cbgg_Pixmap$Format_RGBA8888;
                } else
                    var$1 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat(var$2.$format0);
                $this.$format = var$1;
            }
        }
        $this.$isPrepared = 1;
    }
    function cbggg_FileTextureData_ensurePot($this, $pixmap) {
        var var$2, $pixmapWidth, $pixmapHeight, $potWidth, $potHeight, $tmp_0, var$8, var$9;
        a: {
            if (cbg_Gdx_gl20 === null && cbggg_FileTextureData_copyToPOT) {
                var$2 = $pixmap.$nativePixmap;
                $pixmapWidth = var$2 === null ? $pixmap.$width4 : var$2.$width5;
                $pixmapHeight = var$2 === null ? $pixmap.$height2 : var$2.$height3;
                $potWidth = cbgm_MathUtils_nextPowerOfTwo($pixmapWidth);
                $potHeight = cbgm_MathUtils_nextPowerOfTwo($pixmapHeight);
                if ($pixmapWidth != $potWidth)
                    break a;
                if ($pixmapHeight != $potHeight)
                    break a;
            }
            return $pixmap;
        }
        $tmp_0 = new cbgg_Pixmap;
        var$2 = $pixmap.$nativePixmap;
        if (var$2 === null) {
            cbgg_Pixmap$Format_$callClinit();
            var$2 = cbgg_Pixmap$Format_RGBA8888;
        } else
            var$2 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat(var$2.$format0);
        cbgg_Pixmap__init_0($tmp_0, $potWidth, $potHeight, var$2);
        var$2 = $tmp_0.$nativePixmap;
        if (var$2 === null) {
            cbgg_Pixmap_ensureCanvasExists($pixmap);
            cbgg_Pixmap_image($tmp_0, $pixmap.$canvas, 0, 0, $pixmapWidth, $pixmapHeight, 0, 0, $pixmapWidth, $pixmapHeight);
        } else {
            var$8 = $pixmap.$nativePixmap.$basePtr;
            var$9 = var$2.$basePtr;
            cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$8, var$9, 0, 0, $pixmapWidth, $pixmapHeight, 0, 0, $pixmapWidth, $pixmapHeight);
        }
        if ($pixmap.$disposed) {
            var$2 = new cbgu_GdxRuntimeException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = $rt_s(50);
            $rt_throw(var$2);
        }
        cgxgbt_TeaGraphics_$callClinit();
        cbgu_IntMap_remove(cgxgbt_TeaGraphics_pixmaps, $pixmap.$id0);
        var$2 = $pixmap.$nativePixmap;
        if (var$2 !== null)
            cbggg_Gdx2DPixmapEmu_free$js_body$_36(var$2.$basePtr);
        $pixmap.$disposed = 1;
        return $tmp_0;
    }
    function cbgg_Pixmap() {
        var a = this; jl_Object.call(a);
        a.$width4 = 0;
        a.$height2 = 0;
        a.$canvas = null;
        a.$context0 = null;
        a.$id0 = 0;
        a.$buffer7 = null;
        a.$r0 = 0;
        a.$g0 = 0;
        a.$b0 = 0;
        a.$a0 = 0.0;
        a.$colorStr = null;
        a.$blending = null;
        a.$filter = null;
        a.$pixels = null;
        a.$imageElement = null;
        a.$videoElement = null;
        a.$color2 = 0;
        a.$nativePixmap = null;
        a.$disposed = 0;
    }
    var cbgg_Pixmap_clearColor = null;
    function cbgg_Pixmap_$callClinit() {
        cbgg_Pixmap_$callClinit = $rt_eraseClinit(cbgg_Pixmap);
        cbgg_Pixmap__clinit_();
    }
    function cbgg_Pixmap__init_(var_0) {
        var var_1 = new cbgg_Pixmap();
        cbgg_Pixmap__init_1(var_1, var_0);
        return var_1;
    }
    function cbgg_Pixmap__init_2(var_0, var_1, var_2) {
        var var_3 = new cbgg_Pixmap();
        cbgg_Pixmap__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function cbgg_Pixmap__init_1($this, $webFileHandler) {
        var $path, $object, var$4, $bytes, $response, $app, var$8, var$9;
        cbgg_Pixmap_$callClinit();
        $this.$r0 = 255;
        $this.$g0 = 255;
        $this.$b0 = 255;
        $this.$colorStr = cbgg_Pixmap_make(255, 255, 255, $this.$a0);
        cbgg_Pixmap$Blending_$callClinit();
        $this.$blending = cbgg_Pixmap$Blending_SourceOver;
        cbgg_Pixmap$Filter_$callClinit();
        $this.$filter = cbgg_Pixmap$Filter_BiLinear;
        $this.$color2 = 0;
        $path = $webFileHandler.$file0;
        $object = $webFileHandler.$preloader1.$images;
        var$4 = cbgu_ObjectMap_locateKey($object, $path);
        $object = var$4 < 0 ? null : $object.$valueTable.data[var$4];
        if (cbg_Gdx_app.$config.$useNativePixmap) {
            $bytes = otji_JS_unwrapByteArray($object.$data3);
            $this.$nativePixmap = cbggg_Gdx2DPixmapEmu__init_($bytes, 0, $bytes.data.length, 0);
            cbgg_Pixmap_initPixmapEmu($this, (-1), (-1), null, null);
        } else {
            cbgg_Pixmap_initPixmapEmu($this, (-1), (-1), $object.$image0, null);
            if ($this.$imageElement === null) {
                $object = new cbgu_GdxRuntimeException;
                $response = $webFileHandler.$file0;
                $webFileHandler = new jl_StringBuilder;
                $webFileHandler.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($webFileHandler, $webFileHandler.$length, $rt_s(573));
                var$4 = $webFileHandler.$length;
                if ($response === null)
                    $response = $rt_s(1);
                jl_AbstractStringBuilder_insert($webFileHandler, var$4, $response);
                jl_AbstractStringBuilder_insert($webFileHandler, $webFileHandler.$length, $rt_s(574));
                $app = new jl_String;
                var$8 = $webFileHandler.$buffer;
                var$9 = $webFileHandler.$length;
                jl_String_$callClinit();
                $bytes = $rt_createCharArray(var$9);
                $app.$characters = $bytes;
                jl_System_fastArraycopy(var$8, 0, $bytes, 0, var$9);
                $object.$suppressionEnabled = 1;
                $object.$writableStackTrace = 1;
                $object.$message = $app;
                $rt_throw($object);
            }
        }
    }
    function cbgg_Pixmap__init_0($this, $width, $height, $format) {
        cbgg_Pixmap_$callClinit();
        $this.$r0 = 255;
        $this.$g0 = 255;
        $this.$b0 = 255;
        $this.$colorStr = cbgg_Pixmap_make(255, 255, 255, $this.$a0);
        cbgg_Pixmap$Blending_$callClinit();
        $this.$blending = cbgg_Pixmap$Blending_SourceOver;
        cbgg_Pixmap$Filter_$callClinit();
        $this.$filter = cbgg_Pixmap$Filter_BiLinear;
        $this.$color2 = 0;
        cbgg_Pixmap_initPixmapEmu($this, $width, $height, null, null);
    }
    function cbgg_Pixmap_initPixmapEmu($this, $width, $height, $imageElement, $videoElement) {
        var var$5, var$6, var$7;
        if ($videoElement !== null) {
            $this.$videoElement = $videoElement;
            $this.$width4 = $videoElement.getWidth();
            $this.$height2 = $videoElement.getHeight();
        } else if ($imageElement === null) {
            $this.$width4 = $width;
            $this.$height2 = $height;
        } else {
            $this.$imageElement = $imageElement;
            $this.$width4 = $imageElement.width;
            $this.$height2 = $imageElement.height;
        }
        if (!cgxgbt_TeaTool_isProd) {
            var$5 = $rt_createByteArray(4);
            var$6 = var$5.data.length;
            $imageElement = new jn_ByteBufferImpl;
            var$7 = 0 + var$6 | 0;
            $imageElement.$mark = (-1);
            $imageElement.$capacity = var$6;
            $imageElement.$limit = var$6;
            jn_ByteOrder_$callClinit();
            $imageElement.$order = jn_ByteOrder_BIG_ENDIAN;
            $imageElement.$start0 = 0;
            $imageElement.$array0 = var$5;
            $imageElement.$position = 0;
            $imageElement.$limit = var$7;
            $imageElement.$direct = 0;
            $imageElement.$readOnly0 = 0;
        } else {
            $imageElement = new jn_ByteBufferImpl;
            var$5 = $rt_createByteArray(4);
            $imageElement.$mark = (-1);
            $imageElement.$capacity = 4;
            $imageElement.$limit = 4;
            jn_ByteOrder_$callClinit();
            $imageElement.$order = jn_ByteOrder_BIG_ENDIAN;
            $imageElement.$start0 = 0;
            $imageElement.$array0 = var$5;
            $imageElement.$position = 0;
            $imageElement.$limit = 4;
            $imageElement.$direct = 1;
            $imageElement.$readOnly0 = 0;
            $imageElement.$order = jn_ByteOrder_nativeOrder();
        }
        $this.$buffer7 = $imageElement;
        cgxgbt_TeaGraphics_$callClinit();
        $height = cgxgbt_TeaGraphics_nextId;
        cgxgbt_TeaGraphics_nextId = $height + 1 | 0;
        $this.$id0 = $height;
        jn_ByteBufferImpl_putInt($imageElement, 0, $height);
        cbgu_IntMap_put(cgxgbt_TeaGraphics_pixmaps, $this.$id0, $this);
    }
    function cbgg_Pixmap_create($this) {
        var $createElement, $window;
        cgxgbtdi_TeaWindow_$callClinit();
        $createElement = cgxgbtdi_TeaWindow_TEA_WINDOW.$window0.document.createElement("canvas");
        $this.$canvas = $createElement;
        $window = $this.$width4;
        $createElement.width = $window;
        $createElement = $this.$canvas;
        $window = $this.$height2;
        $createElement.height = $window;
        $createElement = $this.$canvas.getContext("2d");
        $this.$context0 = $createElement;
        cbgg_Pixmap_$callClinit();
        cbgg_Composite_$callClinit();
        $window = $rt_ustr(cbgg_Composite_SOURCE_OVER.$name0);
        $createElement.globalCompositeOperation = $window;
    }
    function cbgg_Pixmap_make($r2, $g2, $b2, $a2) {
        var var$5, var$6, var$7, var$8, var$9;
        cbgg_Pixmap_$callClinit();
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(575));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $r2, 10);
        var$6 = var$5.$length;
        jl_AbstractStringBuilder_insertSpace(var$5, var$6, var$6 + 1 | 0);
        var$5.$buffer.data[var$6] = 44;
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $g2, 10);
        $g2 = var$5.$length;
        jl_AbstractStringBuilder_insertSpace(var$5, $g2, $g2 + 1 | 0);
        var$5.$buffer.data[$g2] = 44;
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $b2, 10);
        $g2 = var$5.$length;
        jl_AbstractStringBuilder_insertSpace(var$5, $g2, $g2 + 1 | 0);
        var$5.$buffer.data[$g2] = 44;
        jl_AbstractStringBuilder_insert1(var$5, var$5.$length, $a2);
        $b2 = var$5.$length;
        jl_AbstractStringBuilder_insertSpace(var$5, $b2, $b2 + 1 | 0);
        var$7 = var$5.$buffer;
        var$7.data[$b2] = 41;
        var$8 = new jl_String;
        $g2 = var$5.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray($g2);
        var$8.$characters = var$9;
        jl_System_fastArraycopy(var$7, 0, var$9, 0, $g2);
        return var$8;
    }
    function cbgg_Pixmap_ensureCanvasExists($this) {
        var var$1, var$2;
        if ($this.$canvas === null) {
            cbgg_Pixmap_create($this);
            if ($this.$imageElement !== null) {
                var$1 = $this.$context0;
                cbgg_Composite_$callClinit();
                var$2 = $rt_ustr(cbgg_Composite_COPY.$value8);
                var$1.globalCompositeOperation = var$2;
                var$1 = $this.$context0;
                var$2 = $this.$imageElement;
                var$1.drawImage(var$2, 0.0, 0.0);
                var$1 = $this.$context0;
                var$2 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$value8);
                var$1.globalCompositeOperation = var$2;
            }
            if ($this.$videoElement !== null) {
                var$2 = $this.$context0;
                cbgg_Composite_$callClinit();
                var$1 = $rt_ustr(cbgg_Composite_COPY.$value8);
                var$2.globalCompositeOperation = var$1;
                var$1 = $this.$context0;
                var$2 = $this.$videoElement;
                var$1.drawImage(var$2, 0.0, 0.0);
                var$1 = $this.$context0;
                var$2 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$value8);
                var$1.globalCompositeOperation = var$2;
            }
        }
    }
    function cbgg_Pixmap_drawPixmap($this, $pixmap, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight) {
        var var$10, var$11, var$12;
        var$10 = $this.$nativePixmap;
        if (var$10 === null) {
            cbgg_Pixmap_ensureCanvasExists($pixmap);
            cbgg_Pixmap_image($this, $pixmap.$canvas, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
        } else {
            var$11 = $pixmap.$nativePixmap.$basePtr;
            var$12 = var$10.$basePtr;
            cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$11, var$12, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
        }
    }
    function cbgg_Pixmap_getWidth($this) {
        var var$1;
        var$1 = $this.$nativePixmap;
        if (var$1 === null)
            return $this.$width4;
        return var$1.$width5;
    }
    function cbgg_Pixmap_getHeight($this) {
        var var$1;
        var$1 = $this.$nativePixmap;
        if (var$1 === null)
            return $this.$height2;
        return var$1.$height3;
    }
    function cbgg_Pixmap_dispose($this) {
        var var$1, var$2;
        if ($this.$disposed) {
            var$1 = new cbgu_GdxRuntimeException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = $rt_s(50);
            $rt_throw(var$1);
        }
        cgxgbt_TeaGraphics_$callClinit();
        cbgu_IntMap_remove(cgxgbt_TeaGraphics_pixmaps, $this.$id0);
        var$2 = $this.$nativePixmap;
        if (var$2 !== null)
            cbggg_Gdx2DPixmapEmu_free$js_body$_36(var$2.$basePtr);
        $this.$disposed = 1;
    }
    function cbgg_Pixmap_getGLFormat($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.$nativePixmap;
        if (var$1 === null)
            return 6408;
        a: {
            var$2 = var$1.$format0;
            switch (var$2) {
                case 1:
                    break;
                case 2:
                    var$2 = 6410;
                    break a;
                case 3:
                case 5:
                    var$2 = 6407;
                    break a;
                case 4:
                case 6:
                    var$2 = 6408;
                    break a;
                default:
                    var$1 = new cbgu_GdxRuntimeException;
                    var$3 = new jl_StringBuilder;
                    var$3.$buffer = $rt_createCharArray(16);
                    jl_StringBuilder_insert(var$3, var$3.$length, jl_String_toString($rt_s(51)));
                    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10);
                    var$4 = new jl_String;
                    var$5 = var$3.$buffer;
                    var$6 = var$3.$length;
                    var$7 = $rt_createCharArray(var$6);
                    var$4.$characters = var$7;
                    jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
                    var$1.$suppressionEnabled = 1;
                    var$1.$writableStackTrace = 1;
                    var$1.$message = var$4;
                    $rt_throw(var$1);
            }
            var$2 = 6406;
        }
        return var$2;
    }
    function cbgg_Pixmap_getGLInternalFormat($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.$nativePixmap;
        if (var$1 === null)
            return 6408;
        a: {
            var$2 = var$1.$format0;
            switch (var$2) {
                case 1:
                    break;
                case 2:
                    var$2 = 6410;
                    break a;
                case 3:
                case 5:
                    var$2 = 6407;
                    break a;
                case 4:
                case 6:
                    var$2 = 6408;
                    break a;
                default:
                    var$1 = new cbgu_GdxRuntimeException;
                    var$3 = new jl_StringBuilder;
                    var$3.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(51));
                    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10);
                    var$4 = new jl_String;
                    var$5 = var$3.$buffer;
                    var$6 = var$3.$length;
                    jl_String_$callClinit();
                    var$7 = $rt_createCharArray(var$6);
                    var$4.$characters = var$7;
                    jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
                    var$1.$suppressionEnabled = 1;
                    var$1.$writableStackTrace = 1;
                    var$1.$message = var$4;
                    $rt_throw(var$1);
            }
            var$2 = 6406;
        }
        return var$2;
    }
    function cbgg_Pixmap_getGLType($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.$nativePixmap;
        if (var$1 === null)
            return 5121;
        a: {
            var$2 = var$1.$format0;
            switch (var$2) {
                case 1:
                case 2:
                case 3:
                case 4:
                    break;
                case 5:
                    var$2 = 33635;
                    break a;
                case 6:
                    var$2 = 32819;
                    break a;
                default:
                    var$1 = new cbgu_GdxRuntimeException;
                    var$3 = new jl_StringBuilder;
                    var$3.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(51));
                    jl_AbstractStringBuilder_insert0(var$3, var$3.$length, var$2, 10);
                    var$4 = new jl_String;
                    var$5 = var$3.$buffer;
                    var$6 = var$3.$length;
                    jl_String_$callClinit();
                    var$7 = $rt_createCharArray(var$6);
                    var$4.$characters = var$7;
                    jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
                    var$1.$suppressionEnabled = 1;
                    var$1.$writableStackTrace = 1;
                    var$1.$message = var$4;
                    $rt_throw(var$1);
            }
            var$2 = 5121;
        }
        return var$2;
    }
    function cbgg_Pixmap_getPixels($this) {
        return $this.$buffer7;
    }
    function cbgg_Pixmap_setBlending($this, $blending) {
        var var$2, var$3;
        $this.$blending = $blending;
        var$2 = $this.$nativePixmap;
        if (var$2 === null) {
            cbgg_Pixmap_ensureCanvasExists($this);
            $blending = $this.$context0;
            cbgg_Composite_$callClinit();
            var$2 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$name0);
            $blending.globalCompositeOperation = var$2;
        } else {
            cbgg_Pixmap$Blending_$callClinit();
            var$3 = $blending !== cbgg_Pixmap$Blending_None ? 1 : 0;
            cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47(var$2.$basePtr, var$3);
        }
    }
    function cbgg_Pixmap_image($this, $image, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight) {
        var var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, var$20, var$21;
        cbgg_Pixmap_ensureCanvasExists($this);
        var$10 = $this.$blending;
        cbgg_Pixmap$Blending_$callClinit();
        if (var$10 === cbgg_Pixmap$Blending_None) {
            a: {
                var$11 = $this.$context0;
                var$10 = $rt_ustr(cbgg_Pixmap_clearColor);
                var$11.fillStyle = var$10;
                var$11 = $this.$context0;
                var$10 = $rt_ustr(cbgg_Pixmap_clearColor);
                var$11.strokeStyle = var$10;
                var$11 = $this.$context0;
                var$10 = "destination-out";
                var$11.globalCompositeOperation = var$10;
                $this.$context0.beginPath();
                var$12 = $this.$context0;
                var$13 = $dstX;
                var$14 = $dstY;
                var$15 = $dstWidth;
                var$16 = $dstHeight;
                var$12.rect(var$13, var$14, var$15, var$16);
                cbgg_PixmapEmu$DrawType_$callClinit();
                var$11 = cbgg_PixmapEmu$DrawType_FILL;
                cbgg_Pixmap_ensureCanvasExists($this);
                cbgg_PixmapEmu$2_$callClinit();
                switch (cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType.data[var$11.$ordinal]) {
                    case 1:
                        break;
                    case 2:
                        $this.$context0.stroke();
                        break a;
                    default:
                        break a;
                }
                $this.$context0.fill();
            }
            $this.$context0.closePath();
            var$17 = $this.$context0;
            var$11 = $rt_ustr($this.$colorStr);
            var$17.fillStyle = var$11;
            var$17 = $this.$context0;
            var$10 = $rt_ustr($this.$colorStr);
            var$17.strokeStyle = var$10;
            var$17 = $this.$context0;
            cbgg_Composite_$callClinit();
            var$11 = $rt_ustr(cbgg_Composite_SOURCE_OVER.$value8);
            var$17.globalCompositeOperation = var$11;
        }
        if ($srcWidth && $srcHeight && $dstWidth && $dstHeight) {
            var$11 = $this.$context0;
            var$13 = $srcX;
            var$14 = $srcY;
            var$15 = $srcWidth;
            var$16 = $srcHeight;
            var$18 = $dstX;
            var$19 = $dstY;
            var$20 = $dstWidth;
            var$21 = $dstHeight;
            var$11.drawImage($image, var$13, var$14, var$15, var$16, var$18, var$19, var$20, var$21);
        }
        $this.$pixels = null;
    }
    function cbgg_Pixmap__clinit_() {
        cbgg_Pixmap_clearColor = cbgg_Pixmap_make(255, 255, 255, 1.0);
    }
    var cbgf_FileHandle = $rt_classWithoutFields();
    var jn_IntBuffer = $rt_classWithoutFields(jn_Buffer);
    function jn_IntBuffer_clear($this) {
        $this.$position = 0;
        $this.$limit = $this.$capacity;
        $this.$mark = (-1);
        return $this;
    }
    function jn_IntBuffer_flip($this) {
        $this.$limit = $this.$position;
        $this.$position = 0;
        $this.$mark = (-1);
        return $this;
    }
    function jn_IntBuffer_position($this, $newPosition) {
        jn_Buffer_position($this, $newPosition);
        return $this;
    }
    function jn_IntBuffer_clear0($this) {
        $this.$position = 0;
        $this.$limit = $this.$capacity;
        $this.$mark = (-1);
        return $this;
    }
    var jn_FloatBuffer = $rt_classWithoutFields(jn_Buffer);
    function jn_FloatBuffer_put($this, $src, $offset, $length) {
        var var$4, var$5, $pos, var$7, $i, var$9, var$10, var$11;
        if ($this.$readOnly7()) {
            var$4 = new jn_ReadOnlyBufferException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        var$5 = $this.$limit;
        $pos = $this.$position;
        if ((var$5 - $pos | 0) < $length) {
            var$4 = new jn_BufferOverflowException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        if ($offset >= 0) {
            var$7 = $src.data;
            var$5 = var$7.length;
            if ($offset <= var$5) {
                $i = $offset + $length | 0;
                if ($i > var$5) {
                    var$4 = new jl_IndexOutOfBoundsException;
                    var$9 = new jl_StringBuilder;
                    var$9.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(576));
                    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $i, 10);
                    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(510));
                    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, var$5, 10);
                    var$10 = new jl_String;
                    $src = var$9.$buffer;
                    $length = var$9.$length;
                    jl_String_$callClinit();
                    var$7 = $rt_createCharArray($length);
                    var$10.$characters = var$7;
                    jl_System_fastArraycopy($src, 0, var$7, 0, $length);
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    var$4.$message = var$10;
                    $rt_throw(var$4);
                }
                if ($length >= 0) {
                    $i = 0;
                    while ($i < $length) {
                        var$11 = $pos + 1 | 0;
                        var$5 = $offset + 1 | 0;
                        $this.$putElement($pos, var$7[$offset]);
                        $i = $i + 1 | 0;
                        $pos = var$11;
                        $offset = var$5;
                    }
                    $this.$position = $this.$position + $length | 0;
                    return $this;
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$9 = new jl_StringBuilder;
                var$9.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(511));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(512));
                var$10 = new jl_String;
                $src = var$9.$buffer;
                $length = var$9.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray($length);
                var$10.$characters = var$7;
                jl_System_fastArraycopy($src, 0, var$7, 0, $length);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$10;
                $rt_throw(var$4);
            }
        }
        $src = $src.data;
        var$4 = new jl_IndexOutOfBoundsException;
        $length = $src.length;
        var$9 = new jl_StringBuilder;
        var$9.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(513));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $offset, 10);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
        $length = var$9.$length;
        jl_AbstractStringBuilder_insertSpace(var$9, $length, $length + 1 | 0);
        var$7 = var$9.$buffer;
        var$7.data[$length] = 41;
        var$10 = new jl_String;
        $length = var$9.$length;
        jl_String_$callClinit();
        $src = $rt_createCharArray($length);
        var$10.$characters = $src;
        jl_System_fastArraycopy(var$7, 0, $src, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$10;
        $rt_throw(var$4);
    }
    function jn_FloatBuffer_clear($this) {
        $this.$position = 0;
        $this.$limit = $this.$capacity;
        $this.$mark = (-1);
        return $this;
    }
    function jn_FloatBuffer_flip($this) {
        $this.$limit = $this.$position;
        $this.$position = 0;
        $this.$mark = (-1);
        return $this;
    }
    function jn_FloatBuffer_limit($this, $newLimit) {
        jn_Buffer_limit($this, $newLimit);
        return $this;
    }
    function jn_FloatBuffer_position($this, $newPosition) {
        jn_Buffer_position($this, $newPosition);
        return $this;
    }
    function jn_FloatBuffer_flip0($this) {
        $this.$limit = $this.$position;
        $this.$position = 0;
        $this.$mark = (-1);
        return $this;
    }
    function jn_FloatBuffer_clear0($this) {
        $this.$position = 0;
        $this.$limit = $this.$capacity;
        $this.$mark = (-1);
        return $this;
    }
    function jn_FloatBuffer_limit0($this, var$1) {
        jn_Buffer_limit($this, var$1);
        return $this;
    }
    function jn_FloatBuffer_position0($this, var$1) {
        jn_Buffer_position($this, var$1);
        return $this;
    }
    var cbgg_Pixmap$Blending = $rt_classWithoutFields(jl_Enum);
    var cbgg_Pixmap$Blending_None = null;
    var cbgg_Pixmap$Blending_SourceOver = null;
    var cbgg_Pixmap$Blending_$VALUES = null;
    function cbgg_Pixmap$Blending_$callClinit() {
        cbgg_Pixmap$Blending_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Blending);
        cbgg_Pixmap$Blending__clinit_();
    }
    function cbgg_Pixmap$Blending__clinit_() {
        var var$1, var$2;
        var$1 = new cbgg_Pixmap$Blending;
        cbgg_Pixmap$Blending_$callClinit();
        var$1.$name0 = $rt_s(577);
        var$1.$ordinal = 0;
        cbgg_Pixmap$Blending_None = var$1;
        var$2 = new cbgg_Pixmap$Blending;
        var$2.$name0 = $rt_s(578);
        var$2.$ordinal = 1;
        cbgg_Pixmap$Blending_SourceOver = var$2;
        cbgg_Pixmap$Blending_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Blending, [var$1, var$2]);
    }
    var cbgg_Pixmap$Filter = $rt_classWithoutFields(jl_Enum);
    var cbgg_Pixmap$Filter_NearestNeighbour = null;
    var cbgg_Pixmap$Filter_BiLinear = null;
    var cbgg_Pixmap$Filter_$VALUES = null;
    function cbgg_Pixmap$Filter_$callClinit() {
        cbgg_Pixmap$Filter_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Filter);
        cbgg_Pixmap$Filter__clinit_();
    }
    function cbgg_Pixmap$Filter__clinit_() {
        var var$1, var$2;
        var$1 = new cbgg_Pixmap$Filter;
        cbgg_Pixmap$Filter_$callClinit();
        var$1.$name0 = $rt_s(579);
        var$1.$ordinal = 0;
        cbgg_Pixmap$Filter_NearestNeighbour = var$1;
        var$2 = new cbgg_Pixmap$Filter;
        var$2.$name0 = $rt_s(580);
        var$2.$ordinal = 1;
        cbgg_Pixmap$Filter_BiLinear = var$2;
        cbgg_Pixmap$Filter_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Filter, [var$1, var$2]);
    }
    function cgxgbt_TeaFileHandle() {
        var a = this; cbgf_FileHandle.call(a);
        a.$preloader1 = null;
        a.$file0 = null;
        a.$type = null;
    }
    function cgxgbt_TeaFileHandle__init_(var_0, var_1, var_2) {
        var var_3 = new cgxgbt_TeaFileHandle();
        cgxgbt_TeaFileHandle__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function cgxgbt_TeaFileHandle__init_0($this, $preloader, $fileName, $type) {
        var var$4, var$5, var$6, var$7, var$8, var$9;
        cbg_Files$FileType_$callClinit();
        if ($type !== cbg_Files$FileType_Internal && $type !== cbg_Files$FileType_Classpath && $type !== cbg_Files$FileType_Local) {
            $preloader = new cbgu_GdxRuntimeException;
            $fileName = new jl_StringBuilder;
            $fileName.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert($fileName, $fileName.$length, $rt_s(581));
            jl_AbstractStringBuilder_insert($fileName, $fileName.$length, $type === null ? $rt_s(1) : $type.$name0);
            jl_AbstractStringBuilder_insert($fileName, $fileName.$length, $rt_s(582));
            $type = new jl_String;
            var$4 = $fileName.$buffer;
            var$5 = $fileName.$length;
            jl_String_$callClinit();
            var$6 = $rt_createCharArray(var$5);
            $type.$characters = var$6;
            jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
            $preloader.$suppressionEnabled = 1;
            $preloader.$writableStackTrace = 1;
            $preloader.$message = $type;
            $rt_throw($preloader);
        }
        $this.$preloader1 = $preloader;
        $preloader = jl_String_replace($fileName, $rt_s(583), $rt_s(120));
        if (jl_String_endsWith($preloader, $rt_s(120))) {
            var$6 = $preloader.$characters;
            var$7 = var$6.data.length;
            var$8 = var$7 - 1 | 0;
            var$9 = $rt_compare(0, var$8);
            if (var$9 > 0) {
                $preloader = new jl_IndexOutOfBoundsException;
                $preloader.$suppressionEnabled = 1;
                $preloader.$writableStackTrace = 1;
                $rt_throw($preloader);
            }
            if (!var$9)
                $preloader = jl_String_EMPTY;
            else if (var$8 != var$7) {
                $preloader = new jl_String;
                var$8 = var$8 - 0 | 0;
                var$4 = $rt_createCharArray(var$8);
                $preloader.$characters = var$4;
                jl_System_fastArraycopy(var$6, 0, var$4, 0, var$8);
            }
        }
        $this.$file0 = $preloader;
        $this.$type = $type;
    }
    function cgxgbt_TeaFileHandle_path($this) {
        return $this.$file0;
    }
    function cgxgbt_TeaFileHandle_nameWithoutExtension($this) {
        var $name, var$2, var$3, $dotIndex, var$5, var$6;
        $name = $this.$file0;
        var$2 = jl_String_lastIndexOf($name, 47, $name.$characters.data.length - 1 | 0);
        if (var$2 < 0)
            $name = $this.$file0;
        else {
            $name = $this.$file0;
            var$2 = var$2 + 1 | 0;
            var$3 = $name.$characters;
            $dotIndex = var$3.data.length;
            var$5 = $rt_compare(var$2, $dotIndex);
            if (var$5 > 0) {
                $name = new jl_IndexOutOfBoundsException;
                $name.$suppressionEnabled = 1;
                $name.$writableStackTrace = 1;
                $rt_throw($name);
            }
            if (!var$5)
                $name = jl_String_EMPTY;
            else if (!(!var$2 && $dotIndex == $dotIndex)) {
                $name = new jl_String;
                var$5 = $dotIndex - var$2 | 0;
                var$6 = $rt_createCharArray(var$5);
                $name.$characters = var$6;
                jl_System_fastArraycopy(var$3, var$2, var$6, 0, var$5);
            }
        }
        $dotIndex = jl_String_lastIndexOf($name, 46, $name.$characters.data.length - 1 | 0);
        if ($dotIndex == (-1))
            return $name;
        var$5 = $rt_compare(0, $dotIndex);
        if (var$5 > 0) {
            $name = new jl_IndexOutOfBoundsException;
            $name.$suppressionEnabled = 1;
            $name.$writableStackTrace = 1;
            $rt_throw($name);
        }
        if (!var$5)
            $name = jl_String_EMPTY;
        else {
            var$6 = $name.$characters;
            if ($dotIndex != var$6.data.length) {
                $name = new jl_String;
                var$5 = $dotIndex - 0 | 0;
                var$3 = $rt_createCharArray(var$5);
                $name.$characters = var$3;
                jl_System_fastArraycopy(var$6, 0, var$3, 0, var$5);
            }
        }
        return $name;
    }
    function cgxgbt_TeaFileHandle_read($this) {
        var var$1, $in, var$3, var$4, var$5, var$6, var$7, var$8;
        var$1 = $this.$type;
        cbg_Files$FileType_$callClinit();
        if (var$1 === cbg_Files$FileType_Local) {
            if (cgxgbtf_FileDB_INSTANCE === null) {
                $in = new cgxgbtf_FileDBManager;
                var$1 = new cgxgbtf_FileDBStorage;
                var$3 = new cgxgbtf_StoreLocal;
                var$4 = cbg_Gdx_app.$config.$storagePrefix;
                var$3.$storage = $rt_globals.window.localStorage;
                var$3.$prefix = var$4;
                cgxgbtf_FileDBStorage_$callClinit();
                var$1.$store = var$3;
                $in.$localStorage = var$1;
                var$1 = new cgxgbtf_FileDBStorage;
                var$3 = new cgxgbtf_StoreMemory;
                var$4 = new cbgu_Array;
                var$4.$ordered = 1;
                var$4.$items = $rt_createArray(jl_Object, 16);
                var$3.$keys = var$4;
                var$3.$map0 = cbgu_ObjectMap__init_(16, 0.800000011920929);
                var$1.$store = var$3;
                $in.$memory = var$1;
                cgxgbtf_FileDB_INSTANCE = $in;
            }
            var$1 = cgxgbtf_FileDB_INSTANCE;
            return !cgxgbtf_FileDBStorage_exists(var$1.$memory, $this) ? cgxgbtf_FileDBStorage_read(var$1.$localStorage, $this) : cgxgbtf_FileDBStorage_read(var$1.$memory, $this);
        }
        $in = cgxgbtp_Preloader_read($this.$preloader1, $this.$file0);
        if ($in !== null)
            return $in;
        $in = new cbgu_GdxRuntimeException;
        var$1 = $this.$file0;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$5 = var$3.$length;
        if (var$1 === null)
            var$1 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$5, var$1);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(584));
        var$1 = new jl_String;
        var$6 = var$3.$buffer;
        var$7 = var$3.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$1.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        $in.$suppressionEnabled = 1;
        $in.$writableStackTrace = 1;
        $in.$message = var$1;
        $rt_throw($in);
    }
    function cgxgbt_TeaFileHandle_child($this, $name) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$2 = new cgxgbt_TeaFileHandle;
        var$3 = $this.$preloader1;
        var$4 = $this.$file0;
        if (var$4.$characters.data.length ? 0 : 1)
            var$4 = $rt_s(45);
        else {
            var$5 = !jl_String_endsWith(var$4, $rt_s(120)) ? $rt_s(120) : $rt_s(45);
            var$6 = new jl_StringBuilder;
            var$6.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$6, var$6.$length, var$4);
            jl_AbstractStringBuilder_insert(var$6, var$6.$length, var$5);
            var$4 = new jl_String;
            var$7 = var$6.$buffer;
            var$8 = var$6.$length;
            var$9 = $rt_createCharArray(var$8);
            var$4.$characters = var$9;
            jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
        }
        var$6 = new jl_StringBuilder;
        var$6.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$6, var$6.$length, var$4);
        var$10 = var$6.$length;
        if ($name === null)
            $name = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$6, var$10, $name);
        $name = new jl_String;
        var$9 = var$6.$buffer;
        var$8 = var$6.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$8);
        $name.$characters = var$7;
        jl_System_fastArraycopy(var$9, 0, var$7, 0, var$8);
        cgxgbt_TeaFileHandle__init_0(var$2, var$3, $name, $this.$type);
        return var$2;
    }
    function cgxgbt_TeaFileHandle_parent($this) {
        var var$1, $index, $dir, var$4, var$5, var$6;
        var$1 = $this.$file0;
        $index = jl_String_lastIndexOf0(var$1, $rt_s(120), var$1.$characters.data.length);
        $dir = $rt_s(45);
        if ($index > 0) {
            $dir = $this.$file0;
            var$4 = $rt_compare(0, $index);
            if (var$4 > 0) {
                $dir = new jl_IndexOutOfBoundsException;
                $dir.$suppressionEnabled = 1;
                $dir.$writableStackTrace = 1;
                $rt_throw($dir);
            }
            if (!var$4)
                $dir = jl_String_EMPTY;
            else {
                var$5 = $dir.$characters;
                if ($index != var$5.data.length) {
                    $dir = new jl_String;
                    var$4 = $index - 0 | 0;
                    var$6 = $rt_createCharArray(var$4);
                    $dir.$characters = var$6;
                    jl_System_fastArraycopy(var$5, 0, var$6, 0, var$4);
                }
            }
        }
        return cgxgbt_TeaFileHandle__init_($this.$preloader1, $dir, $this.$type);
    }
    function cgxgbt_TeaFileHandle_toString($this) {
        return $this.$file0;
    }
    function cbggg_Gdx2DPixmapEmu() {
        var a = this; jl_Object.call(a);
        a.$basePtr = 0;
        a.$width5 = 0;
        a.$height3 = 0;
        a.$format0 = 0;
        a.$nativeData = null;
        a.$pixelPtr = null;
    }
    function cbggg_Gdx2DPixmapEmu__init_(var_0, var_1, var_2, var_3) {
        var var_4 = new cbggg_Gdx2DPixmapEmu();
        cbggg_Gdx2DPixmapEmu__init_0(var_4, var_0, var_1, var_2, var_3);
        return var_4;
    }
    function cbggg_Gdx2DPixmapEmu__init_1(var_0, var_1, var_2) {
        var var_3 = new cbggg_Gdx2DPixmapEmu();
        cbggg_Gdx2DPixmapEmu__init_2(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function cbggg_Gdx2DPixmapEmu_toGlFormat($format) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        switch ($format) {
            case 1:
                break;
            case 2:
                return 6410;
            case 3:
            case 5:
                return 6407;
            case 4:
            case 6:
                return 6408;
            default:
                var$2 = new cbgu_GdxRuntimeException;
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(51));
                jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $format, 10);
                var$4 = new jl_String;
                var$5 = var$3.$buffer;
                var$6 = var$3.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray(var$6);
                var$4.$characters = var$7;
                jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = var$4;
                $rt_throw(var$2);
        }
        return 6406;
    }
    function cbggg_Gdx2DPixmapEmu_toGlType($format) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        switch ($format) {
            case 1:
            case 2:
            case 3:
            case 4:
                break;
            case 5:
                return 33635;
            case 6:
                return 32819;
            default:
                var$2 = new cbgu_GdxRuntimeException;
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(51));
                jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $format, 10);
                var$4 = new jl_String;
                var$5 = var$3.$buffer;
                var$6 = var$3.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray(var$6);
                var$4.$characters = var$7;
                jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = var$4;
                $rt_throw(var$2);
        }
        return 5121;
    }
    function cbggg_Gdx2DPixmapEmu__init_0($this, $encodedData, $offset, $len, $requestedFormat) {
        var var$5, var$6, var$7, var$8, var$9, var$10;
        var$5 = $rt_createIntArray(4);
        $this.$nativeData = var$5;
        var$6 = var$5.data;
        if ($encodedData === null)
            var$7 = null;
        else {
            $encodedData = $encodedData.data;
            var$8 = $encodedData.length;
            var$7 = new $rt_globals.Array(var$8);
            var$9 = 0;
            while (var$9 < var$8) {
                var$10 = $encodedData[var$9];
                var$9;
                var$7[var$9] = var$10;
                var$9 = var$9 + 1 | 0;
            }
        }
        $this.$pixelPtr = cbggg_Gdx2DPixmapEmu_load$js_body$_33(var$6, var$7, $offset, $len);
        $encodedData = $this.$nativeData.data;
        $this.$basePtr = $encodedData[0];
        $this.$width5 = $encodedData[1];
        $this.$height3 = $encodedData[2];
        $offset = $encodedData[3];
        $this.$format0 = $offset;
        if ($requestedFormat && $requestedFormat != $offset)
            cbggg_Gdx2DPixmapEmu_convert($this, $requestedFormat);
    }
    function cbggg_Gdx2DPixmapEmu__init_2($this, $width, $height, $format) {
        var var$4;
        var$4 = $rt_createIntArray(4);
        $this.$nativeData = var$4;
        $this.$pixelPtr = cbggg_Gdx2DPixmapEmu_newPixmap$js_body$_35(var$4.data, $width, $height, $format);
        var$4 = $this.$nativeData.data;
        $this.$basePtr = var$4[0];
        $this.$width5 = var$4[1];
        $this.$height3 = var$4[2];
        $this.$format0 = var$4[3];
    }
    function cbggg_Gdx2DPixmapEmu_convert($this, $requestedFormat) {
        var $pixmap, var$3, var$4, var$5, var$6;
        $pixmap = cbggg_Gdx2DPixmapEmu__init_1($this.$width5, $this.$height3, $requestedFormat);
        cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47($pixmap.$basePtr, 0);
        var$3 = $this.$width5;
        var$4 = $this.$height3;
        var$5 = $this.$basePtr;
        var$6 = $pixmap.$basePtr;
        cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$5, var$6, 0, 0, var$3, var$4, 0, 0, var$3, var$4);
        cbggg_Gdx2DPixmapEmu_free$js_body$_36($this.$basePtr);
        $this.$basePtr = $pixmap.$basePtr;
        $this.$format0 = $pixmap.$format0;
        $this.$height3 = $pixmap.$height3;
        $this.$nativeData = $pixmap.$nativeData;
        $this.$pixelPtr = $pixmap.$pixelPtr;
        $this.$width5 = $pixmap.$width5;
    }
    function cbggg_Gdx2DPixmapEmu_load$js_body$_33(var$1, var$2, var$3, var$4) {
        var cBufferSize = var$2.length * $rt_globals.Uint8Array.BYTES_PER_ELEMENT;
        var cBuffer = $rt_globals.Gdx._malloc(cBufferSize);
        $rt_globals.Gdx.writeArrayToMemory(var$2, cBuffer);
        var pixmap = $rt_globals.Gdx.Gdx.prototype.g2d_load(cBuffer, var$3, var$4);
        $rt_globals.Gdx._free(cBuffer);
        var pixels = $rt_globals.Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
        var pixmapAddr = $rt_globals.Gdx.getPointer(pixmap);
        var format = pixmap.get_format();
        var width = pixmap.get_width();
        var height = pixmap.get_height();
        var$1[0] = pixmapAddr;
        var$1[1] = width;
        var$1[2] = height;
        var$1[3] = format;
        var bytesPerPixel = $rt_globals.Gdx.Gdx.prototype.g2d_bytes_per_pixel(format);
        var bytesSize = width * height * bytesPerPixel;
        var startIndex = pixels;
        var endIndex = startIndex + bytesSize;
        var newArray = $rt_globals.Gdx.HEAPU8.slice(startIndex, endIndex);
        return newArray;
    }
    function cbggg_Gdx2DPixmapEmu_newPixmap$js_body$_35(var$1, var$2, var$3, var$4) {
        var pixmap = $rt_globals.Gdx.Gdx.prototype.g2d_new(var$2, var$3, var$4);
        var pixels = $rt_globals.Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
        var pixmapAddr = $rt_globals.Gdx.getPointer(pixmap);
        var var$4 = pixmap.get_format();
        var var$2 = pixmap.get_width();
        var var$3 = pixmap.get_height();
        var$1[0] = pixmapAddr;
        var$1[1] = var$2;
        var$1[2] = var$3;
        var$1[3] = var$4;
        var bytesPerPixel = $rt_globals.Gdx.Gdx.prototype.g2d_bytes_per_pixel(var$4);
        var bytesSize = var$2 * var$3 * bytesPerPixel;
        var startIndex = pixels;
        var endIndex = startIndex + bytesSize;
        var newArray = $rt_globals.Gdx.HEAPU8.slice(startIndex, endIndex);
        return newArray;
    }
    function cbggg_Gdx2DPixmapEmu_free$js_body$_36(var$1) {
        var nativeObject = $rt_globals.Gdx.wrapPointer(var$1, $rt_globals.Gdx.gdx2d_pixmap);
        $rt_globals.Gdx.Gdx.prototype.g2d_free(nativeObject);
    }
    function cbggg_Gdx2DPixmapEmu_drawPixmap$js_body$_46(var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10) {
        var nativeObjectSrc = $rt_globals.Gdx.wrapPointer(var$1, $rt_globals.Gdx.gdx2d_pixmap);
        var nativeObjectDst = $rt_globals.Gdx.wrapPointer(var$2, $rt_globals.Gdx.gdx2d_pixmap);
        $rt_globals.Gdx.Gdx.prototype.g2d_draw_pixmap(nativeObjectSrc, nativeObjectDst, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10);
    }
    function cbggg_Gdx2DPixmapEmu_setBlend$js_body$_47(var$1, var$2) {
        var nativeObject = $rt_globals.Gdx.wrapPointer(var$1, $rt_globals.Gdx.gdx2d_pixmap);
        $rt_globals.Gdx.Gdx.prototype.g2d_set_blend(nativeObject, var$2);
    }
    var jn_ShortBuffer = $rt_classWithoutFields(jn_Buffer);
    function jn_ShortBuffer_put($this, $src, $offset, $length) {
        var var$4, var$5, $pos, var$7, $i, var$9, var$10, var$11;
        if ($this.$readOnly7()) {
            var$4 = new jn_ReadOnlyBufferException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        var$5 = $this.$limit;
        $pos = $this.$position;
        if ((var$5 - $pos | 0) < $length) {
            var$4 = new jn_BufferOverflowException;
            var$4.$suppressionEnabled = 1;
            var$4.$writableStackTrace = 1;
            $rt_throw(var$4);
        }
        if ($offset >= 0) {
            var$7 = $src.data;
            var$5 = var$7.length;
            if ($offset <= var$5) {
                $i = $offset + $length | 0;
                if ($i > var$5) {
                    var$4 = new jl_IndexOutOfBoundsException;
                    var$9 = new jl_StringBuilder;
                    var$9.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(585));
                    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $i, 10);
                    jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(510));
                    jl_AbstractStringBuilder_insert0(var$9, var$9.$length, var$5, 10);
                    var$10 = new jl_String;
                    $src = var$9.$buffer;
                    $length = var$9.$length;
                    jl_String_$callClinit();
                    var$7 = $rt_createCharArray($length);
                    var$10.$characters = var$7;
                    jl_System_fastArraycopy($src, 0, var$7, 0, $length);
                    var$4.$suppressionEnabled = 1;
                    var$4.$writableStackTrace = 1;
                    var$4.$message = var$10;
                    $rt_throw(var$4);
                }
                if ($length >= 0) {
                    $i = 0;
                    while ($i < $length) {
                        var$11 = $pos + 1 | 0;
                        var$5 = $offset + 1 | 0;
                        $this.$putElement0($pos, var$7[$offset]);
                        $i = $i + 1 | 0;
                        $pos = var$11;
                        $offset = var$5;
                    }
                    $this.$position = $this.$position + $length | 0;
                    return $this;
                }
                var$4 = new jl_IndexOutOfBoundsException;
                var$9 = new jl_StringBuilder;
                var$9.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(511));
                jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
                jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(512));
                var$10 = new jl_String;
                $src = var$9.$buffer;
                $length = var$9.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray($length);
                var$10.$characters = var$7;
                jl_System_fastArraycopy($src, 0, var$7, 0, $length);
                var$4.$suppressionEnabled = 1;
                var$4.$writableStackTrace = 1;
                var$4.$message = var$10;
                $rt_throw(var$4);
            }
        }
        $src = $src.data;
        var$4 = new jl_IndexOutOfBoundsException;
        $length = $src.length;
        var$9 = new jl_StringBuilder;
        var$9.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(513));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $offset, 10);
        jl_AbstractStringBuilder_insert(var$9, var$9.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$9, var$9.$length, $length, 10);
        $length = var$9.$length;
        jl_AbstractStringBuilder_insertSpace(var$9, $length, $length + 1 | 0);
        var$7 = var$9.$buffer;
        var$7.data[$length] = 41;
        var$10 = new jl_String;
        $length = var$9.$length;
        jl_String_$callClinit();
        $src = $rt_createCharArray($length);
        var$10.$characters = $src;
        jl_System_fastArraycopy(var$7, 0, $src, 0, $length);
        var$4.$suppressionEnabled = 1;
        var$4.$writableStackTrace = 1;
        var$4.$message = var$10;
        $rt_throw(var$4);
    }
    function jn_ShortBuffer_clear($this) {
        $this.$position = 0;
        $this.$limit = $this.$capacity;
        $this.$mark = (-1);
        return $this;
    }
    function jn_ShortBuffer_flip($this) {
        $this.$limit = $this.$position;
        $this.$position = 0;
        $this.$mark = (-1);
        return $this;
    }
    function jn_ShortBuffer_limit($this, $newLimit) {
        jn_Buffer_limit($this, $newLimit);
        return $this;
    }
    function jn_ShortBuffer_position($this, $newPosition) {
        jn_Buffer_position($this, $newPosition);
        return $this;
    }
    function jn_ShortBuffer_flip0($this) {
        $this.$limit = $this.$position;
        $this.$position = 0;
        $this.$mark = (-1);
        return $this;
    }
    function jn_ShortBuffer_clear0($this) {
        $this.$position = 0;
        $this.$limit = $this.$capacity;
        $this.$mark = (-1);
        return $this;
    }
    function jn_ShortBuffer_limit0($this, var$1) {
        jn_Buffer_limit($this, var$1);
        return $this;
    }
    function jn_ShortBuffer_position0($this, var$1) {
        jn_Buffer_position($this, var$1);
        return $this;
    }
    var otjt_ArrayBuffer = $rt_classWithoutFields();
    var otjc_JSNumber = $rt_classWithoutFields();
    function cbgg_Texture$TextureFilter() {
        jl_Enum.call(this);
        this.$glEnum0 = 0;
    }
    var cbgg_Texture$TextureFilter_Nearest = null;
    var cbgg_Texture$TextureFilter_Linear = null;
    var cbgg_Texture$TextureFilter_MipMap = null;
    var cbgg_Texture$TextureFilter_MipMapNearestNearest = null;
    var cbgg_Texture$TextureFilter_MipMapLinearNearest = null;
    var cbgg_Texture$TextureFilter_MipMapNearestLinear = null;
    var cbgg_Texture$TextureFilter_MipMapLinearLinear = null;
    var cbgg_Texture$TextureFilter_$VALUES = null;
    function cbgg_Texture$TextureFilter_$callClinit() {
        cbgg_Texture$TextureFilter_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureFilter);
        cbgg_Texture$TextureFilter__clinit_();
    }
    function cbgg_Texture$TextureFilter__clinit_() {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = new cbgg_Texture$TextureFilter;
        cbgg_Texture$TextureFilter_$callClinit();
        var$1.$name0 = $rt_s(586);
        var$1.$ordinal = 0;
        var$1.$glEnum0 = 9728;
        cbgg_Texture$TextureFilter_Nearest = var$1;
        var$2 = new cbgg_Texture$TextureFilter;
        var$2.$name0 = $rt_s(587);
        var$2.$ordinal = 1;
        var$2.$glEnum0 = 9729;
        cbgg_Texture$TextureFilter_Linear = var$2;
        var$3 = new cbgg_Texture$TextureFilter;
        var$3.$name0 = $rt_s(588);
        var$3.$ordinal = 2;
        var$3.$glEnum0 = 9987;
        cbgg_Texture$TextureFilter_MipMap = var$3;
        var$4 = new cbgg_Texture$TextureFilter;
        var$4.$name0 = $rt_s(589);
        var$4.$ordinal = 3;
        var$4.$glEnum0 = 9984;
        cbgg_Texture$TextureFilter_MipMapNearestNearest = var$4;
        var$5 = new cbgg_Texture$TextureFilter;
        var$5.$name0 = $rt_s(590);
        var$5.$ordinal = 4;
        var$5.$glEnum0 = 9985;
        cbgg_Texture$TextureFilter_MipMapLinearNearest = var$5;
        var$6 = new cbgg_Texture$TextureFilter;
        var$6.$name0 = $rt_s(591);
        var$6.$ordinal = 5;
        var$6.$glEnum0 = 9986;
        cbgg_Texture$TextureFilter_MipMapNearestLinear = var$6;
        var$7 = new cbgg_Texture$TextureFilter;
        var$7.$name0 = $rt_s(592);
        var$7.$ordinal = 6;
        var$7.$glEnum0 = 9987;
        cbgg_Texture$TextureFilter_MipMapLinearLinear = var$7;
        cbgg_Texture$TextureFilter_$VALUES = $rt_createArrayFromData(cbgg_Texture$TextureFilter, [var$1, var$2, var$3, var$4, var$5, var$6, var$7]);
    }
    function cbgg_Texture$TextureWrap() {
        jl_Enum.call(this);
        this.$glEnum = 0;
    }
    var cbgg_Texture$TextureWrap_MirroredRepeat = null;
    var cbgg_Texture$TextureWrap_ClampToEdge = null;
    var cbgg_Texture$TextureWrap_Repeat = null;
    var cbgg_Texture$TextureWrap_$VALUES = null;
    function cbgg_Texture$TextureWrap_$callClinit() {
        cbgg_Texture$TextureWrap_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureWrap);
        cbgg_Texture$TextureWrap__clinit_();
    }
    function cbgg_Texture$TextureWrap__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new cbgg_Texture$TextureWrap;
        cbgg_Texture$TextureWrap_$callClinit();
        var$1.$name0 = $rt_s(593);
        var$1.$ordinal = 0;
        var$1.$glEnum = 33648;
        cbgg_Texture$TextureWrap_MirroredRepeat = var$1;
        var$2 = new cbgg_Texture$TextureWrap;
        var$2.$name0 = $rt_s(594);
        var$2.$ordinal = 1;
        var$2.$glEnum = 33071;
        cbgg_Texture$TextureWrap_ClampToEdge = var$2;
        var$3 = new cbgg_Texture$TextureWrap;
        var$3.$name0 = $rt_s(595);
        var$3.$ordinal = 2;
        var$3.$glEnum = 10497;
        cbgg_Texture$TextureWrap_Repeat = var$3;
        cbgg_Texture$TextureWrap_$VALUES = $rt_createArrayFromData(cbgg_Texture$TextureWrap, [var$1, var$2, var$3]);
    }
    var jn_IntBufferImpl = $rt_classWithoutFields(jn_IntBuffer);
    function jn_IntBufferImpl_get0($this) {
        var var$1, var$2;
        var$1 = $this.$position;
        if (var$1 < $this.$limit) {
            $this.$position = var$1 + 1 | 0;
            return $this.$getElement(var$1);
        }
        var$2 = new jn_BufferUnderflowException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    function jn_IntBufferImpl_put($this, $b) {
        var var$2, var$3;
        if ($this.$readOnly7()) {
            var$2 = new jn_ReadOnlyBufferException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        var$3 = $this.$position;
        if (var$3 < $this.$limit) {
            $this.$position = var$3 + 1 | 0;
            $this.$putElement1(var$3, $b);
            return $this;
        }
        var$2 = new jn_BufferOverflowException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        $rt_throw(var$2);
    }
    function jn_IntBufferImpl_get($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if ($index >= 0 && $index < $this.$limit)
            return $this.$getElement($index);
        var$2 = new jl_IndexOutOfBoundsException;
        var$3 = $this.$limit;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(558));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
        var$3 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
        var$5 = var$4.$buffer;
        var$5.data[var$3] = 41;
        var$6 = new jl_String;
        var$3 = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$3);
        var$6.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$6;
        $rt_throw(var$2);
    }
    function jn_IntBufferImpl_put0($this, $index, $b) {
        var var$3, var$4, var$5, var$6, var$7;
        if ($this.$readOnly7()) {
            var$3 = new jn_ReadOnlyBufferException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        if ($index >= 0 && $index < $this.$limit) {
            $this.$putElement1($index, $b);
            return $this;
        }
        var$3 = new jl_IndexOutOfBoundsException;
        $b = $this.$limit;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(558));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $b, 10);
        $b = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, $b, $b + 1 | 0);
        var$5 = var$4.$buffer;
        var$5.data[$b] = 41;
        var$6 = new jl_String;
        $b = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($b);
        var$6.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, $b);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$6;
        $rt_throw(var$3);
    }
    function jn_IntBufferImpl_isReadOnly($this) {
        return $this.$readOnly7();
    }
    function jn_IntBufferOverArray() {
        var a = this; jn_IntBufferImpl.call(a);
        a.$readOnly6 = 0;
        a.$start10 = 0;
        a.$array6 = null;
    }
    function jn_IntBufferOverArray_getElement($this, $index) {
        return $this.$array6.data[$index + $this.$start10 | 0];
    }
    function jn_IntBufferOverArray_putElement($this, $index, $value) {
        $this.$array6.data[$index + $this.$start10 | 0] = $value;
    }
    function jn_IntBufferOverArray_readOnly($this) {
        return $this.$readOnly6;
    }
    var jn_FloatBufferImpl = $rt_classWithoutFields(jn_FloatBuffer);
    function jn_FloatBufferImpl_get($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if ($index >= 0 && $index < $this.$limit)
            return $this.$getElement0($index);
        var$2 = new jl_IndexOutOfBoundsException;
        var$3 = $this.$limit;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(558));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
        var$3 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
        var$5 = var$4.$buffer;
        var$5.data[var$3] = 41;
        var$6 = new jl_String;
        var$3 = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$3);
        var$6.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$6;
        $rt_throw(var$2);
    }
    function jn_FloatBufferImpl_put($this, $index, $b) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        if ($this.$readOnly7()) {
            var$3 = new jn_ReadOnlyBufferException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            $rt_throw(var$3);
        }
        if ($index >= 0 && $index < $this.$limit) {
            $this.$putElement($index, $b);
            return $this;
        }
        var$3 = new jl_IndexOutOfBoundsException;
        var$4 = $this.$limit;
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(558));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$4, 10);
        var$4 = var$5.$length;
        jl_AbstractStringBuilder_insertSpace(var$5, var$4, var$4 + 1 | 0);
        var$6 = var$5.$buffer;
        var$6.data[var$4] = 41;
        var$7 = new jl_String;
        var$4 = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$4);
        var$7.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$4);
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = var$7;
        $rt_throw(var$3);
    }
    function jn_FloatBufferImpl_isReadOnly($this) {
        return $this.$readOnly7();
    }
    function jn_FloatBufferOverArray() {
        var a = this; jn_FloatBufferImpl.call(a);
        a.$readOnly = 0;
        a.$start = 0;
        a.$array = null;
    }
    function jn_FloatBufferOverArray_getElement($this, $index) {
        return $this.$array.data[$index + $this.$start | 0];
    }
    function jn_FloatBufferOverArray_putElement($this, $index, $value) {
        $this.$array.data[$index + $this.$start | 0] = $value;
    }
    function jn_FloatBufferOverArray_readOnly($this) {
        return $this.$readOnly;
    }
    var otjc_JSArray = $rt_classWithoutFields();
    function otjc_JSArray_get$exported$0(var$0, var$1) {
        var$1 = var$0.$get1(var$1);
        otji_JSWrapper_$callClinit();
        return var$1 === null ? null : var$1 instanceof $rt_objcls() && var$1 instanceof otji_JSWrapper ? (var$1[$rt_jso_marker] === true ? var$1 : var$1.$js) : var$1;
    }
    function otjc_JSArray_getLength$exported$1(var$0) {
        return var$0.$getLength0();
    }
    var jn_ShortBufferImpl = $rt_classWithoutFields(jn_ShortBuffer);
    function jn_ShortBufferImpl_get($this, $index) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        if ($index >= 0 && $index < $this.$limit)
            return $this.$getElement1($index);
        var$2 = new jl_IndexOutOfBoundsException;
        var$3 = $this.$limit;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(558));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $index, 10);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(507));
        jl_AbstractStringBuilder_insert0(var$4, var$4.$length, var$3, 10);
        var$3 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$3, var$3 + 1 | 0);
        var$5 = var$4.$buffer;
        var$5.data[var$3] = 41;
        var$6 = new jl_String;
        var$3 = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$3);
        var$6.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$3);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$6;
        $rt_throw(var$2);
    }
    function jn_ShortBufferImpl_isReadOnly($this) {
        return $this.$readOnly7();
    }
    function jn_ShortBufferOverArray() {
        var a = this; jn_ShortBufferImpl.call(a);
        a.$readOnly2 = 0;
        a.$start6 = 0;
        a.$array5 = null;
    }
    function jn_ShortBufferOverArray_getElement($this, $index) {
        return $this.$array5.data[$index + $this.$start6 | 0];
    }
    function jn_ShortBufferOverArray_putElement($this, $index, $value) {
        $this.$array5.data[$index + $this.$start6 | 0] = $value;
    }
    function jn_ShortBufferOverArray_readOnly($this) {
        return $this.$readOnly2;
    }
    function jn_FloatBufferOverByteBuffer() {
        var a = this; jn_FloatBufferImpl.call(a);
        a.$byteByffer = null;
        a.$readOnly5 = 0;
        a.$start9 = 0;
    }
    function jn_FloatBufferOverByteBuffer_readOnly($this) {
        return $this.$readOnly5;
    }
    function jn_FloatBufferOverByteBuffer_getTypedArray($this) {
        return $this.$byteByffer.$array0.data;
    }
    var jn_FloatBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer);
    function jn_FloatBufferOverByteBufferLittleEndian_getElement($this, $index) {
        var var$2;
        var$2 = $this.$byteByffer.$array0.data;
        $index = $this.$start9 + ($index * 4 | 0) | 0;
        return $rt_intBitsToFloat((var$2[$index] & 255) << 24 | (var$2[$index + 1 | 0] & 255) << 16 | (var$2[$index + 2 | 0] & 255) << 8 | var$2[$index + 3 | 0] & 255);
    }
    function jn_FloatBufferOverByteBufferLittleEndian_putElement($this, $index, $f) {
        var $value, var$4;
        $value = ($rt_globals.isNaN($f) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits($f);
        var$4 = $this.$byteByffer.$array0.data;
        $index = $this.$start9 + ($index * 4 | 0) | 0;
        var$4[$index] = $value >> 24 << 24 >> 24;
        var$4[$index + 1 | 0] = $value >> 16 << 24 >> 24;
        var$4[$index + 2 | 0] = $value >> 8 << 24 >> 24;
        var$4[$index + 3 | 0] = $value << 24 >> 24;
    }
    var jn_FloatBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_FloatBufferOverByteBuffer);
    function jn_FloatBufferOverByteBufferBigEndian_getElement($this, $index) {
        var var$2;
        var$2 = $this.$byteByffer.$array0.data;
        $index = $this.$start9 + ($index * 4 | 0) | 0;
        return $rt_intBitsToFloat(var$2[$index] & 255 | (var$2[$index + 1 | 0] & 255) << 8 | (var$2[$index + 2 | 0] & 255) << 16 | (var$2[$index + 3 | 0] & 255) << 24);
    }
    function jn_FloatBufferOverByteBufferBigEndian_putElement($this, $index, $f) {
        var $value, var$4;
        $value = ($rt_globals.isNaN($f) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits($f);
        var$4 = $this.$byteByffer.$array0.data;
        $index = $this.$start9 + ($index * 4 | 0) | 0;
        var$4[$index] = $value << 24 >> 24;
        var$4[$index + 1 | 0] = $value >> 8 << 24 >> 24;
        var$4[$index + 2 | 0] = $value >> 16 << 24 >> 24;
        var$4[$index + 3 | 0] = $value >> 24 << 24 >> 24;
    }
    function jn_ShortBufferOverByteBuffer() {
        var a = this; jn_ShortBufferImpl.call(a);
        a.$byteByffer0 = null;
        a.$readOnly3 = 0;
        a.$start7 = 0;
    }
    function jn_ShortBufferOverByteBuffer_readOnly($this) {
        return $this.$readOnly3;
    }
    function jn_ShortBufferOverByteBuffer_getTypedArray($this) {
        return $this.$byteByffer0.$array0.data;
    }
    var jn_ShortBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer);
    function jn_ShortBufferOverByteBufferLittleEndian_getElement($this, $index) {
        var var$2;
        var$2 = $this.$byteByffer0.$array0.data;
        $index = $this.$start7 + ($index * 2 | 0) | 0;
        return (var$2[$index] & 255 | (var$2[$index + 1 | 0] & 255) << 8) << 16 >> 16;
    }
    function jn_ShortBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
        var var$3;
        var$3 = $this.$byteByffer0.$array0.data;
        $index = $this.$start7 + ($index * 2 | 0) | 0;
        var$3[$index] = $value << 24 >> 24;
        var$3[$index + 1 | 0] = $value >> 8 << 24 >> 24;
    }
    var jn_ShortBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_ShortBufferOverByteBuffer);
    function jn_ShortBufferOverByteBufferBigEndian_getElement($this, $index) {
        var var$2;
        var$2 = $this.$byteByffer0.$array0.data;
        $index = $this.$start7 + ($index * 2 | 0) | 0;
        return ((var$2[$index] & 255) << 8 | var$2[$index + 1 | 0] & 255) << 16 >> 16;
    }
    function jn_ShortBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
        var var$3;
        var$3 = $this.$byteByffer0.$array0.data;
        $index = $this.$start7 + ($index * 2 | 0) | 0;
        var$3[$index] = $value >> 8 << 24 >> 24;
        var$3[$index + 1 | 0] = $value << 24 >> 24;
    }
    var jl_UnsupportedOperationException = $rt_classWithoutFields(jl_RuntimeException);
    var jn_ReadOnlyBufferException = $rt_classWithoutFields(jl_UnsupportedOperationException);
    function jn_IntBufferOverByteBuffer() {
        var a = this; jn_IntBufferImpl.call(a);
        a.$byteByffer1 = null;
        a.$readOnly4 = 0;
        a.$start8 = 0;
    }
    function jn_IntBufferOverByteBuffer_readOnly($this) {
        return $this.$readOnly4;
    }
    var jn_IntBufferOverByteBufferLittleEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer);
    function jn_IntBufferOverByteBufferLittleEndian_getElement($this, $index) {
        var var$2;
        var$2 = $this.$byteByffer1.$array0.data;
        $index = $this.$start8 + ($index * 4 | 0) | 0;
        return var$2[$index] & 255 | (var$2[$index + 1 | 0] & 255) << 8 | (var$2[$index + 2 | 0] & 255) << 16 | (var$2[$index + 3 | 0] & 255) << 24;
    }
    function jn_IntBufferOverByteBufferLittleEndian_putElement($this, $index, $value) {
        var var$3;
        var$3 = $this.$byteByffer1.$array0.data;
        $index = $this.$start8 + ($index * 4 | 0) | 0;
        var$3[$index] = $value << 24 >> 24;
        var$3[$index + 1 | 0] = $value >> 8 << 24 >> 24;
        var$3[$index + 2 | 0] = $value >> 16 << 24 >> 24;
        var$3[$index + 3 | 0] = $value >> 24 << 24 >> 24;
    }
    var jn_IntBufferOverByteBufferBigEndian = $rt_classWithoutFields(jn_IntBufferOverByteBuffer);
    function jn_IntBufferOverByteBufferBigEndian_getElement($this, $index) {
        var var$2;
        var$2 = $this.$byteByffer1.$array0.data;
        $index = $this.$start8 + ($index * 4 | 0) | 0;
        return (var$2[$index] & 255) << 24 | (var$2[$index + 1 | 0] & 255) << 16 | (var$2[$index + 2 | 0] & 255) << 8 | var$2[$index + 3 | 0] & 255;
    }
    function jn_IntBufferOverByteBufferBigEndian_putElement($this, $index, $value) {
        var var$3;
        var$3 = $this.$byteByffer1.$array0.data;
        $index = $this.$start8 + ($index * 4 | 0) | 0;
        var$3[$index] = $value >> 24 << 24 >> 24;
        var$3[$index + 1 | 0] = $value >> 16 << 24 >> 24;
        var$3[$index + 2 | 0] = $value >> 8 << 24 >> 24;
        var$3[$index + 3 | 0] = $value << 24 >> 24;
    }
    var jn_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
    var ka_KtxScreen$DefaultImpls = $rt_classWithoutFields();
    function cbgu_ObjectMap$MapIterator() {
        var a = this; jl_Object.call(a);
        a.$hasNext = 0;
        a.$map = null;
        a.$nextIndex = 0;
        a.$currentIndex = 0;
        a.$valid0 = 0;
    }
    function cbgu_ObjectMap$MapIterator_findNextIndex($this) {
        var $keyTable, $n, var$3;
        $keyTable = $this.$map.$keyTable.data;
        $n = $keyTable.length;
        while (true) {
            var$3 = $this.$nextIndex + 1 | 0;
            $this.$nextIndex = var$3;
            if (var$3 >= $n)
                break;
            if ($keyTable[var$3] === null)
                continue;
            else {
                $this.$hasNext = 1;
                return;
            }
        }
        $this.$hasNext = 0;
    }
    var cbgu_ObjectMap$Values = $rt_classWithoutFields(cbgu_ObjectMap$MapIterator);
    function cbgu_ObjectMap$Values_reset($this) {
        var var$1, var$2, var$3;
        $this.$currentIndex = (-1);
        $this.$nextIndex = (-1);
        var$1 = $this.$map.$keyTable.data;
        var$2 = var$1.length;
        a: {
            while (true) {
                var$3 = $this.$nextIndex + 1 | 0;
                $this.$nextIndex = var$3;
                if (var$3 >= var$2)
                    break;
                if (var$1[var$3] === null)
                    continue;
                else {
                    $this.$hasNext = 1;
                    break a;
                }
            }
            $this.$hasNext = 0;
        }
    }
    function jnci_BufferedEncoder() {
        var a = this; jnc_CharsetEncoder.call(a);
        a.$inArray = null;
        a.$outArray = null;
    }
    function jnci_BufferedEncoder_encodeLoop($this, $in, $out) {
        var $inArray, $inPos, $inSize, $outArray, $outSize, var$8, $i, var$10, $outPos, $outSize_0, $result, $controller;
        $inArray = $this.$inArray;
        $inPos = 0;
        $inSize = 0;
        $outArray = $this.$outArray;
        a: {
            while (true) {
                if (($inPos + 32 | 0) > $inSize) {
                    $outSize = $in.$position;
                    var$8 = $in.$limit;
                    if ($outSize >= var$8 ? 0 : 1) {
                        $i = $inPos;
                        while ($i < $inSize) {
                            var$10 = $inArray.data;
                            var$10[$i - $inPos | 0] = var$10[$i];
                            $i = $i + 1 | 0;
                        }
                        var$10 = $inArray.data;
                        $i = $inSize - $inPos | 0;
                        $outPos = (var$8 - $outSize | 0) + $i | 0;
                        $inSize = var$10.length;
                        if ($outPos < $inSize)
                            $inSize = $outPos;
                        jn_CharBuffer_get($in, $inArray, $i, $inSize - $i | 0);
                        $inPos = 0;
                    }
                }
                $i = $out.$position;
                $outSize_0 = $out.$limit;
                if (!($i >= $outSize_0 ? 0 : 1)) {
                    $i = $in.$position >= $in.$limit ? 0 : 1;
                    $result = !$i && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $outSize = $outSize_0 - $i | 0;
                $outSize_0 = var$10.length;
                if ($outSize < $outSize_0)
                    $outSize_0 = $outSize;
                $controller = new jnci_BufferedEncoder$Controller;
                $controller.$in = $in;
                $controller.$out0 = $out;
                $result = $this.$arrayEncode($inArray, $inPos, $inSize, $outArray, 0, $outSize_0, $controller);
                $inPos = $controller.$inPosition;
                $outPos = $controller.$outPosition;
                if ($result === null) {
                    $i = $in.$position >= $in.$limit ? 0 : 1;
                    if (!$i && $inPos >= $inSize)
                        $result = jnc_CoderResult_UNDERFLOW;
                    else if (!($out.$position >= $out.$limit ? 0 : 1) && $inPos >= $inSize)
                        $result = jnc_CoderResult_OVERFLOW;
                }
                jn_ByteBuffer_put($out, $outArray, 0, $outPos);
                if ($result !== null)
                    break;
            }
        }
        jn_Buffer_position($in, $in.$position - ($inSize - $inPos | 0) | 0);
        return $result;
    }
    var jnci_UTF8Encoder = $rt_classWithoutFields(jnci_BufferedEncoder);
    function jnci_UTF8Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
        var $result, var$9, var$10, $ch, $low, var$13, $codePoint, var$15;
        $result = null;
        a: {
            while ($inPos < $inSize) {
                if ($outPos >= $outSize) {
                    var$9 = $inPos;
                    break a;
                }
                var$10 = $inArray.data;
                var$9 = $inPos + 1 | 0;
                $ch = var$10[$inPos];
                if ($ch < 128) {
                    var$10 = $outArray.data;
                    $low = $outPos + 1 | 0;
                    var$10[$outPos] = $ch << 24 >> 24;
                } else if ($ch < 2048) {
                    if (($outPos + 2 | 0) > $outSize) {
                        var$9 = var$9 + (-1) | 0;
                        var$13 = $controller.$out0;
                        if ((var$13.$limit - var$13.$position | 0) < 2 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_OVERFLOW;
                        break a;
                    }
                    var$10 = $outArray.data;
                    $inPos = $outPos + 1 | 0;
                    var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                    $low = $inPos + 1 | 0;
                    var$10[$inPos] = (128 | $ch & 63) << 24 >> 24;
                } else {
                    $codePoint = $ch & 64512;
                    $low = $rt_compare($codePoint, 55296);
                    $inPos = $low ? 0 : 1;
                    if (!(!$inPos && !($codePoint != 56320 ? 0 : 1) ? 0 : 1)) {
                        if (($outPos + 3 | 0) > $outSize) {
                            var$9 = var$9 + (-1) | 0;
                            var$13 = $controller.$out0;
                            if ((var$13.$limit - var$13.$position | 0) < 3 ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        var$10 = $outArray.data;
                        $inPos = $outPos + 1 | 0;
                        var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                        $outPos = $inPos + 1 | 0;
                        var$10[$inPos] = (128 | $ch >> 6 & 63) << 24 >> 24;
                        $low = $outPos + 1 | 0;
                        var$10[$outPos] = (128 | $ch & 63) << 24 >> 24;
                    } else {
                        if (!($low ? 0 : 1)) {
                            $result = new jnc_CoderResult;
                            $result.$kind = 2;
                            $result.$length0 = 1;
                            break a;
                        }
                        if (var$9 >= $inSize) {
                            var$13 = $controller.$in;
                            if (var$13.$position >= var$13.$limit ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$15 = var$9 + 1 | 0;
                        $low = var$10[var$9];
                        if (!(($low & 64512) != 56320 ? 0 : 1)) {
                            var$9 = var$15 + (-2) | 0;
                            $result = new jnc_CoderResult;
                            $result.$kind = 2;
                            $result.$length0 = 1;
                            break a;
                        }
                        if (($outPos + 4 | 0) > $outSize) {
                            var$9 = var$15 + (-2) | 0;
                            var$13 = $controller.$out0;
                            if ((var$13.$limit - var$13.$position | 0) < 4 ? 0 : 1)
                                break a;
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        var$10 = $outArray.data;
                        $codePoint = (($ch & 1023) << 10 | $low & 1023) + 65536 | 0;
                        $low = $outPos + 1 | 0;
                        var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                        $inPos = $low + 1 | 0;
                        var$10[$low] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                        $outPos = $inPos + 1 | 0;
                        var$10[$inPos] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                        $low = $outPos + 1 | 0;
                        var$10[$outPos] = (128 | $codePoint & 63) << 24 >> 24;
                        var$9 = var$15;
                    }
                }
                $inPos = var$9;
                $outPos = $low;
            }
            var$9 = $inPos;
        }
        $controller.$inPosition = var$9;
        $controller.$outPosition = $outPos;
        return $result;
    }
    var ji_IOException = $rt_classWithoutFields(jl_Exception);
    var cbg_Files$FileType = $rt_classWithoutFields(jl_Enum);
    var cbg_Files$FileType_Classpath = null;
    var cbg_Files$FileType_Internal = null;
    var cbg_Files$FileType_External = null;
    var cbg_Files$FileType_Absolute = null;
    var cbg_Files$FileType_Local = null;
    var cbg_Files$FileType_$VALUES = null;
    function cbg_Files$FileType_$callClinit() {
        cbg_Files$FileType_$callClinit = $rt_eraseClinit(cbg_Files$FileType);
        cbg_Files$FileType__clinit_();
    }
    function cbg_Files$FileType__clinit_() {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = new cbg_Files$FileType;
        cbg_Files$FileType_$callClinit();
        var$1.$name0 = $rt_s(596);
        var$1.$ordinal = 0;
        cbg_Files$FileType_Classpath = var$1;
        var$2 = new cbg_Files$FileType;
        var$2.$name0 = $rt_s(597);
        var$2.$ordinal = 1;
        cbg_Files$FileType_Internal = var$2;
        var$3 = new cbg_Files$FileType;
        var$3.$name0 = $rt_s(598);
        var$3.$ordinal = 2;
        cbg_Files$FileType_External = var$3;
        var$4 = new cbg_Files$FileType;
        var$4.$name0 = $rt_s(599);
        var$4.$ordinal = 3;
        cbg_Files$FileType_Absolute = var$4;
        var$5 = new cbg_Files$FileType;
        var$5.$name0 = $rt_s(600);
        var$5.$ordinal = 4;
        cbg_Files$FileType_Local = var$5;
        cbg_Files$FileType_$VALUES = $rt_createArrayFromData(cbg_Files$FileType, [var$1, var$2, var$3, var$4, var$5]);
    }
    function ji_Reader() {
        jl_Object.call(this);
        this.$lock = null;
    }
    function ji_BufferedReader() {
        var a = this; ji_Reader.call(a);
        a.$innerReader = null;
        a.$buffer8 = null;
        a.$index5 = 0;
        a.$count1 = 0;
        a.$eof = 0;
        a.$mark1 = 0;
    }
    function ji_BufferedReader__init_(var_0, var_1) {
        var var_2 = new ji_BufferedReader();
        ji_BufferedReader__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function ji_BufferedReader__init_0($this, $innerReader, $size) {
        $this.$lock = new jl_Object;
        $this.$mark1 = (-1);
        if ($size < 0) {
            $innerReader = new jl_IllegalArgumentException;
            $innerReader.$suppressionEnabled = 1;
            $innerReader.$writableStackTrace = 1;
            $rt_throw($innerReader);
        }
        $this.$innerReader = $innerReader;
        if (64 > $size)
            $size = 64;
        $this.$buffer8 = $rt_createCharArray($size);
    }
    function ji_BufferedReader_close($this) {
        var var$1;
        var$1 = $this.$innerReader;
        if (var$1 !== null) {
            var$1.$stream.$close();
            $this.$innerReader = null;
            return;
        }
        var$1 = new ji_IOException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    function ji_BufferedReader_readLine($this) {
        var $line, var$2, $ch, var$4, var$5, var$6;
        if ($this.$innerReader === null) {
            $line = new ji_IOException;
            $line.$suppressionEnabled = 1;
            $line.$writableStackTrace = 1;
            $rt_throw($line);
        }
        if ($this.$eof && $this.$index5 >= $this.$count1)
            return null;
        $line = new jl_StringBuilder;
        $line.$buffer = $rt_createCharArray(16);
        a: {
            while (true) {
                if ($this.$index5 >= $this.$count1 && !ji_BufferedReader_fillBuffer($this, 0))
                    break a;
                var$2 = $this.$buffer8.data;
                $ch = $this.$index5;
                var$4 = $ch + 1 | 0;
                $this.$index5 = var$4;
                $ch = var$2[$ch];
                if ($ch == 10)
                    break;
                if ($ch == 13) {
                    if (var$4 >= $this.$count1 && !ji_BufferedReader_fillBuffer($this, 0))
                        break a;
                    var$2 = $this.$buffer8.data;
                    var$4 = $this.$index5;
                    if (var$2[var$4] != 10)
                        break a;
                    $this.$index5 = var$4 + 1 | 0;
                    break a;
                }
                var$4 = $line.$length;
                jl_AbstractStringBuilder_insertSpace($line, var$4, var$4 + 1 | 0);
                $line.$buffer.data[var$4] = $ch;
            }
        }
        var$5 = new jl_String;
        var$2 = $line.$buffer;
        $ch = $line.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray($ch);
        var$5.$characters = var$6;
        jl_System_fastArraycopy(var$2, 0, var$6, 0, $ch);
        return var$5;
    }
    function ji_BufferedReader_fillBuffer($this, $offset) {
        var var$2, $charsRead;
        if ($this.$eof)
            return 0;
        a: {
            while (true) {
                var$2 = $this.$buffer8;
                $charsRead = var$2.data.length;
                if ($offset >= $charsRead)
                    break a;
                $charsRead = ji_InputStreamReader_read($this.$innerReader, var$2, $offset, $charsRead - $offset | 0);
                if ($charsRead == (-1)) {
                    $this.$eof = 1;
                    break a;
                }
                if (!$charsRead)
                    break;
                $offset = $offset + $charsRead | 0;
            }
        }
        $this.$count1 = $offset;
        $this.$index5 = 0;
        $this.$mark1 = (-1);
        return 1;
    }
    function ji_InputStreamReader() {
        var a = this; ji_Reader.call(a);
        a.$stream = null;
        a.$decoder = null;
        a.$inData = null;
        a.$inBuffer = null;
        a.$outData = null;
        a.$outBuffer = null;
        a.$streamEof = 0;
        a.$eof0 = 0;
    }
    function ji_InputStreamReader__init_(var_0) {
        var var_1 = new ji_InputStreamReader();
        ji_InputStreamReader__init_0(var_1, var_0);
        return var_1;
    }
    function ji_InputStreamReader__init_1(var_0, var_1) {
        var var_2 = new ji_InputStreamReader();
        ji_InputStreamReader__init_2(var_2, var_0, var_1);
        return var_2;
    }
    function ji_InputStreamReader__init_0($this, $in) {
        var var$2, var$3;
        jnci_UTF8Charset_$callClinit();
        var$2 = jnci_UTF8Charset_INSTANCE;
        var$3 = new jnci_UTF8Decoder;
        jnc_CharsetDecoder__init_(var$3, var$2, 0.3333333432674408, 0.5);
        var$3.$inArray0 = $rt_createByteArray(512);
        var$3.$outArray0 = $rt_createCharArray(512);
        jnc_CodingErrorAction_$callClinit();
        var$2 = jnc_CodingErrorAction_REPLACE;
        if (var$2 !== null) {
            var$3.$malformedAction0 = var$2;
            var$3.$unmappableAction0 = var$2;
            ji_InputStreamReader__init_2($this, $in, var$3);
            return;
        }
        var$2 = new jl_IllegalArgumentException;
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = $rt_s(601);
        $rt_throw(var$2);
    }
    function ji_InputStreamReader__init_2($this, $in, $decoder) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        $this.$lock = new jl_Object;
        var$3 = $rt_createByteArray(8192);
        var$4 = var$3.data;
        $this.$inData = var$3;
        var$5 = var$4.length;
        var$6 = new jn_ByteBufferImpl;
        var$7 = 0 + var$5 | 0;
        var$6.$mark = (-1);
        var$6.$capacity = var$5;
        var$6.$limit = var$5;
        jn_ByteOrder_$callClinit();
        var$6.$order = jn_ByteOrder_BIG_ENDIAN;
        var$6.$start0 = 0;
        var$6.$array0 = var$3;
        var$6.$position = 0;
        var$6.$limit = var$7;
        var$6.$direct = 0;
        var$6.$readOnly0 = 0;
        $this.$inBuffer = var$6;
        var$3 = $rt_createCharArray(1024);
        var$4 = var$3.data;
        $this.$outData = var$3;
        var$8 = var$4.length;
        var$6 = new jn_CharBufferOverArray;
        var$9 = 0 + var$8 | 0;
        var$6.$mark = (-1);
        var$6.$capacity = var$8;
        var$6.$limit = var$8;
        var$6.$position = 0;
        var$6.$limit = var$9;
        var$6.$start1 = 0;
        var$6.$readOnly1 = 0;
        var$6.$array3 = var$3;
        $this.$outBuffer = var$6;
        $this.$stream = $in;
        $this.$decoder = $decoder;
        jn_Buffer_position(var$6, var$9);
        $in = $this.$inBuffer;
        jn_Buffer_position($in, $in.$limit);
    }
    function ji_InputStreamReader_read($this, $cbuf, $off, $len) {
        var var$4, $bytesRead, $sz, var$7;
        if ($this.$eof0) {
            var$4 = $this.$outBuffer;
            if (!(var$4.$position >= var$4.$limit ? 0 : 1))
                return (-1);
        }
        $bytesRead = 0;
        a: {
            while ($len > 0) {
                var$4 = $this.$outBuffer;
                $sz = var$4.$limit - var$4.$position | 0;
                if ($len < $sz)
                    $sz = $len;
                jn_CharBuffer_get(var$4, $cbuf, $off + $bytesRead | 0, $sz);
                $len = $len - $sz | 0;
                $bytesRead = $bytesRead + $sz | 0;
                var$4 = $this.$outBuffer;
                var$7 = var$4.$position >= var$4.$limit ? 0 : 1;
                if (!var$7 && !ji_InputStreamReader_fillBuffer($this))
                    break a;
            }
        }
        return $bytesRead;
    }
    function ji_InputStreamReader_fillBuffer($this) {
        var $result, var$2, var$3;
        if ($this.$eof0)
            return 0;
        jn_CharBufferImpl_compact($this.$outBuffer);
        a: {
            while (true) {
                $result = $this.$inBuffer;
                var$2 = $result.$position >= $result.$limit ? 0 : 1;
                if (!var$2 && !ji_InputStreamReader_fillReadBuffer($this))
                    break a;
                var$3 = (jnc_CharsetDecoder_decode($this.$decoder, $this.$inBuffer, $this.$outBuffer, $this.$streamEof)).$kind;
                if (var$3 != 1 ? 0 : 1)
                    break;
                if (var$3 ? 0 : 1)
                    ji_InputStreamReader_fillReadBuffer($this);
            }
        }
        $result = $this.$inBuffer;
        var$2 = $result.$position >= $result.$limit ? 0 : 1;
        if (!var$2 && $this.$streamEof) {
            $result = $this.$decoder;
            var$3 = $result.$state;
            if (var$3 != 3 && var$3 != 2) {
                $result = new jl_IllegalStateException;
                $result.$suppressionEnabled = 1;
                $result.$writableStackTrace = 1;
                $rt_throw($result);
            }
            $result.$state = 3;
            if (jnc_CoderResult_UNDERFLOW.$kind ? 0 : 1)
                $this.$eof0 = 1;
        }
        $result = $this.$outBuffer;
        $result.$limit = $result.$position;
        $result.$position = 0;
        $result.$mark = (-1);
        return 1;
    }
    function ji_InputStreamReader_fillReadBuffer($this) {
        var var$1, $bytesRead, var$3;
        if ($this.$streamEof)
            return 0;
        jn_ByteBufferImpl_compact($this.$inBuffer);
        a: {
            while (true) {
                var$1 = $this.$inBuffer;
                $bytesRead = var$1.$position;
                var$3 = var$1.$limit;
                if (!($bytesRead >= var$3 ? 0 : 1))
                    break a;
                $bytesRead = $this.$stream.$read3(var$1.$array0, $bytesRead, var$3 - $bytesRead | 0);
                if ($bytesRead == (-1)) {
                    $this.$streamEof = 1;
                    break a;
                }
                var$1 = $this.$inBuffer;
                jn_Buffer_position(var$1, var$1.$position + $bytesRead | 0);
                if (!$bytesRead)
                    break;
            }
        }
        var$1 = $this.$inBuffer;
        var$1.$limit = var$1.$position;
        var$1.$position = 0;
        var$1.$mark = (-1);
        return 1;
    }
    function ju_StringTokenizer() {
        var a = this; jl_Object.call(a);
        a.$string4 = null;
        a.$delimiters = null;
        a.$returnDelimiters = 0;
        a.$position2 = 0;
    }
    function ju_StringTokenizer__init_(var_0, var_1) {
        var var_2 = new ju_StringTokenizer();
        ju_StringTokenizer__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function ju_StringTokenizer__init_0($this, $string, $delimiters) {
        if ($string !== null) {
            $this.$string4 = $string;
            $this.$delimiters = $delimiters;
            $this.$returnDelimiters = 0;
            $this.$position2 = 0;
            return;
        }
        $string = new jl_NullPointerException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    function ju_StringTokenizer_hasMoreTokens($this) {
        var var$1, $length, $i, var$4, var$5;
        if ($this.$delimiters === null) {
            var$1 = new jl_NullPointerException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        a: {
            b: {
                $length = $this.$string4.$characters.data.length;
                $i = $this.$position2;
                if ($i < $length) {
                    if ($this.$returnDelimiters)
                        return 1;
                    while (true) {
                        if ($i >= $length)
                            break b;
                        var$1 = $this.$delimiters;
                        var$4 = $this.$string4;
                        if ($i < 0)
                            break a;
                        var$5 = var$4.$characters.data;
                        if ($i >= var$5.length)
                            break a;
                        if (jl_String_indexOf(var$1, var$5[$i], 0) == (-1))
                            return 1;
                        $i = $i + 1 | 0;
                    }
                }
            }
            return 0;
        }
        var$1 = new jl_StringIndexOutOfBoundsException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    function ju_StringTokenizer_nextToken($this) {
        var var$1, $i, var$3, $length, var$5, var$6, var$7, var$8;
        var$1 = $this.$delimiters;
        if (var$1 === null) {
            var$1 = new jl_NullPointerException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        $i = $this.$position2;
        var$3 = $this.$string4.$characters.data;
        $length = var$3.length;
        var$5 = $rt_compare($i, $length);
        if (var$5 < 0) {
            if ($this.$returnDelimiters) {
                if ($i >= 0 && var$5 < 0) {
                    if (jl_String_indexOf(var$1, var$3[$i], 0) >= 0) {
                        var$1 = $this.$string4;
                        $i = $this.$position2;
                        $this.$position2 = $i + 1 | 0;
                        if ($i >= 0) {
                            var$3 = var$1.$characters.data;
                            if ($i < var$3.length) {
                                $i = var$3[$i];
                                var$1 = new jl_String;
                                var$3 = $rt_createCharArray(1);
                                var$6 = var$3.data;
                                var$6[0] = $i;
                                $i = var$6.length;
                                var$6 = $rt_createCharArray($i);
                                var$1.$characters = var$6;
                                jl_System_fastArraycopy(var$3, 0, var$6, 0, $i);
                                return var$1;
                            }
                        }
                        var$1 = new jl_StringIndexOutOfBoundsException;
                        var$1.$suppressionEnabled = 1;
                        var$1.$writableStackTrace = 1;
                        $rt_throw(var$1);
                    }
                    $this.$position2 = $this.$position2 + 1 | 0;
                    while (true) {
                        var$5 = $this.$position2;
                        if (var$5 >= $length) {
                            var$1 = $this.$string4;
                            var$6 = var$1.$characters;
                            var$7 = var$6.data.length;
                            var$5 = $rt_compare($i, var$7);
                            if (var$5 > 0) {
                                var$1 = new jl_IndexOutOfBoundsException;
                                var$1.$suppressionEnabled = 1;
                                var$1.$writableStackTrace = 1;
                                $rt_throw(var$1);
                            }
                            if (!var$5)
                                var$1 = jl_String_EMPTY;
                            else if (!(!$i && var$7 == var$7)) {
                                var$1 = new jl_String;
                                var$5 = var$7 - $i | 0;
                                var$3 = $rt_createCharArray(var$5);
                                var$1.$characters = var$3;
                                jl_System_fastArraycopy(var$6, $i, var$3, 0, var$5);
                            }
                            return var$1;
                        }
                        var$1 = $this.$delimiters;
                        var$8 = $this.$string4;
                        if (var$5 < 0)
                            break;
                        var$3 = var$8.$characters.data;
                        if (var$5 >= var$3.length)
                            break;
                        if (jl_String_indexOf(var$1, var$3[var$5], 0) >= 0) {
                            var$1 = $this.$string4;
                            var$5 = $this.$position2;
                            var$7 = $rt_compare($i, var$5);
                            if (var$7 > 0) {
                                var$1 = new jl_IndexOutOfBoundsException;
                                var$1.$suppressionEnabled = 1;
                                var$1.$writableStackTrace = 1;
                                $rt_throw(var$1);
                            }
                            if (!var$7)
                                var$8 = jl_String_EMPTY;
                            else if (!$i && var$5 == var$1.$characters.data.length)
                                var$8 = var$1;
                            else {
                                var$8 = new jl_String;
                                var$3 = var$1.$characters;
                                var$5 = var$5 - $i | 0;
                                var$6 = $rt_createCharArray(var$5);
                                var$8.$characters = var$6;
                                jl_System_fastArraycopy(var$3, $i, var$6, 0, var$5);
                            }
                            return var$8;
                        }
                        $this.$position2 = $this.$position2 + 1 | 0;
                    }
                    var$1 = new jl_StringIndexOutOfBoundsException;
                    var$1.$suppressionEnabled = 1;
                    var$1.$writableStackTrace = 1;
                    $rt_throw(var$1);
                }
                var$1 = new jl_StringIndexOutOfBoundsException;
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                $rt_throw(var$1);
            }
            a: {
                while (true) {
                    var$5 = $rt_compare($i, $length);
                    if (var$5 >= 0)
                        break a;
                    var$1 = $this.$delimiters;
                    var$8 = $this.$string4;
                    if ($i < 0)
                        break;
                    var$3 = var$8.$characters.data;
                    if ($i >= var$3.length)
                        break;
                    if (jl_String_indexOf(var$1, var$3[$i], 0) < 0)
                        break a;
                    $i = $i + 1 | 0;
                }
                var$1 = new jl_StringIndexOutOfBoundsException;
                jl_Throwable__init_0(var$1);
                $rt_throw(var$1);
            }
            $this.$position2 = $i;
            if (var$5 < 0) {
                $this.$position2 = $i + 1 | 0;
                while (true) {
                    var$5 = $this.$position2;
                    if (var$5 >= $length)
                        break;
                    if (jl_String_indexOf($this.$delimiters, jl_String_charAt($this.$string4, var$5), 0) >= 0)
                        return jl_String_substring($this.$string4, $i, $this.$position2);
                    $this.$position2 = $this.$position2 + 1 | 0;
                }
                return jl_String_substring0($this.$string4, $i);
            }
        }
        var$1 = new ju_NoSuchElementException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        $rt_throw(var$1);
    }
    var cbgu_StreamUtils = $rt_classWithoutFields();
    var cbgu_StreamUtils_EMPTY_BYTES = null;
    function cbgu_StreamUtils_closeQuietly($c) {
        var $$je;
        a: {
            if ($c !== null)
                try {
                    ji_BufferedReader_close($c);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                    } else {
                        throw $$e;
                    }
                }
        }
    }
    function cbgu_StreamUtils__clinit_() {
        cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
    }
    function cbggg_BitmapFontCache() {
        var a = this; jl_Object.call(a);
        a.$font0 = null;
        a.$integer0 = 0;
        a.$layouts = null;
        a.$pooledLayouts = null;
        a.$glyphCount0 = 0;
        a.$x4 = 0.0;
        a.$y4 = 0.0;
        a.$color0 = null;
        a.$currentTint = 0.0;
        a.$pageVertices = null;
        a.$idx0 = null;
        a.$pageGlyphIndices = null;
        a.$tempGlyphCount = null;
    }
    var cbggg_BitmapFontCache_tempColor = null;
    function cbggg_BitmapFontCache_$callClinit() {
        cbggg_BitmapFontCache_$callClinit = $rt_eraseClinit(cbggg_BitmapFontCache);
        cbggg_BitmapFontCache__clinit_();
    }
    function cbggg_BitmapFontCache__init_(var_0, var_1) {
        var var_2 = new cbggg_BitmapFontCache();
        cbggg_BitmapFontCache__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbggg_BitmapFontCache__init_0($this, $font, $integer) {
        var var$3, $pageCount, var$5, var$6, $i, $n;
        cbggg_BitmapFontCache_$callClinit();
        var$3 = new cbgu_Array;
        var$3.$ordered = 1;
        var$3.$items = $rt_createArray(jl_Object, 16);
        $this.$layouts = var$3;
        var$3 = new cbgu_Array;
        var$3.$ordered = 1;
        var$3.$items = $rt_createArray(jl_Object, 16);
        $this.$pooledLayouts = var$3;
        var$3 = new cbgg_Color;
        cbgg_Color_$callClinit();
        var$3.$r = 1.0;
        var$3.$g = 1.0;
        var$3.$b = 1.0;
        var$3.$a = 1.0;
        cbgg_Color_clamp(var$3);
        $this.$color0 = var$3;
        $this.$font0 = $font;
        $this.$integer0 = $integer;
        $pageCount = $font.$regions.$size;
        if (!$pageCount) {
            $font = new jl_IllegalArgumentException;
            $font.$suppressionEnabled = 1;
            $font.$writableStackTrace = 1;
            $font.$message = $rt_s(602);
            $rt_throw($font);
        }
        a: {
            $this.$pageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
            $this.$idx0 = $rt_createIntArray($pageCount);
            if ($pageCount > 1) {
                var$5 = $rt_createArray(cbgu_IntArray, $pageCount);
                var$6 = var$5.data;
                $this.$pageGlyphIndices = var$5;
                $i = 0;
                $n = var$6.length;
                while (true) {
                    if ($i >= $n)
                        break a;
                    $font = new cbgu_IntArray;
                    $font.$ordered0 = 1;
                    $font.$items0 = $rt_createIntArray(16);
                    var$6[$i] = $font;
                    $i = $i + 1 | 0;
                }
            }
        }
        $this.$tempGlyphCount = $rt_createIntArray($pageCount);
    }
    function cbggg_BitmapFontCache_draw($this, $spriteBatch) {
        var $regions, $j, $n, var$5, $vertices, var$7, var$8;
        $regions = $this.$font0.$regions;
        $j = 0;
        $n = $this.$pageVertices.data.length;
        while ($j < $n) {
            var$5 = $this.$idx0.data;
            if (var$5[$j] > 0) {
                $vertices = $this.$pageVertices.data[$j];
                if ($j >= $regions.$size) {
                    var$7 = new jl_IndexOutOfBoundsException;
                    $spriteBatch = new jl_StringBuilder;
                    $spriteBatch.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($spriteBatch, $spriteBatch.$length, $rt_s(36));
                    jl_AbstractStringBuilder_insert0($spriteBatch, $spriteBatch.$length, $j, 10);
                    jl_AbstractStringBuilder_insert($spriteBatch, $spriteBatch.$length, $rt_s(37));
                    var$8 = $regions.$size;
                    jl_AbstractStringBuilder_insert0($spriteBatch, $spriteBatch.$length, var$8, 10);
                    $regions = new jl_String;
                    var$5 = $spriteBatch.$buffer;
                    $j = $spriteBatch.$length;
                    jl_String_$callClinit();
                    $vertices = $rt_createCharArray($j);
                    $regions.$characters = $vertices;
                    jl_System_fastArraycopy(var$5, 0, $vertices, 0, $j);
                    var$7.$suppressionEnabled = 1;
                    var$7.$writableStackTrace = 1;
                    var$7.$message = $regions;
                    $rt_throw(var$7);
                }
                cbggg_SpriteBatch_draw($spriteBatch, $regions.$items.data[$j].$texture, $vertices, 0, var$5[$j]);
            }
            $j = $j + 1 | 0;
        }
    }
    function cbggg_BitmapFontCache_clear($this) {
        var var$1, var$2, var$3, $i, var$5, var$6, $n;
        $this.$x4 = 0.0;
        $this.$y4 = 0.0;
        cbgu_Pools_freeAll($this.$pooledLayouts, 1);
        var$1 = $this.$pooledLayouts;
        var$2 = var$1.$items;
        var$3 = 0;
        $i = var$1.$size;
        var$5 = null;
        if (var$3 > $i) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$3 < $i) {
            var$6 = var$2.data;
            $n = var$3 + 1 | 0;
            var$6[var$3] = var$5;
            var$3 = $n;
        }
        var$1.$size = 0;
        var$1 = $this.$layouts;
        var$2 = var$1.$items;
        var$3 = 0;
        $i = var$1.$size;
        var$5 = null;
        if (var$3 > $i) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        while (var$3 < $i) {
            var$6 = var$2.data;
            $n = var$3 + 1 | 0;
            var$6[var$3] = var$5;
            var$3 = $n;
        }
        var$1.$size = 0;
        $i = 0;
        var$2 = $this.$idx0.data;
        $n = var$2.length;
        while ($i < $n) {
            var$6 = $this.$pageGlyphIndices;
            if (var$6 !== null)
                var$6.data[$i].$size0 = 0;
            var$2[$i] = 0;
            $i = $i + 1 | 0;
        }
    }
    function cbggg_BitmapFontCache_requireGlyphs($this, $layout) {
        var var$2, $n, $n_0, $ii, $i, var$7, $glyphs, $tempGlyphCount, $glyphItems, $nn, var$12;
        a: {
            if ($this.$pageVertices.data.length == 1)
                cbggg_BitmapFontCache_requirePageGlyphs($this, 0, $layout.$glyphCount);
            else {
                var$2 = $this.$tempGlyphCount.data;
                $n = 0;
                $n_0 = var$2.length;
                if ($n > $n_0) {
                    $layout = new jl_IllegalArgumentException;
                    $layout.$suppressionEnabled = 1;
                    $layout.$writableStackTrace = 1;
                    $rt_throw($layout);
                }
                while ($n < $n_0) {
                    $ii = $n + 1 | 0;
                    var$2[$n] = 0;
                    $n = $ii;
                }
                $i = 0;
                $layout = $layout.$runs;
                $n = $layout.$size;
                while (true) {
                    $ii = $rt_compare($i, $n);
                    if ($ii >= 0)
                        break;
                    if ($ii >= 0) {
                        var$7 = new jl_IndexOutOfBoundsException;
                        $glyphs = new jl_StringBuilder;
                        $glyphs.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert($glyphs, $glyphs.$length, $rt_s(36));
                        jl_AbstractStringBuilder_insert0($glyphs, $glyphs.$length, $i, 10);
                        jl_AbstractStringBuilder_insert($glyphs, $glyphs.$length, $rt_s(37));
                        $i = $layout.$size;
                        jl_AbstractStringBuilder_insert0($glyphs, $glyphs.$length, $i, 10);
                        $layout = new jl_String;
                        $tempGlyphCount = $glyphs.$buffer;
                        $n = $glyphs.$length;
                        jl_String_$callClinit();
                        var$2 = $rt_createCharArray($n);
                        $layout.$characters = var$2;
                        jl_System_fastArraycopy($tempGlyphCount, 0, var$2, 0, $n);
                        var$7.$suppressionEnabled = 1;
                        var$7.$writableStackTrace = 1;
                        var$7.$message = $layout;
                        $rt_throw(var$7);
                    }
                    $glyphs = $layout.$items.data[$i].$glyphs;
                    $glyphItems = $glyphs.$items;
                    $ii = 0;
                    $nn = $glyphs.$size;
                    while ($ii < $nn) {
                        var$12 = $glyphItems.data[$ii].$page;
                        var$2[var$12] = var$2[var$12] + 1 | 0;
                        $ii = $ii + 1 | 0;
                    }
                    $i = $i + 1 | 0;
                }
                $i = 0;
                while (true) {
                    if ($i >= $n_0)
                        break a;
                    cbggg_BitmapFontCache_requirePageGlyphs($this, $i, var$2[$i]);
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    function cbggg_BitmapFontCache_requirePageGlyphs($this, $page, $glyphCount) {
        var var$3, $newVertices, $vertexCount, $vertices;
        var$3 = $this.$pageGlyphIndices;
        if (var$3 !== null) {
            $newVertices = var$3.data;
            if ($glyphCount > $newVertices[$page].$items0.data.length)
                cbgu_IntArray_ensureCapacity($newVertices[$page], $glyphCount - $newVertices[$page].$size0 | 0);
        }
        var$3 = $this.$idx0.data;
        $vertexCount = var$3[$page] + ($glyphCount * 20 | 0) | 0;
        $newVertices = $this.$pageVertices.data;
        $vertices = $newVertices[$page];
        if ($vertices === null)
            $newVertices[$page] = $rt_createFloatArray($vertexCount);
        else if ($vertices.data.length < $vertexCount) {
            $newVertices = $rt_createFloatArray($vertexCount);
            jl_System_fastArraycopy($vertices, 0, $newVertices, 0, var$3[$page]);
            $this.$pageVertices.data[$page] = $newVertices;
        }
    }
    function cbggg_BitmapFontCache_setPageCount($this, $pageCount) {
        var $newPageVertices, $newPageGlyphIndices, $newIdx, $i, var$6;
        $newPageVertices = $rt_createArray($rt_arraycls($rt_floatcls()), $pageCount);
        $newPageGlyphIndices = $this.$pageVertices;
        jl_System_fastArraycopy($newPageGlyphIndices, 0, $newPageVertices, 0, $newPageGlyphIndices.data.length);
        $this.$pageVertices = $newPageVertices;
        $newIdx = $rt_createIntArray($pageCount);
        $newPageVertices = $this.$idx0;
        jl_System_fastArraycopy($newPageVertices, 0, $newIdx, 0, $newPageVertices.data.length);
        $this.$idx0 = $newIdx;
        $newPageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
        $i = 0;
        $newIdx = $this.$pageGlyphIndices;
        if ($newIdx !== null) {
            $i = $newIdx.data.length;
            jl_System_fastArraycopy($newIdx, 0, $newPageGlyphIndices, 0, $i);
        }
        $newIdx = $newPageGlyphIndices.data;
        while ($i < $pageCount) {
            var$6 = new cbgu_IntArray;
            var$6.$ordered0 = 1;
            var$6.$items0 = $rt_createIntArray(16);
            $newIdx[$i] = var$6;
            $i = $i + 1 | 0;
        }
        $this.$pageGlyphIndices = $newPageGlyphIndices;
        $this.$tempGlyphCount = $rt_createIntArray($pageCount);
    }
    function cbggg_BitmapFontCache_addToCache($this, $layout, $x, $y) {
        var $runCount, $i, $ii, $colors, $colorsIndex, $nextColorGlyphIndex, $glyphIndex, $lastColorFloatBits, $run, var$13, $glyphs, $xAdvances, $gx, $gy, $nn, var$19, var$20, var$21;
        $runCount = $layout.$runs.$size;
        if (!$runCount)
            return;
        $i = $this.$pageVertices.data.length;
        $ii = $this.$font0.$regions.$size;
        if ($i < $ii)
            cbggg_BitmapFontCache_setPageCount($this, $ii);
        cbgu_Array_add($this.$layouts, $layout);
        cbggg_BitmapFontCache_requireGlyphs($this, $layout);
        $colors = $layout.$colors;
        $colorsIndex = 0;
        $nextColorGlyphIndex = 0;
        $glyphIndex = 0;
        $lastColorFloatBits = 0.0;
        $i = 0;
        while ($i < $runCount) {
            $run = $layout.$runs;
            if ($i >= $run.$size) {
                var$13 = new jl_IndexOutOfBoundsException;
                $layout = new jl_StringBuilder;
                $layout.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(36));
                jl_AbstractStringBuilder_insert0($layout, $layout.$length, $i, 10);
                jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(37));
                $runCount = $run.$size;
                jl_AbstractStringBuilder_insert0($layout, $layout.$length, $runCount, 10);
                $run = new jl_String;
                $glyphs = $layout.$buffer;
                $i = $layout.$length;
                jl_String_$callClinit();
                $xAdvances = $rt_createCharArray($i);
                $run.$characters = $xAdvances;
                jl_System_fastArraycopy($glyphs, 0, $xAdvances, 0, $i);
                var$13.$suppressionEnabled = 1;
                var$13.$writableStackTrace = 1;
                var$13.$message = $run;
                $rt_throw(var$13);
            }
            $run = $run.$items.data[$i];
            var$13 = $run.$glyphs;
            $glyphs = var$13.$items;
            $xAdvances = $run.$xAdvances.$items1;
            $gx = $x + $run.$x3;
            $gy = $y + $run.$y3;
            $ii = 0;
            $nn = var$13.$size;
            while ($ii < $nn) {
                var$19 = $glyphIndex + 1 | 0;
                if ($glyphIndex == $nextColorGlyphIndex) {
                    $colorsIndex = $colorsIndex + 1 | 0;
                    if ($colorsIndex >= $colors.$size0) {
                        $run = new jl_IndexOutOfBoundsException;
                        $layout = new jl_StringBuilder;
                        $layout.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(36));
                        jl_AbstractStringBuilder_insert0($layout, $layout.$length, $colorsIndex, 10);
                        jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(37));
                        $runCount = $colors.$size0;
                        jl_AbstractStringBuilder_insert0($layout, $layout.$length, $runCount, 10);
                        var$13 = new jl_String;
                        $glyphs = $layout.$buffer;
                        $i = $layout.$length;
                        jl_String_$callClinit();
                        $xAdvances = $rt_createCharArray($i);
                        var$13.$characters = $xAdvances;
                        jl_System_fastArraycopy($glyphs, 0, $xAdvances, 0, $i);
                        $run.$suppressionEnabled = 1;
                        $run.$writableStackTrace = 1;
                        $run.$message = var$13;
                        $rt_throw($run);
                    }
                    $lastColorFloatBits = $rt_intBitsToFloat($colors.$items0.data[$colorsIndex] & (-16777217));
                    $colorsIndex = $colorsIndex + 1 | 0;
                    $nextColorGlyphIndex = $rt_compare($colorsIndex, $colors.$size0);
                    if ($nextColorGlyphIndex >= 0)
                        $nextColorGlyphIndex = (-1);
                    else {
                        if ($nextColorGlyphIndex >= 0) {
                            $run = new jl_IndexOutOfBoundsException;
                            $layout = new jl_StringBuilder;
                            $layout.$buffer = $rt_createCharArray(16);
                            jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(36));
                            jl_AbstractStringBuilder_insert0($layout, $layout.$length, $colorsIndex, 10);
                            jl_AbstractStringBuilder_insert($layout, $layout.$length, $rt_s(37));
                            $runCount = $colors.$size0;
                            jl_AbstractStringBuilder_insert0($layout, $layout.$length, $runCount, 10);
                            var$13 = new jl_String;
                            $glyphs = $layout.$buffer;
                            $i = $layout.$length;
                            jl_String_$callClinit();
                            $xAdvances = $rt_createCharArray($i);
                            var$13.$characters = $xAdvances;
                            jl_System_fastArraycopy($glyphs, 0, $xAdvances, 0, $i);
                            $run.$suppressionEnabled = 1;
                            $run.$writableStackTrace = 1;
                            $run.$message = var$13;
                            $rt_throw($run);
                        }
                        $nextColorGlyphIndex = $colors.$items0.data[$colorsIndex];
                    }
                }
                var$20 = $xAdvances.data;
                var$21 = $glyphs.data;
                $gx = $gx + var$20[$ii];
                cbggg_BitmapFontCache_addGlyph($this, var$21[$ii], $gx, $gy, $lastColorFloatBits);
                $ii = $ii + 1 | 0;
                $glyphIndex = var$19;
            }
            $i = $i + 1 | 0;
        }
        cbgg_Color_$callClinit();
        $this.$currentTint = cbgg_Color_WHITE_FLOAT_BITS;
    }
    function cbggg_BitmapFontCache_addGlyph($this, $glyph, $x, $y, $color) {
        var var$5, $scaleX, $scaleY, var$8, var$9, $width, $height, $u, $u2, $v, $v2, $x2, $y2, $page, $vertices, $idx, var$21, var$22;
        var$5 = $this.$font0.$data;
        $scaleX = var$5.$scaleX;
        $scaleY = var$5.$scaleY;
        var$8 = $x + $glyph.$xoffset * $scaleX;
        var$9 = $y + $glyph.$yoffset * $scaleY;
        $width = $glyph.$width1 * $scaleX;
        $height = $glyph.$height4 * $scaleY;
        $u = $glyph.$u0;
        $u2 = $glyph.$u20;
        $v = $glyph.$v0;
        $v2 = $glyph.$v20;
        if ($this.$integer0) {
            var$8 = var$8 + jl_Math_sign(var$8) * 0.5 | 0;
            var$9 = var$9 + jl_Math_sign(var$9) * 0.5 | 0;
            $width = $width + jl_Math_sign($width) * 0.5 | 0;
            $height = $height + jl_Math_sign($height) * 0.5 | 0;
        }
        $x2 = var$8 + $width;
        $y2 = var$9 + $height;
        $page = $glyph.$page;
        $vertices = $this.$idx0.data;
        $idx = $vertices[$page];
        $vertices[$page] = $vertices[$page] + 20 | 0;
        $vertices = $this.$pageGlyphIndices;
        if ($vertices !== null) {
            $glyph = $vertices.data[$page];
            var$21 = $this.$glyphCount0;
            $this.$glyphCount0 = var$21 + 1 | 0;
            cbgu_IntArray_add0($glyph, var$21);
        }
        $vertices = $this.$pageVertices.data[$page].data;
        var$21 = $idx + 1 | 0;
        $vertices[$idx] = var$8;
        var$22 = var$21 + 1 | 0;
        $vertices[var$21] = var$9;
        var$21 = var$22 + 1 | 0;
        $vertices[var$22] = $color;
        var$22 = var$21 + 1 | 0;
        $vertices[var$21] = $u;
        var$21 = var$22 + 1 | 0;
        $vertices[var$22] = $v;
        var$22 = var$21 + 1 | 0;
        $vertices[var$21] = var$8;
        $page = var$22 + 1 | 0;
        $vertices[var$22] = $y2;
        var$21 = $page + 1 | 0;
        $vertices[$page] = $color;
        var$22 = var$21 + 1 | 0;
        $vertices[var$21] = $u;
        var$21 = var$22 + 1 | 0;
        $vertices[var$22] = $v2;
        var$22 = var$21 + 1 | 0;
        $vertices[var$21] = $x2;
        var$21 = var$22 + 1 | 0;
        $vertices[var$22] = $y2;
        var$22 = var$21 + 1 | 0;
        $vertices[var$21] = $color;
        var$21 = var$22 + 1 | 0;
        $vertices[var$22] = $u2;
        var$22 = var$21 + 1 | 0;
        $vertices[var$21] = $v2;
        var$21 = var$22 + 1 | 0;
        $vertices[var$22] = $x2;
        var$22 = var$21 + 1 | 0;
        $vertices[var$21] = var$9;
        var$21 = var$22 + 1 | 0;
        $vertices[var$22] = $color;
        var$22 = var$21 + 1 | 0;
        $vertices[var$21] = $u2;
        $vertices[var$22] = $v;
    }
    function cbggg_BitmapFontCache__clinit_() {
        var var$1;
        var$1 = new cbgg_Color;
        cbgg_Color_$callClinit();
        var$1.$r = 1.0;
        var$1.$g = 1.0;
        var$1.$b = 1.0;
        var$1.$a = 1.0;
        cbgg_Color_clamp(var$1);
        cbggg_BitmapFontCache_tempColor = var$1;
    }
    var cbgg_Pixmap$Format = $rt_classWithoutFields(jl_Enum);
    var cbgg_Pixmap$Format_Alpha = null;
    var cbgg_Pixmap$Format_Intensity = null;
    var cbgg_Pixmap$Format_LuminanceAlpha = null;
    var cbgg_Pixmap$Format_RGB565 = null;
    var cbgg_Pixmap$Format_RGBA4444 = null;
    var cbgg_Pixmap$Format_RGB888 = null;
    var cbgg_Pixmap$Format_RGBA8888 = null;
    var cbgg_Pixmap$Format_$VALUES = null;
    function cbgg_Pixmap$Format_$callClinit() {
        cbgg_Pixmap$Format_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Format);
        cbgg_Pixmap$Format__clinit_();
    }
    function cbgg_Pixmap$Format_fromGdx2DPixmapFormat($format) {
        var var$2, var$3, var$4, var$5, var$6, var$7;
        cbgg_Pixmap$Format_$callClinit();
        if ($format == 1)
            return cbgg_Pixmap$Format_Alpha;
        if ($format == 2)
            return cbgg_Pixmap$Format_LuminanceAlpha;
        if ($format == 5)
            return cbgg_Pixmap$Format_RGB565;
        if ($format == 6)
            return cbgg_Pixmap$Format_RGBA4444;
        if ($format == 3)
            return cbgg_Pixmap$Format_RGB888;
        if ($format == 4)
            return cbgg_Pixmap$Format_RGBA8888;
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(603));
        jl_AbstractStringBuilder_insert0(var$3, var$3.$length, $format, 10);
        var$4 = new jl_String;
        var$5 = var$3.$buffer;
        var$6 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$6);
        var$4.$characters = var$7;
        jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
        var$2.$suppressionEnabled = 1;
        var$2.$writableStackTrace = 1;
        var$2.$message = var$4;
        $rt_throw(var$2);
    }
    function cbgg_Pixmap$Format__clinit_() {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = new cbgg_Pixmap$Format;
        cbgg_Pixmap$Format_$callClinit();
        var$1.$name0 = $rt_s(243);
        var$1.$ordinal = 0;
        cbgg_Pixmap$Format_Alpha = var$1;
        var$2 = new cbgg_Pixmap$Format;
        var$2.$name0 = $rt_s(604);
        var$2.$ordinal = 1;
        cbgg_Pixmap$Format_Intensity = var$2;
        var$3 = new cbgg_Pixmap$Format;
        var$3.$name0 = $rt_s(605);
        var$3.$ordinal = 2;
        cbgg_Pixmap$Format_LuminanceAlpha = var$3;
        var$4 = new cbgg_Pixmap$Format;
        var$4.$name0 = $rt_s(606);
        var$4.$ordinal = 3;
        cbgg_Pixmap$Format_RGB565 = var$4;
        var$5 = new cbgg_Pixmap$Format;
        var$5.$name0 = $rt_s(607);
        var$5.$ordinal = 4;
        cbgg_Pixmap$Format_RGBA4444 = var$5;
        var$6 = new cbgg_Pixmap$Format;
        var$6.$name0 = $rt_s(608);
        var$6.$ordinal = 5;
        cbgg_Pixmap$Format_RGB888 = var$6;
        var$7 = new cbgg_Pixmap$Format;
        var$7.$name0 = $rt_s(609);
        var$7.$ordinal = 6;
        cbgg_Pixmap$Format_RGBA8888 = var$7;
        cbgg_Pixmap$Format_$VALUES = $rt_createArrayFromData(cbgg_Pixmap$Format, [var$1, var$2, var$3, var$4, var$5, var$6, var$7]);
    }
    var otcit_FloatAnalyzer = $rt_classWithoutFields();
    var otcit_FloatAnalyzer_MAX_MANTISSA = 0;
    var otcit_FloatAnalyzer_mantissa10Table = null;
    var otcit_FloatAnalyzer_exp10Table = null;
    function otcit_FloatAnalyzer_analyze($d, $result) {
        var $bits, $mantissa, $exponent, var$6, $decExponent, $mantissaShift, var$9, $decMantissa, $upperPos, $upperPos_0, var$13, $decMantissaHi, $decMantissaLow, $lowerPos, $lowerPos_0, $posCmp;
        $bits = ($rt_globals.isNaN($d) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits($d);
        $result.$sign0 = !($bits & (-2147483648)) ? 0 : 1;
        $mantissa = $bits & 8388607;
        $exponent = $bits >> 23 & 255;
        if (!$mantissa && !$exponent) {
            $result.$mantissa = 0;
            $result.$exponent = 0;
            return;
        }
        if ($exponent)
            $bits = $mantissa | 8388608;
        else {
            $bits = $mantissa << 1;
            while (Long_eq(Long_and(Long_fromInt($bits), Long_fromInt(8388608)), Long_ZERO)) {
                $bits = $bits << 1;
                $exponent = $exponent + (-1) | 0;
            }
        }
        var$6 = otcit_FloatAnalyzer_exp10Table;
        $decExponent = ju_Arrays_binarySearch(var$6, 0, var$6.data.length, $exponent);
        if ($decExponent < 0)
            $decExponent =  -$decExponent | 0;
        var$6 = otcit_FloatAnalyzer_exp10Table.data;
        $mantissa = $decExponent + 1 | 0;
        $mantissaShift = 9 + ($exponent - var$6[$mantissa] | 0) | 0;
        $mantissa = otcit_FloatAnalyzer_mantissa10Table.data[$mantissa];
        var$9 = Long_and(Long_fromInt($bits), Long_create(4294967295, 0));
        $decMantissa = Long_lo(Long_shru(Long_mul(var$9, Long_and(Long_fromInt($mantissa), Long_create(4294967295, 0))), 32 - $mantissaShift | 0));
        if ($decMantissa < otcit_FloatAnalyzer_MAX_MANTISSA) {
            while ($rt_ucmp($decMantissa, otcit_FloatAnalyzer_MAX_MANTISSA) <= 0) {
                $decExponent = $decExponent + (-1) | 0;
                $decMantissa = ($decMantissa * 10 | 0) + 9 | 0;
            }
            var$6 = otcit_FloatAnalyzer_exp10Table.data;
            $mantissa = $decExponent + 1 | 0;
            $mantissaShift = 9 + ($exponent - var$6[$mantissa] | 0) | 0;
            $decMantissa = Long_lo(Long_shru(Long_mul(var$9, Long_and(Long_fromInt(otcit_FloatAnalyzer_mantissa10Table.data[$mantissa]), Long_create(4294967295, 0))), 32 - $mantissaShift | 0));
        }
        $bits = $bits << 1;
        $upperPos = $bits + 1 | 0;
        var$6 = otcit_FloatAnalyzer_mantissa10Table.data;
        $exponent = $decExponent + 1 | 0;
        $mantissa = var$6[$exponent];
        $upperPos_0 = $mantissaShift - 1 | 0;
        var$13 = Long_mul(Long_and(Long_fromInt($upperPos), Long_create(4294967295, 0)), Long_and(Long_fromInt($mantissa), Long_create(4294967295, 0)));
        $mantissa = 32 - $upperPos_0 | 0;
        $decMantissaHi = Long_lo(Long_shru(var$13, $mantissa));
        $decMantissaLow = Long_lo(Long_shru(Long_mul(Long_and(Long_fromInt($bits - 1 | 0), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$6[$exponent]), Long_create(4294967295, 0))), $mantissa));
        $lowerPos = 1;
        while (true) {
            $lowerPos_0 = $lowerPos * 10 | 0;
            if ($rt_ucmp($rt_udiv($decMantissa, $lowerPos_0), $rt_udiv($decMantissaLow, $lowerPos_0)) <= 0)
                break;
            $lowerPos = $lowerPos_0;
        }
        $upperPos_0 = 1;
        while (true) {
            $upperPos = $upperPos_0 * 10 | 0;
            if ($rt_ucmp($rt_udiv($decMantissa, $upperPos), $rt_udiv($decMantissaHi, $upperPos)) >= 0)
                break;
            $upperPos_0 = $upperPos;
        }
        $posCmp = $rt_ucmp($lowerPos, $upperPos_0);
        $bits = $posCmp > 0 ? $rt_imul($rt_udiv($decMantissa, $lowerPos), $lowerPos) : $posCmp < 0 ? $rt_imul($rt_udiv($decMantissa, $upperPos_0), $upperPos_0) + $upperPos_0 | 0 : $rt_imul($rt_udiv(($decMantissa + ($upperPos_0 / 2 | 0) | 0), $upperPos_0), $upperPos_0);
        if (jl_Long_compareUnsigned(Long_fromInt($bits), Long_fromInt(1000000000)) >= 0)
            while (true) {
                $decExponent = $decExponent + 1 | 0;
                $bits = $rt_udiv($bits, 10);
                if ($rt_ucmp($bits, 1000000000) < 0)
                    break;
            }
        else if ($rt_ucmp($bits, 100000000) < 0) {
            $decExponent = $decExponent + (-1) | 0;
            $bits = $bits * 10 | 0;
        }
        $result.$mantissa = $bits;
        $result.$exponent = $decExponent - 50 | 0;
    }
    function otcit_FloatAnalyzer__clinit_() {
        otcit_FloatAnalyzer_MAX_MANTISSA = $rt_udiv((-1), 10);
        otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArrayFromData([(-18543760), (-873828468), (-1558056233), (-2105438446), (-791721136), (-1492370368), (-2052889754), (-707643228), (-1425108042), (-1999079893), (-621547450), (-1356231419), (-1943978595), (-533385374), (-1285701758), (-1887554866), (-443107408), (-1213479385), (-1829776968), (-350662770), (-1139523676), (-1770612400), (-255999462), (-1063793029), (-1710027882), (-159064234), (-986244846), (-1647989336), (-59802560), (-906835507), (-1584461865),
        (-2126562952), (-825520345), (-1519409735), (-2074521247), (-742253618), (-1452796353), (-2021230542), (-656988489), (-1384584251), (-1966660860), (-569676998), (-1314735058), (-1910781505), (-480270031), (-1243209484), (-1853561046), (-388717296), (-1169967296), (-1794967296), (-294967296), (-1094967296), (-1734967296), (-198967296), (-1018167296), (-1673527296), (-100663296), (-939524096), (-1610612736), (-2147483648), (-858993460), (-1546188227), (-2095944041), (-776530088), (-1480217529), (-2043167483),
        (-692087595), (-1412663535), (-1989124287), (-605618482), (-1343488245), (-1933784055), (-517074110), (-1272652747), (-1877115657), (-426404674), (-1200117198), (-1819087218), (-333559171), (-1125840796), (-1759666096), (-238485376), (-1049781760), (-1698818867), (-141129810), (-971897307), (-1636511305), (-41437710), (-892143627), (-1572708361), (-2117160148), (-810475859), (-1507374147), (-2064892777), (-726848065), (-1440471911), (-2011370988), (-641213203), (-1371964022), (-1956564688)]);
        otcit_FloatAnalyzer_exp10Table = $rt_createIntArrayFromData([(-37), (-34), (-31), (-28), (-24), (-21), (-18), (-14), (-11), (-8), (-4), (-1), 2, 6, 9, 12, 16, 19, 22, 26, 29, 32, 36, 39, 42, 46, 49, 52, 56, 59, 62, 65, 69, 72, 75, 79, 82, 85, 89, 92, 95, 99, 102, 105, 109, 112, 115, 119, 122, 125, 129, 132, 135, 139, 142, 145, 149, 152, 155, 158, 162, 165, 168, 172, 175, 178, 182, 185, 188, 192, 195, 198, 202, 205, 208, 212, 215, 218, 222, 225, 228, 232, 235, 238, 242, 245, 248, 252, 255, 258, 261, 265,
        268, 271, 275, 278, 281, 285, 288, 291]);
    }
    var otcit_FloatSynthesizer = $rt_classWithoutFields();
    var otcit_FloatSynthesizer_mantissa10Table = null;
    var otcit_FloatSynthesizer_exp10Table = null;
    function otcit_FloatSynthesizer_synthesizeFloat($mantissa, $exp, $negative) {
        var $indexInTable, var$5, $binMantissa, $binExp, $binMantissaShift, $iee754;
        $indexInTable = 50 + $exp | 0;
        if ($mantissa) {
            var$5 = otcit_FloatSynthesizer_mantissa10Table.data;
            if ($indexInTable <= var$5.length && $indexInTable >= 0) {
                $binMantissa = Long_hi(Long_mul(Long_and(Long_fromInt($mantissa), Long_create(4294967295, 0)), Long_and(Long_fromInt(var$5[$indexInTable]), Long_create(4294967295, 0))));
                $binExp = otcit_FloatSynthesizer_exp10Table.data[$indexInTable] - 1 | 0;
                $binMantissaShift = (32 - jl_Integer_numberOfLeadingZeros($binMantissa) | 0) - 30 | 0;
                $mantissa = $binMantissaShift >= 0 ? $binMantissa >>> $binMantissaShift | 0 : $binMantissa << ( -$binMantissaShift | 0);
                $exp = $binExp + $binMantissaShift | 0;
                if ($exp >= 255)
                    return !$negative ? Infinity : (-Infinity);
                $mantissa = $mantissa + 32 | 0;
                if ($mantissa & (-1073741824)) {
                    $mantissa = $mantissa >>> 1 | 0;
                    $exp = $exp + 1 | 0;
                }
                if ($exp <= 0) {
                    $exp = ( -$exp | 0) + 1 | 0;
                    $indexInTable = 32;
                    if ($exp < $indexInTable)
                        $indexInTable = $exp;
                    $mantissa = $mantissa >> $indexInTable;
                    $exp = 0;
                }
                $iee754 = ($mantissa >>> 6 | 0) & 8388607 | $exp << 23;
                if ($negative)
                    $iee754 = $iee754 ^ (-2147483648);
                return $rt_intBitsToFloat($iee754);
            }
        }
        return $rt_intBitsToFloat(!$negative ? 0 : (-2147483648));
    }
    function otcit_FloatSynthesizer__clinit_() {
        otcit_FloatSynthesizer_mantissa10Table = $rt_createIntArrayFromData([(-1598972629), (-924973963), (-82475629), (-1662160004), (-1003958181), (-181205903), (-1723866425), (-1081091207), (-277622185), (-1784126602), (-1156416428), (-371778711), (-1842974431), (-1229976214), (-463728444), (-1900443013), (-1301811943), (-553523104), (-1956564676), (-1371964021), (-641213203), (-2011370988), (-1440471911), (-726848064), (-2064892776), (-1507374146), (-810475859), (-2117160148), (-1572708361), (-892143627),
        (-41437709), (-1636511304), (-971897307), (-141129809), (-1698818867), (-1049781759), (-238485375), (-1759666096), (-1125840795), (-333559170), (-1819087217), (-1200117198), (-426404673), (-1877115657), (-1272652747), (-517074110), (-1933784055), (-1343488244), (-605618481), (-1989124287), (-1412663534), (-692087594), (-2043167482), (-1480217529), (-776530087), (-2095944040), (-1546188227), (-858993459), (-2147483648), (-1610612736), (-939524096), (-100663296), (-1673527296), (-1018167296), (-198967296),
        (-1734967296), (-1094967296), (-294967296), (-1794967296), (-1169967296), (-388717296), (-1853561046), (-1243209483), (-480270030), (-1910781505), (-1314735057), (-569676998), (-1966660859), (-1384584250), (-656988489), (-2021230542), (-1452796353), (-742253617), (-2074521247), (-1519409734), (-825520344), (-2126562951), (-1584461865), (-906835507), (-59802560), (-1647989336), (-986244846), (-159064233), (-1710027882), (-1063793028), (-255999461), (-1770612399), (-1139523675), (-350662770), (-1829776967)]);
        otcit_FloatSynthesizer_exp10Table = $rt_createIntArrayFromData([(-35), (-32), (-29), (-25), (-22), (-19), (-15), (-12), (-9), (-5), (-2), 1, 5, 8, 11, 15, 18, 21, 25, 28, 31, 35, 38, 41, 45, 48, 51, 55, 58, 61, 64, 68, 71, 74, 78, 81, 84, 88, 91, 94, 98, 101, 104, 108, 111, 114, 118, 121, 124, 128, 131, 134, 138, 141, 144, 148, 151, 154, 158, 161, 164, 167, 171, 174, 177, 181, 184, 187, 191, 194, 197, 201, 204, 207, 211, 214, 217, 221, 224, 227, 231, 234, 237, 241, 244, 247, 251, 254, 257, 260, 264,
        267, 270, 274, 277, 280, 284, 287, 290, 294]);
    }
    var cbgg_PixmapEmu$DrawType = $rt_classWithoutFields(jl_Enum);
    var cbgg_PixmapEmu$DrawType_FILL = null;
    var cbgg_PixmapEmu$DrawType_STROKE = null;
    var cbgg_PixmapEmu$DrawType_$VALUES = null;
    function cbgg_PixmapEmu$DrawType_$callClinit() {
        cbgg_PixmapEmu$DrawType_$callClinit = $rt_eraseClinit(cbgg_PixmapEmu$DrawType);
        cbgg_PixmapEmu$DrawType__clinit_();
    }
    function cbgg_PixmapEmu$DrawType__clinit_() {
        var var$1, var$2;
        var$1 = new cbgg_PixmapEmu$DrawType;
        cbgg_PixmapEmu$DrawType_$callClinit();
        var$1.$name0 = $rt_s(610);
        var$1.$ordinal = 0;
        cbgg_PixmapEmu$DrawType_FILL = var$1;
        var$2 = new cbgg_PixmapEmu$DrawType;
        var$2.$name0 = $rt_s(611);
        var$2.$ordinal = 1;
        cbgg_PixmapEmu$DrawType_STROKE = var$2;
        cbgg_PixmapEmu$DrawType_$VALUES = $rt_createArrayFromData(cbgg_PixmapEmu$DrawType, [var$1, var$2]);
    }
    function cbgg_Composite() {
        jl_Enum.call(this);
        this.$value8 = null;
    }
    var cbgg_Composite_COPY = null;
    var cbgg_Composite_DESTINATION_ATOP = null;
    var cbgg_Composite_DESTINATION_IN = null;
    var cbgg_Composite_DESTINATION_OUT = null;
    var cbgg_Composite_DESTINATION_OVER = null;
    var cbgg_Composite_LIGHTER = null;
    var cbgg_Composite_SOURCE_ATOP = null;
    var cbgg_Composite_SOURCE_IN = null;
    var cbgg_Composite_SOURCE_OUT = null;
    var cbgg_Composite_SOURCE_OVER = null;
    var cbgg_Composite_XOR = null;
    var cbgg_Composite_$VALUES = null;
    function cbgg_Composite_$callClinit() {
        cbgg_Composite_$callClinit = $rt_eraseClinit(cbgg_Composite);
        cbgg_Composite__clinit_();
    }
    function cbgg_Composite__clinit_() {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        var$1 = new cbgg_Composite;
        cbgg_Composite_$callClinit();
        var$1.$name0 = $rt_s(612);
        var$1.$ordinal = 0;
        var$1.$value8 = $rt_s(613);
        cbgg_Composite_COPY = var$1;
        var$2 = new cbgg_Composite;
        var$2.$name0 = $rt_s(614);
        var$2.$ordinal = 1;
        var$2.$value8 = $rt_s(615);
        cbgg_Composite_DESTINATION_ATOP = var$2;
        var$3 = new cbgg_Composite;
        var$3.$name0 = $rt_s(616);
        var$3.$ordinal = 2;
        var$3.$value8 = $rt_s(617);
        cbgg_Composite_DESTINATION_IN = var$3;
        var$4 = new cbgg_Composite;
        var$4.$name0 = $rt_s(618);
        var$4.$ordinal = 3;
        var$4.$value8 = $rt_s(619);
        cbgg_Composite_DESTINATION_OUT = var$4;
        var$5 = new cbgg_Composite;
        var$5.$name0 = $rt_s(620);
        var$5.$ordinal = 4;
        var$5.$value8 = $rt_s(621);
        cbgg_Composite_DESTINATION_OVER = var$5;
        var$6 = new cbgg_Composite;
        var$6.$name0 = $rt_s(622);
        var$6.$ordinal = 5;
        var$6.$value8 = $rt_s(623);
        cbgg_Composite_LIGHTER = var$6;
        var$7 = new cbgg_Composite;
        var$7.$name0 = $rt_s(624);
        var$7.$ordinal = 6;
        var$7.$value8 = $rt_s(625);
        cbgg_Composite_SOURCE_ATOP = var$7;
        var$8 = new cbgg_Composite;
        var$8.$name0 = $rt_s(626);
        var$8.$ordinal = 7;
        var$8.$value8 = $rt_s(627);
        cbgg_Composite_SOURCE_IN = var$8;
        var$9 = new cbgg_Composite;
        var$9.$name0 = $rt_s(628);
        var$9.$ordinal = 8;
        var$9.$value8 = $rt_s(629);
        cbgg_Composite_SOURCE_OUT = var$9;
        var$10 = new cbgg_Composite;
        var$10.$name0 = $rt_s(630);
        var$10.$ordinal = 9;
        var$10.$value8 = $rt_s(631);
        cbgg_Composite_SOURCE_OVER = var$10;
        var$11 = new cbgg_Composite;
        var$11.$name0 = $rt_s(632);
        var$11.$ordinal = 10;
        var$11.$value8 = $rt_s(633);
        cbgg_Composite_XOR = var$11;
        cbgg_Composite_$VALUES = $rt_createArrayFromData(cbgg_Composite, [var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11]);
    }
    var cbgg_TextureData$TextureDataType = $rt_classWithoutFields(jl_Enum);
    var cbgg_TextureData$TextureDataType_Pixmap = null;
    var cbgg_TextureData$TextureDataType_Custom = null;
    var cbgg_TextureData$TextureDataType_$VALUES = null;
    function cbgg_TextureData$TextureDataType_$callClinit() {
        cbgg_TextureData$TextureDataType_$callClinit = $rt_eraseClinit(cbgg_TextureData$TextureDataType);
        cbgg_TextureData$TextureDataType__clinit_();
    }
    function cbgg_TextureData$TextureDataType__clinit_() {
        var var$1, var$2;
        var$1 = new cbgg_TextureData$TextureDataType;
        cbgg_TextureData$TextureDataType_$callClinit();
        var$1.$name0 = $rt_s(634);
        var$1.$ordinal = 0;
        cbgg_TextureData$TextureDataType_Pixmap = var$1;
        var$2 = new cbgg_TextureData$TextureDataType;
        var$2.$name0 = $rt_s(635);
        var$2.$ordinal = 1;
        cbgg_TextureData$TextureDataType_Custom = var$2;
        cbgg_TextureData$TextureDataType_$VALUES = $rt_createArrayFromData(cbgg_TextureData$TextureDataType, [var$1, var$2]);
    }
    var cbggg_MipMapGenerator = $rt_classWithoutFields();
    var cbggg_MipMapGenerator_useHWMipMap = 0;
    function cbggg_MipMapGenerator_generateMipMap($target, $pixmap, $textureWidth, $textureHeight) {
        var var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13;
        if (!cbggg_MipMapGenerator_useHWMipMap) {
            cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
            return;
        }
        cbg_Application$ApplicationType_$callClinit();
        var$5 = cbg_Application$ApplicationType_WebGL;
        if (var$5 !== cbg_Application$ApplicationType_Android && var$5 !== var$5 && var$5 !== cbg_Application$ApplicationType_iOS)
            cbggg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight);
        else {
            var$6 = cbg_Gdx_gl;
            var$5 = $pixmap.$nativePixmap;
            if (var$5 === null)
                var$7 = 6408;
            else
                a: {
                    $textureHeight = var$5.$format0;
                    switch ($textureHeight) {
                        case 1:
                            var$7 = 6406;
                            break a;
                        case 2:
                            var$7 = 6410;
                            break a;
                        case 3:
                        case 5:
                            var$7 = 6407;
                            break a;
                        case 4:
                        case 6:
                            var$7 = 6408;
                            break a;
                        default:
                    }
                    $pixmap = new cbgu_GdxRuntimeException;
                    var$6 = new jl_StringBuilder;
                    var$6.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert5(var$6, var$6.$length, $rt_s(51));
                    jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $textureHeight, 10);
                    var$5 = new jl_String;
                    var$8 = var$6.$buffer;
                    $textureWidth = var$6.$length;
                    jl_String_$callClinit();
                    var$9 = $rt_createCharArray($textureWidth);
                    var$5.$characters = var$9;
                    jl_System_fastArraycopy(var$8, 0, var$9, 0, $textureWidth);
                    $pixmap.$suppressionEnabled = 1;
                    $pixmap.$writableStackTrace = 1;
                    $pixmap.$message = var$5;
                    $rt_throw($pixmap);
                }
            var$10 = var$5 === null ? $pixmap.$width4 : var$5.$width5;
            var$11 = var$5 === null ? $pixmap.$height2 : var$5.$height3;
            if (var$5 === null)
                var$12 = 6408;
            else
                b: {
                    var$12 = var$5.$format0;
                    switch (var$12) {
                        case 1:
                            var$12 = 6406;
                            break b;
                        case 2:
                            var$12 = 6410;
                            break b;
                        case 3:
                        case 5:
                            var$12 = 6407;
                            break b;
                        case 4:
                        case 6:
                            var$12 = 6408;
                            break b;
                        default:
                    }
                    $pixmap = new cbgu_GdxRuntimeException;
                    var$6 = new jl_StringBuilder;
                    jl_Object__init_0(var$6);
                    var$6.$buffer = $rt_createCharArray(16);
                    jl_StringBuilder_insert0(var$6, var$6.$length, $rt_s(51));
                    jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$12, 10);
                    var$5 = new jl_String;
                    var$8 = var$6.$buffer;
                    $textureWidth = var$6.$length;
                    jl_String_$callClinit();
                    var$9 = $rt_createCharArray($textureWidth);
                    var$5.$characters = var$9;
                    jl_System_fastArraycopy(var$8, 0, var$9, 0, $textureWidth);
                    $pixmap.$suppressionEnabled = 1;
                    $pixmap.$writableStackTrace = 1;
                    $pixmap.$message = var$5;
                    $rt_throw($pixmap);
                }
            if (var$5 === null)
                var$13 = 5121;
            else
                c: {
                    var$13 = var$5.$format0;
                    switch (var$13) {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        case 5:
                            var$13 = 33635;
                            break c;
                        case 6:
                            var$13 = 32819;
                            break c;
                        default:
                            $pixmap = new cbgu_GdxRuntimeException;
                            var$6 = new jl_StringBuilder;
                            var$6.$buffer = $rt_createCharArray(16);
                            jl_AbstractStringBuilder_insert5(var$6, var$6.$length, $rt_s(51));
                            jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$13, 10);
                            var$5 = new jl_String;
                            var$8 = var$6.$buffer;
                            $textureWidth = var$6.$length;
                            jl_String_$callClinit();
                            var$9 = $rt_createCharArray($textureWidth);
                            var$5.$characters = var$9;
                            jl_System_fastArraycopy(var$8, 0, var$9, 0, $textureWidth);
                            $pixmap.$suppressionEnabled = 1;
                            $pixmap.$writableStackTrace = 1;
                            $pixmap.$message = var$5;
                            $rt_throw($pixmap);
                    }
                    var$13 = 5121;
                }
            var$6.$glTexImage2D($target, 0, var$7, var$10, var$11, 0, var$12, var$13, $pixmap.$buffer7);
            cbg_Gdx_gl20.$glGenerateMipmap($target);
        }
    }
    function cbggg_MipMapGenerator_generateMipMapDesktop($target, $pixmap, $textureWidth, $textureHeight) {
        var var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
        var$5 = cbg_Gdx_graphics.$context.getExtension("GL_ARB_framebuffer_object") === null ? 0 : 1;
        a: {
            if (!var$5 && !(cbg_Gdx_graphics.$context.getExtension("GL_EXT_framebuffer_object") === null ? 0 : 1)) {
                var$6 = cbg_Gdx_gl20.constructor;
                if (var$6 === null)
                    var$7 = null;
                else {
                    var$7 = var$6.classObject;
                    if (var$7 === null) {
                        var$7 = new jl_Class;
                        var$7.$platformClass = var$6;
                        var$8 = var$7;
                        var$6.classObject = var$8;
                    }
                }
                if (var$7.$name === null)
                    var$7.$name = $rt_str(var$7.$platformClass.$meta.name);
                if (!jl_String_equals(var$7.$name, $rt_s(636)) && cbg_Gdx_gl30 === null) {
                    cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
                    break a;
                }
            }
            var$6 = cbg_Gdx_gl;
            var$8 = $pixmap.$nativePixmap;
            if (var$8 === null)
                var$9 = 6408;
            else
                b: {
                    $textureHeight = var$8.$format0;
                    switch ($textureHeight) {
                        case 1:
                            var$9 = 6406;
                            break b;
                        case 2:
                            var$9 = 6410;
                            break b;
                        case 3:
                        case 5:
                            var$9 = 6407;
                            break b;
                        case 4:
                        case 6:
                            var$9 = 6408;
                            break b;
                        default:
                    }
                    $pixmap = new cbgu_GdxRuntimeException;
                    var$6 = new jl_StringBuilder;
                    var$6.$buffer = $rt_createCharArray(16);
                    jl_StringBuilder_insert(var$6, var$6.$length, jl_String_toString($rt_s(51)));
                    jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $textureHeight, 10);
                    var$8 = new jl_String;
                    var$10 = var$6.$buffer;
                    $textureWidth = var$6.$length;
                    var$11 = $rt_createCharArray($textureWidth);
                    var$8.$characters = var$11;
                    jl_System_fastArraycopy(var$10, 0, var$11, 0, $textureWidth);
                    $pixmap.$suppressionEnabled = 1;
                    $pixmap.$writableStackTrace = 1;
                    $pixmap.$message = var$8;
                    $rt_throw($pixmap);
                }
            var$12 = var$8 === null ? $pixmap.$width4 : var$8.$width5;
            var$13 = var$8 === null ? $pixmap.$height2 : var$8.$height3;
            if (var$8 === null)
                var$14 = 6408;
            else
                c: {
                    var$5 = var$8.$format0;
                    switch (var$5) {
                        case 1:
                            var$14 = 6406;
                            break c;
                        case 2:
                            var$14 = 6410;
                            break c;
                        case 3:
                        case 5:
                            var$14 = 6407;
                            break c;
                        case 4:
                        case 6:
                            var$14 = 6408;
                            break c;
                        default:
                    }
                    $pixmap = new cbgu_GdxRuntimeException;
                    var$6 = new jl_StringBuilder;
                    var$6.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert5(var$6, var$6.$length, $rt_s(51));
                    jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10);
                    var$8 = new jl_String;
                    var$10 = var$6.$buffer;
                    $textureWidth = var$6.$length;
                    jl_String_$callClinit();
                    var$11 = $rt_createCharArray($textureWidth);
                    var$8.$characters = var$11;
                    jl_System_fastArraycopy(var$10, 0, var$11, 0, $textureWidth);
                    $pixmap.$suppressionEnabled = 1;
                    $pixmap.$writableStackTrace = 1;
                    $pixmap.$message = var$8;
                    $rt_throw($pixmap);
                }
            if (var$8 === null)
                var$5 = 5121;
            else
                d: {
                    var$5 = var$8.$format0;
                    switch (var$5) {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        case 5:
                            var$5 = 33635;
                            break d;
                        case 6:
                            var$5 = 32819;
                            break d;
                        default:
                            $pixmap = new cbgu_GdxRuntimeException;
                            var$6 = new jl_StringBuilder;
                            var$6.$buffer = $rt_createCharArray(16);
                            jl_StringBuilder_insert(var$6, var$6.$length, jl_String_toString($rt_s(51)));
                            jl_AbstractStringBuilder_insert0(var$6, var$6.$length, var$5, 10);
                            var$8 = new jl_String;
                            var$10 = var$6.$buffer;
                            $textureWidth = var$6.$length;
                            var$11 = $rt_createCharArray($textureWidth);
                            var$8.$characters = var$11;
                            jl_System_fastArraycopy(var$10, 0, var$11, 0, $textureWidth);
                            $pixmap.$suppressionEnabled = 1;
                            $pixmap.$writableStackTrace = 1;
                            $pixmap.$message = var$8;
                            $rt_throw($pixmap);
                    }
                    var$5 = 5121;
                }
            var$6.$glTexImage2D($target, 0, var$9, var$12, var$13, 0, var$14, var$5, $pixmap.$buffer7);
            cbg_Gdx_gl20.$glGenerateMipmap($target);
        }
    }
    function cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight) {
        var var$5, $tmp_0, $level, $height, var$9, var$10, var$11, var$12, var$13, var$14, $width;
        var$5 = cbg_Gdx_gl;
        $tmp_0 = $pixmap.$nativePixmap;
        if ($tmp_0 === null)
            $level = 6408;
        else
            a: {
                $height = $tmp_0.$format0;
                switch ($height) {
                    case 1:
                        $level = 6406;
                        break a;
                    case 2:
                        $level = 6410;
                        break a;
                    case 3:
                    case 5:
                        $level = 6407;
                        break a;
                    case 4:
                    case 6:
                        $level = 6408;
                        break a;
                    default:
                }
                $pixmap = new cbgu_GdxRuntimeException;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert(var$5, var$5.$length, jl_String_toString($rt_s(51)));
                jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $height, 10);
                $tmp_0 = new jl_String;
                var$9 = var$5.$buffer;
                $textureWidth = var$5.$length;
                var$10 = $rt_createCharArray($textureWidth);
                $tmp_0.$characters = var$10;
                jl_System_fastArraycopy(var$9, 0, var$10, 0, $textureWidth);
                $pixmap.$suppressionEnabled = 1;
                $pixmap.$writableStackTrace = 1;
                $pixmap.$message = $tmp_0;
                $rt_throw($pixmap);
            }
        var$11 = $tmp_0 === null ? $pixmap.$width4 : $tmp_0.$width5;
        var$12 = $tmp_0 === null ? $pixmap.$height2 : $tmp_0.$height3;
        if ($tmp_0 === null)
            var$13 = 6408;
        else
            b: {
                var$13 = $tmp_0.$format0;
                switch (var$13) {
                    case 1:
                        var$13 = 6406;
                        break b;
                    case 2:
                        var$13 = 6410;
                        break b;
                    case 3:
                    case 5:
                        var$13 = 6407;
                        break b;
                    case 4:
                    case 6:
                        var$13 = 6408;
                        break b;
                    default:
                }
                $pixmap = new cbgu_GdxRuntimeException;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert5(var$5, var$5.$length, $rt_s(51));
                jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$13, 10);
                $tmp_0 = new jl_String;
                var$9 = var$5.$buffer;
                $textureWidth = var$5.$length;
                jl_String_$callClinit();
                var$10 = $rt_createCharArray($textureWidth);
                $tmp_0.$characters = var$10;
                jl_System_fastArraycopy(var$9, 0, var$10, 0, $textureWidth);
                $pixmap.$suppressionEnabled = 1;
                $pixmap.$writableStackTrace = 1;
                $pixmap.$message = $tmp_0;
                $rt_throw($pixmap);
            }
        if ($tmp_0 === null)
            var$14 = 5121;
        else
            c: {
                var$14 = $tmp_0.$format0;
                switch (var$14) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                        var$14 = 5121;
                        break c;
                    case 5:
                        var$14 = 33635;
                        break c;
                    case 6:
                        var$14 = 32819;
                        break c;
                    default:
                }
                $pixmap = new cbgu_GdxRuntimeException;
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                jl_StringBuilder_insert(var$5, var$5.$length, jl_String_toString($rt_s(51)));
                jl_AbstractStringBuilder_insert0(var$5, var$5.$length, var$14, 10);
                $tmp_0 = new jl_String;
                var$9 = var$5.$buffer;
                $textureWidth = var$5.$length;
                var$10 = $rt_createCharArray($textureWidth);
                $tmp_0.$characters = var$10;
                jl_System_fastArraycopy(var$9, 0, var$10, 0, $textureWidth);
                $pixmap.$suppressionEnabled = 1;
                $pixmap.$writableStackTrace = 1;
                $pixmap.$message = $tmp_0;
                $rt_throw($pixmap);
            }
        var$5.$glTexImage2D($target, 0, $level, var$11, var$12, 0, var$13, var$14, $pixmap.$buffer7);
        if (cbg_Gdx_gl20 === null && $textureWidth != $textureHeight) {
            $pixmap = new cbgu_GdxRuntimeException;
            $pixmap.$suppressionEnabled = 1;
            $pixmap.$writableStackTrace = 1;
            $pixmap.$message = $rt_s(637);
            $rt_throw($pixmap);
        }
        var$5 = $pixmap.$nativePixmap;
        $width = (var$5 === null ? $pixmap.$width4 : var$5.$width5) / 2 | 0;
        $height = (var$5 === null ? $pixmap.$height2 : var$5.$height3) / 2 | 0;
        $level = 1;
        while ($width > 0 && $height > 0) {
            $tmp_0 = new cbgg_Pixmap;
            var$5 = $pixmap.$nativePixmap;
            if (var$5 === null) {
                cbgg_Pixmap$Format_$callClinit();
                var$5 = cbgg_Pixmap$Format_RGBA8888;
            } else
                var$5 = cbgg_Pixmap$Format_fromGdx2DPixmapFormat(var$5.$format0);
            cbgg_Pixmap__init_0($tmp_0, $width, $height, var$5);
            cbgg_Pixmap$Blending_$callClinit();
            cbgg_Pixmap_setBlending($tmp_0, cbgg_Pixmap$Blending_None);
            var$5 = $pixmap.$nativePixmap;
            cbgg_Pixmap_drawPixmap($tmp_0, $pixmap, 0, 0, var$5 === null ? $pixmap.$width4 : var$5.$width5, var$5 === null ? $pixmap.$height2 : var$5.$height3, 0, 0, $width, $height);
            if ($level > 1)
                cbgg_Pixmap_dispose($pixmap);
            cbg_Gdx_gl.$glTexImage2D($target, $level, cbgg_Pixmap_getGLInternalFormat($tmp_0), cbgg_Pixmap_getWidth($tmp_0), cbgg_Pixmap_getHeight($tmp_0), 0, cbgg_Pixmap_getGLFormat($tmp_0), cbgg_Pixmap_getGLType($tmp_0), $tmp_0.$buffer7);
            $width = cbgg_Pixmap_getWidth($tmp_0) / 2 | 0;
            $height = cbgg_Pixmap_getHeight($tmp_0) / 2 | 0;
            $level = $level + 1 | 0;
            $pixmap = $tmp_0;
        }
    }
    function cbggg_MipMapGenerator__clinit_() {
        cbggg_MipMapGenerator_useHWMipMap = 1;
    }
    var cbgg_PixmapEmu$2 = $rt_classWithoutFields();
    var cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType = null;
    function cbgg_PixmapEmu$2_$callClinit() {
        cbgg_PixmapEmu$2_$callClinit = $rt_eraseClinit(cbgg_PixmapEmu$2);
        cbgg_PixmapEmu$2__clinit_();
    }
    function cbgg_PixmapEmu$2__clinit_() {
        var var$1, var$2;
        cbgg_PixmapEmu$DrawType_$callClinit();
        var$1 = $rt_createIntArray((cbgg_PixmapEmu$DrawType_$VALUES.$clone()).data.length);
        var$2 = var$1.data;
        cbgg_PixmapEmu$2_$SwitchMap$com$badlogic$gdx$graphics$PixmapEmu$DrawType = var$1;
        var$2[cbgg_PixmapEmu$DrawType_FILL.$ordinal] = 1;
        var$2[cbgg_PixmapEmu$DrawType_STROKE.$ordinal] = 2;
    }
    function jnc_CharsetDecoder() {
        var a = this; jl_Object.call(a);
        a.$charset1 = null;
        a.$averageCharsPerByte = 0.0;
        a.$maxCharsPerByte = 0.0;
        a.$replacement1 = null;
        a.$malformedAction0 = null;
        a.$unmappableAction0 = null;
        a.$state = 0;
    }
    function jnc_CharsetDecoder__init_($this, $cs, $averageCharsPerByte, $maxCharsPerByte) {
        var var$4, var$5, var$6, var$7, var$8;
        $this.$replacement1 = $rt_s(638);
        jnc_CodingErrorAction_$callClinit();
        var$4 = jnc_CodingErrorAction_REPORT;
        $this.$malformedAction0 = var$4;
        $this.$unmappableAction0 = var$4;
        if ($averageCharsPerByte <= 0.0) {
            $cs = new jl_IllegalArgumentException;
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(639));
            jl_AbstractStringBuilder_insert1(var$4, var$4.$length, $averageCharsPerByte);
            var$5 = new jl_String;
            var$6 = var$4.$buffer;
            var$7 = var$4.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray(var$7);
            var$5.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
            $cs.$suppressionEnabled = 1;
            $cs.$writableStackTrace = 1;
            $cs.$message = var$5;
            $rt_throw($cs);
        }
        if ($maxCharsPerByte > 0.0) {
            $this.$charset1 = $cs;
            $this.$averageCharsPerByte = $averageCharsPerByte;
            $this.$maxCharsPerByte = $maxCharsPerByte;
            return;
        }
        $cs = new jl_IllegalArgumentException;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(640));
        jl_AbstractStringBuilder_insert1(var$4, var$4.$length, $maxCharsPerByte);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        $cs.$suppressionEnabled = 1;
        $cs.$writableStackTrace = 1;
        $cs.$message = var$5;
        $rt_throw($cs);
    }
    function jnc_CharsetDecoder_decode($this, $in, $out, $endOfInput) {
        var var$4, $result, $e, var$7, var$8, $$je;
        var$4 = $this.$state;
        if (!(var$4 == 2 && !$endOfInput) && var$4 != 3) {
            $this.$state = $endOfInput ? 2 : 1;
            while (true) {
                try {
                    $result = jnci_BufferedDecoder_decodeLoop($this, $in, $out);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_RuntimeException) {
                        $e = $$je;
                        $in = new jnc_CoderMalfunctionError;
                        $in.$suppressionEnabled = 1;
                        $in.$writableStackTrace = 1;
                        $in.$cause = $e;
                        $rt_throw($in);
                    } else {
                        throw $$e;
                    }
                }
                var$4 = $result.$kind;
                if (var$4 != 1 ? 0 : 1)
                    break;
                if (var$4 ? 0 : 1) {
                    if ($endOfInput) {
                        var$4 = $in.$position;
                        var$7 = $in.$limit;
                        if (var$4 >= var$7 ? 0 : 1) {
                            $e = $this.$malformedAction0;
                            jnc_CodingErrorAction_$callClinit();
                            if ($e === jnc_CodingErrorAction_REPORT) {
                                var$8 = var$7 - var$4 | 0;
                                $in = new jnc_CoderResult;
                                $in.$kind = 2;
                                $in.$length0 = var$8;
                                return $in;
                            }
                            if (($out.$limit - $out.$position | 0) <= $this.$replacement1.$characters.data.length)
                                return jnc_CoderResult_OVERFLOW;
                            jn_Buffer_position($in, var$4 + (var$7 - var$4 | 0) | 0);
                            if ($this.$malformedAction0 === jnc_CodingErrorAction_REPLACE) {
                                $in = $this.$replacement1;
                                jn_CharBuffer_put0($out, $in, 0, $in.$characters.data.length);
                            }
                        }
                    }
                    return $result;
                }
                if (var$4 != 2 ? 0 : 1) {
                    $e = $this.$malformedAction0;
                    jnc_CodingErrorAction_$callClinit();
                    if ($e === jnc_CodingErrorAction_REPORT)
                        return $result;
                    if ($e === jnc_CodingErrorAction_REPLACE) {
                        var$8 = $out.$limit - $out.$position | 0;
                        $e = $this.$replacement1;
                        var$4 = $e.$characters.data.length;
                        if (var$8 < var$4)
                            return jnc_CoderResult_OVERFLOW;
                        jn_CharBuffer_put0($out, $e, 0, var$4);
                    }
                    var$7 = $in.$position;
                    var$4 = $result.$kind;
                    var$8 = var$4 != 2 ? 0 : 1;
                    if (!(!var$8 && !(var$4 != 3 ? 0 : 1) ? 0 : 1)) {
                        $in = new jl_UnsupportedOperationException;
                        $in.$suppressionEnabled = 1;
                        $in.$writableStackTrace = 1;
                        $rt_throw($in);
                    }
                    jn_Buffer_position($in, var$7 + $result.$length0 | 0);
                } else if (var$4 != 3 ? 0 : 1) {
                    $e = $this.$unmappableAction0;
                    jnc_CodingErrorAction_$callClinit();
                    if ($e === jnc_CodingErrorAction_REPORT)
                        return $result;
                    if ($e === jnc_CodingErrorAction_REPLACE) {
                        var$8 = $out.$limit - $out.$position | 0;
                        $e = $this.$replacement1;
                        var$4 = $e.$characters.data.length;
                        if (var$8 < var$4)
                            return jnc_CoderResult_OVERFLOW;
                        jn_CharBuffer_put0($out, $e, 0, var$4);
                    }
                    var$7 = $in.$position;
                    var$4 = $result.$kind;
                    var$8 = var$4 != 2 ? 0 : 1;
                    if (!(!var$8 && !(var$4 != 3 ? 0 : 1) ? 0 : 1)) {
                        $in = new jl_UnsupportedOperationException;
                        $in.$suppressionEnabled = 1;
                        $in.$writableStackTrace = 1;
                        $rt_throw($in);
                    }
                    jn_Buffer_position($in, var$7 + $result.$length0 | 0);
                }
            }
            return $result;
        }
        $in = new jl_IllegalStateException;
        $in.$suppressionEnabled = 1;
        $in.$writableStackTrace = 1;
        $rt_throw($in);
    }
    var jn_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
    var cgxgbtf_FileDB = $rt_classWithoutFields();
    var cgxgbtf_FileDB_INSTANCE = null;
    function cgxgbtf_FileDB__clinit_() {
        cgxgbtf_FileDB_INSTANCE = null;
    }
    var otcic_Console = $rt_classWithoutFields();
    function cbggg_TextureAtlas$AtlasRegion() {
        var a = this; cbggg_TextureRegion.call(a);
        a.$offsetX = 0.0;
        a.$offsetY = 0.0;
        a.$packedHeight = 0;
        a.$originalHeight = 0;
    }
    var otcjn_ArrayBufferUtil = $rt_classWithoutFields();
    function cgxgbtp_AssetDownloadImpl$1$1() {
        var a = this; jl_Object.call(a);
        a.$val$request0 = null;
        a.$this$10 = null;
    }
    function cgxgbtp_AssetDownloadImpl$1$1_handleEvent($this, $evt) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, $$je, $ptr, $tmp;
        $ptr = 0;
        if ($rt_resuming()) {
            var $thread = $rt_nativeThread();
            $ptr = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$evt = $thread.pop();$this = $thread.pop();
        }
        main: while (true) { switch ($ptr) {
        case 0:
            if ($this.$val$request0.readyState == 4) {
                if ($this.$val$request0.status == 200) {
                    $evt = $this.$this$10;
                    if ($evt.$this$00.$showLogs) {
                        if (jl_System_outCache === null) {
                            var$2 = new ji_PrintStream;
                            var$2.$out = otcic_StdoutOutputStream_INSTANCE;
                            var$3 = new jl_StringBuilder;
                            var$3.$buffer = $rt_createCharArray(16);
                            var$2.$sb = var$3;
                            var$2.$buffer1 = $rt_createCharArray(32);
                            var$2.$autoFlush = 0;
                            jnci_UTF8Charset_$callClinit();
                            var$2.$charset = jnci_UTF8Charset_INSTANCE;
                            jl_System_outCache = var$2;
                        }
                        var$4 = jl_System_outCache;
                        $evt = $evt.$val$url;
                        var$3 = new jl_StringBuilder;
                        var$3.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(641));
                        var$5 = var$3.$length;
                        if ($evt === null)
                            $evt = $rt_s(1);
                        jl_AbstractStringBuilder_insert(var$3, var$5, $evt);
                        $evt = new jl_String;
                        var$6 = var$3.$buffer;
                        var$7 = var$3.$length;
                        jl_String_$callClinit();
                        var$8 = $rt_createCharArray(var$7);
                        $evt.$characters = var$8;
                        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
                        var$3 = var$4.$sb;
                        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $evt);
                        var$7 = var$3.$length;
                        jl_AbstractStringBuilder_insertSpace(var$3, var$7, var$7 + 1 | 0);
                        var$3.$buffer.data[var$7] = 10;
                        ji_PrintStream_printSB(var$4);
                    }
                    $evt = $this.$this$10;
                    $evt.$val$listener.$onSuccess($evt.$val$url, $rt_str($this.$val$request0.responseText));
                } else if ($this.$val$request0.status != 404 && $this.$val$request0.status != 403) {
                    try {
                        var$9 = Long_fromInt(100);
                        $ptr = 1;
                        continue main;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                        } else {
                            throw $$e;
                        }
                    }
                    $evt = $this.$this$10;
                    var$3 = $evt.$this$00;
                    var$5 = $evt.$val$async;
                    var$2 = $evt.$val$url;
                    $evt = $evt.$val$listener;
                    if (var$3.$showLogs) {
                        if (jl_System_outCache === null) {
                            var$10 = new ji_PrintStream;
                            var$10.$out = otcic_StdoutOutputStream_INSTANCE;
                            var$4 = new jl_StringBuilder;
                            var$4.$buffer = $rt_createCharArray(16);
                            var$10.$sb = var$4;
                            var$10.$buffer1 = $rt_createCharArray(32);
                            var$10.$autoFlush = 0;
                            jnci_UTF8Charset_$callClinit();
                            var$10.$charset = jnci_UTF8Charset_INSTANCE;
                            jl_System_outCache = var$10;
                        }
                        var$11 = jl_System_outCache;
                        var$4 = new jl_StringBuilder;
                        var$4.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(133));
                        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$2 === null ? $rt_s(1) : var$2);
                        var$10 = new jl_String;
                        var$6 = var$4.$buffer;
                        var$12 = var$4.$length;
                        jl_String_$callClinit();
                        var$8 = $rt_createCharArray(var$12);
                        var$10.$characters = var$8;
                        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$12);
                        var$4 = var$11.$sb;
                        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$10);
                        var$12 = var$4.$length;
                        jl_AbstractStringBuilder_insertSpace(var$4, var$12, var$12 + 1 | 0);
                        var$4.$buffer.data[var$12] = 10;
                        ji_PrintStream_printSB(var$11);
                    }
                    var$3.$queue = var$3.$queue + 1 | 0;
                    var$4 = new cgxgbtp_AssetDownloadImpl$1;
                    var$4.$this$00 = var$3;
                    var$4.$val$async = var$5;
                    var$4.$val$url = var$2;
                    var$4.$val$listener = $evt;
                    $evt = null;
                    var$3 = null;
                    var$4.$finishedLock = new jl_Object;
                    var$4.$alive = 1;
                    var$4.$name2 = var$3;
                    var$4.$target = $evt;
                    var$7 = jl_Thread_nextId;
                    jl_Thread_nextId = var$7 + 1 | 0;
                    var$4.$id1 = Long_fromInt(var$7);
                    $evt = new jl_Thread$start$lambda$_4_0;
                    $evt.$_01 = var$4;
                    otp_Platform_startThread($evt);
                } else {
                    $evt = $this.$this$10;
                    $evt.$val$listener.$onFailure($evt.$val$url);
                }
                $evt = $this.$this$10.$this$00;
                $evt.$queue = $evt.$queue - 1 | 0;
            }
            return;
        case 1:
            a: {
                try {
                    jl_Thread_sleep(var$9);
                    if ($rt_suspending()) {
                        break main;
                    }
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                    } else {
                        throw $$e;
                    }
                }
            }
            $evt = $this.$this$10;
            var$3 = $evt.$this$00;
            var$5 = $evt.$val$async;
            var$2 = $evt.$val$url;
            $evt = $evt.$val$listener;
            if (var$3.$showLogs) {
                if (jl_System_outCache === null) {
                    var$10 = new ji_PrintStream;
                    var$10.$out = otcic_StdoutOutputStream_INSTANCE;
                    var$4 = new jl_StringBuilder;
                    var$4.$buffer = $rt_createCharArray(16);
                    var$10.$sb = var$4;
                    var$10.$buffer1 = $rt_createCharArray(32);
                    var$10.$autoFlush = 0;
                    jnci_UTF8Charset_$callClinit();
                    var$10.$charset = jnci_UTF8Charset_INSTANCE;
                    jl_System_outCache = var$10;
                }
                var$11 = jl_System_outCache;
                var$4 = new jl_StringBuilder;
                var$4.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(133));
                jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$2 === null ? $rt_s(1) : var$2);
                var$10 = new jl_String;
                var$6 = var$4.$buffer;
                var$12 = var$4.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray(var$12);
                var$10.$characters = var$8;
                jl_System_fastArraycopy(var$6, 0, var$8, 0, var$12);
                var$4 = var$11.$sb;
                jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$10);
                var$12 = var$4.$length;
                jl_AbstractStringBuilder_insertSpace(var$4, var$12, var$12 + 1 | 0);
                var$4.$buffer.data[var$12] = 10;
                ji_PrintStream_printSB(var$11);
            }
            var$3.$queue = var$3.$queue + 1 | 0;
            var$4 = new cgxgbtp_AssetDownloadImpl$1;
            var$4.$this$00 = var$3;
            var$4.$val$async = var$5;
            var$4.$val$url = var$2;
            var$4.$val$listener = $evt;
            $evt = null;
            var$3 = null;
            var$4.$finishedLock = new jl_Object;
            var$4.$alive = 1;
            var$4.$name2 = var$3;
            var$4.$target = $evt;
            var$7 = jl_Thread_nextId;
            jl_Thread_nextId = var$7 + 1 | 0;
            var$4.$id1 = Long_fromInt(var$7);
            $evt = new jl_Thread$start$lambda$_4_0;
            $evt.$_01 = var$4;
            otp_Platform_startThread($evt);
            $evt = $this.$this$10.$this$00;
            $evt.$queue = $evt.$queue - 1 | 0;
            return;
        default: $rt_invalidPointer();
        }}
        $rt_nativeThread().push($this, $evt, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, $ptr);
    }
    function cgxgbtp_AssetDownloadImpl$1$1_handleEvent$exported$0(var$0, var$1) {
        var $ptr, $tmp;
        $ptr = 0;
        if ($rt_resuming()) {
            var $thread = $rt_nativeThread();
            $ptr = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
        }
        main: while (true) { switch ($ptr) {
        case 0:
            $ptr = 1;
        case 1:
            cgxgbtp_AssetDownloadImpl$1$1_handleEvent(var$0, var$1);
            if ($rt_suspending()) {
                break main;
            }
            return;
        default: $rt_invalidPointer();
        }}
        $rt_nativeThread().push(var$0, var$1, $ptr);
    }
    var jl_Object$NotifyListener = $rt_classWithoutFields(0);
    function jnci_BufferedDecoder() {
        var a = this; jnc_CharsetDecoder.call(a);
        a.$inArray0 = null;
        a.$outArray0 = null;
    }
    function jnci_BufferedDecoder_decodeLoop($this, $in, $out) {
        var $inArray, $inPos, $inSize, $outArray, $outSize, var$8, $i, var$10, $outSize_0, $result, $controller;
        $inArray = $this.$inArray0;
        $inPos = 0;
        $inSize = 0;
        $outArray = $this.$outArray0;
        a: {
            while (true) {
                if (($inPos + 32 | 0) > $inSize) {
                    $outSize = $in.$position;
                    var$8 = $in.$limit;
                    if ($outSize >= var$8 ? 0 : 1) {
                        $i = $inPos;
                        while ($i < $inSize) {
                            var$10 = $inArray.data;
                            var$10[$i - $inPos | 0] = var$10[$i];
                            $i = $i + 1 | 0;
                        }
                        var$10 = $inArray.data;
                        $i = $inSize - $inPos | 0;
                        $outSize_0 = (var$8 - $outSize | 0) + $i | 0;
                        $inSize = var$10.length;
                        if ($outSize_0 < $inSize)
                            $inSize = $outSize_0;
                        jn_ByteBuffer_get($in, $inArray, $i, $inSize - $i | 0);
                        $inPos = 0;
                    }
                }
                $i = $out.$position;
                $outSize_0 = $out.$limit;
                if (!($i >= $outSize_0 ? 0 : 1)) {
                    $i = $in.$position >= $in.$limit ? 0 : 1;
                    $result = !$i && $inPos >= $inSize ? jnc_CoderResult_UNDERFLOW : jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $outSize_0 = $outSize_0 - $i | 0;
                $outSize = var$10.length;
                if ($outSize_0 < $outSize)
                    $outSize = $outSize_0;
                $controller = new jnci_BufferedDecoder$Controller;
                $controller.$in0 = $in;
                $controller.$out1 = $out;
                $result = jnci_UTF8Decoder_arrayDecode($this, $inArray, $inPos, $inSize, $outArray, 0, $outSize, $controller);
                $inPos = $controller.$inPosition0;
                if ($result === null && 0 == $controller.$outPosition0)
                    $result = jnc_CoderResult_UNDERFLOW;
                jn_CharBuffer_put($out, $outArray, 0, $controller.$outPosition0);
                if ($result !== null)
                    break;
            }
        }
        jn_Buffer_position($in, $in.$position - ($inSize - $inPos | 0) | 0);
        return $result;
    }
    var jnci_UTF8Decoder = $rt_classWithoutFields(jnci_BufferedDecoder);
    function jnci_UTF8Decoder_arrayDecode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
        var $result, var$9, $b2, $b, $b2_0, var$13, $b3, $b4, $code, $b2_1, $c;
        $result = null;
        a: {
            b: {
                c: {
                    while ($inPos < $inSize) {
                        if ($outPos >= $outSize)
                            break a;
                        var$9 = $inArray.data;
                        $b2 = $inPos + 1 | 0;
                        $b = var$9[$inPos] & 255;
                        if (!($b & 128)) {
                            var$9 = $outArray.data;
                            $b2_0 = $outPos + 1 | 0;
                            var$9[$outPos] = $b & 65535;
                        } else if (($b & 224) == 192) {
                            if ($b2 >= $inSize) {
                                $inPos = $b2 + (-1) | 0;
                                var$13 = $controller.$in0;
                                if ((var$13.$limit - var$13.$position | 0) < 2 ? 0 : 1)
                                    break a;
                                $result = jnc_CoderResult_UNDERFLOW;
                                break a;
                            }
                            $b3 = $b2 + 1 | 0;
                            $b2 = var$9[$b2];
                            if (!(($b2 & 192) != 128 ? 0 : 1)) {
                                $inPos = $b3 + (-2) | 0;
                                $result = new jnc_CoderResult;
                                $result.$kind = 2;
                                $result.$length0 = 1;
                                break a;
                            }
                            var$9 = $outArray.data;
                            $b2_0 = $outPos + 1 | 0;
                            var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                            $b2 = $b3;
                        } else if (($b & 240) != 224) {
                            if (($b & 248) != 240) {
                                $inPos = $b2 + (-1) | 0;
                                $result = jnc_CoderResult__init_(2, 1);
                                break a;
                            }
                            if (($b2 + 3 | 0) > $inSize) {
                                $inPos = $b2 + (-1) | 0;
                                if (jnci_BufferedDecoder$Controller_hasMoreInput($controller, 4))
                                    break a;
                                $result = jnc_CoderResult_UNDERFLOW;
                                break a;
                            }
                            if (($outPos + 2 | 0) > $outSize) {
                                $inPos = $b2 + (-1) | 0;
                                if (jnci_BufferedDecoder$Controller_hasMoreOutput($controller, 2))
                                    break a;
                                $result = jnc_CoderResult_OVERFLOW;
                                break a;
                            }
                            $b3 = $b2 + 1 | 0;
                            $b2_0 = var$9[$b2];
                            $inPos = $b3 + 1 | 0;
                            $b3 = var$9[$b3];
                            $b2 = $inPos + 1 | 0;
                            $b4 = var$9[$inPos];
                            if (!jnci_UTF8Decoder_checkMidByte($this, $b2_0))
                                break c;
                            if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                                break c;
                            if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                                break c;
                            var$9 = $outArray.data;
                            $code = ($b & 7) << 18 | ($b2_0 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                            $inPos = $outPos + 1 | 0;
                            var$9[$outPos] = jl_Character_highSurrogate($code);
                            $b2_0 = $inPos + 1 | 0;
                            var$9[$inPos] = jl_Character_lowSurrogate($code);
                        } else {
                            if (($b2 + 2 | 0) > $inSize) {
                                $inPos = $b2 + (-1) | 0;
                                var$13 = $controller.$in0;
                                if ((var$13.$limit - var$13.$position | 0) < 3 ? 0 : 1)
                                    break a;
                                $result = jnc_CoderResult_UNDERFLOW;
                                break a;
                            }
                            $inPos = $b2 + 1 | 0;
                            $b2_1 = var$9[$b2];
                            $b2 = $inPos + 1 | 0;
                            $b3 = var$9[$inPos];
                            if (!(($b2_1 & 192) != 128 ? 0 : 1))
                                break b;
                            if (!(($b3 & 192) != 128 ? 0 : 1))
                                break b;
                            $c = (($b & 15) << 12 | ($b2_1 & 63) << 6 | $b3 & 63) & 65535;
                            $b2_0 = $c & 64512;
                            $inPos = $b2_0 != 55296 ? 0 : 1;
                            if (!$inPos && !($b2_0 != 56320 ? 0 : 1) ? 0 : 1) {
                                $inPos = $b2 + (-3) | 0;
                                $result = new jnc_CoderResult;
                                $result.$kind = 2;
                                $result.$length0 = 3;
                                break a;
                            }
                            var$9 = $outArray.data;
                            $b2_0 = $outPos + 1 | 0;
                            var$9[$outPos] = $c;
                        }
                        $inPos = $b2;
                        $outPos = $b2_0;
                    }
                    break a;
                }
                $inPos = $b2 + (-3) | 0;
                $result = jnc_CoderResult_malformedForLength(1);
                break a;
            }
            $inPos = $b2 + (-3) | 0;
            $result = new jnc_CoderResult;
            $result.$kind = 2;
            $result.$length0 = 1;
        }
        $controller.$inPosition0 = $inPos;
        $controller.$outPosition0 = $outPos;
        return $result;
    }
    function jnci_UTF8Decoder_checkMidByte($this, $b) {
        return ($b & 192) != 128 ? 0 : 1;
    }
    function cgxgbtf_FileDBManager() {
        var a = this; cgxgbtf_FileDB.call(a);
        a.$localStorage = null;
        a.$memory = null;
    }
    function cgxgbtf_FileDBStorage() {
        cgxgbtf_FileDB.call(this);
        this.$store = null;
    }
    var cgxgbtf_FileDBStorage_ID_LENGTH = 0;
    function cgxgbtf_FileDBStorage_$callClinit() {
        cgxgbtf_FileDBStorage_$callClinit = $rt_eraseClinit(cgxgbtf_FileDBStorage);
        cgxgbtf_FileDBStorage__clinit_();
    }
    function cgxgbtf_FileDBStorage_read($this, $file) {
        var $data, var$3, $e, var$5, var$6, var$7, var$8, var$9, $$je;
        $data = $this.$store;
        var$3 = $file.$file0;
        $e = new jl_StringBuilder;
        $e.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($e, $e.$length, $rt_s(642));
        var$5 = $e.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert($e, var$5, var$3);
        var$6 = new jl_String;
        var$7 = $e.$buffer;
        var$8 = $e.$length;
        jl_String_$callClinit();
        var$9 = $rt_createCharArray(var$8);
        var$6.$characters = var$9;
        jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
        $data = $data.$getItem(var$6);
        a: {
            try {
                $e = ji_ByteArrayInputStream__init_(cgxgbtf_HEXCoder_decode($data));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    break a;
                } else {
                    throw $$e;
                }
            }
            return $e;
        }
        $data = $this.$store;
        var$3 = $file.$file0;
        $file = new jl_StringBuilder;
        $file.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert($file, $file.$length, $rt_s(642));
        var$5 = $file.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert($file, var$5, var$3);
        var$6 = new jl_String;
        var$7 = $file.$buffer;
        var$8 = $file.$length;
        var$9 = $rt_createCharArray(var$8);
        var$6.$characters = var$9;
        jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
        $data.$removeItem(var$6);
        $rt_throw($e);
    }
    function cgxgbtf_FileDBStorage_exists($this, $file) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        var$2 = $this.$store;
        var$3 = $file.$file0;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(643));
        var$5 = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        a: {
            jl_AbstractStringBuilder_insert(var$4, var$5, var$3);
            var$6 = new jl_String;
            var$7 = var$4.$buffer;
            var$8 = var$4.$length;
            jl_String_$callClinit();
            var$9 = $rt_createCharArray(var$8);
            var$6.$characters = var$9;
            jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
            if (var$2.$getItem(var$6) === null) {
                var$2 = $this.$store;
                var$6 = $file.$file0;
                $file = new jl_StringBuilder;
                $file.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($file, $file.$length, $rt_s(642));
                var$5 = $file.$length;
                if (var$6 === null)
                    var$6 = $rt_s(1);
                jl_AbstractStringBuilder_insert($file, var$5, var$6);
                var$4 = new jl_String;
                var$7 = $file.$buffer;
                var$8 = $file.$length;
                var$9 = $rt_createCharArray(var$8);
                var$4.$characters = var$9;
                jl_System_fastArraycopy(var$7, 0, var$9, 0, var$8);
                if (var$2.$getItem(var$4) === null) {
                    var$5 = 0;
                    break a;
                }
            }
            var$5 = 1;
        }
        return var$5;
    }
    function cgxgbtf_FileDBStorage__clinit_() {
        cgxgbtf_FileDBStorage_ID_LENGTH = $rt_s(642).$characters.data.length;
    }
    var cgxgbtf_Store = $rt_classWithoutFields(0);
    function cgxgbtf_StoreLocal() {
        var a = this; jl_Object.call(a);
        a.$storage = null;
        a.$prefix = null;
    }
    function cgxgbtf_StoreLocal_getItem($this, $key) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$2 = $this.$storage;
        var$3 = $this.$prefix;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        var$5 = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, var$5, var$3);
        var$5 = var$4.$length;
        if ($key === null)
            $key = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, var$5, $key);
        var$3 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$3.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        return $rt_str(var$2.getItem($rt_ustr(var$3)));
    }
    function cgxgbtf_StoreLocal_removeItem($this, $key) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        var$2 = $this.$storage;
        var$3 = $this.$prefix;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        var$5 = var$4.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, var$5, var$3);
        var$5 = var$4.$length;
        if ($key === null)
            $key = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$4, var$5, $key);
        var$3 = new jl_String;
        var$6 = var$4.$buffer;
        var$7 = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray(var$7);
        var$3.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
        var$2.removeItem($rt_ustr(var$3));
    }
    function cgxgbtf_StoreMemory() {
        var a = this; jl_Object.call(a);
        a.$keys = null;
        a.$map0 = null;
    }
    function cgxgbtf_StoreMemory_getItem($this, $key) {
        var var$2, var$3;
        var$2 = $this.$map0;
        var$3 = cbgu_ObjectMap_locateKey(var$2, $key);
        return var$3 < 0 ? null : var$2.$valueTable.data[var$3];
    }
    function cgxgbtf_StoreMemory_removeItem($this, $key) {
        cbgu_Array_removeValue($this.$keys, $key, 0);
        cbgu_ObjectMap_remove($this.$map0, $key);
    }
    var jur_IntArrHash = $rt_classWithoutFields();
    var otjb_Storage = $rt_classWithoutFields();
    var ji_InputStream = $rt_classWithoutFields();
    function ji_InputStream_read($this, $b, $off, $len) {
        var $i, $bt, var$6, var$7;
        $i = 0;
        while ($i < $len) {
            $bt = $this.$read4();
            if ($bt < 0) {
                if (!$i)
                    $i = (-1);
                return $i;
            }
            var$6 = $b.data;
            var$7 = $off + 1 | 0;
            var$6[$off] = $bt << 24 >> 24;
            $i = $i + 1 | 0;
            $off = var$7;
        }
        if ($len <= 0)
            $len = (-1);
        return $len;
    }
    function ji_InputStream_close($this) {}
    function ji_ByteArrayInputStream() {
        var a = this; ji_InputStream.call(a);
        a.$buf = null;
        a.$pos = 0;
        a.$mark0 = 0;
        a.$count0 = 0;
    }
    function ji_ByteArrayInputStream__init_(var_0) {
        var var_1 = new ji_ByteArrayInputStream();
        ji_ByteArrayInputStream__init_0(var_1, var_0);
        return var_1;
    }
    function ji_ByteArrayInputStream__init_0($this, $buf) {
        var var$2;
        var$2 = $buf.data.length;
        $this.$buf = $buf;
        $this.$pos = 0;
        $this.$mark0 = 0;
        $this.$count0 = 0 + var$2 | 0;
    }
    function ji_ByteArrayInputStream_read($this) {
        var var$1, var$2, var$3;
        var$1 = $this.$pos;
        if (var$1 >= $this.$count0)
            var$2 = (-1);
        else {
            var$3 = $this.$buf.data;
            $this.$pos = var$1 + 1 | 0;
            var$2 = var$3[var$1] & 255;
        }
        return var$2;
    }
    function ji_ByteArrayInputStream_read0($this, $b, $off, $bytesToRead) {
        var $bytesToRead_0, $i, var$6, var$7, var$8;
        $bytesToRead_0 = $this.$count0 - $this.$pos | 0;
        if ($bytesToRead < $bytesToRead_0)
            $bytesToRead_0 = $bytesToRead;
        $i = 0;
        while ($i < $bytesToRead_0) {
            var$6 = $b.data;
            $bytesToRead = $off + 1 | 0;
            var$7 = $this.$buf.data;
            var$8 = $this.$pos;
            $this.$pos = var$8 + 1 | 0;
            var$6[$off] = var$7[var$8];
            $i = $i + 1 | 0;
            $off = $bytesToRead;
        }
        if ($bytesToRead_0 <= 0)
            $bytesToRead_0 = (-1);
        return $bytesToRead_0;
    }
    function ji_ByteArrayInputStream_close($this) {}
    var ji_UnsupportedEncodingException = $rt_classWithoutFields(ji_IOException);
    var ka_KtxInputAdapter = $rt_classWithoutFields(0);
    function igtg_FirstScreen$show$1() {
        jl_Object.call(this);
        this.$this$054 = null;
    }
    function igtg_FirstScreen$show$1_keyUp($this, $keycode) {
        var var$2, var$3, var$4, var$5;
        if ($keycode == 62) {
            var$2 = $this.$this$054;
            igtg_FirstScreen_$callClinit();
            var$3 = new cbgm_RandomXS128;
            var$4 = Long_or(Long_shl(Long_fromInt(4.294967296E9 * $rt_globals.Math.random() + (-2.147483648E9) | 0), 32), Long_fromInt(4.294967296E9 * $rt_globals.Math.random() + (-2.147483648E9) | 0));
            if (Long_eq(var$4, Long_ZERO))
                var$4 = Long_create(0, 2147483648);
            var$5 = Long_mul(Long_xor(var$4, Long_shru(var$4, 33)), Long_create(3981806797, 4283543511));
            var$5 = Long_mul(Long_xor(var$5, Long_shru(var$5, 33)), Long_create(444984403, 3301882366));
            var$5 = Long_xor(var$5, Long_shru(var$5, 33));
            var$4 = Long_mul(Long_xor(var$5, Long_shru(var$5, 33)), Long_create(3981806797, 4283543511));
            var$4 = Long_mul(Long_xor(var$4, Long_shru(var$4, 33)), Long_create(444984403, 3301882366));
            var$4 = Long_xor(var$4, Long_shru(var$4, 33));
            var$3.$seed0 = var$5;
            var$3.$seed1 = var$4;
            igtg_FirstScreen_GLOBAL_RANDOM = var$3;
            var$5 = var$2.$seed00;
            var$4 = var$2.$seed10;
            var$3.$seed0 = var$5;
            var$3.$seed1 = var$4;
            var$2.$gasket = igtg_Gasket__init_();
        }
        if ($keycode == 133) {
            var$2 = $this.$this$054;
            igtg_FirstScreen_$callClinit();
            var$2 = var$2.$fps;
            var$2.$isRendered = var$2.$isRendered ? 0 : 1;
        }
        return 1;
    }
    function igtg_FirstScreen$show$1_touchUp($this, $screenX, $screenY, $pointer, $button) {
        var var$5;
        var$5 = $this.$this$054;
        igtg_FirstScreen_$callClinit();
        igtg_FirstScreen_newGasket(var$5);
        return 1;
    }
    function igtg_FirstScreen$show$1_mouseMoved($this, $screenX, $screenY) {
        return 0;
    }
    function igtg_FirstScreen$show$1_scrolled($this, $amountX, $amountY) {
        return 0;
    }
    function igtg_FirstScreen$show$1_touchDown($this, $screenX, $screenY, $pointer, $button) {
        return 0;
    }
    function igtg_FirstScreen$show$1_touchDragged($this, $screenX, $screenY, $pointer) {
        return 0;
    }
    function igtg_Gasket() {
        var a = this; jl_Object.call(a);
        a.$coneSegments = 0;
        a.$isConeShape = 0;
        a.$colorRandomizer = null;
        a.$c1 = null;
        a.$r2 = 0.0;
        a.$randomAngleRad = 0.0;
        a.$v1 = null;
        a.$c2 = null;
        a.$r3 = 0.0;
        a.$v21 = null;
        a.$c3 = null;
        a.$allCircles = null;
        a.$queue0 = null;
    }
    function igtg_Gasket__init_() {
        var var_0 = new igtg_Gasket();
        igtg_Gasket__init_0(var_0);
        return var_0;
    }
    function igtg_Gasket__init_0($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$1 = $rt_createIntArray(4).data;
        var$1[0] = 4;
        var$1[1] = 8;
        var$1[2] = 20;
        var$1[3] = 50;
        igtg_FirstScreen_$callClinit();
        var$2 = igtg_FirstScreen_GLOBAL_RANDOM;
        while (true) {
            var$3 = var$2.$seed0;
            var$4 = var$2.$seed1;
            var$2.$seed0 = var$4;
            var$3 = Long_xor(var$3, Long_shl(var$3, 23));
            var$3 = Long_xor(Long_xor(Long_xor(var$3, var$4), Long_shru(var$3, 17)), Long_shru(var$4, 26));
            var$2.$seed1 = var$3;
            var$3 = Long_shru(Long_add(var$3, var$4), 1);
            var$4 = Long_rem(var$3, Long_fromInt(4));
            if (Long_ge(Long_add(Long_sub(var$3, var$4), Long_fromInt(3)), Long_ZERO))
                break;
        }
        $this.$coneSegments = var$1[Long_lo(var$4)];
        while (true) {
            var$3 = var$2.$seed0;
            var$4 = var$2.$seed1;
            var$2.$seed0 = var$4;
            var$3 = Long_xor(var$3, Long_shl(var$3, 23));
            var$3 = Long_xor(Long_xor(Long_xor(var$3, var$4), Long_shru(var$3, 17)), Long_shru(var$4, 26));
            var$2.$seed1 = var$3;
            var$3 = Long_shru(Long_add(var$3, var$4), 1);
            var$4 = Long_rem(var$3, Long_fromInt(3));
            if (Long_ge(Long_add(Long_sub(var$3, var$4), Long_fromInt(2)), Long_ZERO))
                break;
        }
        $this.$isConeShape = Long_lo(var$4) ? 0 : 1;
        var$2 = igtg_ColorRandomizer__init_();
        $this.$colorRandomizer = var$2;
        var$5 = new igtg_Circle;
        igtg_GasketKt_$callClinit();
        var$6 = igtg_GasketKt_width / 2.0;
        var$7 = igtg_GasketKt_height / 2.0;
        var$8 = (-1.0) / var$6;
        if (var$2.$isMultiColor) {
            var$9 = (igtg_ColorRandomizerKt_access$getColorArray$p()).data[cbgm_RandomXS128_nextInt(igtg_FirstScreen$Companion_getGLOBAL_RANDOM(igtg_FirstScreen_Companion), (igtg_ColorRandomizerKt_access$getColorArray$p()).data.length)];
            kji_Intrinsics_checkNotNullExpressionValue(var$9, $rt_s(644));
        } else {
            var$9 = var$2.$fixedColor;
            if (var$9 === null) {
                var$5 = new jl_NullPointerException;
                var$10 = new jl_StringBuilder;
                var$10.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(645));
                jl_AbstractStringBuilder_insert(var$10, var$10.$length, $rt_s(88));
                jl_NullPointerException__init_1(var$5, jl_StringBuilder_toString(var$10));
                $rt_throw(kji_Intrinsics_sanitizeStackTrace(var$5));
            }
        }
        igtg_Circle__init_(var$5, var$6, var$7, var$8, var$9, $this.$coneSegments, $this.$isConeShape, null, 64, null);
        $this.$c1 = var$5;
        $this.$r2 = igtg_Gasket_randomFloatRange($this, 100.0, igtg_Circle_getRadius(var$5) / 2.0);
        var$6 = igtg_Gasket_randomFloatRange($this, 0.0, 6.2831854820251465);
        $this.$randomAngleRad = var$6;
        $this.$v1 = cbgm_Vector2_setLength(km_Vector2Kt_vec2(cbgm_MathUtils_cos(var$6), cbgm_MathUtils_sin($this.$randomAngleRad)), igtg_Circle_getRadius($this.$c1) - $this.$r2);
        $this.$c2 = igtg_Circle__init_0(igtg_GasketKt_access$getWidth$p() / 2.0 + $this.$v1.$x, igtg_GasketKt_access$getHeight$p() / 2.0 + $this.$v1.$y, 1.0 / $this.$r2, igtg_ColorRandomizer_randomColor($this.$colorRandomizer), $this.$coneSegments, $this.$isConeShape, null, 64, null);
        $this.$r3 = cbgm_Vector2_len($this.$v1);
        $this.$v21 = cbgm_Vector2_setLength(cbgm_Vector2_rotateRad(cbgm_Vector2__init_($this.$v1), 3.1415927410125732), igtg_Circle_getRadius($this.$c1) - $this.$r3);
        $this.$c3 = igtg_Circle__init_0(igtg_GasketKt_access$getWidth$p() / 2.0 + $this.$v21.$x, igtg_GasketKt_access$getHeight$p() / 2.0 + $this.$v21.$y, 1.0 / $this.$r3, igtg_ColorRandomizer_randomColor($this.$colorRandomizer), $this.$coneSegments, $this.$isConeShape, null, 64, null);
        var$2 = ju_ArrayList__init_();
        ju_ArrayList_add(var$2, $this.$c1);
        ju_ArrayList_add(var$2, $this.$c2);
        ju_ArrayList_add(var$2, $this.$c3);
        $this.$allCircles = var$2;
        var$2 = ju_ArrayList__init_();
        ju_ArrayList_add(var$2, igtg_Triplet__init_($this.$c1, $this.$c2, $this.$c3));
        $this.$queue0 = var$2;
    }
    function igtg_Gasket_nextGeneration($this) {
        var $nextQueue, var$2, var$3, var$4, var$5, $k4, var$7, var$8, $triplet, var$10, $c1, $c2, $c3, $newCircles, $newCircle, $t3, $t1, $t2;
        $nextQueue = new ju_ArrayList;
        $nextQueue.$array4 = $rt_createArray(jl_Object, 10);
        var$2 = $this.$queue0;
        var$3 = 0;
        var$4 = var$2.$modCount1;
        var$5 = var$2.$size6;
        a: {
            b: while (true) {
                if (!(var$3 >= var$5 ? 0 : 1)) {
                    var$2 = $this.$queue0;
                    $k4 = var$2.$array4;
                    var$7 = 0;
                    var$8 = var$2.$size6;
                    $triplet = null;
                    if (var$7 > var$8) {
                        $nextQueue = new jl_IllegalArgumentException;
                        $nextQueue.$suppressionEnabled = 1;
                        $nextQueue.$writableStackTrace = 1;
                        $rt_throw($nextQueue);
                    }
                    while (var$7 < var$8) {
                        var$10 = $k4.data;
                        var$4 = var$7 + 1 | 0;
                        var$10[var$7] = $triplet;
                        var$7 = var$4;
                    }
                    var$2.$size6 = 0;
                    var$2.$modCount1 = var$2.$modCount1 + 1 | 0;
                    var$8 = 0;
                    var$5 = $nextQueue.$modCount1;
                    var$3 = $nextQueue.$size6;
                    c: {
                        while (var$8 >= var$3 ? 0 : 1) {
                            if (var$5 < $nextQueue.$modCount1) {
                                $nextQueue = new ju_ConcurrentModificationException;
                                $nextQueue.$suppressionEnabled = 1;
                                $nextQueue.$writableStackTrace = 1;
                                $rt_throw($nextQueue);
                            }
                            var$4 = var$8 + 1 | 0;
                            if (var$8 < 0)
                                break c;
                            if (var$8 >= $nextQueue.$size6)
                                break c;
                            $triplet = $nextQueue.$array4.data[var$8];
                            ju_ArrayList_ensureCapacity(var$2, var$2.$size6 + 1 | 0);
                            $k4 = var$2.$array4.data;
                            var$8 = var$2.$size6;
                            var$2.$size6 = var$8 + 1 | 0;
                            $k4[var$8] = $triplet;
                            var$2.$modCount1 = var$2.$modCount1 + 1 | 0;
                            var$8 = var$4;
                        }
                        return;
                    }
                    $nextQueue = new jl_IndexOutOfBoundsException;
                    $nextQueue.$suppressionEnabled = 1;
                    $nextQueue.$writableStackTrace = 1;
                    jl_Throwable_fillInStackTrace($nextQueue);
                    $rt_throw($nextQueue);
                }
                if (var$4 < var$2.$modCount1) {
                    $nextQueue = new ju_ConcurrentModificationException;
                    $nextQueue.$suppressionEnabled = 1;
                    $nextQueue.$writableStackTrace = 1;
                    $rt_throw($nextQueue);
                }
                var$8 = var$3 + 1 | 0;
                if (var$3 < 0)
                    break a;
                if (var$3 >= var$2.$size6)
                    break a;
                $triplet = var$2.$array4.data[var$3];
                $c1 = $triplet.$c10;
                $c2 = $triplet.$c20;
                $c3 = $triplet.$c30;
                $k4 = igtg_Descartes_simple(igtg_Descartes_INSTANCE, $c1, $c2, $c3);
                $triplet = (igtg_Descartes_complex(igtg_Descartes_INSTANCE, $c1, $c2, $c3, $k4)).$backingMap;
                if ($triplet.$cachedKeySet === null) {
                    $newCircles = new ju_HashMap$1;
                    $newCircles.$this$055 = $triplet;
                    $triplet.$cachedKeySet = $newCircles;
                }
                $triplet = $triplet.$cachedKeySet;
                $newCircles = new ju_HashMap$KeyIterator;
                $triplet = $triplet.$this$055;
                $newCircles.$associatedMap = $triplet;
                $newCircles.$expectedModCount = $triplet.$modCount;
                $newCircles.$futureEntry = null;
                while (ju_HashMap$AbstractMapIterator_hasNext($newCircles)) {
                    ju_HashMap$AbstractMapIterator_makeNext($newCircles);
                    $newCircle = $newCircles.$currentEntry.$key;
                    if (!igtg_Gasket_validate($this, $newCircle, $c1, $c2, $c3))
                        continue;
                    $t3 = igtg_ColorRandomizer_randomColor($this.$colorRandomizer);
                    var$7 = $this.$isConeShape;
                    var$3 = $this.$coneSegments;
                    if ($t3 === null)
                        break b;
                    $newCircle.$color = $t3;
                    $newCircle.$segments = var$3;
                    $newCircle.$isCone = var$7;
                    ju_ArrayList_add($this.$allCircles, $newCircle);
                    $t1 = igtg_Triplet__init_($c1, $c2, $newCircle);
                    $t2 = igtg_Triplet__init_($c1, $c3, $newCircle);
                    $t3 = igtg_Triplet__init_($c2, $c3, $newCircle);
                    ju_ArrayList_add($nextQueue, $t1);
                    ju_ArrayList_add($nextQueue, $t2);
                    ju_ArrayList_add($nextQueue, $t3);
                }
                var$3 = var$8;
            }
            $nextQueue = new jl_NullPointerException;
            jl_RuntimeException__init_2($nextQueue, kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(646)));
            $rt_throw(kji_Intrinsics_sanitizeStackTrace($nextQueue));
        }
        $nextQueue = new jl_IndexOutOfBoundsException;
        $nextQueue.$suppressionEnabled = 1;
        $nextQueue.$writableStackTrace = 1;
        $rt_throw($nextQueue);
    }
    function igtg_Gasket_isTangent($this, $c1, $c2) {
        var var$3, $r1, var$5, var$6, $r2, var$8, var$9, var$10, $b, var$12, $a, var$14;
        if ($c2 !== null) {
            var$3 = $c1.$x5;
            $r1 = $c1.$y5;
            var$5 = $c2.$x5;
            var$6 = $c2.$y5;
            var$3 = var$5 - var$3;
            $r1 = var$6 - $r1;
            var$3 = jl_Math_sqrt(var$3 * var$3 + $r1 * $r1);
            $r1 = $c1.$radius;
            $r2 = $c2.$radius;
            return (jl_Math_absImpl(var$3 - ($r1 + $r2)) >= 1.0 ? 0 : 1) | (jl_Math_absImpl(var$3 - jl_Math_absImpl($r2 - $r1)) >= 1.0 ? 0 : 1);
        }
        $c1 = new jl_NullPointerException;
        $c2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(647));
        $c1.$suppressionEnabled = 1;
        $c1.$writableStackTrace = 1;
        $c1.$message = $c2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$8 = $rt_cls(kji_Intrinsics).$name;
        var$9 = $c1.$stackTrace;
        var$10 = var$9 !== null ? var$9.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$9 = var$10.data;
        $b = var$9.length;
        var$12 = (-1);
        $a = 0;
        while ($a < $b) {
            if (jl_String_equals(var$8, jl_StackTraceElement_getClassName(var$9[$a])))
                var$12 = $a;
            $a = $a + 1 | 0;
        }
        $a = var$12 + 1 | 0;
        var$8 = var$10.constructor;
        if (var$8 === null)
            $c2 = null;
        else {
            $c2 = var$8.classObject;
            if ($c2 === null)
                $c2 = jl_Class__init_(var$8);
        }
        $c2 = $c2.$platformClass.$meta.item;
        if ($c2 === null)
            var$8 = null;
        else {
            var$8 = $c2.classObject;
            if (var$8 === null)
                var$8 = jl_Class__init_($c2);
        }
        var$12 = $b - $a | 0;
        if (var$8 === null) {
            $c1 = new jl_NullPointerException;
            jl_RuntimeException__init_1($c1);
            $rt_throw($c1);
        }
        if (var$8 === $rt_cls($rt_voidcls())) {
            $c1 = new jl_IllegalArgumentException;
            jl_RuntimeException__init_1($c1);
            $rt_throw($c1);
        }
        if (var$12 < 0) {
            $c1 = new jl_NegativeArraySizeException;
            jl_RuntimeException__init_1($c1);
            $rt_throw($c1);
        }
        var$14 = jlr_Array_newInstanceImpl(var$8.$platformClass, var$12);
        var$12 = $a;
        while (var$12 < $b) {
            var$14.data[var$12 - $a | 0] = var$9[var$12];
            var$12 = var$12 + 1 | 0;
        }
        $c1.$stackTrace = var$14.$clone();
        $rt_throw($c1);
    }
    function igtg_Gasket_validate($this, $c4, $c1, $c2, $c3) {
        var var$5, var$6, var$7, var$8, $other, var$10, var$11, var$12, var$13, $radiusDiff, var$15, var$16;
        if ($c4.$radius < 1.0)
            return 0;
        if (!igtg_Gasket_isTangent($this, $c4, $c1))
            return 0;
        if (!igtg_Gasket_isTangent($this, $c4, $c2))
            return 0;
        if (!igtg_Gasket_isTangent($this, $c4, $c3))
            return 0;
        $c1 = $this.$allCircles;
        var$5 = 0;
        var$6 = $c1.$modCount1;
        var$7 = $c1.$size6;
        a: {
            while (true) {
                if (!(var$5 >= var$7 ? 0 : 1))
                    return 1;
                if (var$6 < $c1.$modCount1) {
                    $c4 = new ju_ConcurrentModificationException;
                    $c4.$suppressionEnabled = 1;
                    $c4.$writableStackTrace = 1;
                    $rt_throw($c4);
                }
                var$8 = var$5 + 1 | 0;
                if (var$5 < 0)
                    break a;
                if (var$5 >= $c1.$size6)
                    break a;
                $other = $c1.$array4.data[var$5];
                if ($other === null) {
                    $c4 = new jl_NullPointerException;
                    $c1 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(647));
                    $c4.$suppressionEnabled = 1;
                    $c4.$writableStackTrace = 1;
                    $c4.$message = $c1;
                    if ($rt_cls(kji_Intrinsics).$name === null)
                        $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
                    $c2 = $rt_cls(kji_Intrinsics).$name;
                    var$10 = $c4.$stackTrace;
                    var$11 = var$10 !== null ? var$10.$clone() : $rt_createArray(jl_StackTraceElement, 0);
                    var$10 = var$11.data;
                    var$8 = var$10.length;
                    var$6 = (-1);
                    var$12 = 0;
                    while (var$12 < var$8) {
                        if (jl_String_equals($c2, jl_StackTraceElement_getClassName(var$10[var$12])))
                            var$6 = var$12;
                        var$12 = var$12 + 1 | 0;
                    }
                    var$12 = var$6 + 1 | 0;
                    $c2 = var$11.constructor;
                    if ($c2 === null)
                        $c1 = null;
                    else {
                        $c1 = $c2.classObject;
                        if ($c1 === null)
                            $c1 = jl_Class__init_($c2);
                    }
                    $c3 = $c1.$platformClass.$meta.item;
                    if ($c3 === null)
                        $c2 = null;
                    else {
                        $c2 = $c3.classObject;
                        if ($c2 === null)
                            $c2 = jl_Class__init_($c3);
                    }
                    var$6 = var$8 - var$12 | 0;
                    if ($c2 === null) {
                        $c4 = new jl_NullPointerException;
                        jl_RuntimeException__init_1($c4);
                        $rt_throw($c4);
                    }
                    if ($c2 === $rt_cls($rt_voidcls())) {
                        $c4 = new jl_IllegalArgumentException;
                        jl_RuntimeException__init_1($c4);
                        $rt_throw($c4);
                    }
                    if (var$6 < 0) {
                        $c4 = new jl_NegativeArraySizeException;
                        jl_RuntimeException__init_1($c4);
                        $rt_throw($c4);
                    }
                    $c3 = jlr_Array_newInstanceImpl($c2.$platformClass, var$6);
                    var$6 = var$12;
                    while (var$6 < var$8) {
                        $c3.data[var$6 - var$12 | 0] = var$10[var$6];
                        var$6 = var$6 + 1 | 0;
                    }
                    $c4.$stackTrace = $c3.$clone();
                    $rt_throw($c4);
                }
                var$13 = $c4.$x5;
                $radiusDiff = $c4.$y5;
                var$15 = $other.$x5;
                var$16 = $other.$y5;
                var$13 = var$15 - var$13;
                $radiusDiff = var$16 - $radiusDiff;
                var$15 = jl_Math_sqrt(var$13 * var$13 + $radiusDiff * $radiusDiff);
                $radiusDiff = jl_Math_absImpl($c4.$radius - $other.$radius);
                if (var$15 >= 1.0) {
                    var$5 = var$8;
                    continue;
                }
                if ($radiusDiff < 1.0)
                    break;
                var$5 = var$8;
            }
            return 0;
        }
        $c4 = new jl_IndexOutOfBoundsException;
        $c4.$suppressionEnabled = 1;
        $c4.$writableStackTrace = 1;
        $rt_throw($c4);
    }
    function igtg_Gasket_randomFloatRange($this, $min, $max) {
        var var$3, var$4, var$5, var$6;
        if (!($min >= $max ? 0 : 1)) {
            var$3 = new jl_IllegalArgumentException;
            var$3.$suppressionEnabled = 1;
            var$3.$writableStackTrace = 1;
            var$3.$message = $rt_s(648);
            $rt_throw(var$3);
        }
        igtg_FirstScreen_$callClinit();
        var$4 = igtg_FirstScreen_GLOBAL_RANDOM;
        var$5 = var$4.$seed0;
        var$6 = var$4.$seed1;
        var$4.$seed0 = var$6;
        var$5 = Long_xor(var$5, Long_shl(var$5, 23));
        var$5 = Long_xor(Long_xor(Long_xor(var$5, var$6), Long_shru(var$5, 17)), Long_shru(var$6, 26));
        var$4.$seed1 = var$5;
        return $min + Long_toNumber(Long_shru(Long_add(var$5, var$6), 40)) * 5.960464477539063E-8 * ($max - $min);
    }
    function igtg_ColorRandomizer() {
        var a = this; jl_Object.call(a);
        a.$isMultiColor = 0;
        a.$fixedColor = null;
    }
    function igtg_ColorRandomizer__init_() {
        var var_0 = new igtg_ColorRandomizer();
        igtg_ColorRandomizer__init_0(var_0);
        return var_0;
    }
    function igtg_ColorRandomizer__init_0($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        igtg_FirstScreen_$callClinit();
        var$1 = igtg_FirstScreen_GLOBAL_RANDOM;
        while (true) {
            var$2 = var$1.$seed0;
            var$3 = var$1.$seed1;
            var$1.$seed0 = var$3;
            var$2 = Long_xor(var$2, Long_shl(var$2, 23));
            var$2 = Long_xor(Long_xor(Long_xor(var$2, var$3), Long_shru(var$2, 17)), Long_shru(var$3, 26));
            var$1.$seed1 = var$2;
            var$2 = Long_shru(Long_add(var$2, var$3), 1);
            var$3 = Long_rem(var$2, Long_fromInt(2));
            if (Long_ge(Long_add(Long_sub(var$2, var$3), Long_fromInt(1)), Long_ZERO))
                break;
        }
        $this.$isMultiColor = Long_lo(var$3) ? 0 : 1;
        igtg_ColorRandomizerKt_$callClinit();
        var$4 = igtg_ColorRandomizerKt_colorArray.data;
        var$5 = Long_fromInt(var$4.length);
        if (Long_le(var$5, Long_ZERO)) {
            var$1 = new jl_IllegalArgumentException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            var$1.$message = $rt_s(42);
            $rt_throw(var$1);
        }
        var$6 = Long_sub(var$5, Long_fromInt(1));
        while (true) {
            var$3 = var$1.$seed0;
            var$7 = var$1.$seed1;
            var$1.$seed0 = var$7;
            var$2 = Long_xor(var$3, Long_shl(var$3, 23));
            var$2 = Long_xor(Long_xor(Long_xor(var$2, var$7), Long_shru(var$2, 17)), Long_shru(var$7, 26));
            var$1.$seed1 = var$2;
            var$2 = Long_shru(Long_add(var$2, var$7), 1);
            var$3 = Long_rem(var$2, var$5);
            if (Long_ge(Long_add(Long_sub(var$2, var$3), var$6), Long_ZERO))
                break;
        }
        $this.$fixedColor = var$4[Long_lo(var$3)];
    }
    function igtg_ColorRandomizer_randomColor($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
        if ($this.$isMultiColor) {
            igtg_ColorRandomizerKt_$callClinit();
            var$1 = igtg_ColorRandomizerKt_colorArray.data;
            igtg_FirstScreen_$callClinit();
            var$2 = igtg_FirstScreen_GLOBAL_RANDOM;
            var$3 = Long_fromInt(var$1.length);
            if (Long_le(var$3, Long_ZERO)) {
                var$2 = new jl_IllegalArgumentException;
                var$2.$suppressionEnabled = 1;
                var$2.$writableStackTrace = 1;
                var$2.$message = $rt_s(42);
                $rt_throw(var$2);
            }
            var$4 = Long_sub(var$3, Long_fromInt(1));
            while (true) {
                var$5 = var$2.$seed0;
                var$6 = var$2.$seed1;
                var$2.$seed0 = var$6;
                var$5 = Long_xor(var$5, Long_shl(var$5, 23));
                var$5 = Long_xor(Long_xor(Long_xor(var$5, var$6), Long_shru(var$5, 17)), Long_shru(var$6, 26));
                var$2.$seed1 = var$5;
                var$5 = Long_shru(Long_add(var$5, var$6), 1);
                var$6 = Long_rem(var$5, var$3);
                if (Long_ge(Long_add(Long_sub(var$5, var$6), var$4), Long_ZERO))
                    break;
            }
            var$2 = var$1[Long_lo(var$6)];
            if (var$2 !== null)
                return var$2;
            var$7 = new jl_NullPointerException;
            var$2 = new jl_StringBuilder;
            var$2.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(644));
            jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(88));
            var$8 = new jl_String;
            var$1 = var$2.$buffer;
            var$9 = var$2.$length;
            jl_String_$callClinit();
            var$10 = $rt_createCharArray(var$9);
            var$8.$characters = var$10;
            jl_System_fastArraycopy(var$1, 0, var$10, 0, var$9);
            var$7.$suppressionEnabled = 1;
            var$7.$writableStackTrace = 1;
            var$7.$message = var$8;
            $rt_throw(kji_Intrinsics_sanitizeStackTrace(var$7));
        }
        var$8 = $this.$fixedColor;
        if (var$8 !== null)
            return var$8;
        var$7 = new jl_NullPointerException;
        var$8 = new jl_StringBuilder;
        var$8.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(645));
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(88));
        var$2 = new jl_String;
        var$1 = var$8.$buffer;
        var$9 = var$8.$length;
        jl_String_$callClinit();
        var$10 = $rt_createCharArray(var$9);
        var$2.$characters = var$10;
        jl_System_fastArraycopy(var$1, 0, var$10, 0, var$9);
        var$7.$suppressionEnabled = 1;
        var$7.$writableStackTrace = 1;
        var$7.$message = var$2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$8 = $rt_cls(kji_Intrinsics).$name;
        var$1 = var$7.$stackTrace;
        var$10 = var$1 !== null ? var$1.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$1 = var$10.data;
        var$9 = var$1.length;
        var$11 = (-1);
        var$12 = 0;
        while (var$12 < var$9) {
            if (jl_String_equals(var$8, jl_StackTraceElement_getClassName(var$1[var$12])))
                var$11 = var$12;
            var$12 = var$12 + 1 | 0;
        }
        var$12 = var$11 + 1 | 0;
        var$8 = var$10.constructor;
        if (var$8 === null)
            var$2 = null;
        else {
            var$2 = var$8.classObject;
            if (var$2 === null) {
                var$2 = new jl_Class;
                var$2.$platformClass = var$8;
                var$13 = var$2;
                var$8.classObject = var$13;
            }
        }
        var$14 = var$2.$platformClass.$meta.item;
        if (var$14 === null)
            var$8 = null;
        else {
            var$8 = var$14.classObject;
            if (var$8 === null) {
                var$8 = new jl_Class;
                var$8.$platformClass = var$14;
                var$2 = var$8;
                var$14.classObject = var$2;
            }
        }
        var$11 = var$9 - var$12 | 0;
        if (var$8 === null) {
            var$2 = new jl_NullPointerException;
            jl_Throwable__init_0(var$2);
            $rt_throw(var$2);
        }
        if (var$8 === $rt_cls($rt_voidcls())) {
            var$2 = new jl_IllegalArgumentException;
            jl_Throwable__init_0(var$2);
            $rt_throw(var$2);
        }
        if (var$11 < 0) {
            var$2 = new jl_NegativeArraySizeException;
            jl_Throwable__init_0(var$2);
            $rt_throw(var$2);
        }
        var$13 = jlr_Array_newInstanceImpl(var$8.$platformClass, var$11);
        var$11 = var$12;
        while (var$11 < var$9) {
            var$13.data[var$11 - var$12 | 0] = var$1[var$11];
            var$11 = var$11 + 1 | 0;
        }
        var$7.$stackTrace = var$13.$clone();
        $rt_throw(var$7);
    }
    function igtg_Circle() {
        var a = this; jl_Object.call(a);
        a.$x5 = 0.0;
        a.$y5 = 0.0;
        a.$bend = 0.0;
        a.$color = null;
        a.$segments = 0;
        a.$isCone = 0;
        a.$camera = null;
        a.$width6 = 0.0;
        a.$height5 = 0.0;
        a.$center = null;
        a.$radius = 0.0;
    }
    var igtg_Circle_Companion = null;
    var igtg_Circle_shape = null;
    function igtg_Circle_$callClinit() {
        igtg_Circle_$callClinit = $rt_eraseClinit(igtg_Circle);
        igtg_Circle__clinit_();
    }
    function igtg_Circle__init_1(var_0, var_1, var_2, var_3, var_4, var_5, var_6) {
        var var_7 = new igtg_Circle();
        igtg_Circle__init_2(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
        return var_7;
    }
    function igtg_Circle__init_0(var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) {
        var var_9 = new igtg_Circle();
        igtg_Circle__init_(var_9, var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8);
        return var_9;
    }
    function igtg_Circle__init_2($this, $x, $y, $bend, $color, $segments, $isCone, $camera) {
        var var$8, var$9, var$10, var$11, var$12, var$13;
        igtg_Circle_$callClinit();
        if ($color !== null) {
            if ($camera !== null) {
                $this.$x5 = $x;
                $this.$y5 = $y;
                $this.$bend = $bend;
                $this.$color = $color;
                $this.$segments = $segments;
                $this.$isCone = $isCone;
                $this.$camera = $camera;
                $this.$width6 = cgxgbt_TeaGraphics_getWidth(cbg_Gdx_graphics);
                $x = cgxgbt_TeaGraphics_getHeight(cbg_Gdx_graphics);
                $this.$height5 = $x;
                cbgg_OrthographicCamera_setToOrtho($this.$camera, 0, $this.$width6, $x);
                cbg_Gdx_gl.$glLineWidth(1.6399999856948853);
                $this.$center = igtg_Complex__init_($this.$x5, $this.$y5);
                $this.$radius = jl_Math_absImpl(1.0 / $this.$bend);
                return;
            }
            $color = new jl_NullPointerException;
            $camera = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(649));
            $color.$suppressionEnabled = 1;
            $color.$writableStackTrace = 1;
            $color.$message = $camera;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            $camera = $rt_cls(kji_Intrinsics).$name;
            var$8 = $color.$stackTrace;
            var$9 = var$8 !== null ? var$8.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$8 = var$9.data;
            $isCone = var$8.length;
            var$10 = (-1);
            $segments = 0;
            while ($segments < $isCone) {
                if (jl_String_equals($camera, jl_StackTraceElement_getClassName(var$8[$segments])))
                    var$10 = $segments;
                $segments = $segments + 1 | 0;
            }
            $segments = var$10 + 1 | 0;
            var$11 = var$9.constructor;
            if (var$11 === null)
                $camera = null;
            else {
                $camera = var$11.classObject;
                if ($camera === null) {
                    $camera = new jl_Class;
                    jl_Object__init_0($camera);
                    $camera.$platformClass = var$11;
                    var$12 = $camera;
                    var$11.classObject = var$12;
                }
            }
            $camera = jlr_Array_newInstance(jl_Class_getClass($camera.$platformClass.$meta.item), $isCone - $segments | 0);
            var$10 = $segments;
            while (var$10 < $isCone) {
                $camera.data[var$10 - $segments | 0] = var$8[var$10];
                var$10 = var$10 + 1 | 0;
            }
            $color.$stackTrace = $camera.$clone();
            $rt_throw($color);
        }
        $color = new jl_NullPointerException;
        $camera = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(646));
        $color.$suppressionEnabled = 1;
        $color.$writableStackTrace = 1;
        $color.$message = $camera;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$11 = $rt_cls(kji_Intrinsics).$name;
        var$8 = $color.$stackTrace;
        var$9 = var$8 !== null ? var$8.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$8 = var$9.data;
        $isCone = var$8.length;
        var$10 = (-1);
        $segments = 0;
        while ($segments < $isCone) {
            if (jl_String_equals(var$11, jl_StackTraceElement_getClassName(var$8[$segments])))
                var$10 = $segments;
            $segments = $segments + 1 | 0;
        }
        $segments = var$10 + 1 | 0;
        var$11 = var$9.constructor;
        if (var$11 === null)
            $camera = null;
        else {
            $camera = var$11.classObject;
            if ($camera === null) {
                $camera = new jl_Class;
                jl_Object__init_0($camera);
                $camera.$platformClass = var$11;
                var$12 = $camera;
                var$11.classObject = var$12;
            }
        }
        var$13 = $camera.$platformClass.$meta.item;
        if (var$13 === null)
            var$11 = null;
        else {
            var$11 = var$13.classObject;
            if (var$11 === null) {
                var$11 = new jl_Class;
                jl_Object__init_0(var$11);
                var$11.$platformClass = var$13;
                $camera = var$11;
                var$13.classObject = $camera;
            }
        }
        var$10 = $isCone - $segments | 0;
        if (var$11 === null) {
            $color = new jl_NullPointerException;
            jl_Exception__init_0($color);
            $rt_throw($color);
        }
        if (var$11 === $rt_cls($rt_voidcls())) {
            $color = new jl_IllegalArgumentException;
            jl_Exception__init_0($color);
            $rt_throw($color);
        }
        if (var$10 < 0) {
            $color = new jl_NegativeArraySizeException;
            jl_Exception__init_0($color);
            $rt_throw($color);
        }
        var$12 = jlr_Array_newInstanceImpl(var$11.$platformClass, var$10);
        var$10 = $segments;
        while (var$10 < $isCone) {
            var$12.data[var$10 - $segments | 0] = var$8[var$10];
            var$10 = var$10 + 1 | 0;
        }
        $color.$stackTrace = var$12.$clone();
        $rt_throw($color);
    }
    function igtg_Circle__init_(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9) {
        igtg_Circle_$callClinit();
        if (var$8 & 8) {
            cbgg_Color_$callClinit();
            var$4 = cbgg_Color_CYAN;
        }
        if (var$8 & 16)
            var$5 = 200;
        if (var$8 & 32)
            var$6 = 0;
        if (var$8 & 64) {
            var$7 = new cbgg_OrthographicCamera;
            cbgg_Camera__init_(var$7);
            var$7.$zoom = 1.0;
            var$9 = new cbgm_Vector3;
            cbgm_Vector3_$callClinit();
            var$7.$tmp = var$9;
            var$7.$near = 0.0;
        }
        igtg_Circle__init_2(var$0, var$1, var$2, var$3, var$4, var$5, var$6, var$7);
    }
    function igtg_Circle_getBend($this) {
        return $this.$bend;
    }
    function igtg_Circle_getCenter($this) {
        return $this.$center;
    }
    function igtg_Circle_getRadius($this) {
        return $this.$radius;
    }
    function igtg_Circle_draw($this, $x, $y, $color) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        if ($color !== null) {
            igtg_Circle_$callClinit();
            var$4 = igtg_Circle_shape;
            var$5 = $this.$camera.$combined;
            cbgm_Matrix4_set(var$4.$projectionMatrix0, var$5.$val);
            var$4.$matrixDirty = 1;
            var$4 = igtg_Circle_shape;
            cbggg_ShapeRenderer$ShapeType_$callClinit();
            cbggg_ShapeRenderer_begin(var$4, cbggg_ShapeRenderer$ShapeType_Line);
            var$4 = igtg_Circle_shape;
            var$5 = var$4.$color3;
            var$5.$r = $color.$r;
            var$5.$g = $color.$g;
            var$5.$b = $color.$b;
            var$5.$a = $color.$a;
            if (!$this.$isCone)
                cbggg_ShapeRenderer_circle(var$4, $x, $y, $this.$radius, 200);
            else
                cbggg_ShapeRenderer_cone(var$4, $x, $y, 0.0, $this.$radius, 0.0, $this.$segments);
            $color = igtg_Circle_shape;
            cbggg_ImmediateModeRenderer20_flush($color.$renderer);
            $color.$shapeType = null;
            return;
        }
        $color = new jl_NullPointerException;
        var$4 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(646));
        $color.$suppressionEnabled = 1;
        $color.$writableStackTrace = 1;
        $color.$message = var$4;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$5 = $rt_cls(kji_Intrinsics).$name;
        var$6 = $color.$stackTrace;
        var$7 = var$6 !== null ? var$6.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$6 = var$7.data;
        var$8 = var$6.length;
        var$9 = (-1);
        var$10 = 0;
        while (var$10 < var$8) {
            if (jl_String_equals(var$5, jl_StackTraceElement_getClassName(var$6[var$10])))
                var$9 = var$10;
            var$10 = var$10 + 1 | 0;
        }
        var$10 = var$9 + 1 | 0;
        var$5 = var$7.constructor;
        if (var$5 === null)
            var$4 = null;
        else {
            var$4 = var$5.classObject;
            if (var$4 === null) {
                var$4 = new jl_Class;
                jl_Object__init_0(var$4);
                var$4.$platformClass = var$5;
                var$11 = var$4;
                var$5.classObject = var$11;
            }
        }
        var$4 = var$4.$platformClass.$meta.item;
        if (var$4 === null)
            var$5 = null;
        else {
            var$5 = var$4.classObject;
            if (var$5 === null) {
                var$5 = new jl_Class;
                jl_Object__init_0(var$5);
                var$5.$platformClass = var$4;
                var$11 = var$5;
                var$4.classObject = var$11;
            }
        }
        var$9 = var$8 - var$10 | 0;
        if (var$5 === null) {
            $color = new jl_NullPointerException;
            jl_Exception__init_0($color);
            $rt_throw($color);
        }
        if (var$5 === $rt_cls($rt_voidcls())) {
            $color = new jl_IllegalArgumentException;
            jl_Exception__init_0($color);
            $rt_throw($color);
        }
        if (var$9 < 0) {
            $color = new jl_NegativeArraySizeException;
            jl_Exception__init_0($color);
            $rt_throw($color);
        }
        var$11 = jlr_Array_newInstanceImpl(var$5.$platformClass, var$9);
        var$9 = var$10;
        while (var$9 < var$8) {
            var$11.data[var$9 - var$10 | 0] = var$6[var$9];
            var$9 = var$9 + 1 | 0;
        }
        $color.$stackTrace = var$11.$clone();
        $rt_throw($color);
    }
    function igtg_Circle_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
        var$1 = $this.$x5;
        var$2 = $this.$y5;
        var$3 = $this.$bend;
        var$4 = $this.$color;
        var$5 = $this.$segments;
        var$6 = $this.$isCone;
        var$7 = $this.$camera;
        var$8 = new jl_StringBuilder;
        var$8.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(650));
        jl_AbstractStringBuilder_insert1(var$8, var$8.$length, var$1);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(651));
        jl_AbstractStringBuilder_insert1(var$8, var$8.$length, var$2);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(652));
        jl_AbstractStringBuilder_insert1(var$8, var$8.$length, var$3);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(653));
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, var$4 === null ? $rt_s(1) : cbgg_Color_toString(var$4));
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(654));
        jl_AbstractStringBuilder_insert0(var$8, var$8.$length, var$5, 10);
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(655));
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, !var$6 ? $rt_s(656) : $rt_s(657));
        jl_AbstractStringBuilder_insert(var$8, var$8.$length, $rt_s(658));
        var$9 = var$8.$length;
        if (var$7 === null)
            var$7 = $rt_s(1);
        else {
            var$4 = var$7.constructor;
            if (var$4 === null)
                var$10 = null;
            else {
                var$10 = var$4.classObject;
                if (var$10 === null)
                    var$10 = jl_Class__init_(var$4);
            }
            if (var$10.$name === null)
                var$10.$name = $rt_str(var$10.$platformClass.$meta.name);
            var$11 = var$10.$name;
            var$4 = var$7;
            if (!var$4.$id$) {
                var$12 = $rt_nextId();
                var$4.$id$ = var$12;
            }
            var$7 = otci_IntegerUtil_toUnsignedLogRadixString(var$7.$id$, 4);
            var$4 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_2(var$4, 16);
            jl_StringBuilder_insert4(var$4, var$4.$length, var$11);
            jl_StringBuilder_insert5(var$4, var$4.$length, 64);
            jl_StringBuilder_insert4(var$4, var$4.$length, var$7);
            var$7 = jl_String__init_1(var$4.$buffer, 0, var$4.$length);
        }
        jl_AbstractStringBuilder_insert(var$8, var$9, var$7);
        var$9 = var$8.$length;
        jl_AbstractStringBuilder_insertSpace(var$8, var$9, var$9 + 1 | 0);
        var$13 = var$8.$buffer;
        var$13.data[var$9] = 41;
        var$4 = new jl_String;
        var$6 = var$8.$length;
        jl_String_$callClinit();
        var$14 = $rt_createCharArray(var$6);
        var$4.$characters = var$14;
        jl_System_fastArraycopy(var$13, 0, var$14, 0, var$6);
        return var$4;
    }
    function igtg_Circle_hashCode($this) {
        var var$1, var$2, $result, var$4, var$5, var$6;
        var$1 = $this.$x5;
        var$2 = (($rt_globals.isNaN(var$1) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$1)) * 31 | 0;
        var$1 = $this.$y5;
        var$2 = (var$2 + (($rt_globals.isNaN(var$1) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$1)) | 0) * 31 | 0;
        var$1 = $this.$bend;
        $result = ($rt_globals.isNaN(var$1) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$1);
        var$2 = (((((((var$2 + $result | 0) * 31 | 0) + cbgg_Color_hashCode($this.$color) | 0) * 31 | 0) + $this.$segments | 0) * 31 | 0) + (!$this.$isCone ? 1237 : 1231) | 0) * 31 | 0;
        var$4 = $this.$camera;
        var$5 = var$4;
        if (!var$5.$id$) {
            var$6 = $rt_nextId();
            var$5.$id$ = var$6;
        }
        return var$2 + var$4.$id$ | 0;
    }
    function igtg_Circle_equals($this, $other) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        if ($this === $other)
            return 1;
        if (!($other instanceof igtg_Circle))
            return 0;
        $other = $other;
        if (jl_Float_compare($this.$x5, $other.$x5))
            return 0;
        if (jl_Float_compare($this.$y5, $other.$y5))
            return 0;
        if (jl_Float_compare($this.$bend, $other.$bend))
            return 0;
        var$2 = $this.$color;
        var$3 = $other.$color;
        if (var$2 === null)
            var$4 = var$3 !== null ? 0 : 1;
        else
            a: {
                if (var$2 === var$3)
                    var$4 = 1;
                else {
                    if (var$3 !== null) {
                        var$5 = var$2.constructor;
                        if (var$5 === null)
                            var$6 = null;
                        else {
                            var$6 = var$5.classObject;
                            if (var$6 === null) {
                                var$6 = new jl_Class;
                                var$6.$platformClass = var$5;
                                var$7 = var$6;
                                var$5.classObject = var$7;
                            }
                        }
                        var$8 = var$3.constructor;
                        if (var$8 === null)
                            var$7 = null;
                        else {
                            var$7 = var$8.classObject;
                            if (var$7 === null) {
                                var$7 = new jl_Class;
                                var$7.$platformClass = var$8;
                                var$5 = var$7;
                                var$8.classObject = var$5;
                            }
                        }
                        if (var$6 === var$7) {
                            var$3 = var$3;
                            var$4 = cbgg_Color_toIntBits(var$2) != cbgg_Color_toIntBits(var$3) ? 0 : 1;
                            break a;
                        }
                    }
                    var$4 = 0;
                }
            }
        if (!var$4)
            return 0;
        if ($this.$segments != $other.$segments)
            return 0;
        if ($this.$isCone != $other.$isCone)
            return 0;
        var$2 = $this.$camera;
        $other = $other.$camera;
        if (var$2 === null ? ($other !== null ? 0 : 1) : var$2 !== $other ? 0 : 1)
            return 1;
        return 0;
    }
    function igtg_Circle__clinit_() {
        igtg_Circle_Companion = new igtg_Circle$Companion;
        igtg_Circle_shape = cbggg_ShapeRenderer__init_(5000, null);
    }
    var igtg_GasketKt = $rt_classWithoutFields();
    var igtg_GasketKt_width = 0.0;
    var igtg_GasketKt_height = 0.0;
    function igtg_GasketKt_$callClinit() {
        igtg_GasketKt_$callClinit = $rt_eraseClinit(igtg_GasketKt);
        igtg_GasketKt__clinit_();
    }
    function igtg_GasketKt_access$getWidth$p() {
        igtg_GasketKt_$callClinit();
        return igtg_GasketKt_width;
    }
    function igtg_GasketKt_access$getHeight$p() {
        igtg_GasketKt_$callClinit();
        return igtg_GasketKt_height;
    }
    function igtg_GasketKt__clinit_() {
        igtg_GasketKt_width = cbg_Gdx_graphics.$canvas0.width;
        igtg_GasketKt_height = cbg_Gdx_graphics.$canvas0.height;
    }
    var km_Vector2Kt = $rt_classWithoutFields();
    function km_Vector2Kt_vec2($x, $y) {
        var var$3;
        var$3 = new cbgm_Vector2;
        var$3.$x = $x;
        var$3.$y = $y;
        return var$3;
    }
    function igtg_Triplet() {
        var a = this; jl_Object.call(a);
        a.$c10 = null;
        a.$c20 = null;
        a.$c30 = null;
    }
    function igtg_Triplet__init_(var_0, var_1, var_2) {
        var var_3 = new igtg_Triplet();
        igtg_Triplet__init_0(var_3, var_0, var_1, var_2);
        return var_3;
    }
    function igtg_Triplet__init_0($this, $c1, $c2, $c3) {
        var var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($c1 !== null) {
            if ($c2 !== null) {
                kji_Intrinsics_checkNotNullParameter($c3, $rt_s(659));
                $this.$c10 = $c1;
                $this.$c20 = $c2;
                $this.$c30 = $c3;
                return;
            }
            $c1 = new jl_NullPointerException;
            $c2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(660));
            $c1.$suppressionEnabled = 1;
            $c1.$writableStackTrace = 1;
            $c1.$message = $c2;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            $c3 = $rt_cls(kji_Intrinsics).$name;
            var$4 = $c1.$stackTrace;
            var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$4 = var$5.data;
            var$6 = var$4.length;
            var$7 = (-1);
            var$8 = 0;
            while (var$8 < var$6) {
                if (jl_String_equals($c3, jl_StackTraceElement_getClassName(var$4[var$8])))
                    var$7 = var$8;
                var$8 = var$8 + 1 | 0;
            }
            var$8 = var$7 + 1 | 0;
            $c3 = var$5.constructor;
            if ($c3 === null)
                $c2 = null;
            else {
                $c2 = $c3.classObject;
                if ($c2 === null) {
                    $c2 = new jl_Class;
                    jl_Object__init_0($c2);
                    $c2.$platformClass = $c3;
                    var$9 = $c2;
                    $c3.classObject = var$9;
                }
            }
            var$10 = $c2.$platformClass.$meta.item;
            if (var$10 === null)
                $c3 = null;
            else {
                $c3 = var$10.classObject;
                if ($c3 === null) {
                    $c3 = new jl_Class;
                    jl_Object__init_0($c3);
                    $c3.$platformClass = var$10;
                    $c2 = $c3;
                    var$10.classObject = $c2;
                }
            }
            var$7 = var$6 - var$8 | 0;
            if ($c3 === null) {
                $c1 = new jl_NullPointerException;
                jl_RuntimeException__init_1($c1);
                $rt_throw($c1);
            }
            if ($c3 === $rt_cls($rt_voidcls()))
                $rt_throw(jl_IllegalArgumentException__init_());
            if (var$7 < 0)
                $rt_throw(jl_NegativeArraySizeException__init_());
            var$9 = jlr_Array_newInstanceImpl(jl_Class_getPlatformClass($c3), var$7);
            var$7 = var$8;
            while (var$7 < var$6) {
                var$9.data[var$7 - var$8 | 0] = var$4[var$7];
                var$7 = var$7 + 1 | 0;
            }
            jl_Throwable_setStackTrace($c1, var$9);
            $rt_throw($c1);
        }
        $c1 = new jl_NullPointerException;
        $c2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(661));
        $c1.$suppressionEnabled = 1;
        $c1.$writableStackTrace = 1;
        $c1.$message = $c2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $c3 = $rt_cls(kji_Intrinsics).$name;
        var$4 = $c1.$stackTrace;
        var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$4 = var$5.data;
        var$6 = var$4.length;
        var$7 = (-1);
        var$8 = 0;
        while (var$8 < var$6) {
            if (jl_String_equals($c3, jl_StackTraceElement_getClassName(var$4[var$8])))
                var$7 = var$8;
            var$8 = var$8 + 1 | 0;
        }
        var$8 = var$7 + 1 | 0;
        $c3 = var$5.constructor;
        if ($c3 === null)
            $c2 = null;
        else {
            $c2 = $c3.classObject;
            if ($c2 === null) {
                $c2 = new jl_Class;
                jl_Object__init_0($c2);
                $c2.$platformClass = $c3;
                var$9 = $c2;
                $c3.classObject = var$9;
            }
        }
        var$10 = $c2.$platformClass.$meta.item;
        if (var$10 === null)
            $c3 = null;
        else {
            $c3 = var$10.classObject;
            if ($c3 === null) {
                $c3 = new jl_Class;
                jl_Object__init_0($c3);
                $c3.$platformClass = var$10;
                $c2 = $c3;
                var$10.classObject = $c2;
            }
        }
        var$7 = var$6 - var$8 | 0;
        if ($c3 === null) {
            $c1 = new jl_NullPointerException;
            jl_Exception__init_0($c1);
            $rt_throw($c1);
        }
        if ($c3 === $rt_cls($rt_voidcls())) {
            $c1 = new jl_IllegalArgumentException;
            jl_Exception__init_0($c1);
            $rt_throw($c1);
        }
        if (var$7 < 0) {
            $c1 = new jl_NegativeArraySizeException;
            jl_Exception__init_0($c1);
            $rt_throw($c1);
        }
        var$9 = jlr_Array_newInstanceImpl($c3.$platformClass, var$7);
        var$7 = var$8;
        while (var$7 < var$6) {
            var$9.data[var$7 - var$8 | 0] = var$4[var$7];
            var$7 = var$7 + 1 | 0;
        }
        $c1.$stackTrace = var$9.$clone();
        $rt_throw($c1);
    }
    function igtg_Triplet_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = $this.$c10;
        var$2 = $this.$c20;
        var$3 = $this.$c30;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(662));
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$1 === null ? $rt_s(1) : igtg_Circle_toString(var$1));
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(663));
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$2 === null ? $rt_s(1) : igtg_Circle_toString(var$2));
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(664));
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$3 === null ? $rt_s(1) : igtg_Circle_toString(var$3));
        var$5 = var$4.$length;
        jl_AbstractStringBuilder_insertSpace(var$4, var$5, var$5 + 1 | 0);
        var$6 = var$4.$buffer;
        var$6.data[var$5] = 41;
        var$1 = new jl_String;
        var$5 = var$4.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$5);
        var$1.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$5);
        return var$1;
    }
    function igtg_Triplet_hashCode($this) {
        return (((igtg_Circle_hashCode($this.$c10) * 31 | 0) + igtg_Circle_hashCode($this.$c20) | 0) * 31 | 0) + igtg_Circle_hashCode($this.$c30) | 0;
    }
    function igtg_Triplet_equals($this, $other) {
        var var$2, var$3;
        if ($this === $other)
            return 1;
        if (!($other instanceof igtg_Triplet))
            return 0;
        $other = $other;
        var$2 = $this.$c10;
        var$3 = $other.$c10;
        if (!(var$2 !== null ? igtg_Circle_equals(var$2, var$3) : var$3 !== null ? 0 : 1))
            return 0;
        var$2 = $this.$c20;
        var$3 = $other.$c20;
        if (!(var$2 !== null ? igtg_Circle_equals(var$2, var$3) : var$3 !== null ? 0 : 1))
            return 0;
        var$2 = $this.$c30;
        $other = $other.$c30;
        if (var$2 !== null ? igtg_Circle_equals(var$2, $other) : $other !== null ? 0 : 1)
            return 1;
        return 0;
    }
    var k_UninitializedPropertyAccessException = $rt_classWithoutFields(jl_RuntimeException);
    var igtg_ColorRandomizerKt = $rt_classWithoutFields();
    var igtg_ColorRandomizerKt_colorArray = null;
    function igtg_ColorRandomizerKt_$callClinit() {
        igtg_ColorRandomizerKt_$callClinit = $rt_eraseClinit(igtg_ColorRandomizerKt);
        igtg_ColorRandomizerKt__clinit_();
    }
    function igtg_ColorRandomizerKt_access$getColorArray$p() {
        igtg_ColorRandomizerKt_$callClinit();
        return igtg_ColorRandomizerKt_colorArray;
    }
    function igtg_ColorRandomizerKt__clinit_() {
        var var$1, var$2;
        var$1 = $rt_createArray(cbgg_Color, 31);
        var$2 = var$1.data;
        cbgg_Color_$callClinit();
        var$2[0] = cbgg_Color_BLUE;
        var$2[1] = cbgg_Color_CYAN;
        var$2[2] = cbgg_Color_MAGENTA;
        var$2[3] = cbgg_Color_VIOLET;
        var$2[4] = cbgg_Color_PURPLE;
        var$2[5] = cbgg_Color_PINK;
        var$2[6] = cbgg_Color_SALMON;
        var$2[7] = cbgg_Color_RED;
        var$2[8] = cbgg_Color_SCARLET;
        var$2[9] = cbgg_Color_CORAL;
        var$2[10] = cbgg_Color_FIREBRICK;
        var$2[11] = cbgg_Color_MAROON;
        var$2[12] = cbgg_Color_SKY;
        var$2[13] = cbgg_Color_TEAL;
        var$2[14] = cbgg_Color_NAVY;
        var$2[15] = cbgg_Color_SLATE;
        var$2[16] = cbgg_Color_ROYAL;
        var$2[17] = cbgg_Color_FOREST;
        var$2[18] = cbgg_Color_LIME;
        var$2[19] = cbgg_Color_CHARTREUSE;
        var$2[20] = cbgg_Color_GREEN;
        var$2[21] = cbgg_Color_OLIVE;
        var$2[22] = cbgg_Color_GRAY;
        var$2[23] = cbgg_Color_LIGHT_GRAY;
        var$2[24] = cbgg_Color_WHITE;
        var$2[25] = cbgg_Color_BROWN;
        var$2[26] = cbgg_Color_TAN;
        var$2[27] = cbgg_Color_YELLOW;
        var$2[28] = cbgg_Color_GOLD;
        var$2[29] = cbgg_Color_GOLDENROD;
        var$2[30] = cbgg_Color_ORANGE;
        igtg_ColorRandomizerKt_colorArray = var$1;
    }
    function igtg_Complex() {
        var a = this; jl_Object.call(a);
        a.$real = 0.0;
        a.$img = 0.0;
    }
    var igtg_Complex_Companion = null;
    var igtg_Complex_ZERO = null;
    var igtg_Complex_ONE = null;
    function igtg_Complex_$callClinit() {
        igtg_Complex_$callClinit = $rt_eraseClinit(igtg_Complex);
        igtg_Complex__clinit_();
    }
    function igtg_Complex__init_(var_0, var_1) {
        var var_2 = new igtg_Complex();
        igtg_Complex__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function igtg_Complex__init_1(var_0, var_1) {
        var var_2 = new igtg_Complex();
        igtg_Complex__init_2(var_2, var_0, var_1);
        return var_2;
    }
    function igtg_Complex__init_0($this, $real, $img) {
        igtg_Complex_$callClinit();
        $this.$real = $real;
        $this.$img = $img;
    }
    function igtg_Complex_getReal($this) {
        return $this.$real;
    }
    function igtg_Complex_getImg($this) {
        return $this.$img;
    }
    function igtg_Complex__init_2($this, $real, $img) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        igtg_Complex_$callClinit();
        if ($real !== null) {
            if ($img !== null) {
                igtg_Complex__init_0($this, jl_Double_floatValue($real), jl_Double_floatValue($img));
                return;
            }
            $real = new jl_NullPointerException;
            $img = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(665));
            $real.$suppressionEnabled = 1;
            $real.$writableStackTrace = 1;
            $real.$message = $img;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            var$3 = $rt_cls(kji_Intrinsics).$name;
            var$4 = $real.$stackTrace;
            var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$4 = var$5.data;
            var$6 = var$4.length;
            var$7 = (-1);
            var$8 = 0;
            while (var$8 < var$6) {
                if (jl_String_equals(var$3, jl_StackTraceElement_getClassName(var$4[var$8])))
                    var$7 = var$8;
                var$8 = var$8 + 1 | 0;
            }
            var$8 = var$7 + 1 | 0;
            var$3 = var$5.constructor;
            if (var$3 === null)
                $img = null;
            else {
                $img = var$3.classObject;
                if ($img === null) {
                    $img = new jl_Class;
                    jl_Object__init_0($img);
                    $img.$platformClass = var$3;
                    var$9 = $img;
                    var$3.classObject = var$9;
                }
            }
            var$10 = $img.$platformClass.$meta.item;
            if (var$10 === null)
                var$3 = null;
            else {
                var$3 = var$10.classObject;
                if (var$3 === null) {
                    var$3 = new jl_Class;
                    jl_Object__init_0(var$3);
                    var$3.$platformClass = var$10;
                    $img = var$3;
                    var$10.classObject = $img;
                }
            }
            var$7 = var$6 - var$8 | 0;
            if (var$3 === null) {
                $real = new jl_NullPointerException;
                jl_Exception__init_0($real);
                $rt_throw($real);
            }
            if (var$3 === $rt_cls($rt_voidcls())) {
                $real = new jl_IllegalArgumentException;
                jl_RuntimeException__init_1($real);
                $rt_throw($real);
            }
            if (var$7 < 0)
                $rt_throw(jl_NegativeArraySizeException__init_());
            var$9 = jlr_Array_newInstanceImpl(jl_Class_getPlatformClass(var$3), var$7);
            var$7 = var$8;
            while (var$7 < var$6) {
                var$9.data[var$7 - var$8 | 0] = var$4[var$7];
                var$7 = var$7 + 1 | 0;
            }
            jl_Throwable_setStackTrace($real, var$9);
            $rt_throw($real);
        }
        $real = new jl_NullPointerException;
        $img = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(666));
        $real.$suppressionEnabled = 1;
        $real.$writableStackTrace = 1;
        $real.$message = $img;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$3 = $rt_cls(kji_Intrinsics).$name;
        var$4 = $real.$stackTrace;
        var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$4 = var$5.data;
        var$6 = var$4.length;
        var$7 = (-1);
        var$8 = 0;
        while (var$8 < var$6) {
            if (jl_String_equals(var$3, jl_StackTraceElement_getClassName(var$4[var$8])))
                var$7 = var$8;
            var$8 = var$8 + 1 | 0;
        }
        var$8 = var$7 + 1 | 0;
        var$3 = var$5.constructor;
        if (var$3 === null)
            $img = null;
        else {
            $img = var$3.classObject;
            if ($img === null) {
                $img = new jl_Class;
                jl_Object__init_0($img);
                $img.$platformClass = var$3;
                var$9 = $img;
                var$3.classObject = var$9;
            }
        }
        var$10 = $img.$platformClass.$meta.item;
        if (var$10 === null)
            var$3 = null;
        else {
            var$3 = var$10.classObject;
            if (var$3 === null) {
                var$3 = new jl_Class;
                jl_Object__init_0(var$3);
                var$3.$platformClass = var$10;
                $img = var$3;
                var$10.classObject = $img;
            }
        }
        var$7 = var$6 - var$8 | 0;
        if (var$3 === null) {
            $real = new jl_NullPointerException;
            jl_Exception__init_0($real);
            $rt_throw($real);
        }
        if (var$3 === $rt_cls($rt_voidcls())) {
            $real = new jl_IllegalArgumentException;
            jl_Exception__init_0($real);
            $rt_throw($real);
        }
        if (var$7 < 0) {
            $real = new jl_NegativeArraySizeException;
            jl_Exception__init_0($real);
            $rt_throw($real);
        }
        var$9 = jlr_Array_newInstanceImpl(var$3.$platformClass, var$7);
        var$7 = var$8;
        while (var$7 < var$6) {
            var$9.data[var$7 - var$8 | 0] = var$4[var$7];
            var$7 = var$7 + 1 | 0;
        }
        $real.$stackTrace = var$9.$clone();
        $rt_throw($real);
    }
    function igtg_Complex_equals($this, $other) {
        var var$2, var$3;
        a: {
            if ($other instanceof igtg_Complex) {
                var$2 = $this.$real;
                $other = $other;
                if ((var$2 !== $other.$real ? 0 : 1) && ($this.$img !== $other.$img ? 0 : 1)) {
                    var$3 = 1;
                    break a;
                }
            }
            var$3 = 0;
        }
        return var$3;
    }
    function igtg_Complex_plus($this, $c) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        if ($c !== null) {
            var$2 = new igtg_Complex;
            var$3 = $this.$real + $c.$real;
            var$4 = $this.$img + $c.$img;
            igtg_Complex_$callClinit();
            var$2.$real = var$3;
            var$2.$img = var$4;
            return var$2;
        }
        $c = new jl_NullPointerException;
        var$2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(667));
        $c.$suppressionEnabled = 1;
        $c.$writableStackTrace = 1;
        $c.$message = var$2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$2 = $rt_cls(kji_Intrinsics).$name;
        var$5 = $c.$stackTrace;
        var$6 = var$5 !== null ? var$5.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$5 = var$6.data;
        var$7 = var$5.length;
        var$8 = (-1);
        var$9 = 0;
        while (var$9 < var$7) {
            if (jl_String_equals(var$2, jl_StackTraceElement_getClassName(var$5[var$9])))
                var$8 = var$9;
            var$9 = var$9 + 1 | 0;
        }
        var$9 = var$8 + 1 | 0;
        var$10 = var$6.constructor;
        if (var$10 === null)
            var$11 = null;
        else {
            var$11 = var$10.classObject;
            if (var$11 === null) {
                var$11 = new jl_Class;
                jl_Object__init_0(var$11);
                var$11.$platformClass = var$10;
                var$2 = var$11;
                var$10.classObject = var$2;
            }
        }
        var$11 = var$11.$platformClass.$meta.item;
        if (var$11 === null)
            var$12 = null;
        else {
            var$12 = var$11.classObject;
            if (var$12 === null) {
                var$12 = new jl_Class;
                jl_Object__init_0(var$12);
                var$12.$platformClass = var$11;
                var$2 = var$12;
                var$11.classObject = var$2;
            }
        }
        var$8 = var$7 - var$9 | 0;
        if (var$12 === null) {
            $c = new jl_NullPointerException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$12 === $rt_cls($rt_voidcls())) {
            $c = new jl_IllegalArgumentException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$8 < 0) {
            $c = new jl_NegativeArraySizeException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        var$10 = jlr_Array_newInstanceImpl(var$12.$platformClass, var$8);
        var$8 = var$9;
        while (var$8 < var$7) {
            var$10.data[var$8 - var$9 | 0] = var$5[var$8];
            var$8 = var$8 + 1 | 0;
        }
        $c.$stackTrace = var$10.$clone();
        $rt_throw($c);
    }
    function igtg_Complex_minus($this, $c) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        if ($c !== null) {
            var$2 = new igtg_Complex;
            var$3 = $this.$real - $c.$real;
            var$4 = $this.$img - $c.$img;
            igtg_Complex_$callClinit();
            var$2.$real = var$3;
            var$2.$img = var$4;
            return var$2;
        }
        $c = new jl_NullPointerException;
        var$2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(667));
        $c.$suppressionEnabled = 1;
        $c.$writableStackTrace = 1;
        $c.$message = var$2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$2 = $rt_cls(kji_Intrinsics).$name;
        var$5 = $c.$stackTrace;
        var$6 = var$5 !== null ? var$5.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$5 = var$6.data;
        var$7 = var$5.length;
        var$8 = (-1);
        var$9 = 0;
        while (var$9 < var$7) {
            if (jl_String_equals(var$2, jl_StackTraceElement_getClassName(var$5[var$9])))
                var$8 = var$9;
            var$9 = var$9 + 1 | 0;
        }
        var$9 = var$8 + 1 | 0;
        var$10 = var$6.constructor;
        if (var$10 === null)
            var$11 = null;
        else {
            var$11 = var$10.classObject;
            if (var$11 === null) {
                var$11 = new jl_Class;
                jl_Object__init_0(var$11);
                var$11.$platformClass = var$10;
                var$2 = var$11;
                var$10.classObject = var$2;
            }
        }
        var$11 = var$11.$platformClass.$meta.item;
        if (var$11 === null)
            var$12 = null;
        else {
            var$12 = var$11.classObject;
            if (var$12 === null) {
                var$12 = new jl_Class;
                jl_Object__init_0(var$12);
                var$12.$platformClass = var$11;
                var$2 = var$12;
                var$11.classObject = var$2;
            }
        }
        var$8 = var$7 - var$9 | 0;
        if (var$12 === null) {
            $c = new jl_NullPointerException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$12 === $rt_cls($rt_voidcls())) {
            $c = new jl_IllegalArgumentException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$8 < 0) {
            $c = new jl_NegativeArraySizeException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        var$10 = jlr_Array_newInstanceImpl(var$12.$platformClass, var$8);
        var$8 = var$9;
        while (var$8 < var$7) {
            var$10.data[var$8 - var$9 | 0] = var$5[var$8];
            var$8 = var$8 + 1 | 0;
        }
        $c.$stackTrace = var$10.$clone();
        $rt_throw($c);
    }
    function igtg_Complex_times($this, $c) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, var$14, var$15;
        if ($c !== null) {
            var$2 = new igtg_Complex;
            var$3 = $this.$real;
            var$4 = $c.$real;
            var$5 = var$3 * var$4;
            var$6 = $this.$img;
            var$7 = $c.$img;
            var$5 = var$5 - var$6 * var$7;
            var$3 = var$3 * var$7 + var$6 * var$4;
            igtg_Complex_$callClinit();
            var$2.$real = var$5;
            var$2.$img = var$3;
            return var$2;
        }
        $c = new jl_NullPointerException;
        var$2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(667));
        $c.$suppressionEnabled = 1;
        $c.$writableStackTrace = 1;
        $c.$message = var$2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$2 = $rt_cls(kji_Intrinsics).$name;
        var$8 = $c.$stackTrace;
        var$9 = var$8 !== null ? var$8.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$8 = var$9.data;
        var$10 = var$8.length;
        var$11 = (-1);
        var$12 = 0;
        while (var$12 < var$10) {
            if (jl_String_equals(var$2, jl_StackTraceElement_getClassName(var$8[var$12])))
                var$11 = var$12;
            var$12 = var$12 + 1 | 0;
        }
        var$12 = var$11 + 1 | 0;
        var$13 = var$9.constructor;
        if (var$13 === null)
            var$14 = null;
        else {
            var$14 = var$13.classObject;
            if (var$14 === null) {
                var$14 = new jl_Class;
                jl_Object__init_0(var$14);
                var$14.$platformClass = var$13;
                var$15 = var$14;
                var$13.classObject = var$15;
            }
        }
        var$15 = var$14.$platformClass.$meta.item;
        if (var$15 === null)
            var$14 = null;
        else {
            var$14 = var$15.classObject;
            if (var$14 === null) {
                var$14 = new jl_Class;
                jl_Object__init_0(var$14);
                var$14.$platformClass = var$15;
                var$2 = var$14;
                var$15.classObject = var$2;
            }
        }
        var$11 = var$10 - var$12 | 0;
        if (var$14 === null) {
            $c = new jl_NullPointerException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$14 === $rt_cls($rt_voidcls())) {
            $c = new jl_IllegalArgumentException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$11 < 0) {
            $c = new jl_NegativeArraySizeException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        var$13 = jlr_Array_newInstanceImpl(var$14.$platformClass, var$11);
        var$11 = var$12;
        while (var$11 < var$10) {
            var$13.data[var$11 - var$12 | 0] = var$8[var$11];
            var$11 = var$11 + 1 | 0;
        }
        $c.$stackTrace = var$13.$clone();
        $rt_throw($c);
    }
    function igtg_Complex_times0($this, $n) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        if ($n !== null) {
            var$2 = new igtg_Complex;
            var$3 = $n.$floatValue() * $this.$real;
            var$4 = $n.$floatValue() * $this.$img;
            igtg_Complex_$callClinit();
            var$2.$real = var$3;
            var$2.$img = var$4;
            return var$2;
        }
        $n = new jl_NullPointerException;
        var$2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(668));
        $n.$suppressionEnabled = 1;
        $n.$writableStackTrace = 1;
        $n.$message = var$2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$2 = $rt_cls(kji_Intrinsics).$name;
        var$5 = $n.$stackTrace;
        var$6 = var$5 !== null ? var$5.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$5 = var$6.data;
        var$7 = var$5.length;
        var$8 = (-1);
        var$9 = 0;
        while (var$9 < var$7) {
            if (jl_String_equals(var$2, jl_StackTraceElement_getClassName(var$5[var$9])))
                var$8 = var$9;
            var$9 = var$9 + 1 | 0;
        }
        var$9 = var$8 + 1 | 0;
        var$10 = var$6.constructor;
        if (var$10 === null)
            var$11 = null;
        else {
            var$11 = var$10.classObject;
            if (var$11 === null) {
                var$11 = new jl_Class;
                jl_Object__init_0(var$11);
                var$11.$platformClass = var$10;
                var$2 = var$11;
                var$10.classObject = var$2;
            }
        }
        var$11 = var$11.$platformClass.$meta.item;
        if (var$11 === null)
            var$12 = null;
        else {
            var$12 = var$11.classObject;
            if (var$12 === null) {
                var$12 = new jl_Class;
                jl_Object__init_0(var$12);
                var$12.$platformClass = var$11;
                var$2 = var$12;
                var$11.classObject = var$2;
            }
        }
        var$8 = var$7 - var$9 | 0;
        if (var$12 === null) {
            $n = new jl_NullPointerException;
            jl_Exception__init_0($n);
            $rt_throw($n);
        }
        if (var$12 === $rt_cls($rt_voidcls())) {
            $n = new jl_IllegalArgumentException;
            jl_Exception__init_0($n);
            $rt_throw($n);
        }
        if (var$8 < 0) {
            $n = new jl_NegativeArraySizeException;
            jl_Exception__init_0($n);
            $rt_throw($n);
        }
        var$10 = jlr_Array_newInstanceImpl(var$12.$platformClass, var$8);
        var$8 = var$9;
        while (var$8 < var$7) {
            var$10.data[var$8 - var$9 | 0] = var$5[var$8];
            var$8 = var$8 + 1 | 0;
        }
        $n.$stackTrace = var$10.$clone();
        $rt_throw($n);
    }
    function igtg_Complex_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        if (jl_Math_absImpl($this.$img) >= 1.0E-15 ? 0 : 1) {
            var$1 = $this.$real;
            jl_String_$callClinit();
            var$2 = new jl_StringBuilder;
            var$2.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert1(var$2, var$2.$length, var$1);
            var$3 = new jl_String;
            var$4 = var$2.$buffer;
            var$5 = var$2.$length;
            var$6 = $rt_createCharArray(var$5);
            var$3.$characters = var$6;
            jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        } else if (jl_Math_absImpl($this.$real) >= 1.0E-15 ? 0 : 1) {
            var$1 = $this.$img;
            var$2 = new jl_StringBuilder;
            var$2.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert1(var$2, var$2.$length, var$1);
            var$5 = var$2.$length;
            jl_AbstractStringBuilder_insertSpace(var$2, var$5, var$5 + 1 | 0);
            var$6 = var$2.$buffer;
            var$6.data[var$5] = 105;
            var$3 = new jl_String;
            var$5 = var$2.$length;
            jl_String_$callClinit();
            var$4 = $rt_createCharArray(var$5);
            var$3.$characters = var$4;
            jl_System_fastArraycopy(var$6, 0, var$4, 0, var$5);
        } else {
            var$1 = $this.$img;
            if (var$1 >= 0.0) {
                var$7 = $this.$real;
                var$2 = new jl_StringBuilder;
                var$2.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert1(var$2, var$2.$length, var$7);
                var$5 = var$2.$length;
                jl_AbstractStringBuilder_insertSpace(var$2, var$5, var$5 + 1 | 0);
                var$2.$buffer.data[var$5] = 43;
                jl_AbstractStringBuilder_insert1(var$2, var$2.$length, var$1);
                var$5 = var$2.$length;
                jl_AbstractStringBuilder_insertSpace(var$2, var$5, var$5 + 1 | 0);
                var$4 = var$2.$buffer;
                var$4.data[var$5] = 105;
                var$3 = new jl_String;
                var$5 = var$2.$length;
                jl_String_$callClinit();
                var$6 = $rt_createCharArray(var$5);
                var$3.$characters = var$6;
                jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
            } else {
                var$7 = $this.$real;
                var$1 =  -var$1;
                var$2 = new jl_StringBuilder;
                var$2.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert1(var$2, var$2.$length, var$7);
                var$5 = var$2.$length;
                jl_AbstractStringBuilder_insertSpace(var$2, var$5, var$5 + 1 | 0);
                var$2.$buffer.data[var$5] = 45;
                jl_AbstractStringBuilder_insert1(var$2, var$2.$length, var$1);
                var$5 = var$2.$length;
                jl_AbstractStringBuilder_insertSpace(var$2, var$5, var$5 + 1 | 0);
                var$4 = var$2.$buffer;
                var$4.data[var$5] = 105;
                var$3 = new jl_String;
                var$5 = var$2.$length;
                jl_String_$callClinit();
                var$6 = $rt_createCharArray(var$5);
                var$3.$characters = var$6;
                jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
            }
        }
        return var$3;
    }
    function igtg_Complex__clinit_() {
        var var$1, var$2, var$3;
        igtg_Complex_Companion = new igtg_Complex$Companion;
        var$1 = new igtg_Complex;
        var$2 = new jl_Double;
        var$2.$value7 = 0.0;
        var$3 = new jl_Double;
        var$3.$value7 = 0.0;
        igtg_Complex_$callClinit();
        igtg_Complex__init_0(var$1, jl_Double_floatValue(var$2), jl_Double_floatValue(var$3));
        igtg_Complex_ZERO = var$1;
        igtg_Complex_ONE = igtg_Complex__init_1(jl_Double_valueOf(1.0), jl_Double_valueOf(0.0));
    }
    var igtg_Circle$Companion = $rt_classWithoutFields();
    function cbggg_ShapeRenderer() {
        var a = this; jl_Object.call(a);
        a.$renderer = null;
        a.$matrixDirty = 0;
        a.$projectionMatrix0 = null;
        a.$transformMatrix0 = null;
        a.$combinedMatrix0 = null;
        a.$tmp0 = null;
        a.$color3 = null;
        a.$shapeType = null;
        a.$autoShapeType = 0;
        a.$defaultRectLineWidth = 0.0;
    }
    function cbggg_ShapeRenderer__init_(var_0, var_1) {
        var var_2 = new cbggg_ShapeRenderer();
        cbggg_ShapeRenderer__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cbggg_ShapeRenderer__init_0($this, $maxVertices, $defaultShader) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        $this.$matrixDirty = 0;
        $this.$projectionMatrix0 = cbgm_Matrix4__init_();
        $this.$transformMatrix0 = cbgm_Matrix4__init_();
        $this.$combinedMatrix0 = cbgm_Matrix4__init_();
        $this.$tmp0 = new cbgm_Vector2;
        var$3 = new cbgg_Color;
        cbgg_Color_$callClinit();
        var$3.$r = 1.0;
        var$3.$g = 1.0;
        var$3.$b = 1.0;
        var$3.$a = 1.0;
        cbgg_Color_clamp(var$3);
        $this.$color3 = var$3;
        $this.$defaultRectLineWidth = 0.75;
        if ($defaultShader !== null)
            $this.$renderer = cbggg_ImmediateModeRenderer20__init_($maxVertices, 0, 1, 0, $defaultShader);
        else {
            $defaultShader = new cbggg_ImmediateModeRenderer20;
            var$4 = cbggg_ShaderProgram__init_(cbggg_ImmediateModeRenderer20_createVertexShader(0, 1, 0), cbggg_ImmediateModeRenderer20_createFragmentShader(0, 1, 0));
            if (!var$4.$isCompiled) {
                $defaultShader = new cbgu_GdxRuntimeException;
                var$3 = new jl_StringBuilder;
                var$3.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(500));
                if (!var$4.$isCompiled)
                    var$5 = var$4.$log;
                else {
                    var$5 = cbg_Gdx_gl20.$glGetProgramInfoLog(var$4.$program);
                    var$4.$log = var$5;
                }
                jl_AbstractStringBuilder_insert(var$3, var$3.$length, var$5);
                var$5 = new jl_String;
                var$6 = var$3.$buffer;
                var$7 = var$3.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray(var$7);
                var$5.$characters = var$8;
                jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
                $defaultShader.$suppressionEnabled = 1;
                $defaultShader.$writableStackTrace = 1;
                $defaultShader.$message = var$5;
                $rt_throw($defaultShader);
            }
            cbggg_ImmediateModeRenderer20__init_0($defaultShader, $maxVertices, 0, 1, 0, var$4);
            $defaultShader.$ownsShader = 1;
            $this.$renderer = $defaultShader;
        }
        cbgm_Matrix4_setToOrtho($this.$projectionMatrix0, 0.0, 0.0 + cbg_Gdx_graphics.$canvas0.width, 0.0, 0.0 + cbg_Gdx_graphics.$canvas0.height, 0.0, 1.0);
        $this.$matrixDirty = 1;
    }
    function cbggg_ShapeRenderer_begin($this, $type) {
        var var$2, var$3;
        if ($this.$shapeType !== null) {
            $type = new jl_IllegalStateException;
            $type.$suppressionEnabled = 1;
            $type.$writableStackTrace = 1;
            $type.$message = $rt_s(669);
            $rt_throw($type);
        }
        $this.$shapeType = $type;
        if ($this.$matrixDirty) {
            cbgm_Matrix4_set($this.$combinedMatrix0, $this.$projectionMatrix0.$val);
            cbgm_Matrix4_matrix4_mul($this.$combinedMatrix0.$val, $this.$transformMatrix0.$val);
            $this.$matrixDirty = 0;
        }
        $type = $this.$renderer;
        var$2 = $this.$combinedMatrix0;
        var$3 = $this.$shapeType.$glType;
        cbgm_Matrix4_set($type.$projModelView, var$2.$val);
        $type.$primitiveType = var$3;
    }
    function cbggg_ShapeRenderer_circle($this, $x, $y, $radius, $segments) {
        var var$5, $colorBits, $angle, var$8, $cos, $sin, $cy, var$12, $i, var$14, var$15, var$16, $i_0, var$18;
        if ($segments <= 0) {
            var$5 = new jl_IllegalArgumentException;
            var$5.$suppressionEnabled = 1;
            var$5.$writableStackTrace = 1;
            var$5.$message = $rt_s(670);
            $rt_throw(var$5);
        }
        $colorBits = cbgg_Color_toFloatBits($this.$color3);
        $angle = 6.2831854820251465 / $segments;
        cbgm_MathUtils_$callClinit();
        var$8 = cbgm_MathUtils$Sin_table.data;
        $cos = var$8[(($angle + 1.5707963705062866) * 2607.594482421875 | 0) & 16383];
        $sin = var$8[($angle * 2607.594482421875 | 0) & 16383];
        $cy = 0.0;
        var$5 = $this.$shapeType;
        cbggg_ShapeRenderer$ShapeType_$callClinit();
        var$12 = cbggg_ShapeRenderer$ShapeType_Line;
        if (var$5 === var$12) {
            cbggg_ShapeRenderer_check($this, var$12, cbggg_ShapeRenderer$ShapeType_Filled, ($segments * 2 | 0) + 2 | 0);
            $i = 0;
            var$14 = $radius;
            while ($i < $segments) {
                var$5 = $this.$renderer;
                var$5.$vertices1.data[var$5.$vertexIdx + var$5.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$5, $x + var$14, $y + $cy, 0.0);
                var$15 = $cos * var$14 - $sin * $cy;
                $cy = $sin * var$14 + $cos * $cy;
                var$5 = $this.$renderer;
                var$5.$vertices1.data[var$5.$vertexIdx + var$5.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$5, $x + var$15, $y + $cy, 0.0);
                $i = $i + 1 | 0;
                var$14 = var$15;
            }
            var$5 = $this.$renderer;
            var$5.$vertices1.data[var$5.$vertexIdx + var$5.$colorOffset | 0] = $colorBits;
            cbggg_ImmediateModeRenderer20_vertex(var$5, $x + var$14, $y + $cy, 0.0);
        } else {
            cbggg_ShapeRenderer_check($this, var$12, cbggg_ShapeRenderer$ShapeType_Filled, ($segments * 3 | 0) + 3 | 0);
            var$16 = $segments + (-1) | 0;
            $i_0 = 0;
            var$18 = $radius;
            while ($i_0 < var$16) {
                var$5 = $this.$renderer;
                var$5.$vertices1.data[var$5.$vertexIdx + var$5.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$5, $x, $y, 0.0);
                var$5 = $this.$renderer;
                var$5.$vertices1.data[var$5.$vertexIdx + var$5.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$5, $x + var$18, $y + $cy, 0.0);
                var$15 = $cos * var$18 - $sin * $cy;
                $cy = $sin * var$18 + $cos * $cy;
                var$5 = $this.$renderer;
                var$5.$vertices1.data[var$5.$vertexIdx + var$5.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$5, $x + var$15, $y + $cy, 0.0);
                $i_0 = $i_0 + 1 | 0;
                var$18 = var$15;
            }
            var$5 = $this.$renderer;
            var$5.$vertices1.data[var$5.$vertexIdx + var$5.$colorOffset | 0] = $colorBits;
            cbggg_ImmediateModeRenderer20_vertex(var$5, $x, $y, 0.0);
            var$5 = $this.$renderer;
            var$5.$vertices1.data[var$5.$vertexIdx + var$5.$colorOffset | 0] = $colorBits;
            cbggg_ImmediateModeRenderer20_vertex(var$5, $x + var$18, $y + $cy, 0.0);
        }
        var$5 = $this.$renderer;
        var$5.$vertices1.data[var$5.$vertexIdx + var$5.$colorOffset | 0] = $colorBits;
        cbggg_ImmediateModeRenderer20_vertex(var$5, $x + $radius, $y + 0.0, 0.0);
    }
    function cbggg_ShapeRenderer_cone($this, $x, $y, $z, $radius, $height, $segments) {
        var var$7, $colorBits, $angle, var$10, $cos, $sin, $cy, $i, var$15, var$16, var$17, var$18, $i_0, var$20, var$21;
        if ($segments <= 0) {
            var$7 = new jl_IllegalArgumentException;
            var$7.$suppressionEnabled = 1;
            var$7.$writableStackTrace = 1;
            var$7.$message = $rt_s(670);
            $rt_throw(var$7);
        }
        cbggg_ShapeRenderer$ShapeType_$callClinit();
        cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Line, cbggg_ShapeRenderer$ShapeType_Filled, ($segments * 4 | 0) + 2 | 0);
        $colorBits = cbgg_Color_toFloatBits($this.$color3);
        $angle = 6.2831854820251465 / $segments;
        cbgm_MathUtils_$callClinit();
        var$10 = cbgm_MathUtils$Sin_table.data;
        $cos = var$10[(($angle + 1.5707963705062866) * 2607.594482421875 | 0) & 16383];
        $sin = var$10[($angle * 2607.594482421875 | 0) & 16383];
        $cy = 0.0;
        if ($this.$shapeType === cbggg_ShapeRenderer$ShapeType_Line) {
            $i = 0;
            var$15 = $z + $height;
            $angle = $radius;
            while ($i < $segments) {
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                var$16 = $x + $angle;
                var$17 = $y + $cy;
                cbggg_ImmediateModeRenderer20_vertex(var$7, var$16, var$17, $z);
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$7, $x, $y, var$15);
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$7, var$16, var$17, $z);
                var$16 = $cos * $angle - $sin * $cy;
                $cy = $sin * $angle + $cos * $cy;
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$7, $x + var$16, $y + $cy, $z);
                $i = $i + 1 | 0;
                $angle = var$16;
            }
            var$7 = $this.$renderer;
            var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
            cbggg_ImmediateModeRenderer20_vertex(var$7, $x + $angle, $y + $cy, $z);
        } else {
            var$18 = $segments + (-1) | 0;
            $i_0 = 0;
            var$20 = $z + $height;
            $angle = $radius;
            while ($i_0 < var$18) {
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$7, $x, $y, $z);
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                var$16 = $x + $angle;
                var$17 = $y + $cy;
                cbggg_ImmediateModeRenderer20_vertex(var$7, var$16, var$17, $z);
                var$15 = $cos * $angle - $sin * $cy;
                $cy = $sin * $angle + $cos * $cy;
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                $angle = $x + var$15;
                var$21 = $y + $cy;
                cbggg_ImmediateModeRenderer20_vertex(var$7, $angle, var$21, $z);
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$7, var$16, var$17, $z);
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$7, $angle, var$21, $z);
                var$7 = $this.$renderer;
                var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
                cbggg_ImmediateModeRenderer20_vertex(var$7, $x, $y, var$20);
                $i_0 = $i_0 + 1 | 0;
                $angle = var$15;
            }
            var$7 = $this.$renderer;
            var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
            cbggg_ImmediateModeRenderer20_vertex(var$7, $x, $y, $z);
            var$7 = $this.$renderer;
            var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
            cbggg_ImmediateModeRenderer20_vertex(var$7, $x + $angle, $y + $cy, $z);
        }
        var$7 = $this.$renderer;
        var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
        $radius = $x + $radius;
        $sin = $y + 0.0;
        cbggg_ImmediateModeRenderer20_vertex(var$7, $radius, $sin, $z);
        if ($this.$shapeType !== cbggg_ShapeRenderer$ShapeType_Line) {
            var$7 = $this.$renderer;
            var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
            cbggg_ImmediateModeRenderer20_vertex(var$7, $x + $angle, $y + $cy, $z);
            var$7 = $this.$renderer;
            var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
            cbggg_ImmediateModeRenderer20_vertex(var$7, $radius, $sin, $z);
            var$7 = $this.$renderer;
            var$7.$vertices1.data[var$7.$vertexIdx + var$7.$colorOffset | 0] = $colorBits;
            cbggg_ImmediateModeRenderer20_vertex(var$7, $x, $y, $z + $height);
        }
    }
    function cbggg_ShapeRenderer_check($this, $preferred, $other, $newVertices) {
        var $type, var$5, var$6, var$7, var$8;
        $type = $this.$shapeType;
        if ($type === null) {
            $preferred = new jl_IllegalStateException;
            $preferred.$suppressionEnabled = 1;
            $preferred.$writableStackTrace = 1;
            $preferred.$message = $rt_s(671);
            $rt_throw($preferred);
        }
        if (!($type !== $preferred && $type !== $other)) {
            if ($this.$matrixDirty) {
                cbggg_ImmediateModeRenderer20_flush($this.$renderer);
                $this.$shapeType = null;
                cbggg_ShapeRenderer_begin($this, $type);
            } else {
                $preferred = $this.$renderer;
                if (($preferred.$maxVertices - $preferred.$numVertices | 0) < $newVertices) {
                    cbggg_ImmediateModeRenderer20_flush($preferred);
                    $this.$shapeType = null;
                    cbggg_ShapeRenderer_begin($this, $type);
                }
            }
        } else {
            if (!$this.$autoShapeType) {
                if ($other === null) {
                    $other = new jl_IllegalStateException;
                    $type = new jl_StringBuilder;
                    $type.$buffer = $rt_createCharArray(16);
                    jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(672));
                    jl_AbstractStringBuilder_insert($type, $type.$length, $preferred === null ? $rt_s(1) : $preferred.$name0);
                    jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(673));
                    $preferred = new jl_String;
                    var$5 = $type.$buffer;
                    var$6 = $type.$length;
                    jl_String_$callClinit();
                    var$7 = $rt_createCharArray(var$6);
                    $preferred.$characters = var$7;
                    jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
                    $other.$suppressionEnabled = 1;
                    $other.$writableStackTrace = 1;
                    $other.$message = $preferred;
                    $rt_throw($other);
                }
                var$8 = new jl_IllegalStateException;
                $type = new jl_StringBuilder;
                $type.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(672));
                jl_AbstractStringBuilder_insert($type, $type.$length, $preferred === null ? $rt_s(1) : $preferred.$name0);
                jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(674));
                jl_AbstractStringBuilder_insert($type, $type.$length, $other.$name0);
                jl_AbstractStringBuilder_insert($type, $type.$length, $rt_s(673));
                $preferred = new jl_String;
                var$5 = $type.$buffer;
                var$6 = $type.$length;
                jl_String_$callClinit();
                var$7 = $rt_createCharArray(var$6);
                $preferred.$characters = var$7;
                jl_System_fastArraycopy(var$5, 0, var$7, 0, var$6);
                var$8.$suppressionEnabled = 1;
                var$8.$writableStackTrace = 1;
                var$8.$message = $preferred;
                $rt_throw(var$8);
            }
            cbggg_ImmediateModeRenderer20_flush($this.$renderer);
            $this.$shapeType = null;
            cbggg_ShapeRenderer_begin($this, $preferred);
        }
    }
    var igtg_Complex$Companion = $rt_classWithoutFields();
    var cbggg_ImmediateModeRenderer = $rt_classWithoutFields(0);
    function cbggg_ImmediateModeRenderer20() {
        var a = this; jl_Object.call(a);
        a.$primitiveType = 0;
        a.$vertexIdx = 0;
        a.$numSetTexCoords = 0;
        a.$maxVertices = 0;
        a.$numVertices = 0;
        a.$mesh = null;
        a.$shader = null;
        a.$ownsShader = 0;
        a.$numTexCoords = 0;
        a.$vertexSize0 = 0;
        a.$normalOffset = 0;
        a.$colorOffset = 0;
        a.$texCoordOffset = 0;
        a.$projModelView = null;
        a.$vertices1 = null;
        a.$shaderUniformNames = null;
    }
    function cbggg_ImmediateModeRenderer20__init_(var_0, var_1, var_2, var_3, var_4) {
        var var_5 = new cbggg_ImmediateModeRenderer20();
        cbggg_ImmediateModeRenderer20__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
        return var_5;
    }
    function cbggg_ImmediateModeRenderer20__init_0($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords, $shader) {
        var $attribs, var$7, var$8, var$9, var$10, var$11, $i;
        $this.$projModelView = cbgm_Matrix4__init_();
        $this.$maxVertices = $maxVertices;
        $this.$numTexCoords = $numTexCoords;
        $this.$shader = $shader;
        $attribs = cbggg_ImmediateModeRenderer20_buildVertexAttributes($this, $hasNormals, $hasColors, $numTexCoords);
        var$7 = new cbgg_Mesh;
        var$7.$autoBind = 1;
        var$7.$isInstanced = 0;
        $shader = new cbgm_Vector3;
        cbgm_Vector3_$callClinit();
        var$7.$tmpV = $shader;
        $shader = cbgg_VertexAttributes__init_($attribs);
        var$7.$vertices = cbg_Gdx_gl30 === null ? cbggg_VertexBufferObject__init_(0, $maxVertices, $shader) : cbggg_VertexBufferObjectWithVAO__init_(0, $maxVertices, $shader);
        $shader = new cbggg_IndexBufferObject;
        $shader.$isDirty = 1;
        $shader.$isBound = 0;
        $shader.$isDirect = 1;
        if (!cgxgbt_TeaTool_isProd) {
            $attribs = $rt_createShortArray(0);
            $hasColors = $attribs.data.length;
            var$8 = new jn_ShortBufferOverArray;
            var$9 = 0 + $hasColors | 0;
            jn_Buffer__init_(var$8, $hasColors);
            var$8.$position = 0;
            var$8.$limit = var$9;
            var$8.$start6 = 0;
            var$8.$readOnly2 = 0;
            var$8.$array5 = $attribs;
        } else {
            var$10 = new jn_ByteBufferImpl;
            $attribs = $rt_createByteArray(0);
            jl_Object__init_0(var$10);
            var$10.$mark = (-1);
            var$10.$capacity = 0;
            var$10.$limit = 0;
            jn_ByteOrder_$callClinit();
            var$10.$order = jn_ByteOrder_BIG_ENDIAN;
            var$10.$start0 = 0;
            var$10.$array0 = $attribs;
            var$10.$position = 0;
            var$10.$limit = 0;
            var$10.$direct = 1;
            var$10.$readOnly0 = 0;
            var$10.$order = jn_ByteOrder_nativeOrder();
            var$8 = jn_ByteBufferImpl_asShortBuffer(var$10);
        }
        $shader.$buffer2 = var$8;
        var$8.$limit = var$8.$position;
        var$8.$position = 0;
        var$8.$mark = (-1);
        var$8 = cbg_Gdx_gl20;
        var$10 = var$8.$gl.createBuffer();
        $hasColors = var$8.$nextBufferId;
        var$8.$nextBufferId = $hasColors + 1 | 0;
        cbgu_IntMap_put(var$8.$buffers, $hasColors, otji_JSWrapper_wrap(var$10));
        $shader.$bufferHandle = $hasColors;
        $shader.$usage0 = 35048;
        var$7.$indices = $shader;
        var$7.$isVertexArray = 0;
        $shader = cbg_Gdx_app;
        var$8 = cbgg_Mesh_meshes;
        if ($shader === null)
            var$8 = ju_HashMap_findNullKeyEntry(var$8);
        else {
            var$10 = $shader;
            if (!var$10.$id$) {
                var$11 = $rt_nextId();
                var$10.$id$ = var$11;
            }
            $i = $shader.$id$;
            $attribs = var$8.$elementData.data;
            var$8 = $attribs[$i & ($attribs.length - 1 | 0)];
            while (var$8 !== null) {
                if (var$8.$origKeyHash == $i) {
                    var$10 = var$8.$key;
                    if ($shader !== var$10 && !($shader !== var$10 ? 0 : 1) ? 0 : 1)
                        break;
                }
                var$8 = var$8.$next;
            }
        }
        var$8 = var$8 === null ? null : var$8.$value4;
        if (var$8 === null)
            var$8 = cbgu_Array__init_();
        cbgu_Array_add(var$8, var$7);
        ju_HashMap_put(cbgg_Mesh_meshes, $shader, var$8);
        $this.$mesh = var$7;
        $this.$vertices1 = $rt_createFloatArray($rt_imul($maxVertices, (cbgg_Mesh_getVertexAttributes(var$7)).$vertexSize / 4 | 0));
        $this.$vertexSize0 = (cbgg_Mesh_getVertexAttributes($this.$mesh)).$vertexSize / 4 | 0;
        $this.$normalOffset = cbgg_Mesh_getVertexAttribute($this.$mesh, 8) === null ? 0 : (cbgg_Mesh_getVertexAttribute($this.$mesh, 8)).$offset / 4 | 0;
        $this.$colorOffset = cbgg_Mesh_getVertexAttribute($this.$mesh, 4) === null ? 0 : (cbgg_Mesh_getVertexAttribute($this.$mesh, 4)).$offset / 4 | 0;
        $this.$texCoordOffset = cbgg_Mesh_getVertexAttribute($this.$mesh, 16) === null ? 0 : (cbgg_Mesh_getVertexAttribute($this.$mesh, 16)).$offset / 4 | 0;
        $this.$shaderUniformNames = $rt_createArray(jl_String, $numTexCoords);
        $i = 0;
        while ($i < $numTexCoords) {
            $this.$shaderUniformNames.data[$i] = jl_StringBuilder_toString(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder__init_(), $rt_s(675)), $i));
            $i = $i + 1 | 0;
        }
    }
    function cbggg_ImmediateModeRenderer20_buildVertexAttributes($this, $hasNormals, $hasColor, $numTexCoords) {
        var $attribs, var$5, var$6, $i, var$8, $array, var$10, var$11;
        $attribs = new cbgu_Array;
        $attribs.$ordered = 1;
        $attribs.$items = $rt_createArray(jl_Object, 16);
        var$5 = new cbgg_VertexAttribute;
        var$5.$usage = 1;
        var$5.$numComponents = 3;
        var$5.$type0 = 5126;
        var$5.$normalized = 0;
        var$5.$alias = $rt_s(495);
        var$5.$unit = 0;
        var$5.$usageIndex = jl_Integer_numberOfTrailingZeros(1);
        cbgu_Array_add($attribs, var$5);
        if ($hasNormals) {
            var$6 = new cbgg_VertexAttribute;
            var$6.$usage = 8;
            var$6.$numComponents = 3;
            var$6.$type0 = 5126;
            var$6.$normalized = 0;
            var$6.$alias = $rt_s(676);
            var$6.$unit = 0;
            var$6.$usageIndex = jl_Integer_numberOfTrailingZeros(8);
            cbgu_Array_add($attribs, var$6);
        }
        if ($hasColor) {
            var$6 = new cbgg_VertexAttribute;
            var$6.$usage = 4;
            var$6.$numComponents = 4;
            var$6.$type0 = 5121;
            var$6.$normalized = 1;
            var$6.$alias = $rt_s(496);
            var$6.$unit = 0;
            var$6.$usageIndex = jl_Integer_numberOfTrailingZeros(4);
            cbgu_Array_add($attribs, var$6);
        }
        $i = 0;
        while ($i < $numTexCoords) {
            var$6 = new cbgg_VertexAttribute;
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(677));
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
            var$8 = new jl_String;
            $array = var$5.$buffer;
            var$10 = var$5.$length;
            jl_String_$callClinit();
            var$11 = $rt_createCharArray(var$10);
            var$8.$characters = var$11;
            jl_System_fastArraycopy($array, 0, var$11, 0, var$10);
            var$6.$usage = 16;
            var$6.$numComponents = 2;
            var$6.$type0 = 5126;
            var$6.$normalized = 0;
            var$6.$alias = var$8;
            var$6.$unit = 0;
            var$6.$usageIndex = jl_Integer_numberOfTrailingZeros(16);
            cbgu_Array_add($attribs, var$6);
            $i = $i + 1 | 0;
        }
        $hasNormals = $attribs.$size;
        $array = $rt_createArray(cbgg_VertexAttribute, $hasNormals);
        var$11 = $array.data;
        $i = 0;
        while (true) {
            $hasColor = $rt_compare($i, $hasNormals);
            if ($hasColor >= 0)
                break;
            if ($hasColor >= 0) {
                var$5 = new jl_IndexOutOfBoundsException;
                var$6 = new jl_StringBuilder;
                var$6.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(36));
                jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $i, 10);
                jl_AbstractStringBuilder_insert(var$6, var$6.$length, $rt_s(37));
                $hasNormals = $attribs.$size;
                jl_AbstractStringBuilder_insert0(var$6, var$6.$length, $hasNormals, 10);
                $attribs = new jl_String;
                $array = var$6.$buffer;
                $hasColor = var$6.$length;
                jl_String_$callClinit();
                var$11 = $rt_createCharArray($hasColor);
                $attribs.$characters = var$11;
                jl_System_fastArraycopy($array, 0, var$11, 0, $hasColor);
                var$5.$suppressionEnabled = 1;
                var$5.$writableStackTrace = 1;
                var$5.$message = $attribs;
                $rt_throw(var$5);
            }
            var$11[$i] = $attribs.$items.data[$i];
            $i = $i + 1 | 0;
        }
        return $array;
    }
    function cbggg_ImmediateModeRenderer20_vertex($this, $x, $y, $z) {
        var $idx, var$5;
        $idx = $this.$vertexIdx;
        var$5 = $this.$vertices1.data;
        var$5[$idx] = $x;
        var$5[$idx + 1 | 0] = $y;
        var$5[$idx + 2 | 0] = $z;
        $this.$numSetTexCoords = 0;
        $this.$vertexIdx = $idx + $this.$vertexSize0 | 0;
        $this.$numVertices = $this.$numVertices + 1 | 0;
    }
    function cbggg_ImmediateModeRenderer20_flush($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, $i, var$13;
        if (!$this.$numVertices)
            return;
        var$1 = $this.$shader;
        var$2 = cbg_Gdx_gl20;
        if (var$1.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
            var$1.$invalidated = 0;
        }
        var$2.$glUseProgram(var$1.$program);
        var$2 = $this.$shader;
        var$3 = $this.$projModelView;
        cbggg_ShaderProgram_$callClinit();
        var$4 = cbggg_ShaderProgram_fetchUniformLocation(var$2, $rt_s(678), cbggg_ShaderProgram_pedantic);
        var$5 = cbg_Gdx_gl20;
        if (var$2.$invalidated) {
            cbggg_ShaderProgram_compileShaders(var$2, var$2.$vertexShaderSource, var$2.$fragmentShaderSource);
            var$2.$invalidated = 0;
        }
        var$6 = var$3.$val;
        var$1 = var$5.$uniforms;
        var$7 = var$5.$currProgram;
        if (!var$7)
            var$1 = !var$1.$hasZeroValue0 ? null : var$1.$zeroValue;
        else {
            var$8 = var$1.$keyTable1;
            var$9 = Long_lo(Long_shru(Long_mul(Long_fromInt(var$7), Long_create(2135587861, 2654435769)), var$1.$shift1));
            a: {
                while (true) {
                    var$10 = var$8.data[var$9];
                    if (!var$10) {
                        var$9 =  -(var$9 + 1 | 0) | 0;
                        break a;
                    }
                    if (var$10 == var$7)
                        break;
                    var$9 = (var$9 + 1 | 0) & var$1.$mask1;
                }
            }
            var$1 = var$9 < 0 ? null : var$1.$valueTable0.data[var$9];
        }
        var$1 = var$1;
        if (!var$4)
            var$1 = !var$1.$hasZeroValue0 ? null : var$1.$zeroValue;
        else {
            var$8 = var$1.$keyTable1;
            var$7 = Long_lo(Long_shru(Long_mul(Long_fromInt(var$4), Long_create(2135587861, 2654435769)), var$1.$shift1));
            b: {
                while (true) {
                    var$9 = var$8.data[var$7];
                    if (!var$9) {
                        var$7 =  -(var$7 + 1 | 0) | 0;
                        break b;
                    }
                    if (var$9 == var$4)
                        break;
                    var$7 = (var$7 + 1 | 0) & var$1.$mask1;
                }
            }
            var$1 = var$7 < 0 ? null : var$1.$valueTable0.data[var$7];
        }
        otji_JSWrapper_$callClinit();
        var$1 = var$1 === null ? null : var$1[$rt_jso_marker] === true ? var$1 : var$1.$js;
        var$2 = var$5.$gl;
        var$3 = "uniformMatrix4fv";
        var$11 = !!0;
        if (var$6 === null)
            var$5 = null;
        else {
            var$6 = var$6.data;
            $i = var$6.length;
            var$5 = new $rt_globals.Array($i);
            var$7 = 0;
            while (var$7 < $i) {
                var$13 = var$6[var$7];
                var$7;
                var$5[var$7] = var$13;
                var$7 = var$7 + 1 | 0;
            }
        }
        var$2[var$3](var$1, var$11, var$5);
        $i = 0;
        while ($i < $this.$numTexCoords) {
            var$1 = $this.$shader;
            var$2 = $this.$shaderUniformNames.data[$i];
            var$3 = cbg_Gdx_gl20;
            if (var$1.$invalidated) {
                cbggg_ShaderProgram_compileShaders(var$1, var$1.$vertexShaderSource, var$1.$fragmentShaderSource);
                var$1.$invalidated = 0;
            }
            var$3.$glUniform1i(cbggg_ShaderProgram_fetchUniformLocation(var$1, var$2, cbggg_ShaderProgram_pedantic), $i);
            $i = $i + 1 | 0;
        }
        var$1 = $this.$mesh;
        var$6 = $this.$vertices1;
        var$7 = $this.$vertexIdx;
        var$1.$vertices.$setVertices(var$6, 0, var$7);
        var$1 = $this.$mesh;
        cbgg_Mesh_render(var$1, $this.$shader, $this.$primitiveType, 0, var$1.$indices.$getNumMaxIndices() <= 0 ? var$1.$vertices.$getNumVertices() : var$1.$indices.$getNumIndices(), var$1.$autoBind);
        $this.$numSetTexCoords = 0;
        $this.$vertexIdx = 0;
        $this.$numVertices = 0;
    }
    function cbggg_ImmediateModeRenderer20_createVertexShader($hasNormals, $hasColors, $numTexCoords) {
        var var$4, var$5, var$6, $i, var$8, var$9;
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(679));
        var$5 = !$hasNormals ? $rt_s(45) : $rt_s(680);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
        var$5 = !$hasColors ? $rt_s(45) : $rt_s(681);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $i = var$4.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($i);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, $i);
        $i = 0;
        while ($i < $numTexCoords) {
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(682));
            jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $i, 10);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(683));
            var$5 = new jl_String;
            var$6 = var$4.$buffer;
            var$9 = var$4.$length;
            var$8 = $rt_createCharArray(var$9);
            var$5.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, var$9);
            $i = $i + 1 | 0;
        }
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(684));
        var$5 = !$hasColors ? $rt_s(45) : $rt_s(685);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $i = var$4.$length;
        var$8 = $rt_createCharArray($i);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, $i);
        $i = 0;
        while ($i < $numTexCoords) {
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(686));
            jl_AbstractStringBuilder_insert0(var$4, var$4.$length, $i, 10);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(683));
            var$5 = new jl_String;
            var$6 = var$4.$buffer;
            var$9 = var$4.$length;
            var$8 = $rt_createCharArray(var$9);
            var$5.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, var$9);
            $i = $i + 1 | 0;
        }
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(687));
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $i = var$4.$length;
        var$8 = $rt_createCharArray($i);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, $i);
        if ($hasColors) {
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(688));
            var$5 = new jl_String;
            var$6 = var$4.$buffer;
            $hasColors = var$4.$length;
            var$8 = $rt_createCharArray($hasColors);
            var$5.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, $hasColors);
        }
        $i = 0;
        while ($i < $numTexCoords) {
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_append1(var$4, var$5);
            var$5 = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(var$4, $rt_s(689)), $i), $rt_s(690)), $rt_s(677)), $i), $rt_s(683)));
            $i = $i + 1 | 0;
        }
        var$4 = new jl_StringBuilder;
        var$4.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$5);
        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(691));
        var$5 = new jl_String;
        var$6 = var$4.$buffer;
        $hasColors = var$4.$length;
        var$8 = $rt_createCharArray($hasColors);
        var$5.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, $hasColors);
        return var$5;
    }
    function cbggg_ImmediateModeRenderer20_createFragmentShader($hasNormals, $hasColors, $numTexCoords) {
        var $shader, var$5, var$6, $i, var$8, var$9;
        $shader = $rt_s(692);
        if ($hasColors) {
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(685));
            $shader = new jl_String;
            var$6 = var$5.$buffer;
            $i = var$5.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray($i);
            $shader.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, $i);
        }
        $i = 0;
        while ($i < $numTexCoords) {
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(686));
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(683));
            $shader = new jl_String;
            var$6 = var$5.$buffer;
            var$9 = var$5.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray(var$9);
            $shader.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, var$9);
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(693));
            jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(683));
            $shader = new jl_String;
            var$6 = var$5.$buffer;
            var$9 = var$5.$length;
            var$8 = $rt_createCharArray(var$9);
            $shader.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, var$9);
            $i = $i + 1 | 0;
        }
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(694));
        $shader = !$hasColors ? $rt_s(695) : $rt_s(696);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
        $shader = new jl_String;
        var$6 = var$5.$buffer;
        $hasColors = var$5.$length;
        jl_String_$callClinit();
        var$8 = $rt_createCharArray($hasColors);
        $shader.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, $hasColors);
        if ($numTexCoords > 0) {
            var$5 = new jl_StringBuilder;
            var$5.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
            jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(697));
            $shader = new jl_String;
            var$6 = var$5.$buffer;
            $hasColors = var$5.$length;
            var$8 = $rt_createCharArray($hasColors);
            $shader.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, $hasColors);
        }
        $i = 0;
        $hasColors = $numTexCoords - 1 | 0;
        while ($i < $numTexCoords) {
            if ($i == $hasColors) {
                var$5 = new jl_StringBuilder;
                jl_AbstractStringBuilder__init_2(var$5, 16);
                jl_AbstractStringBuilder_append1(var$5, $shader);
                $shader = jl_StringBuilder_toString(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(var$5, $rt_s(698)), $i), $rt_s(699)), $i), $rt_s(557)));
            } else {
                var$5 = new jl_StringBuilder;
                var$5.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
                jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(698));
                jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
                jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(699));
                jl_AbstractStringBuilder_insert0(var$5, var$5.$length, $i, 10);
                jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(700));
                $shader = jl_String__init_1(var$5.$buffer, 0, var$5.$length);
            }
            $i = $i + 1 | 0;
        }
        var$5 = new jl_StringBuilder;
        var$5.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $shader);
        jl_AbstractStringBuilder_insert(var$5, var$5.$length, $rt_s(701));
        $shader = new jl_String;
        var$6 = var$5.$buffer;
        $hasColors = var$5.$length;
        var$8 = $rt_createCharArray($hasColors);
        $shader.$characters = var$8;
        jl_System_fastArraycopy(var$6, 0, var$8, 0, $hasColors);
        return $shader;
    }
    var jnc_CoderMalfunctionError = $rt_classWithoutFields(jl_Error);
    var cgxgbtf_HEXCoder = $rt_classWithoutFields();
    var cgxgbtf_HEXCoder_HEX_CHARS = null;
    var cgxgbtf_HEXCoder_HEX_BYTES = null;
    function cgxgbtf_HEXCoder_decode($string) {
        var var$2, var$3, $bytes, var$5, $i, var$7, var$8, $c0, $c1, var$11;
        var$2 = $string.$characters.data;
        var$3 = var$2.length;
        $bytes = $rt_createByteArray(var$3 / 2 | 0);
        var$5 = $bytes.data;
        $i = 0;
        var$7 = var$5.length;
        a: {
            b: {
                while ($i < var$7) {
                    var$8 = $i * 2 | 0;
                    if (var$8 < 0)
                        break a;
                    if (var$8 >= var$3)
                        break a;
                    $c0 = var$2[var$8];
                    var$8 = var$8 + 1 | 0;
                    if (var$8 < 0)
                        break b;
                    if (var$8 >= var$3)
                        break b;
                    $c1 = var$2[var$8];
                    var$11 = cgxgbtf_HEXCoder_HEX_BYTES.data;
                    var$5[$i] = ((var$11[$c0] << 4) + var$11[$c1] | 0) << 24 >> 24;
                    $i = $i + 1 | 0;
                }
                return $bytes;
            }
            $string = new jl_StringIndexOutOfBoundsException;
            $string.$suppressionEnabled = 1;
            $string.$writableStackTrace = 1;
            $rt_throw($string);
        }
        $string = new jl_StringIndexOutOfBoundsException;
        $string.$suppressionEnabled = 1;
        $string.$writableStackTrace = 1;
        $rt_throw($string);
    }
    function cgxgbtf_HEXCoder__clinit_() {
        var var$1, var$2, var$3, $i;
        var$1 = $rt_createCharArray(16);
        var$2 = var$1.data;
        var$2[0] = 48;
        var$2[1] = 49;
        var$2[2] = 50;
        var$2[3] = 51;
        var$2[4] = 52;
        var$2[5] = 53;
        var$2[6] = 54;
        var$2[7] = 55;
        var$2[8] = 56;
        var$2[9] = 57;
        var$2[10] = 65;
        var$2[11] = 66;
        var$2[12] = 67;
        var$2[13] = 68;
        var$2[14] = 69;
        var$2[15] = 70;
        cgxgbtf_HEXCoder_HEX_CHARS = var$1;
        var$1 = $rt_createIntArray(128);
        var$3 = var$1.data;
        cgxgbtf_HEXCoder_HEX_BYTES = var$1;
        $i = 0;
        while ($i < var$2.length) {
            var$3[var$2[$i]] = $i;
            if (var$2[$i] >= 65)
                var$3[(var$2[$i] - 65 | 0) + 97 | 0] = $i;
            $i = $i + 1 | 0;
        }
    }
    function cgxgbtp_Blob$1() {
        var a = this; ji_InputStream.call(a);
        a.$pos0 = 0;
        a.$this$011 = null;
    }
    function cgxgbtp_Blob$1_read($this) {
        var var$1, var$2;
        if ($this.$pos0 == $this.$this$011.$data3.length)
            return (-1);
        var$1 = $this.$this$011;
        var$2 = $this.$pos0;
        $this.$pos0 = var$2 + 1 | 0;
        return var$1.$data3[var$2] & 255;
    }
    var ka_KtxInputAdapter$DefaultImpls = $rt_classWithoutFields();
    var cbg_Preferences = $rt_classWithoutFields(0);
    function cgxgbt_TeaPreferences() {
        var a = this; jl_Object.call(a);
        a.$prefix0 = null;
        a.$values3 = null;
        a.$storage0 = null;
    }
    function cgxgbt_TeaPreferences__init_0(var_0, var_1) {
        var var_2 = new cgxgbt_TeaPreferences();
        cgxgbt_TeaPreferences__init_(var_2, var_0, var_1);
        return var_2;
    }
    function cgxgbt_TeaPreferences__init_($this, $storage, $prefix) {
        var var$3, var$4, $i, var$6, var$7, $prefixLength, $key, $value, var$11, $$je;
        $this.$values3 = cbgu_ObjectMap__init_(51, 0.800000011920929);
        $this.$storage0 = $storage;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(702));
        var$4 = var$3.$length;
        if ($prefix === null)
            $prefix = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, $prefix);
        $i = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, $i, $i + 1 | 0);
        var$6 = var$3.$buffer;
        var$6.data[$i] = 58;
        $prefix = new jl_String;
        $i = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray($i);
        $prefix.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, $i);
        $this.$prefix0 = $prefix;
        $prefixLength = $prefix.$characters.data.length;
        a: {
            try {
                $i = 0;
                while ($i < $storage.length) {
                    $key = $rt_str($storage.key($i));
                    if (jl_String_startsWith0($key, $this.$prefix0)) {
                        $value = $rt_str($storage.getItem($rt_ustr($key)));
                        cbgu_ObjectMap_put($this.$values3, jl_String_substring($key, $prefixLength, jl_String_length($key) - 1 | 0), cgxgbt_TeaPreferences_toObject($this, $key, $value));
                    }
                    $i = $i + 1 | 0;
                }
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                } else {
                    throw $$e;
                }
            }
            $storage = $this.$values3;
            if ($storage.$size2) {
                $storage.$size2 = 0;
                var$6 = $storage.$keyTable.data;
                $prefix = null;
                var$4 = 0;
                $i = var$6.length;
                if (var$4 > $i) {
                    $storage = new jl_IllegalArgumentException;
                    $storage.$suppressionEnabled = 1;
                    $storage.$writableStackTrace = 1;
                    $rt_throw($storage);
                }
                while (var$4 < $i) {
                    var$11 = var$4 + 1 | 0;
                    var$6[var$4] = $prefix;
                    var$4 = var$11;
                }
                var$6 = $storage.$valueTable.data;
                $storage = null;
                var$4 = 0;
                $i = var$6.length;
                if (var$4 > $i) {
                    $storage = new jl_IllegalArgumentException;
                    $storage.$suppressionEnabled = 1;
                    $storage.$writableStackTrace = 1;
                    $rt_throw($storage);
                }
                while (var$4 < $i) {
                    var$11 = var$4 + 1 | 0;
                    var$6[var$4] = $storage;
                    var$4 = var$11;
                }
            }
        }
    }
    function cgxgbt_TeaPreferences_toObject($this, $key, $value) {
        var var$3, var$4, var$5;
        if (jl_String_endsWith($key, $rt_s(435)))
            return !($value !== null && jl_String_equals(jl_String_toLowerCase($value), $rt_s(657)) ? 1 : 0) ? jl_Boolean_FALSE : jl_Boolean_TRUE;
        if (!jl_String_endsWith($key, $rt_s(434))) {
            if (!jl_String_endsWith($key, $rt_s(703))) {
                if (!jl_String_endsWith($key, $rt_s(704)))
                    return $value;
                var$3 = jl_Float_parseFloat($value);
                $key = new jl_Float;
                $key.$value1 = var$3;
                return $key;
            }
            if ($value !== null) {
                var$4 = jl_Long_parseLongImpl($value, 0, $value.$characters.data.length, 10);
                $key = new jl_Long;
                $key.$value6 = var$4;
                return $key;
            }
            $key = new jl_NumberFormatException;
            $key.$suppressionEnabled = 1;
            $key.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($key);
            $key.$message = $rt_s(80);
            $rt_throw($key);
        }
        if ($value === null) {
            $key = new jl_NumberFormatException;
            $key.$suppressionEnabled = 1;
            $key.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace($key);
            $key.$message = $rt_s(80);
            $rt_throw($key);
        }
        var$5 = jl_Integer_parseIntImpl($value, 0, $value.$characters.data.length, 10);
        if (var$5 >= (-128) && var$5 <= 127) {
            jl_Integer_ensureIntegerCache();
            $key = jl_Integer_integerCache.data[var$5 + 128 | 0];
        } else {
            $key = new jl_Integer;
            $key.$value5 = var$5;
        }
        return $key;
    }
    function cgxgbt_TeaPreferences_toStorageKey($this, $key, $value) {
        var var$3, var$4, var$5, var$6, var$7;
        if ($value instanceof jl_Boolean) {
            $value = $this.$prefix0;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$4 = var$3.$length;
            if ($value === null)
                $value = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, $value);
            var$4 = var$3.$length;
            if ($key === null)
                $key = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, $key);
            var$5 = var$3.$length;
            jl_AbstractStringBuilder_insertSpace(var$3, var$5, var$5 + 1 | 0);
            var$6 = var$3.$buffer;
            var$6.data[var$5] = 98;
            $key = new jl_String;
            var$5 = var$3.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray(var$5);
            $key.$characters = var$7;
            jl_System_fastArraycopy(var$6, 0, var$7, 0, var$5);
            return $key;
        }
        if ($value instanceof jl_Integer) {
            $value = $this.$prefix0;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$4 = var$3.$length;
            if ($value === null)
                $value = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, $value);
            var$4 = var$3.$length;
            if ($key === null)
                $key = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, $key);
            var$5 = var$3.$length;
            jl_AbstractStringBuilder_insertSpace(var$3, var$5, var$5 + 1 | 0);
            var$6 = var$3.$buffer;
            var$6.data[var$5] = 105;
            $key = new jl_String;
            var$5 = var$3.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray(var$5);
            $key.$characters = var$7;
            jl_System_fastArraycopy(var$6, 0, var$7, 0, var$5);
            return $key;
        }
        if ($value instanceof jl_Long) {
            $value = $this.$prefix0;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$4 = var$3.$length;
            if ($value === null)
                $value = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, $value);
            var$4 = var$3.$length;
            if ($key === null)
                $key = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, $key);
            var$5 = var$3.$length;
            jl_AbstractStringBuilder_insertSpace(var$3, var$5, var$5 + 1 | 0);
            var$6 = var$3.$buffer;
            var$6.data[var$5] = 108;
            $key = new jl_String;
            var$5 = var$3.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray(var$5);
            $key.$characters = var$7;
            jl_System_fastArraycopy(var$6, 0, var$7, 0, var$5);
            return $key;
        }
        if (!($value instanceof jl_Float)) {
            $value = $this.$prefix0;
            var$3 = new jl_StringBuilder;
            var$3.$buffer = $rt_createCharArray(16);
            var$4 = var$3.$length;
            if ($value === null)
                $value = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, $value);
            var$4 = var$3.$length;
            if ($key === null)
                $key = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$3, var$4, $key);
            var$5 = var$3.$length;
            jl_AbstractStringBuilder_insertSpace(var$3, var$5, var$5 + 1 | 0);
            var$6 = var$3.$buffer;
            var$6.data[var$5] = 115;
            $key = new jl_String;
            var$5 = var$3.$length;
            jl_String_$callClinit();
            var$7 = $rt_createCharArray(var$5);
            $key.$characters = var$7;
            jl_System_fastArraycopy(var$6, 0, var$7, 0, var$5);
            return $key;
        }
        $value = $this.$prefix0;
        var$3 = new jl_StringBuilder;
        var$3.$buffer = $rt_createCharArray(16);
        var$4 = var$3.$length;
        if ($value === null)
            $value = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, $value);
        var$4 = var$3.$length;
        if ($key === null)
            $key = $rt_s(1);
        jl_AbstractStringBuilder_insert(var$3, var$4, $key);
        var$5 = var$3.$length;
        jl_AbstractStringBuilder_insertSpace(var$3, var$5, var$5 + 1 | 0);
        var$6 = var$3.$buffer;
        var$6.data[var$5] = 102;
        $key = new jl_String;
        var$5 = var$3.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$5);
        $key.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$5);
        return $key;
    }
    function cgxgbt_TeaPreferences_flush($this) {
        var $i, $key, var$3, $storageKey, var$5, $storageValue, $$je;
        a: {
            try {
                $i = 0;
                while ($i < $this.$storage0.length) {
                    $key = $rt_str($this.$storage0.key($i));
                    if (jl_String_startsWith0($key, $this.$prefix0))
                        $this.$storage0.removeItem($rt_ustr($key));
                    $i = $i + 1 | 0;
                }
                var$3 = cbgu_ObjectMap$Keys_iterator(cbgu_ObjectMap_keys($this.$values3));
                while (cbgu_ObjectMap$Keys_hasNext(var$3)) {
                    $key = cbgu_ObjectMap$Keys_next(var$3);
                    $storageKey = cgxgbt_TeaPreferences_toStorageKey($this, $key, cbgu_ObjectMap_get($this.$values3, $key));
                    $key = (cbgu_ObjectMap_get($this.$values3, $key)).$toString();
                    var$5 = jl_StringBuilder__init_();
                    jl_StringBuilder_append(var$5, $key);
                    $storageValue = jl_StringBuilder_toString(var$5);
                    $this.$storage0.setItem($rt_ustr($storageKey), $rt_ustr($storageValue));
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return;
        }
        var$3 = new cbgu_GdxRuntimeException;
        var$3.$suppressionEnabled = 1;
        var$3.$writableStackTrace = 1;
        var$3.$message = $rt_s(705);
        $rt_throw(var$3);
    }
    function cgxgbt_TeaPreferences_putLong($this, $key, $val) {
        var var$3, var$4;
        var$3 = $this.$values3;
        var$4 = new jl_Long;
        var$4.$value6 = $val;
        cbgu_ObjectMap_put(var$3, $key, var$4);
        return $this;
    }
    function cgxgbt_TeaPreferences_getLong($this, $key, $defValue) {
        var $res, var$4;
        $res = $this.$values3;
        var$4 = cbgu_ObjectMap_locateKey($res, $key);
        $res = var$4 < 0 ? null : $res.$valueTable.data[var$4];
        if ($res !== null)
            $defValue = $res.$value6;
        return $defValue;
    }
    var jnc_Charset$Charsets = $rt_classWithoutFields();
    var jnc_Charset$Charsets_value = null;
    function jnc_Charset$Charsets_$callClinit() {
        jnc_Charset$Charsets_$callClinit = $rt_eraseClinit(jnc_Charset$Charsets);
        jnc_Charset$Charsets__clinit_();
    }
    function jnc_Charset$Charsets__clinit_() {
        var $charset, var$2, var$3, $charsets, var$5;
        $charset = new ju_HashMap;
        var$2 = ju_HashMap_calculateCapacity(16);
        $charset.$elementCount = 0;
        var$3 = $rt_createArray(ju_HashMap$HashEntry, var$2);
        $charsets = var$3.data;
        $charset.$elementData = var$3;
        $charset.$loadFactor = 0.75;
        $charset.$threshold = $charsets.length * 0.75 | 0;
        jnc_Charset$Charsets_value = $charset;
        $charsets = $rt_createArray(jnc_Charset, 6).data;
        jnc_StandardCharsets_$callClinit();
        $charsets[0] = jnc_StandardCharsets_UTF_8;
        $charsets[1] = jnc_StandardCharsets_US_ASCII;
        $charsets[2] = jnc_StandardCharsets_ISO_8859_1;
        $charsets[3] = jnc_StandardCharsets_UTF_16;
        $charsets[4] = jnc_StandardCharsets_UTF_16BE;
        $charsets[5] = jnc_StandardCharsets_UTF_16LE;
        var$2 = $charsets.length;
        var$5 = 0;
        while (var$5 < var$2) {
            $charset = $charsets[var$5];
            ju_HashMap_putImpl(jnc_Charset$Charsets_value, $charset.$canonicalName, $charset);
            var$5 = var$5 + 1 | 0;
        }
    }
    function jnc_UnsupportedCharsetException() {
        jl_IllegalArgumentException.call(this);
        this.$charsetName = null;
    }
    function jl_Boolean() {
        jl_Object.call(this);
        this.$value = 0;
    }
    var jl_Boolean_TRUE = null;
    var jl_Boolean_FALSE = null;
    var jl_Boolean_TYPE = null;
    function jl_Boolean_booleanValue($this) {
        return $this.$value;
    }
    function jl_Boolean_toString($this) {
        return !$this.$value ? $rt_s(656) : $rt_s(657);
    }
    function jl_Boolean_hashCode($this) {
        return !$this.$value ? 1237 : 1231;
    }
    function jl_Boolean_equals($this, $obj) {
        if ($this === $obj)
            return 1;
        return $obj instanceof jl_Boolean && $obj.$value == $this.$value ? 1 : 0;
    }
    function jl_Boolean__clinit_() {
        var var$1;
        var$1 = new jl_Boolean;
        var$1.$value = 1;
        jl_Boolean_TRUE = var$1;
        var$1 = new jl_Boolean;
        var$1.$value = 0;
        jl_Boolean_FALSE = var$1;
        jl_Boolean_TYPE = $rt_cls($rt_booleancls());
    }
    var jnc_StandardCharsets = $rt_classWithoutFields();
    var jnc_StandardCharsets_UTF_8 = null;
    var jnc_StandardCharsets_US_ASCII = null;
    var jnc_StandardCharsets_ISO_8859_1 = null;
    var jnc_StandardCharsets_UTF_16 = null;
    var jnc_StandardCharsets_UTF_16BE = null;
    var jnc_StandardCharsets_UTF_16LE = null;
    function jnc_StandardCharsets_$callClinit() {
        jnc_StandardCharsets_$callClinit = $rt_eraseClinit(jnc_StandardCharsets);
        jnc_StandardCharsets__clinit_();
    }
    function jnc_StandardCharsets__clinit_() {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8;
        jnci_UTF8Charset_$callClinit();
        jnc_StandardCharsets_UTF_8 = jnci_UTF8Charset_INSTANCE;
        var$1 = new jnci_AsciiCharset;
        var$2 = $rt_createArray(jl_String, 0);
        var$3 = var$2.data;
        jnc_Charset_checkCanonicalName($rt_s(706));
        var$4 = var$3.length;
        var$5 = 0;
        while (var$5 < var$4) {
            jnc_Charset_checkCanonicalName(var$3[var$5]);
            var$5 = var$5 + 1 | 0;
        }
        var$1.$canonicalName = $rt_s(706);
        var$1.$aliases = var$2.$clone();
        jnc_StandardCharsets_US_ASCII = var$1;
        var$1 = new jnci_Iso8859Charset;
        var$2 = $rt_createArray(jl_String, 0);
        var$3 = var$2.data;
        jnc_Charset_checkCanonicalName($rt_s(707));
        var$4 = var$3.length;
        var$5 = 0;
        while (var$5 < var$4) {
            jnc_Charset_checkCanonicalName(var$3[var$5]);
            var$5 = var$5 + 1 | 0;
        }
        var$1.$canonicalName = $rt_s(707);
        var$1.$aliases = var$2.$clone();
        jnc_StandardCharsets_ISO_8859_1 = var$1;
        var$6 = new jnci_UTF16Charset;
        var$2 = $rt_createArray(jl_String, 0);
        var$3 = var$2.data;
        jnc_Charset_checkCanonicalName($rt_s(708));
        var$7 = var$3.length;
        var$8 = 0;
        while (var$8 < var$7) {
            jnc_Charset_checkCanonicalName(var$3[var$8]);
            var$8 = var$8 + 1 | 0;
        }
        var$6.$canonicalName = $rt_s(708);
        var$6.$aliases = var$2.$clone();
        var$6.$bom = 1;
        var$6.$littleEndian = 0;
        jnc_StandardCharsets_UTF_16 = var$6;
        var$1 = new jnci_UTF16Charset;
        var$2 = $rt_createArray(jl_String, 0);
        var$3 = var$2.data;
        jnc_Charset_checkCanonicalName($rt_s(709));
        var$7 = var$3.length;
        var$8 = 0;
        while (var$8 < var$7) {
            jnc_Charset_checkCanonicalName(var$3[var$8]);
            var$8 = var$8 + 1 | 0;
        }
        var$1.$canonicalName = $rt_s(709);
        var$1.$aliases = var$2.$clone();
        var$1.$bom = 0;
        var$1.$littleEndian = 0;
        jnc_StandardCharsets_UTF_16BE = var$1;
        var$1 = new jnci_UTF16Charset;
        var$2 = $rt_createArray(jl_String, 0);
        var$3 = var$2.data;
        jnc_Charset_checkCanonicalName($rt_s(710));
        var$7 = var$3.length;
        var$8 = 0;
        while (var$8 < var$7) {
            jnc_Charset_checkCanonicalName(var$3[var$8]);
            var$8 = var$8 + 1 | 0;
        }
        var$1.$canonicalName = $rt_s(710);
        var$1.$aliases = var$2.$clone();
        var$1.$bom = 0;
        var$1.$littleEndian = 1;
        jnc_StandardCharsets_UTF_16LE = var$1;
    }
    var jnci_AsciiCharset = $rt_classWithoutFields(jnc_Charset);
    function jnci_AsciiCharset_newEncoder($this) {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = new jnci_AsciiEncoder;
        var$2 = $rt_createByteArray(1);
        var$3 = var$2.data;
        var$3[0] = 63;
        jnc_CodingErrorAction_$callClinit();
        var$4 = jnc_CodingErrorAction_REPORT;
        var$1.$malformedAction = var$4;
        var$1.$unmappableAction = var$4;
        var$5 = var$3.length;
        if (var$5 && var$5 >= var$1.$maxBytesPerChar) {
            var$1.$charset0 = $this;
            var$1.$replacement0 = var$2.$clone();
            var$1.$averageBytesPerChar = 1.0;
            var$1.$maxBytesPerChar = 1.0;
            var$1.$inArray = $rt_createCharArray(512);
            var$1.$outArray = $rt_createByteArray(512);
            return var$1;
        }
        var$4 = new jl_IllegalArgumentException;
        jl_Throwable__init_2(var$4, $rt_s(485));
        $rt_throw(var$4);
    }
    var jnci_Iso8859Charset = $rt_classWithoutFields(jnc_Charset);
    function jnci_Iso8859Charset_newEncoder($this) {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = new jnci_Iso8859Encoder;
        var$2 = $rt_createByteArray(1);
        var$3 = var$2.data;
        var$3[0] = 63;
        jnc_CodingErrorAction_$callClinit();
        var$4 = jnc_CodingErrorAction_REPORT;
        var$1.$malformedAction = var$4;
        var$1.$unmappableAction = var$4;
        var$5 = var$3.length;
        if (var$5 && var$5 >= var$1.$maxBytesPerChar) {
            var$1.$charset0 = $this;
            var$1.$replacement0 = var$2.$clone();
            var$1.$averageBytesPerChar = 1.0;
            var$1.$maxBytesPerChar = 1.0;
            var$1.$inArray = $rt_createCharArray(512);
            var$1.$outArray = $rt_createByteArray(512);
            return var$1;
        }
        var$4 = new jl_IllegalArgumentException;
        jl_Throwable__init_2(var$4, $rt_s(485));
        $rt_throw(var$4);
    }
    function jnci_UTF16Charset() {
        var a = this; jnc_Charset.call(a);
        a.$bom = 0;
        a.$littleEndian = 0;
    }
    function jnci_UTF16Charset_newEncoder($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = new jnci_UTF16Encoder;
        var$2 = $this.$bom;
        var$3 = $this.$littleEndian;
        var$4 = $rt_createByteArray(1);
        var$5 = var$4.data;
        var$5[0] = 63;
        jnc_CodingErrorAction_$callClinit();
        var$6 = jnc_CodingErrorAction_REPORT;
        var$1.$malformedAction = var$6;
        var$1.$unmappableAction = var$6;
        var$7 = var$5.length;
        if (var$7 && var$7 >= var$1.$maxBytesPerChar) {
            var$1.$charset0 = $this;
            var$1.$replacement0 = var$4.$clone();
            var$1.$averageBytesPerChar = 2.0;
            var$1.$maxBytesPerChar = 4.0;
            var$1.$inArray = $rt_createCharArray(512);
            var$1.$outArray = $rt_createByteArray(512);
            var$1.$bom0 = var$2;
            var$1.$littleEndian0 = var$3;
            return var$1;
        }
        var$6 = new jl_IllegalArgumentException;
        jl_Throwable__init_2(var$6, $rt_s(485));
        $rt_throw(var$6);
    }
    function jnci_BufferedEncoder$Controller() {
        var a = this; jl_Object.call(a);
        a.$in = null;
        a.$out0 = null;
        a.$inPosition = 0;
        a.$outPosition = 0;
    }
    var igtg_Descartes = $rt_classWithoutFields();
    var igtg_Descartes_INSTANCE = null;
    function igtg_Descartes_simple($this, $c1, $c2, $c3) {
        var $k1, $k2, $k3, $sum, $root, $resultPlus, $resultMinus, var$11, var$12, var$13, var$14, var$15, var$16, var$17;
        if ($c1 !== null) {
            if ($c2 !== null) {
                kji_Intrinsics_checkNotNullParameter($c3, $rt_s(659));
                $k1 = igtg_Circle_getBend($c1);
                $k2 = igtg_Circle_getBend($c2);
                $k3 = igtg_Circle_getBend($c3);
                $sum = $k1 + $k2 + $k3;
                $root = 2.0 * jl_Math_sqrt(jl_Math_abs($k1 * $k2 + $k2 * $k3 + $k1 * $k3));
                $resultPlus = $sum + $root;
                $resultMinus = $sum - $root;
                if ($resultPlus !== $resultMinus ? 0 : 1) {
                    var$11 = $rt_createFloatArray(1);
                    var$11.data[0] = $resultPlus;
                } else
                    var$11 = $rt_createFloatArrayFromData([$resultPlus, $resultMinus]);
                return var$11;
            }
            $c1 = new jl_NullPointerException;
            $c2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(660));
            $c1.$suppressionEnabled = 1;
            $c1.$writableStackTrace = 1;
            $c1.$message = $c2;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            $c2 = $rt_cls(kji_Intrinsics).$name;
            var$11 = $c1.$stackTrace;
            var$12 = var$11 !== null ? var$11.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$11 = var$12.data;
            var$13 = var$11.length;
            var$14 = (-1);
            var$15 = 0;
            while (var$15 < var$13) {
                if (jl_String_equals($c2, jl_StackTraceElement_getClassName(var$11[var$15])))
                    var$14 = var$15;
                var$15 = var$15 + 1 | 0;
            }
            var$15 = var$14 + 1 | 0;
            $c3 = var$12.constructor;
            if ($c3 === null)
                $c2 = null;
            else {
                $c2 = $c3.classObject;
                if ($c2 === null) {
                    $c2 = new jl_Class;
                    jl_Object__init_0($c2);
                    $c2.$platformClass = $c3;
                    var$16 = $c2;
                    $c3.classObject = var$16;
                }
            }
            $c2 = jlr_Array_newInstance(jl_Class_getClass($c2.$platformClass.$meta.item), var$13 - var$15 | 0);
            var$14 = var$15;
            while (var$14 < var$13) {
                $c2.data[var$14 - var$15 | 0] = var$11[var$14];
                var$14 = var$14 + 1 | 0;
            }
            jl_Throwable_setStackTrace($c1, $c2);
            $rt_throw($c1);
        }
        $c1 = new jl_NullPointerException;
        $c2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(661));
        $c1.$suppressionEnabled = 1;
        $c1.$writableStackTrace = 1;
        $c1.$message = $c2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $c3 = $rt_cls(kji_Intrinsics).$name;
        var$11 = $c1.$stackTrace;
        var$12 = var$11 !== null ? var$11.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$11 = var$12.data;
        var$13 = var$11.length;
        var$14 = (-1);
        var$15 = 0;
        while (var$15 < var$13) {
            if (jl_String_equals($c3, jl_StackTraceElement_getClassName(var$11[var$15])))
                var$14 = var$15;
            var$15 = var$15 + 1 | 0;
        }
        var$15 = var$14 + 1 | 0;
        $c3 = var$12.constructor;
        if ($c3 === null)
            $c2 = null;
        else {
            $c2 = $c3.classObject;
            if ($c2 === null) {
                $c2 = new jl_Class;
                jl_Object__init_0($c2);
                $c2.$platformClass = $c3;
                var$16 = $c2;
                $c3.classObject = var$16;
            }
        }
        var$17 = $c2.$platformClass.$meta.item;
        if (var$17 === null)
            $c3 = null;
        else {
            $c3 = var$17.classObject;
            if ($c3 === null) {
                $c3 = new jl_Class;
                jl_Object__init_0($c3);
                $c3.$platformClass = var$17;
                $c2 = $c3;
                var$17.classObject = $c2;
            }
        }
        var$14 = var$13 - var$15 | 0;
        if ($c3 === null) {
            $c1 = new jl_NullPointerException;
            jl_Exception__init_0($c1);
            $rt_throw($c1);
        }
        if ($c3 === $rt_cls($rt_voidcls())) {
            $c1 = new jl_IllegalArgumentException;
            jl_Exception__init_0($c1);
            $rt_throw($c1);
        }
        if (var$14 < 0) {
            $c1 = new jl_NegativeArraySizeException;
            jl_Exception__init_0($c1);
            $rt_throw($c1);
        }
        var$16 = jlr_Array_newInstanceImpl($c3.$platformClass, var$14);
        var$14 = var$15;
        while (var$14 < var$13) {
            var$16.data[var$14 - var$15 | 0] = var$11[var$14];
            var$14 = var$14 + 1 | 0;
        }
        $c1.$stackTrace = var$16.$clone();
        $rt_throw($c1);
    }
    function igtg_Descartes_complex($this, $c1, $c2, $c3, $k4) {
        var var$5, $k1, $k2, $k3, $z1, $z2, $z3, $zk1, $zk2, $zk3, $sum, $root, $destination$iv$iv, var$18, var$19, $item$iv$iv, $destination$iv$iv_0, $it, $destination$iv$iv_1, var$24;
        if ($c1 !== null) {
            if ($c2 === null) {
                $c1 = new jl_NullPointerException;
                $c2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(660));
                $c1.$suppressionEnabled = 1;
                $c1.$writableStackTrace = 1;
                $c1.$message = $c2;
                if ($rt_cls(kji_Intrinsics).$name === null)
                    $rt_cls(kji_Intrinsics).$name = otp_Platform_getName($rt_cls(kji_Intrinsics).$platformClass);
                $rt_throw(kji_Intrinsics_sanitizeStackTrace0($c1, $rt_cls(kji_Intrinsics).$name));
            }
            if ($c3 === null)
                kji_Intrinsics_throwParameterIsNullNPE($rt_s(659));
            var$5 = $k4.data;
            kji_Intrinsics_checkNotNullParameter($k4, $rt_s(711));
            $k1 = igtg_Circle_getBend($c1);
            $k2 = igtg_Circle_getBend($c2);
            $k3 = igtg_Circle_getBend($c3);
            $z1 = igtg_Circle_getCenter($c1);
            $z2 = igtg_Circle_getCenter($c2);
            $z3 = igtg_Circle_getCenter($c3);
            $zk1 = igtg_Complex_times0($z1, jl_Float_valueOf($k1));
            $zk2 = igtg_Complex_times0($z2, jl_Float_valueOf($k2));
            $zk3 = igtg_Complex_times0($z3, jl_Float_valueOf($k3));
            $sum = igtg_Complex_plus(igtg_Complex_plus($zk1, $zk2), $zk3);
            $root = igtg_Complex_times0(igtg_ComplexKt_sqrt(igtg_Complex_plus(igtg_Complex_plus(igtg_Complex_times($zk1, $zk2), igtg_Complex_times($zk2, $zk3)), igtg_Complex_times($zk1, $zk3))), jl_Integer_valueOf(2));
            $destination$iv$iv = new ju_ArrayList;
            var$18 = var$5.length;
            ju_ArrayList__init_2($destination$iv$iv, var$18);
            var$19 = 0;
            while (var$19 < var$18) {
                $item$iv$iv = var$5[var$19];
                ju_ArrayList_add($destination$iv$iv, k_TuplesKt_to(jl_Float_valueOf($item$iv$iv), igtg_Complex_times0(igtg_Complex_plus($sum, $root), jl_Float_valueOf(1.0 / $item$iv$iv))));
                var$19 = var$19 + 1 | 0;
            }
            $destination$iv$iv_0 = ju_ArrayList__init_1(kc_CollectionsKt__IterablesKt_collectionSizeOrDefault($destination$iv$iv, 10));
            $c3 = ju_AbstractList_iterator($destination$iv$iv);
            while (ju_AbstractList$1_hasNext($c3)) {
                $it = ju_AbstractList$1_next($c3);
                ju_ArrayList_add($destination$iv$iv_0, igtg_Circle__init_0(igtg_Complex_getReal(k_Pair_getSecond($it)), igtg_Complex_getImg(k_Pair_getSecond($it)), jl_Float_floatValue(k_Pair_getFirst($it)), null, 0, 0, null, 120, null));
            }
            $destination$iv$iv = ju_ArrayList__init_1(var$18);
            var$19 = 0;
            while (var$19 < var$18) {
                $item$iv$iv = var$5[var$19];
                ju_ArrayList_add($destination$iv$iv, k_TuplesKt_to(jl_Float_valueOf($item$iv$iv), igtg_Complex_times0(igtg_Complex_minus($sum, $root), jl_Float_valueOf(1.0 / $item$iv$iv))));
                var$19 = var$19 + 1 | 0;
            }
            $destination$iv$iv_1 = ju_ArrayList__init_1(kc_CollectionsKt__IterablesKt_collectionSizeOrDefault($destination$iv$iv, 10));
            $z1 = ju_AbstractList_iterator($destination$iv$iv);
            while (ju_AbstractList$1_hasNext($z1)) {
                $it = ju_AbstractList$1_next($z1);
                ju_ArrayList_add($destination$iv$iv_1, igtg_Circle__init_0(igtg_Complex_getReal(k_Pair_getSecond($it)), igtg_Complex_getImg(k_Pair_getSecond($it)), jl_Float_floatValue(k_Pair_getFirst($it)), null, 0, 0, null, 120, null));
            }
            return kc_CollectionsKt___CollectionsKt_toHashSet(kc_CollectionsKt___CollectionsKt_plus($destination$iv$iv_0, $destination$iv$iv_1));
        }
        $c1 = new jl_NullPointerException;
        $c2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(661));
        $c1.$suppressionEnabled = 1;
        $c1.$writableStackTrace = 1;
        $c1.$message = $c2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $c3 = $rt_cls(kji_Intrinsics).$name;
        $k4 = $c1.$stackTrace;
        var$5 = $k4 !== null ? $k4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        $k4 = var$5.data;
        var$18 = $k4.length;
        var$24 = (-1);
        var$19 = 0;
        while (var$19 < var$18) {
            if (jl_String_equals($c3, jl_StackTraceElement_getClassName($k4[var$19])))
                var$24 = var$19;
            var$19 = var$19 + 1 | 0;
        }
        var$19 = var$24 + 1 | 0;
        $c3 = var$5.constructor;
        if ($c3 === null)
            $c2 = null;
        else {
            $c2 = $c3.classObject;
            if ($c2 === null) {
                $c2 = new jl_Class;
                jl_Object__init_0($c2);
                $c2.$platformClass = $c3;
                $z1 = $c2;
                $c3.classObject = $z1;
            }
        }
        $z2 = $c2.$platformClass.$meta.item;
        if ($z2 === null)
            $c3 = null;
        else {
            $c3 = $z2.classObject;
            if ($c3 === null) {
                $c3 = new jl_Class;
                jl_Object__init_0($c3);
                $c3.$platformClass = $z2;
                $c2 = $c3;
                $z2.classObject = $c2;
            }
        }
        var$24 = var$18 - var$19 | 0;
        if ($c3 === null) {
            $c1 = new jl_NullPointerException;
            jl_Exception__init_0($c1);
            $rt_throw($c1);
        }
        if ($c3 === $rt_cls($rt_voidcls())) {
            $c1 = new jl_IllegalArgumentException;
            jl_Exception__init_0($c1);
            $rt_throw($c1);
        }
        if (var$24 < 0) {
            $c1 = new jl_NegativeArraySizeException;
            jl_Exception__init_0($c1);
            $rt_throw($c1);
        }
        $z1 = jlr_Array_newInstanceImpl($c3.$platformClass, var$24);
        var$24 = var$19;
        while (var$24 < var$18) {
            $z1.data[var$24 - var$19 | 0] = $k4[var$24];
            var$24 = var$24 + 1 | 0;
        }
        $c1.$stackTrace = $z1.$clone();
        $rt_throw($c1);
    }
    function igtg_Descartes__clinit_() {
        igtg_Descartes_INSTANCE = new igtg_Descartes;
    }
    function cbggg_ShapeRenderer$ShapeType() {
        jl_Enum.call(this);
        this.$glType = 0;
    }
    var cbggg_ShapeRenderer$ShapeType_Point = null;
    var cbggg_ShapeRenderer$ShapeType_Line = null;
    var cbggg_ShapeRenderer$ShapeType_Filled = null;
    var cbggg_ShapeRenderer$ShapeType_$VALUES = null;
    function cbggg_ShapeRenderer$ShapeType_$callClinit() {
        cbggg_ShapeRenderer$ShapeType_$callClinit = $rt_eraseClinit(cbggg_ShapeRenderer$ShapeType);
        cbggg_ShapeRenderer$ShapeType__clinit_();
    }
    function cbggg_ShapeRenderer$ShapeType__clinit_() {
        var var$1, var$2, var$3;
        var$1 = new cbggg_ShapeRenderer$ShapeType;
        cbggg_ShapeRenderer$ShapeType_$callClinit();
        var$1.$name0 = $rt_s(712);
        var$1.$ordinal = 0;
        var$1.$glType = 0;
        cbggg_ShapeRenderer$ShapeType_Point = var$1;
        var$2 = new cbggg_ShapeRenderer$ShapeType;
        var$2.$name0 = $rt_s(713);
        var$2.$ordinal = 1;
        var$2.$glType = 1;
        cbggg_ShapeRenderer$ShapeType_Line = var$2;
        var$3 = new cbggg_ShapeRenderer$ShapeType;
        var$3.$name0 = $rt_s(714);
        var$3.$ordinal = 2;
        var$3.$glType = 4;
        cbggg_ShapeRenderer$ShapeType_Filled = var$3;
        cbggg_ShapeRenderer$ShapeType_$VALUES = $rt_createArrayFromData(cbggg_ShapeRenderer$ShapeType, [var$1, var$2, var$3]);
    }
    function cgxgbtp_Preloader$Asset() {
        var a = this; jl_Object.call(a);
        a.$succeed = 0;
        a.$failed = 0;
        a.$isLoading = 0;
        a.$loaded = Long_ZERO;
        a.$url = null;
        a.$type1 = null;
        a.$size3 = Long_ZERO;
        a.$mimeType = null;
    }
    var cbgu_ObjectMap$Keys = $rt_classWithoutFields(cbgu_ObjectMap$MapIterator);
    function cbgu_ObjectMap$Keys_hasNext($this) {
        var var$1;
        if ($this.$valid0)
            return $this.$hasNext;
        var$1 = new cbgu_GdxRuntimeException;
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        var$1.$message = $rt_s(108);
        $rt_throw(var$1);
    }
    function cbgu_ObjectMap$Keys_next($this) {
        var $key, var$2, var$3, var$4, var$5;
        if (!$this.$hasNext) {
            $key = new ju_NoSuchElementException;
            $key.$suppressionEnabled = 1;
            $key.$writableStackTrace = 1;
            $rt_throw($key);
        }
        if (!$this.$valid0) {
            var$2 = new cbgu_GdxRuntimeException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            var$2.$message = $rt_s(108);
            $rt_throw(var$2);
        }
        var$3 = $this.$map.$keyTable.data;
        var$4 = $this.$nextIndex;
        $key = var$3[var$4];
        $this.$currentIndex = var$4;
        var$5 = var$3.length;
        a: {
            while (true) {
                var$4 = $this.$nextIndex + 1 | 0;
                $this.$nextIndex = var$4;
                if (var$4 >= var$5)
                    break;
                if (var$3[var$4] === null)
                    continue;
                else {
                    $this.$hasNext = 1;
                    break a;
                }
            }
            $this.$hasNext = 0;
        }
        return $key;
    }
    function cbgu_ObjectMap$Keys_iterator($this) {
        return $this;
    }
    function cbgu_ObjectMap$Keys_reset($this) {
        var var$1, var$2, var$3;
        $this.$currentIndex = (-1);
        $this.$nextIndex = (-1);
        var$1 = $this.$map.$keyTable.data;
        var$2 = var$1.length;
        a: {
            while (true) {
                var$3 = $this.$nextIndex + 1 | 0;
                $this.$nextIndex = var$3;
                if (var$3 >= var$2)
                    break;
                if (var$1[var$3] === null)
                    continue;
                else {
                    $this.$hasNext = 1;
                    break a;
                }
            }
            $this.$hasNext = 0;
        }
    }
    var igtg_ComplexKt = $rt_classWithoutFields();
    var igtg_ComplexKt_i = null;
    function igtg_ComplexKt_$callClinit() {
        igtg_ComplexKt_$callClinit = $rt_eraseClinit(igtg_ComplexKt);
        igtg_ComplexKt__clinit_();
    }
    function igtg_ComplexKt_sqrt($c) {
        var $m, $angle, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11;
        igtg_ComplexKt_$callClinit();
        if ($c !== null) {
            $m = $c.$real;
            $m = $m * $m;
            $angle = $c.$img;
            $m = jl_Math_sqrt($m + $angle * $angle);
            $angle = jl_Math_atan2($c.$img, $c.$real);
            $m = jl_Math_sqrt($m);
            $angle = $angle / 2.0;
            igtg_Complex_$callClinit();
            $c = new jl_Float;
            $c.$value1 = $m;
            var$4 = igtg_ComplexKt_i;
            var$5 = new igtg_Complex;
            $m = $angle * var$4.$real;
            $angle = $angle * var$4.$img;
            var$5.$real = $m;
            var$5.$img = $angle;
            return igtg_ComplexKt_times($c, igtg_ComplexKt_exp(var$5));
        }
        $c = new jl_NullPointerException;
        var$5 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(667));
        $c.$suppressionEnabled = 1;
        $c.$writableStackTrace = 1;
        $c.$message = var$5;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$4 = $rt_cls(kji_Intrinsics).$name;
        var$6 = $c.$stackTrace;
        var$7 = var$6 !== null ? var$6.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$6 = var$7.data;
        var$8 = var$6.length;
        var$9 = (-1);
        var$10 = 0;
        while (var$10 < var$8) {
            if (jl_String_equals(var$4, jl_StackTraceElement_getClassName(var$6[var$10])))
                var$9 = var$10;
            var$10 = var$10 + 1 | 0;
        }
        var$10 = var$9 + 1 | 0;
        var$4 = var$7.constructor;
        if (var$4 === null)
            var$5 = null;
        else {
            var$5 = var$4.classObject;
            if (var$5 === null) {
                var$5 = new jl_Class;
                jl_Object__init_0(var$5);
                var$5.$platformClass = var$4;
                var$11 = var$5;
                var$4.classObject = var$11;
            }
        }
        var$5 = var$5.$platformClass.$meta.item;
        if (var$5 === null)
            var$4 = null;
        else {
            var$4 = var$5.classObject;
            if (var$4 === null) {
                var$4 = new jl_Class;
                jl_Object__init_0(var$4);
                var$4.$platformClass = var$5;
                var$11 = var$4;
                var$5.classObject = var$11;
            }
        }
        var$9 = var$8 - var$10 | 0;
        if (var$4 === null) {
            $c = new jl_NullPointerException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$4 === $rt_cls($rt_voidcls())) {
            $c = new jl_IllegalArgumentException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$9 < 0) {
            $c = new jl_NegativeArraySizeException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        var$11 = jlr_Array_newInstanceImpl(var$4.$platformClass, var$9);
        var$9 = var$10;
        while (var$9 < var$8) {
            var$11.data[var$9 - var$10 | 0] = var$6[var$9];
            var$9 = var$9 + 1 | 0;
        }
        $c.$stackTrace = var$11.$clone();
        $rt_throw($c);
    }
    function igtg_ComplexKt_exp($c) {
        var $e, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        igtg_ComplexKt_$callClinit();
        if ($c !== null) {
            $e = jl_Math_exp($c.$real);
            var$3 = new igtg_Complex;
            var$4 = $e * jl_Math_cos($c.$img);
            $e = $e * jl_Math_sin($c.$img);
            igtg_Complex_$callClinit();
            var$3.$real = var$4;
            var$3.$img = $e;
            return var$3;
        }
        $c = new jl_NullPointerException;
        var$3 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(667));
        $c.$suppressionEnabled = 1;
        $c.$writableStackTrace = 1;
        $c.$message = var$3;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$3 = $rt_cls(kji_Intrinsics).$name;
        var$5 = $c.$stackTrace;
        var$6 = var$5 !== null ? var$5.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$5 = var$6.data;
        var$7 = var$5.length;
        var$8 = (-1);
        var$9 = 0;
        while (var$9 < var$7) {
            if (jl_String_equals(var$3, jl_StackTraceElement_getClassName(var$5[var$9])))
                var$8 = var$9;
            var$9 = var$9 + 1 | 0;
        }
        var$9 = var$8 + 1 | 0;
        var$10 = var$6.constructor;
        if (var$10 === null)
            var$3 = null;
        else {
            var$3 = var$10.classObject;
            if (var$3 === null) {
                var$3 = new jl_Class;
                jl_Object__init_0(var$3);
                var$3.$platformClass = var$10;
                var$11 = var$3;
                var$10.classObject = var$11;
            }
        }
        var$12 = var$3.$platformClass.$meta.item;
        if (var$12 === null)
            var$10 = null;
        else {
            var$10 = var$12.classObject;
            if (var$10 === null) {
                var$10 = new jl_Class;
                jl_Object__init_0(var$10);
                var$10.$platformClass = var$12;
                var$3 = var$10;
                var$12.classObject = var$3;
            }
        }
        var$8 = var$7 - var$9 | 0;
        if (var$10 === null) {
            $c = new jl_NullPointerException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$10 === $rt_cls($rt_voidcls())) {
            $c = new jl_IllegalArgumentException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        if (var$8 < 0) {
            $c = new jl_NegativeArraySizeException;
            jl_Exception__init_0($c);
            $rt_throw($c);
        }
        var$11 = jlr_Array_newInstanceImpl(var$10.$platformClass, var$8);
        var$8 = var$9;
        while (var$8 < var$7) {
            var$11.data[var$8 - var$9 | 0] = var$5[var$8];
            var$8 = var$8 + 1 | 0;
        }
        $c.$stackTrace = var$11.$clone();
        $rt_throw($c);
    }
    function igtg_ComplexKt_times($$this$times, $c) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12;
        igtg_ComplexKt_$callClinit();
        if ($$this$times !== null) {
            if ($c !== null) {
                var$3 = new igtg_Complex;
                var$4 = $$this$times.$value1;
                var$5 = var$4 * $c.$real;
                var$4 = var$4 * $c.$img;
                igtg_Complex_$callClinit();
                var$3.$real = var$5;
                var$3.$img = var$4;
                return var$3;
            }
            $$this$times = new jl_NullPointerException;
            $c = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(667));
            $$this$times.$suppressionEnabled = 1;
            $$this$times.$writableStackTrace = 1;
            $$this$times.$message = $c;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            var$3 = $rt_cls(kji_Intrinsics).$name;
            var$6 = $$this$times.$stackTrace;
            var$7 = var$6 !== null ? var$6.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$6 = var$7.data;
            var$8 = var$6.length;
            var$9 = (-1);
            var$10 = 0;
            while (var$10 < var$8) {
                if (jl_String_equals(var$3, jl_StackTraceElement_getClassName(var$6[var$10])))
                    var$9 = var$10;
                var$10 = var$10 + 1 | 0;
            }
            var$10 = var$9 + 1 | 0;
            var$3 = var$7.constructor;
            if (var$3 === null)
                $c = null;
            else {
                $c = var$3.classObject;
                if ($c === null) {
                    $c = new jl_Class;
                    jl_Object__init_0($c);
                    $c.$platformClass = var$3;
                    var$11 = $c;
                    var$3.classObject = var$11;
                }
            }
            var$12 = $c.$platformClass.$meta.item;
            if (var$12 === null)
                $c = null;
            else {
                $c = var$12.classObject;
                if ($c === null) {
                    $c = new jl_Class;
                    jl_Object__init_0($c);
                    $c.$platformClass = var$12;
                    var$3 = $c;
                    var$12.classObject = var$3;
                }
            }
            $c = jlr_Array_newInstance($c, var$8 - var$10 | 0);
            var$9 = var$10;
            while (var$9 < var$8) {
                $c.data[var$9 - var$10 | 0] = var$6[var$9];
                var$9 = var$9 + 1 | 0;
            }
            $$this$times.$stackTrace = $c.$clone();
            $rt_throw($$this$times);
        }
        $$this$times = new jl_NullPointerException;
        $c = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(715));
        $$this$times.$suppressionEnabled = 1;
        $$this$times.$writableStackTrace = 1;
        $$this$times.$message = $c;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$3 = $rt_cls(kji_Intrinsics).$name;
        var$6 = $$this$times.$stackTrace;
        var$7 = var$6 !== null ? var$6.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$6 = var$7.data;
        var$8 = var$6.length;
        var$9 = (-1);
        var$10 = 0;
        while (var$10 < var$8) {
            if (jl_String_equals(var$3, jl_StackTraceElement_getClassName(var$6[var$10])))
                var$9 = var$10;
            var$10 = var$10 + 1 | 0;
        }
        var$10 = var$9 + 1 | 0;
        var$3 = var$7.constructor;
        if (var$3 === null)
            $c = null;
        else {
            $c = var$3.classObject;
            if ($c === null) {
                $c = new jl_Class;
                jl_Object__init_0($c);
                $c.$platformClass = var$3;
                var$11 = $c;
                var$3.classObject = var$11;
            }
        }
        var$12 = $c.$platformClass.$meta.item;
        if (var$12 === null)
            var$3 = null;
        else {
            var$3 = var$12.classObject;
            if (var$3 === null) {
                var$3 = new jl_Class;
                jl_Object__init_0(var$3);
                var$3.$platformClass = var$12;
                $c = var$3;
                var$12.classObject = $c;
            }
        }
        var$9 = var$8 - var$10 | 0;
        if (var$3 === null) {
            $$this$times = new jl_NullPointerException;
            jl_Exception__init_0($$this$times);
            $rt_throw($$this$times);
        }
        if (var$3 === $rt_cls($rt_voidcls())) {
            $$this$times = new jl_IllegalArgumentException;
            jl_Exception__init_0($$this$times);
            $rt_throw($$this$times);
        }
        if (var$9 < 0) {
            $$this$times = new jl_NegativeArraySizeException;
            jl_Exception__init_0($$this$times);
            $rt_throw($$this$times);
        }
        var$11 = jlr_Array_newInstanceImpl(var$3.$platformClass, var$9);
        var$9 = var$10;
        while (var$9 < var$8) {
            var$11.data[var$9 - var$10 | 0] = var$6[var$9];
            var$9 = var$9 + 1 | 0;
        }
        $$this$times.$stackTrace = var$11.$clone();
        $rt_throw($$this$times);
    }
    function igtg_ComplexKt__clinit_() {
        var var$1;
        var$1 = new igtg_Complex;
        igtg_Complex_$callClinit();
        igtg_Complex__init_0(var$1, 0.0, 1.0);
        igtg_ComplexKt_i = var$1;
    }
    var kc_CollectionsKt__CollectionsJVMKt = $rt_classWithoutFields();
    var kc_CollectionsKt__CollectionsKt = $rt_classWithoutFields(kc_CollectionsKt__CollectionsJVMKt);
    var kc_CollectionsKt__IterablesKt = $rt_classWithoutFields(kc_CollectionsKt__CollectionsKt);
    function kc_CollectionsKt__IterablesKt_collectionSizeOrDefault($$this$collectionSizeOrDefault, $default) {
        var var$3, var$4, var$5, var$6, var$7, var$8, var$9;
        if ($$this$collectionSizeOrDefault !== null) {
            if ($rt_isInstance($$this$collectionSizeOrDefault, ju_Collection))
                $default = $$this$collectionSizeOrDefault.$size6;
            return $default;
        }
        $$this$collectionSizeOrDefault = new jl_NullPointerException;
        var$3 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(715));
        $$this$collectionSizeOrDefault.$suppressionEnabled = 1;
        $$this$collectionSizeOrDefault.$writableStackTrace = 1;
        $$this$collectionSizeOrDefault.$message = var$3;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$3 = $rt_cls(kji_Intrinsics).$name;
        var$4 = $$this$collectionSizeOrDefault.$stackTrace;
        var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$4 = var$5.data;
        var$6 = var$4.length;
        var$7 = (-1);
        $default = 0;
        while ($default < var$6) {
            if (jl_String_equals(var$3, jl_StackTraceElement_getClassName(var$4[$default])))
                var$7 = $default;
            $default = $default + 1 | 0;
        }
        $default = var$7 + 1 | 0;
        var$8 = var$5.constructor;
        if (var$8 === null)
            var$3 = null;
        else {
            var$3 = var$8.classObject;
            if (var$3 === null) {
                var$3 = new jl_Class;
                jl_Object__init_0(var$3);
                var$3.$platformClass = var$8;
                var$9 = var$3;
                var$8.classObject = var$9;
            }
        }
        var$3 = var$3.$platformClass.$meta.item;
        if (var$3 === null)
            var$8 = null;
        else {
            var$8 = var$3.classObject;
            if (var$8 === null) {
                var$8 = new jl_Class;
                jl_Object__init_0(var$8);
                var$8.$platformClass = var$3;
                var$9 = var$8;
                var$3.classObject = var$9;
            }
        }
        var$7 = var$6 - $default | 0;
        if (var$8 === null) {
            $$this$collectionSizeOrDefault = new jl_NullPointerException;
            jl_Exception__init_0($$this$collectionSizeOrDefault);
            $rt_throw($$this$collectionSizeOrDefault);
        }
        if (var$8 === $rt_cls($rt_voidcls())) {
            $$this$collectionSizeOrDefault = new jl_IllegalArgumentException;
            jl_Exception__init_0($$this$collectionSizeOrDefault);
            $rt_throw($$this$collectionSizeOrDefault);
        }
        if (var$7 < 0) {
            $$this$collectionSizeOrDefault = new jl_NegativeArraySizeException;
            jl_Exception__init_0($$this$collectionSizeOrDefault);
            $rt_throw($$this$collectionSizeOrDefault);
        }
        var$9 = jlr_Array_newInstanceImpl(var$8.$platformClass, var$7);
        var$7 = $default;
        while (var$7 < var$6) {
            var$9.data[var$7 - $default | 0] = var$4[var$7];
            var$7 = var$7 + 1 | 0;
        }
        $$this$collectionSizeOrDefault.$stackTrace = var$9.$clone();
        $rt_throw($$this$collectionSizeOrDefault);
    }
    var kc_CollectionsKt__IteratorsJVMKt = $rt_classWithoutFields(kc_CollectionsKt__IterablesKt);
    var kc_CollectionsKt__IteratorsKt = $rt_classWithoutFields(kc_CollectionsKt__IteratorsJVMKt);
    var kc_CollectionsKt__MutableCollectionsJVMKt = $rt_classWithoutFields(kc_CollectionsKt__IteratorsKt);
    var kc_CollectionsKt__MutableCollectionsKt = $rt_classWithoutFields(kc_CollectionsKt__MutableCollectionsJVMKt);
    function kc_CollectionsKt__MutableCollectionsKt_addAll($$this$addAll, $elements) {
        var $result, var$4, $item, var$6, var$7, var$8, var$9, var$10;
        if ($$this$addAll !== null) {
            if ($elements !== null) {
                if ($rt_isInstance($elements, ju_Collection))
                    return ju_AbstractCollection_addAll($$this$addAll, $elements);
                $result = 0;
                var$4 = ju_AbstractList$1__init_($elements);
                while (ju_AbstractList$1_hasNext(var$4)) {
                    if (!ju_ArrayList_add($$this$addAll, ju_AbstractList$1_next(var$4)))
                        continue;
                    $result = 1;
                }
                return $result;
            }
            $$this$addAll = new jl_NullPointerException;
            $elements = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(716));
            $$this$addAll.$suppressionEnabled = 1;
            $$this$addAll.$writableStackTrace = 1;
            $$this$addAll.$message = $elements;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            $item = $rt_cls(kji_Intrinsics).$name;
            var$6 = $$this$addAll.$stackTrace;
            var$7 = var$6 !== null ? var$6.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$6 = var$7.data;
            var$8 = var$6.length;
            var$9 = (-1);
            $result = 0;
            while ($result < var$8) {
                if (jl_String_equals($item, jl_StackTraceElement_getClassName(var$6[$result])))
                    var$9 = $result;
                $result = $result + 1 | 0;
            }
            $result = var$9 + 1 | 0;
            $item = var$7.constructor;
            if ($item === null)
                $elements = null;
            else {
                $elements = $item.classObject;
                if ($elements === null) {
                    $elements = new jl_Class;
                    jl_Object__init_0($elements);
                    $elements.$platformClass = $item;
                    var$4 = $elements;
                    $item.classObject = var$4;
                }
            }
            var$10 = $elements.$platformClass.$meta.item;
            if (var$10 === null)
                $elements = null;
            else {
                $elements = var$10.classObject;
                if ($elements === null) {
                    $elements = new jl_Class;
                    jl_Object__init_0($elements);
                    $elements.$platformClass = var$10;
                    $item = $elements;
                    var$10.classObject = $item;
                }
            }
            $elements = jlr_Array_newInstance($elements, var$8 - $result | 0);
            var$9 = $result;
            while (var$9 < var$8) {
                $elements.data[var$9 - $result | 0] = var$6[var$9];
                var$9 = var$9 + 1 | 0;
            }
            $$this$addAll.$stackTrace = $elements.$clone();
            $rt_throw($$this$addAll);
        }
        $$this$addAll = new jl_NullPointerException;
        $elements = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(715));
        $$this$addAll.$suppressionEnabled = 1;
        $$this$addAll.$writableStackTrace = 1;
        $$this$addAll.$message = $elements;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $item = $rt_cls(kji_Intrinsics).$name;
        var$6 = $$this$addAll.$stackTrace;
        var$7 = var$6 !== null ? var$6.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$6 = var$7.data;
        var$8 = var$6.length;
        var$9 = (-1);
        $result = 0;
        while ($result < var$8) {
            if (jl_String_equals($item, jl_StackTraceElement_getClassName(var$6[$result])))
                var$9 = $result;
            $result = $result + 1 | 0;
        }
        $result = var$9 + 1 | 0;
        $item = var$7.constructor;
        if ($item === null)
            $elements = null;
        else {
            $elements = $item.classObject;
            if ($elements === null) {
                $elements = new jl_Class;
                jl_Object__init_0($elements);
                $elements.$platformClass = $item;
                var$4 = $elements;
                $item.classObject = var$4;
            }
        }
        var$10 = $elements.$platformClass.$meta.item;
        if (var$10 === null)
            $item = null;
        else {
            $item = var$10.classObject;
            if ($item === null) {
                $item = new jl_Class;
                jl_Object__init_0($item);
                $item.$platformClass = var$10;
                $elements = $item;
                var$10.classObject = $elements;
            }
        }
        var$9 = var$8 - $result | 0;
        if ($item === null) {
            $$this$addAll = new jl_NullPointerException;
            jl_Exception__init_0($$this$addAll);
            $rt_throw($$this$addAll);
        }
        if ($item === $rt_cls($rt_voidcls())) {
            $$this$addAll = new jl_IllegalArgumentException;
            jl_Exception__init_0($$this$addAll);
            $rt_throw($$this$addAll);
        }
        if (var$9 < 0) {
            $$this$addAll = new jl_NegativeArraySizeException;
            jl_Exception__init_0($$this$addAll);
            $rt_throw($$this$addAll);
        }
        var$4 = jlr_Array_newInstanceImpl($item.$platformClass, var$9);
        var$9 = $result;
        while (var$9 < var$8) {
            var$4.data[var$9 - $result | 0] = var$6[var$9];
            var$9 = var$9 + 1 | 0;
        }
        $$this$addAll.$stackTrace = var$4.$clone();
        $rt_throw($$this$addAll);
    }
    var kc_CollectionsKt__ReversedViewsKt = $rt_classWithoutFields(kc_CollectionsKt__MutableCollectionsKt);
    var kc_CollectionsKt___CollectionsJvmKt = $rt_classWithoutFields(kc_CollectionsKt__ReversedViewsKt);
    var kc_CollectionsKt___CollectionsKt = $rt_classWithoutFields(kc_CollectionsKt___CollectionsJvmKt);
    function kc_CollectionsKt___CollectionsKt_toCollection($$this$toCollection, $destination) {
        var $item, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($$this$toCollection !== null) {
            if ($destination !== null) {
                $$this$toCollection = ju_AbstractList_iterator($$this$toCollection);
                while (ju_AbstractList$1_hasNext($$this$toCollection)) {
                    ju_HashSet_add($destination, ju_AbstractList$1_next($$this$toCollection));
                }
                return $destination;
            }
            $$this$toCollection = new jl_NullPointerException;
            $destination = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(717));
            $$this$toCollection.$suppressionEnabled = 1;
            $$this$toCollection.$writableStackTrace = 1;
            $$this$toCollection.$message = $destination;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            $item = $rt_cls(kji_Intrinsics).$name;
            var$4 = $$this$toCollection.$stackTrace;
            var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$4 = var$5.data;
            var$6 = var$4.length;
            var$7 = (-1);
            var$8 = 0;
            while (var$8 < var$6) {
                if (jl_String_equals($item, jl_StackTraceElement_getClassName(var$4[var$8])))
                    var$7 = var$8;
                var$8 = var$8 + 1 | 0;
            }
            var$8 = var$7 + 1 | 0;
            $item = var$5.constructor;
            if ($item === null)
                $destination = null;
            else {
                $destination = $item.classObject;
                if ($destination === null) {
                    $destination = new jl_Class;
                    jl_Object__init_0($destination);
                    $destination.$platformClass = $item;
                    var$9 = $destination;
                    $item.classObject = var$9;
                }
            }
            var$10 = $destination.$platformClass.$meta.item;
            if (var$10 === null)
                $item = null;
            else {
                $item = var$10.classObject;
                if ($item === null) {
                    $item = new jl_Class;
                    jl_Object__init_0($item);
                    $item.$platformClass = var$10;
                    $destination = $item;
                    var$10.classObject = $destination;
                }
            }
            var$7 = var$6 - var$8 | 0;
            if ($item === null) {
                $$this$toCollection = new jl_NullPointerException;
                jl_RuntimeException__init_1($$this$toCollection);
                $rt_throw($$this$toCollection);
            }
            if ($item === $rt_cls($rt_voidcls()))
                $rt_throw(jl_IllegalArgumentException__init_());
            if (var$7 < 0)
                $rt_throw(jl_NegativeArraySizeException__init_());
            var$9 = jlr_Array_newInstanceImpl(jl_Class_getPlatformClass($item), var$7);
            var$7 = var$8;
            while (var$7 < var$6) {
                var$9.data[var$7 - var$8 | 0] = var$4[var$7];
                var$7 = var$7 + 1 | 0;
            }
            jl_Throwable_setStackTrace($$this$toCollection, var$9);
            $rt_throw($$this$toCollection);
        }
        $$this$toCollection = new jl_NullPointerException;
        $destination = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(715));
        $$this$toCollection.$suppressionEnabled = 1;
        $$this$toCollection.$writableStackTrace = 1;
        $$this$toCollection.$message = $destination;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $item = $rt_cls(kji_Intrinsics).$name;
        var$4 = $$this$toCollection.$stackTrace;
        var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$4 = var$5.data;
        var$6 = var$4.length;
        var$7 = (-1);
        var$8 = 0;
        while (var$8 < var$6) {
            if (jl_String_equals($item, jl_StackTraceElement_getClassName(var$4[var$8])))
                var$7 = var$8;
            var$8 = var$8 + 1 | 0;
        }
        var$8 = var$7 + 1 | 0;
        $item = var$5.constructor;
        if ($item === null)
            $destination = null;
        else {
            $destination = $item.classObject;
            if ($destination === null) {
                $destination = new jl_Class;
                jl_Object__init_0($destination);
                $destination.$platformClass = $item;
                var$9 = $destination;
                $item.classObject = var$9;
            }
        }
        var$10 = $destination.$platformClass.$meta.item;
        if (var$10 === null)
            $item = null;
        else {
            $item = var$10.classObject;
            if ($item === null) {
                $item = new jl_Class;
                jl_Object__init_0($item);
                $item.$platformClass = var$10;
                $destination = $item;
                var$10.classObject = $destination;
            }
        }
        var$7 = var$6 - var$8 | 0;
        if ($item === null) {
            $$this$toCollection = new jl_NullPointerException;
            jl_Exception__init_0($$this$toCollection);
            $rt_throw($$this$toCollection);
        }
        if ($item === $rt_cls($rt_voidcls())) {
            $$this$toCollection = new jl_IllegalArgumentException;
            jl_Exception__init_0($$this$toCollection);
            $rt_throw($$this$toCollection);
        }
        if (var$7 < 0) {
            $$this$toCollection = new jl_NegativeArraySizeException;
            jl_Exception__init_0($$this$toCollection);
            $rt_throw($$this$toCollection);
        }
        var$9 = jlr_Array_newInstanceImpl($item.$platformClass, var$7);
        var$7 = var$8;
        while (var$7 < var$6) {
            var$9.data[var$7 - var$8 | 0] = var$4[var$7];
            var$7 = var$7 + 1 | 0;
        }
        $$this$toCollection.$stackTrace = var$9.$clone();
        $rt_throw($$this$toCollection);
    }
    function kc_CollectionsKt___CollectionsKt_toHashSet($$this$toHashSet) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($$this$toHashSet !== null) {
            var$2 = new ju_HashSet;
            var$3 = 12;
            if ($rt_isInstance($$this$toHashSet, ju_Collection))
                var$3 = $$this$toHashSet.$size6;
            ju_HashSet__init_(var$2, kc_MapsKt__MapsJVMKt_mapCapacity(var$3));
            return kc_CollectionsKt___CollectionsKt_toCollection($$this$toHashSet, var$2);
        }
        $$this$toHashSet = new jl_NullPointerException;
        var$2 = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(715));
        $$this$toHashSet.$suppressionEnabled = 1;
        $$this$toHashSet.$writableStackTrace = 1;
        $$this$toHashSet.$message = var$2;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        var$2 = $rt_cls(kji_Intrinsics).$name;
        var$4 = $$this$toHashSet.$stackTrace;
        var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$4 = var$5.data;
        var$6 = var$4.length;
        var$7 = (-1);
        var$3 = 0;
        while (var$3 < var$6) {
            if (jl_String_equals(var$2, jl_StackTraceElement_getClassName(var$4[var$3])))
                var$7 = var$3;
            var$3 = var$3 + 1 | 0;
        }
        var$3 = var$7 + 1 | 0;
        var$8 = var$5.constructor;
        if (var$8 === null)
            var$9 = null;
        else {
            var$9 = var$8.classObject;
            if (var$9 === null) {
                var$9 = new jl_Class;
                jl_Object__init_0(var$9);
                var$9.$platformClass = var$8;
                var$2 = var$9;
                var$8.classObject = var$2;
            }
        }
        var$9 = var$9.$platformClass.$meta.item;
        if (var$9 === null)
            var$10 = null;
        else {
            var$10 = var$9.classObject;
            if (var$10 === null) {
                var$10 = new jl_Class;
                jl_Object__init_0(var$10);
                var$10.$platformClass = var$9;
                var$2 = var$10;
                var$9.classObject = var$2;
            }
        }
        var$7 = var$6 - var$3 | 0;
        if (var$10 === null) {
            $$this$toHashSet = new jl_NullPointerException;
            jl_Exception__init_0($$this$toHashSet);
            $rt_throw($$this$toHashSet);
        }
        if (var$10 === $rt_cls($rt_voidcls())) {
            $$this$toHashSet = new jl_IllegalArgumentException;
            jl_Exception__init_0($$this$toHashSet);
            $rt_throw($$this$toHashSet);
        }
        if (var$7 < 0) {
            $$this$toHashSet = new jl_NegativeArraySizeException;
            jl_Exception__init_0($$this$toHashSet);
            $rt_throw($$this$toHashSet);
        }
        var$8 = jlr_Array_newInstanceImpl(var$10.$platformClass, var$7);
        var$7 = var$3;
        while (var$7 < var$6) {
            var$8.data[var$7 - var$3 | 0] = var$4[var$7];
            var$7 = var$7 + 1 | 0;
        }
        $$this$toHashSet.$stackTrace = var$8.$clone();
        $rt_throw($$this$toHashSet);
    }
    function kc_CollectionsKt___CollectionsKt_plus($$this$plus, $elements) {
        var $result, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        if ($$this$plus !== null) {
            if ($elements !== null) {
                if (!$rt_isInstance($elements, ju_Collection)) {
                    $result = ju_ArrayList__init_3($$this$plus);
                    kc_CollectionsKt__MutableCollectionsKt_addAll($result, $elements);
                    return $result;
                }
                $result = ju_ArrayList__init_1($$this$plus.$size6 + $elements.$size6 | 0);
                ju_AbstractCollection_addAll($result, $$this$plus);
                ju_AbstractCollection_addAll($result, $elements);
                return $result;
            }
            $$this$plus = new jl_NullPointerException;
            $elements = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(716));
            $$this$plus.$suppressionEnabled = 1;
            $$this$plus.$writableStackTrace = 1;
            $$this$plus.$message = $elements;
            if ($rt_cls(kji_Intrinsics).$name === null)
                $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
            $result = $rt_cls(kji_Intrinsics).$name;
            var$4 = $$this$plus.$stackTrace;
            var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
            var$4 = var$5.data;
            var$6 = var$4.length;
            var$7 = (-1);
            var$8 = 0;
            while (var$8 < var$6) {
                if (jl_String_equals($result, jl_StackTraceElement_getClassName(var$4[var$8])))
                    var$7 = var$8;
                var$8 = var$8 + 1 | 0;
            }
            var$8 = var$7 + 1 | 0;
            $result = var$5.constructor;
            if ($result === null)
                $elements = null;
            else {
                $elements = $result.classObject;
                if ($elements === null) {
                    $elements = new jl_Class;
                    jl_Object__init_0($elements);
                    $elements.$platformClass = $result;
                    var$9 = $elements;
                    $result.classObject = var$9;
                }
            }
            var$10 = $elements.$platformClass.$meta.item;
            if (var$10 === null)
                $elements = null;
            else {
                $elements = var$10.classObject;
                if ($elements === null) {
                    $elements = new jl_Class;
                    jl_Object__init_0($elements);
                    $elements.$platformClass = var$10;
                    $result = $elements;
                    var$10.classObject = $result;
                }
            }
            $elements = jlr_Array_newInstance($elements, var$6 - var$8 | 0);
            var$7 = var$8;
            while (var$7 < var$6) {
                $elements.data[var$7 - var$8 | 0] = var$4[var$7];
                var$7 = var$7 + 1 | 0;
            }
            $$this$plus.$stackTrace = $elements.$clone();
            $rt_throw($$this$plus);
        }
        $$this$plus = new jl_NullPointerException;
        $elements = kji_Intrinsics_createParameterIsNullExceptionMessage($rt_s(715));
        $$this$plus.$suppressionEnabled = 1;
        $$this$plus.$writableStackTrace = 1;
        $$this$plus.$message = $elements;
        if ($rt_cls(kji_Intrinsics).$name === null)
            $rt_cls(kji_Intrinsics).$name = $rt_str($rt_cls(kji_Intrinsics).$platformClass.$meta.name);
        $result = $rt_cls(kji_Intrinsics).$name;
        var$4 = $$this$plus.$stackTrace;
        var$5 = var$4 !== null ? var$4.$clone() : $rt_createArray(jl_StackTraceElement, 0);
        var$4 = var$5.data;
        var$6 = var$4.length;
        var$7 = (-1);
        var$8 = 0;
        while (var$8 < var$6) {
            if (jl_String_equals($result, jl_StackTraceElement_getClassName(var$4[var$8])))
                var$7 = var$8;
            var$8 = var$8 + 1 | 0;
        }
        var$8 = var$7 + 1 | 0;
        $result = var$5.constructor;
        if ($result === null)
            $elements = null;
        else {
            $elements = $result.classObject;
            if ($elements === null) {
                $elements = new jl_Class;
                jl_Object__init_0($elements);
                $elements.$platformClass = $result;
                var$9 = $elements;
                $result.classObject = var$9;
            }
        }
        var$10 = $elements.$platformClass.$meta.item;
        if (var$10 === null)
            $result = null;
        else {
            $result = var$10.classObject;
            if ($result === null) {
                $result = new jl_Class;
                jl_Object__init_0($result);
                $result.$platformClass = var$10;
                $elements = $result;
                var$10.classObject = $elements;
            }
        }
        var$7 = var$6 - var$8 | 0;
        if ($result === null) {
            $$this$plus = new jl_NullPointerException;
            jl_Exception__init_0($$this$plus);
            $rt_throw($$this$plus);
        }
        if ($result === $rt_cls($rt_voidcls())) {
            $$this$plus = new jl_IllegalArgumentException;
            jl_Exception__init_0($$this$plus);
            $rt_throw($$this$plus);
        }
        if (var$7 < 0) {
            $$this$plus = new jl_NegativeArraySizeException;
            jl_Exception__init_0($$this$plus);
            $rt_throw($$this$plus);
        }
        var$9 = jlr_Array_newInstanceImpl($result.$platformClass, var$7);
        var$7 = var$8;
        while (var$7 < var$6) {
            var$9.data[var$7 - var$8 | 0] = var$4[var$7];
            var$7 = var$7 + 1 | 0;
        }
        $$this$plus.$stackTrace = var$9.$clone();
        $rt_throw($$this$plus);
    }
    var kc_CollectionsKt = $rt_classWithoutFields(kc_CollectionsKt___CollectionsKt);
    var k_TuplesKt = $rt_classWithoutFields();
    function k_TuplesKt_to($$this$to, $that) {
        var var$3;
        var$3 = new k_Pair;
        var$3.$first2 = $$this$to;
        var$3.$second = $that;
        return var$3;
    }
    function k_Pair() {
        var a = this; jl_Object.call(a);
        a.$first2 = null;
        a.$second = null;
    }
    function k_Pair_getFirst($this) {
        return $this.$first2;
    }
    function k_Pair_getSecond($this) {
        return $this.$second;
    }
    function k_Pair_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7;
        var$1 = new jl_StringBuilder;
        var$1.$buffer = $rt_createCharArray(16);
        var$2 = var$1.$length;
        jl_AbstractStringBuilder_insertSpace(var$1, var$2, var$2 + 1 | 0);
        var$1.$buffer.data[var$2] = 40;
        var$3 = $this.$first2;
        var$4 = var$1.$length;
        if (var$3 === null)
            var$3 = $rt_s(1);
        else {
            var$5 = var$3.$value1;
            var$3 = new jl_StringBuilder;
            jl_AbstractStringBuilder__init_(var$3);
            jl_AbstractStringBuilder_append2(var$3, var$5);
            var$3 = jl_AbstractStringBuilder_toString(var$3);
        }
        jl_AbstractStringBuilder_insert(var$1, var$4, var$3);
        jl_AbstractStringBuilder_insert(var$1, var$1.$length, $rt_s(61));
        var$3 = $this.$second;
        jl_AbstractStringBuilder_insert(var$1, var$1.$length, var$3 === null ? $rt_s(1) : igtg_Complex_toString(var$3));
        var$2 = var$1.$length;
        jl_AbstractStringBuilder_insertSpace(var$1, var$2, var$2 + 1 | 0);
        var$6 = var$1.$buffer;
        var$6.data[var$2] = 41;
        var$3 = new jl_String;
        var$2 = var$1.$length;
        jl_String_$callClinit();
        var$7 = $rt_createCharArray(var$2);
        var$3.$characters = var$7;
        jl_System_fastArraycopy(var$6, 0, var$7, 0, var$2);
        return var$3;
    }
    function k_Pair_hashCode($this) {
        var var$1, $result, var$3, var$4;
        var$1 = $this.$first2;
        if (var$1 === null)
            $result = 0;
        else {
            var$3 = var$1.$value1;
            $result = ($rt_globals.isNaN(var$3) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$3);
        }
        var$4 = $result * 31 | 0;
        var$1 = $this.$second;
        if (var$1 === null)
            $result = 0;
        else {
            var$3 = var$1.$real;
            $result = (($rt_globals.isNaN(var$3) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$3)) * 31 | 0;
            var$3 = var$1.$img;
            $result = $result + (($rt_globals.isNaN(var$3) ? 1 : 0) ? 2143289344 : $rt_floatToRawIntBits(var$3)) | 0;
        }
        return var$4 + $result | 0;
    }
    function k_Pair_equals($this, $other) {
        var var$2, var$3, var$4, var$5, var$6;
        if ($this === $other)
            return 1;
        if (!($other instanceof k_Pair))
            return 0;
        $other = $other;
        var$2 = $this.$first2;
        var$3 = $other.$first2;
        if (var$2 === null)
            var$4 = var$3 !== null ? 0 : 1;
        else if (var$2 === var$3)
            var$4 = 1;
        else
            a: {
                if (var$3 instanceof jl_Float) {
                    var$5 = var$2.$value1;
                    var$6 = var$3.$value1;
                    if (var$5 !== var$5 ? (var$6 === var$6 ? 0 : 1) : $rt_floatToRawIntBits(var$5) != $rt_floatToRawIntBits(var$6) ? 0 : 1) {
                        var$4 = 1;
                        break a;
                    }
                }
                var$4 = 0;
            }
        if (!var$4)
            return 0;
        var$2 = $this.$second;
        $other = $other.$second;
        if (var$2 !== null ? igtg_Complex_equals(var$2, $other) : $other !== null ? 0 : 1)
            return 1;
        return 0;
    }
    var ju_Set = $rt_classWithoutFields(0);
    function jnci_BufferedDecoder$Controller() {
        var a = this; jl_Object.call(a);
        a.$in0 = null;
        a.$out1 = null;
        a.$inPosition0 = 0;
        a.$outPosition0 = 0;
    }
    function jnci_BufferedDecoder$Controller_hasMoreInput($this, $sz) {
        var var$2;
        var$2 = $this.$in0;
        return (var$2.$limit - var$2.$position | 0) < $sz ? 0 : 1;
    }
    function jnci_BufferedDecoder$Controller_hasMoreOutput($this, $sz) {
        var var$2;
        var$2 = $this.$out1;
        return (var$2.$limit - var$2.$position | 0) < $sz ? 0 : 1;
    }
    var ka_DisposablesKt = $rt_classWithoutFields();
    function cbgu_StringBuilder() {
        var a = this; jl_Object.call(a);
        a.$chars = null;
        a.$length2 = 0;
    }
    var cbgu_StringBuilder_digits = null;
    function cbgu_StringBuilder_enlargeBuffer($this, $min) {
        var var$2, var$3, $newSize, $newData;
        var$2 = $this.$chars;
        var$3 = var$2.data.length;
        $newSize = ((var$3 >> 1) + var$3 | 0) + 2 | 0;
        if ($min > $newSize)
            $newSize = $min;
        $newData = $rt_createCharArray($newSize);
        jl_System_fastArraycopy(var$2, 0, $newData, 0, $this.$length2);
        $this.$chars = $newData;
    }
    function cbgu_StringBuilder_appendNull($this) {
        var $newSize, var$2, var$3;
        $newSize = $this.$length2 + 4 | 0;
        if ($newSize > $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, $newSize);
        var$2 = $this.$chars.data;
        var$3 = $this.$length2;
        $newSize = var$3 + 1 | 0;
        $this.$length2 = $newSize;
        var$2[var$3] = 110;
        var$3 = $newSize + 1 | 0;
        $this.$length2 = var$3;
        var$2[$newSize] = 117;
        $newSize = var$3 + 1 | 0;
        $this.$length2 = $newSize;
        var$2[var$3] = 108;
        $this.$length2 = $newSize + 1 | 0;
        var$2[$newSize] = 108;
    }
    function cbgu_StringBuilder_append0($this, $ch) {
        var var$2, var$3, var$4;
        var$2 = $this.$length2;
        if (var$2 == $this.$chars.data.length)
            cbgu_StringBuilder_enlargeBuffer($this, var$2 + 1 | 0);
        var$3 = $this.$chars.data;
        var$4 = $this.$length2;
        $this.$length2 = var$4 + 1 | 0;
        var$3[var$4] = $ch;
    }
    function cbgu_StringBuilder_append($this, $value, $minLength, $prefix) {
        var $j, var$5, var$6, var$7;
        if ($value == (-2147483648)) {
            $j = $rt_s(718).$characters.data.length;
            $value = $this.$length2 + $j | 0;
            if ($value > $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $value);
            jl_String_getChars($rt_s(718), 0, $j, $this.$chars, $this.$length2);
            $this.$length2 = $value;
            return $this;
        }
        if ($value < 0) {
            $j = $this.$length2;
            if ($j == $this.$chars.data.length)
                cbgu_StringBuilder_enlargeBuffer($this, $j + 1 | 0);
            var$5 = $this.$chars.data;
            var$6 = $this.$length2;
            $this.$length2 = var$6 + 1 | 0;
            var$5[var$6] = 45;
            $value =  -$value | 0;
        }
        a: {
            if ($minLength > 1) {
                var$7 = $value >= 0 ? 1 : 2;
                var$6 = $value;
                while (true) {
                    var$6 = var$6 / 10 | 0;
                    if (!var$6)
                        break;
                    var$7 = var$7 + 1 | 0;
                }
                $j = $minLength - var$7 | 0;
                while (true) {
                    if ($j <= 0)
                        break a;
                    $minLength = $this.$length2;
                    if ($minLength == $this.$chars.data.length)
                        cbgu_StringBuilder_enlargeBuffer($this, $minLength + 1 | 0);
                    var$5 = $this.$chars.data;
                    var$7 = $this.$length2;
                    $this.$length2 = var$7 + 1 | 0;
                    var$5[var$7] = $prefix;
                    $j = $j + (-1) | 0;
                }
            }
        }
        if ($value >= 10000) {
            if ($value >= 1000000000) {
                $minLength = cbgu_StringBuilder_digits.data[Long_lo(Long_div(Long_rem(Long_fromInt($value), Long_create(1410065408, 2)), Long_fromInt(1000000000)))];
                $prefix = $this.$length2;
                if ($prefix == $this.$chars.data.length)
                    cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
                var$5 = $this.$chars.data;
                $j = $this.$length2;
                $this.$length2 = $j + 1 | 0;
                var$5[$j] = $minLength;
            }
            if ($value >= 100000000) {
                $minLength = cbgu_StringBuilder_digits.data[($value % 1000000000 | 0) / 100000000 | 0];
                $prefix = $this.$length2;
                if ($prefix == $this.$chars.data.length)
                    cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
                var$5 = $this.$chars.data;
                $j = $this.$length2;
                $this.$length2 = $j + 1 | 0;
                var$5[$j] = $minLength;
            }
            if ($value >= 10000000) {
                $minLength = cbgu_StringBuilder_digits.data[($value % 100000000 | 0) / 10000000 | 0];
                $prefix = $this.$length2;
                if ($prefix == $this.$chars.data.length)
                    cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
                var$5 = $this.$chars.data;
                $j = $this.$length2;
                $this.$length2 = $j + 1 | 0;
                var$5[$j] = $minLength;
            }
            if ($value >= 1000000) {
                $minLength = cbgu_StringBuilder_digits.data[($value % 10000000 | 0) / 1000000 | 0];
                $prefix = $this.$length2;
                if ($prefix == $this.$chars.data.length)
                    cbgu_StringBuilder_enlargeBuffer($this, $prefix + 1 | 0);
                var$5 = $this.$chars.data;
                $j = $this.$length2;
                $this.$length2 = $j + 1 | 0;
                var$5[$j] = $minLength;
            }
            if ($value >= 100000)
                cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000 | 0) / 100000 | 0]);
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000 | 0) / 10000 | 0]);
        }
        if ($value >= 1000)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000 | 0) / 1000 | 0]);
        if ($value >= 100)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000 | 0) / 100 | 0]);
        if ($value >= 10)
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100 | 0) / 10 | 0]);
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[$value % 10 | 0]);
        return $this;
    }
    function cbgu_StringBuilder__clinit_() {
        cbgu_StringBuilder_digits = $rt_createCharArrayFromData([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
    }
    var jnc_CharacterCodingException = $rt_classWithoutFields(ji_IOException);
    var jl_AssertionError = $rt_classWithoutFields(jl_Error);
    function cgxgbtp_Preloader$5() {
        var a = this; cgxgbt_AssetLoaderListener.call(a);
        a.$val$asset = null;
        a.$this$09 = null;
    }
    var ju_AbstractSet = $rt_classWithoutFields(ju_AbstractCollection);
    function ju_HashSet() {
        ju_AbstractSet.call(this);
        this.$backingMap = null;
    }
    function ju_HashSet__init_0(var_0) {
        var var_1 = new ju_HashSet();
        ju_HashSet__init_(var_1, var_0);
        return var_1;
    }
    function ju_HashSet__init_($this, $capacity) {
        var var$2, var$3, var$4;
        var$2 = new ju_HashMap;
        if ($capacity < 0) {
            var$2 = new jl_IllegalArgumentException;
            var$2.$suppressionEnabled = 1;
            var$2.$writableStackTrace = 1;
            $rt_throw(var$2);
        }
        $capacity = ju_HashMap_calculateCapacity($capacity);
        var$2.$elementCount = 0;
        var$3 = $rt_createArray(ju_HashMap$HashEntry, $capacity);
        var$4 = var$3.data;
        var$2.$elementData = var$3;
        var$2.$loadFactor = 0.75;
        var$2.$threshold = var$4.length * 0.75 | 0;
        $this.$backingMap = var$2;
    }
    function ju_HashSet_add($this, $object) {
        return ju_HashMap_putImpl($this.$backingMap, $object, $this) !== null ? 0 : 1;
    }
    var kc_MapsKt__MapWithDefaultKt = $rt_classWithoutFields();
    var kc_MapsKt__MapsJVMKt = $rt_classWithoutFields(kc_MapsKt__MapWithDefaultKt);
    function kc_MapsKt__MapsJVMKt_mapCapacity($expectedSize) {
        if ($expectedSize >= 0)
            $expectedSize = $expectedSize < 3 ? $expectedSize + 1 | 0 : $expectedSize >= 1073741824 ? 2147483647 : $expectedSize / 0.75 + 1.0 | 0;
        return $expectedSize;
    }
    var kc_MapsKt__MapsKt = $rt_classWithoutFields(kc_MapsKt__MapsJVMKt);
    var kc_MapsKt___MapsJvmKt = $rt_classWithoutFields(kc_MapsKt__MapsKt);
    var kc_MapsKt___MapsKt = $rt_classWithoutFields(kc_MapsKt___MapsJvmKt);
    var kc_MapsKt = $rt_classWithoutFields(kc_MapsKt___MapsKt);
    function jur_Matcher$1() {
        var a = this; jl_Object.call(a);
        a.$grN = 0;
        a.$val$gr = 0;
        a.$this$056 = null;
    }
    function jur_Matcher$1__init_(var_0, var_1) {
        var var_2 = new jur_Matcher$1();
        jur_Matcher$1__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function jur_Matcher$1__init_0($this, $this$0, var$2) {
        $this.$this$056 = $this$0;
        $this.$val$gr = var$2;
        $this.$grN = var$2;
    }
    function jur_Matcher$1_toString($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10;
        var$1 = $this.$this$056;
        var$2 = $this.$grN;
        var$1 = var$1.$matchResult;
        var$3 = var$1.$valid1;
        if (!var$3) {
            var$1 = new jl_IllegalStateException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            jl_Throwable_fillInStackTrace(var$1);
            $rt_throw(var$1);
        }
        if (var$2 >= 0) {
            var$4 = $rt_compare(var$2, var$1.$groupCount);
            if (var$4 < 0) {
                a: {
                    var$5 = var$1.$groupBounds.data;
                    var$6 = var$2 * 2 | 0;
                    if (var$5[var$6] < 0)
                        var$7 = null;
                    else {
                        var$1 = var$1.$string0;
                        if (!var$3) {
                            var$1 = new jl_IllegalStateException;
                            var$1.$suppressionEnabled = 1;
                            var$1.$writableStackTrace = 1;
                            jl_Throwable_fillInStackTrace(var$1);
                            $rt_throw(var$1);
                        }
                        if (var$2 >= 0 && var$4 < 0) {
                            var$8 = var$5[var$6];
                            if (!var$3) {
                                var$1 = new jl_IllegalStateException;
                                var$1.$suppressionEnabled = 1;
                                var$1.$writableStackTrace = 1;
                                jl_Throwable_fillInStackTrace(var$1);
                                $rt_throw(var$1);
                            }
                            if (var$2 >= 0 && var$4 < 0) {
                                var$6 = var$5[var$6 + 1 | 0];
                                var$2 = $rt_compare(var$8, var$6);
                                if (var$2 > 0) {
                                    var$1 = new jl_IndexOutOfBoundsException;
                                    var$1.$suppressionEnabled = 1;
                                    var$1.$writableStackTrace = 1;
                                    jl_Throwable_fillInStackTrace(var$1);
                                    $rt_throw(var$1);
                                }
                                if (!var$2) {
                                    jl_String_$callClinit();
                                    var$7 = jl_String_EMPTY;
                                } else if (!var$8 && var$6 == var$1.$characters.data.length)
                                    var$7 = var$1;
                                else {
                                    var$7 = new jl_String;
                                    var$5 = var$1.$characters;
                                    var$2 = var$6 - var$8 | 0;
                                    jl_String_$callClinit();
                                    var$9 = $rt_createCharArray(var$2);
                                    var$7.$characters = var$9;
                                    jl_System_fastArraycopy(var$5, var$8, var$9, 0, var$2);
                                }
                                break a;
                            }
                            var$1 = new jl_IndexOutOfBoundsException;
                            jl_String_$callClinit();
                            var$7 = new jl_StringBuilder;
                            jl_Object__init_0(var$7);
                            var$7.$buffer = $rt_createCharArray(16);
                            jl_AbstractStringBuilder_insert0(var$7, var$7.$length, var$2, 10);
                            var$10 = new jl_String;
                            var$5 = var$7.$buffer;
                            var$8 = var$7.$length;
                            jl_Object__init_0(var$10);
                            var$9 = $rt_createCharArray(var$8);
                            var$10.$characters = var$9;
                            jl_System_fastArraycopy(var$5, 0, var$9, 0, var$8);
                            var$1.$suppressionEnabled = 1;
                            var$1.$writableStackTrace = 1;
                            jl_Throwable_fillInStackTrace(var$1);
                            var$1.$message = var$10;
                            $rt_throw(var$1);
                        }
                        var$1 = new jl_IndexOutOfBoundsException;
                        jl_String_$callClinit();
                        var$7 = new jl_StringBuilder;
                        jl_Object__init_0(var$7);
                        var$7.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, var$2, 10);
                        var$10 = new jl_String;
                        var$5 = var$7.$buffer;
                        var$8 = var$7.$length;
                        jl_Object__init_0(var$10);
                        var$9 = $rt_createCharArray(var$8);
                        var$10.$characters = var$9;
                        jl_System_fastArraycopy(var$5, 0, var$9, 0, var$8);
                        var$1.$suppressionEnabled = 1;
                        var$1.$writableStackTrace = 1;
                        jl_Throwable_fillInStackTrace(var$1);
                        var$1.$message = var$10;
                        $rt_throw(var$1);
                    }
                }
                return var$7;
            }
        }
        var$1 = new jl_IndexOutOfBoundsException;
        jl_String_$callClinit();
        var$7 = new jl_StringBuilder;
        jl_Object__init_0(var$7);
        var$7.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert0(var$7, var$7.$length, var$2, 10);
        var$10 = new jl_String;
        var$5 = var$7.$buffer;
        var$8 = var$7.$length;
        jl_Object__init_0(var$10);
        var$9 = $rt_createCharArray(var$8);
        var$10.$characters = var$9;
        jl_System_fastArraycopy(var$5, 0, var$9, 0, var$8);
        var$1.$suppressionEnabled = 1;
        var$1.$writableStackTrace = 1;
        jl_Throwable_fillInStackTrace(var$1);
        var$1.$message = var$10;
        $rt_throw(var$1);
    }
    var jnci_AsciiEncoder = $rt_classWithoutFields(jnci_BufferedEncoder);
    function jnci_AsciiEncoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
        var $result, var$9, var$10, $c, $next, var$13;
        $result = null;
        a: {
            while ($inPos < $inSize) {
                if ($outPos >= $outSize) {
                    var$9 = $inPos;
                    break a;
                }
                var$10 = $inArray.data;
                var$9 = $inPos + 1 | 0;
                $c = var$10[$inPos];
                $next = $c & 64512;
                if ($next != 55296 ? 0 : 1) {
                    if (var$9 >= $inSize) {
                        var$13 = $controller.$in;
                        if (!((var$13.$limit - var$13.$position | 0) < 2 ? 0 : 1)) {
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$9 = var$9 + (-1) | 0;
                        break a;
                    }
                    if (!((var$10[var$9] & 64512) != 56320 ? 0 : 1)) {
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length0 = 1;
                        break a;
                    }
                    var$9 = var$9 + (-1) | 0;
                    $result = new jnc_CoderResult;
                    $result.$kind = 3;
                    $result.$length0 = 2;
                    break a;
                }
                if ($next != 56320 ? 0 : 1) {
                    $result = new jnc_CoderResult;
                    $result.$kind = 2;
                    $result.$length0 = 1;
                }
                if ($c >= 128) {
                    $result = new jnc_CoderResult;
                    $result.$kind = 3;
                    $result.$length0 = 1;
                    var$9 = var$9 + (-1) | 0;
                    break a;
                }
                var$10 = $outArray.data;
                $next = $outPos + 1 | 0;
                var$10[$outPos] = $c << 24 >> 24;
                $inPos = var$9;
                $outPos = $next;
            }
            var$9 = $inPos;
        }
        $controller.$inPosition = var$9;
        $controller.$outPosition = $outPos;
        return $result;
    }
    var jnci_Iso8859Encoder = $rt_classWithoutFields(jnci_BufferedEncoder);
    function jnci_Iso8859Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
        var $result, var$9, var$10, $c, $next, var$13;
        $result = null;
        a: {
            while ($inPos < $inSize) {
                if ($outPos >= $outSize) {
                    var$9 = $inPos;
                    break a;
                }
                var$10 = $inArray.data;
                var$9 = $inPos + 1 | 0;
                $c = var$10[$inPos];
                $next = $c & 64512;
                if ($next != 55296 ? 0 : 1) {
                    if (var$9 == $inSize) {
                        var$13 = $controller.$in;
                        if (!((var$13.$limit - var$13.$position | 0) < 2 ? 0 : 1)) {
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$9 = var$9 + (-1) | 0;
                        break a;
                    }
                    if (!((var$10[var$9] & 64512) != 56320 ? 0 : 1)) {
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length0 = 1;
                        break a;
                    }
                    var$9 = var$9 + (-1) | 0;
                    $result = new jnc_CoderResult;
                    $result.$kind = 3;
                    $result.$length0 = 2;
                    break a;
                }
                if ($next != 56320 ? 0 : 1) {
                    $result = new jnc_CoderResult;
                    $result.$kind = 2;
                    $result.$length0 = 1;
                }
                if ($c >= 256) {
                    var$9 = var$9 + (-1) | 0;
                    $result = new jnc_CoderResult;
                    $result.$kind = 3;
                    $result.$length0 = 1;
                    break a;
                }
                var$10 = $outArray.data;
                $next = $outPos + 1 | 0;
                var$10[$outPos] = $c << 24 >> 24;
                $inPos = var$9;
                $outPos = $next;
            }
            var$9 = $inPos;
        }
        $controller.$inPosition = var$9;
        $controller.$outPosition = $outPos;
        return $result;
    }
    function jnci_UTF16Encoder() {
        var a = this; jnci_BufferedEncoder.call(a);
        a.$bom0 = 0;
        a.$littleEndian0 = 0;
    }
    function jnci_UTF16Encoder_arrayEncode($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
        var var$8, var$9;
        if ($this.$bom0) {
            if (($outPos + 2 | 0) > $outSize) {
                $controller = $controller.$out0;
                return !($controller.$position >= $controller.$limit ? 0 : 1) ? jnc_CoderResult_OVERFLOW : null;
            }
            $this.$bom0 = 0;
            if (!$this.$littleEndian0) {
                var$8 = $outArray.data;
                var$9 = $outPos + 1 | 0;
                var$8[$outPos] = (-2);
                $outPos = var$9 + 1 | 0;
                var$8[var$9] = (-1);
            } else {
                var$8 = $outArray.data;
                var$9 = $outPos + 1 | 0;
                var$8[$outPos] = (-1);
                $outPos = var$9 + 1 | 0;
                var$8[var$9] = (-2);
            }
        }
        return !$this.$littleEndian0 ? jnci_UTF16Encoder_arrayEncodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) : jnci_UTF16Encoder_arrayEncodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
    }
    function jnci_UTF16Encoder_arrayEncodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
        var $result, var$9, var$10, $c, var$12, $next;
        $result = null;
        a: {
            while ($inPos < $inSize) {
                if ($outPos >= $outSize)
                    break a;
                var$9 = $inArray.data;
                var$10 = $inPos + 1 | 0;
                $c = var$9[$inPos];
                $inPos = $c & 64512;
                if (!($inPos != 55296 ? 0 : 1)) {
                    if ($inPos != 56320 ? 0 : 1) {
                        $inPos = var$10 + (-1) | 0;
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length0 = 1;
                        break a;
                    }
                    if (($outPos + 2 | 0) > $outSize) {
                        $inPos = var$10 + (-1) | 0;
                        var$12 = $controller.$out0;
                        if ((var$12.$limit - var$12.$position | 0) < 2 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_OVERFLOW;
                        break a;
                    }
                    var$9 = $outArray.data;
                    $inPos = $outPos + 1 | 0;
                    var$9[$outPos] = ($c & 255) << 24 >> 24;
                    $outPos = $inPos + 1 | 0;
                    var$9[$inPos] = $c >> 8 << 24 >> 24;
                    $inPos = var$10;
                } else {
                    if (var$10 == $inSize) {
                        $inPos = var$10 + (-1) | 0;
                        var$12 = $controller.$in;
                        if ((var$12.$limit - var$12.$position | 0) < 2 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_UNDERFLOW;
                        break a;
                    }
                    $inPos = var$10 + 1 | 0;
                    $next = var$9[var$10];
                    if (!(($next & 64512) != 56320 ? 0 : 1)) {
                        $inPos = $inPos + (-2) | 0;
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length0 = 1;
                        break a;
                    }
                    if (($outPos + 4 | 0) > $outSize) {
                        $inPos = $inPos + (-2) | 0;
                        var$12 = $controller.$out0;
                        if ((var$12.$limit - var$12.$position | 0) < 4 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_OVERFLOW;
                        break a;
                    }
                    var$9 = $outArray.data;
                    var$10 = $outPos + 1 | 0;
                    var$9[$outPos] = ($c & 255) << 24 >> 24;
                    $outPos = var$10 + 1 | 0;
                    var$9[var$10] = $c >> 8 << 24 >> 24;
                    var$10 = $outPos + 1 | 0;
                    var$9[$outPos] = ($next & 255) << 24 >> 24;
                    $outPos = var$10 + 1 | 0;
                    var$9[var$10] = $next >> 8 << 24 >> 24;
                }
            }
        }
        $controller.$inPosition = $inPos;
        $controller.$outPosition = $outPos;
        return $result;
    }
    function jnci_UTF16Encoder_arrayEncodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) {
        var $result, var$9, var$10, $c, var$12, $next;
        $result = null;
        a: {
            while ($inPos < $inSize) {
                if ($outPos >= $outSize)
                    break a;
                var$9 = $inArray.data;
                var$10 = $inPos + 1 | 0;
                $c = var$9[$inPos];
                $inPos = $c & 64512;
                if (!($inPos != 55296 ? 0 : 1)) {
                    if ($inPos != 56320 ? 0 : 1) {
                        $inPos = var$10 + (-1) | 0;
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length0 = 1;
                        break a;
                    }
                    if (($outPos + 2 | 0) > $outSize) {
                        $inPos = var$10 + (-1) | 0;
                        var$12 = $controller.$out0;
                        if ((var$12.$limit - var$12.$position | 0) < 2 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_OVERFLOW;
                        break a;
                    }
                    var$9 = $outArray.data;
                    $inPos = $outPos + 1 | 0;
                    var$9[$outPos] = $c >> 8 << 24 >> 24;
                    $outPos = $inPos + 1 | 0;
                    var$9[$inPos] = ($c & 255) << 24 >> 24;
                    $inPos = var$10;
                } else {
                    if (var$10 == $inSize) {
                        $inPos = var$10 + (-1) | 0;
                        var$12 = $controller.$in;
                        if ((var$12.$limit - var$12.$position | 0) < 2 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_UNDERFLOW;
                        break a;
                    }
                    $inPos = var$10 + 1 | 0;
                    $next = var$9[var$10];
                    if (!(($next & 64512) != 56320 ? 0 : 1)) {
                        $inPos = $inPos + (-2) | 0;
                        $result = new jnc_CoderResult;
                        $result.$kind = 2;
                        $result.$length0 = 1;
                        break a;
                    }
                    if (($outPos + 4 | 0) > $outSize) {
                        $inPos = $inPos + (-2) | 0;
                        var$12 = $controller.$out0;
                        if ((var$12.$limit - var$12.$position | 0) < 4 ? 0 : 1)
                            break a;
                        $result = jnc_CoderResult_OVERFLOW;
                        break a;
                    }
                    var$9 = $outArray.data;
                    var$10 = $outPos + 1 | 0;
                    var$9[$outPos] = $c >> 8 << 24 >> 24;
                    $outPos = var$10 + 1 | 0;
                    var$9[var$10] = ($c & 255) << 24 >> 24;
                    var$10 = $outPos + 1 | 0;
                    var$9[$outPos] = $next >> 8 << 24 >> 24;
                    $outPos = var$10 + 1 | 0;
                    var$9[var$10] = ($next & 255) << 24 >> 24;
                }
            }
        }
        $controller.$inPosition = $inPos;
        $controller.$outPosition = $outPos;
        return $result;
    }
    function cgxgbtp_Preloader$7() {
        var a = this; cgxgbt_AssetLoaderListener.call(a);
        a.$val$listener4 = null;
        a.$val$type = null;
        a.$val$url2 = null;
        a.$this$010 = null;
    }
    function cgxgbtp_Preloader$7_onProgress($this, $amount) {
        $this.$val$listener4.$val$asset.$loaded = Long_fromNumber($amount);
    }
    function cgxgbtp_Preloader$7_onFailure($this, $urll) {
        $urll = $this.$val$listener4.$val$asset;
        $urll.$failed = 1;
        $urll.$isLoading = 0;
    }
    function cgxgbtp_Preloader$7_onSuccess($this, $urll, $result) {
        cgxgbtp_Preloader_putAssetInMap($this.$this$010, $this.$val$type, $this.$val$url2, $result);
        $urll = $this.$val$listener4.$val$asset;
        $urll.$succeed = 1;
        $urll.$isLoading = 0;
        return 0;
    }
    var jnc_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException);
    var jnc_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException);
    function jnc_MalformedInputException() {
        jnc_CharacterCodingException.call(this);
        this.$length4 = 0;
    }
    function jnc_MalformedInputException_getMessage($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$length4;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(719));
        jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
        var$3 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$3.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$3;
    }
    function jnc_UnmappableCharacterException() {
        jnc_CharacterCodingException.call(this);
        this.$length5 = 0;
    }
    function jnc_UnmappableCharacterException_getMessage($this) {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        var$1 = $this.$length5;
        var$2 = new jl_StringBuilder;
        var$2.$buffer = $rt_createCharArray(16);
        jl_AbstractStringBuilder_insert(var$2, var$2.$length, $rt_s(720));
        jl_AbstractStringBuilder_insert0(var$2, var$2.$length, var$1, 10);
        var$3 = new jl_String;
        var$4 = var$2.$buffer;
        var$5 = var$2.$length;
        jl_String_$callClinit();
        var$6 = $rt_createCharArray(var$5);
        var$3.$characters = var$6;
        jl_System_fastArraycopy(var$4, 0, var$6, 0, var$5);
        return var$3;
    }
    function ju_HashMap$1() {
        ju_AbstractSet.call(this);
        this.$this$055 = null;
    }
    var cgxgbtp_AssetDownloadImpl$7 = $rt_classWithoutFields();
    var cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = null;
    function cgxgbtp_AssetDownloadImpl$7_$callClinit() {
        cgxgbtp_AssetDownloadImpl$7_$callClinit = $rt_eraseClinit(cgxgbtp_AssetDownloadImpl$7);
        cgxgbtp_AssetDownloadImpl$7__clinit_();
    }
    function cgxgbtp_AssetDownloadImpl$7__clinit_() {
        var var$1, var$2;
        cgxgbtp_AssetType_$callClinit();
        var$1 = $rt_createIntArray((cgxgbtp_AssetType_$VALUES.$clone()).data.length);
        var$2 = var$1.data;
        cgxgbtp_AssetDownloadImpl$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$preloader$AssetType = var$1;
        var$2[cgxgbtp_AssetType_Text.$ordinal] = 1;
        var$2[cgxgbtp_AssetType_Image.$ordinal] = 2;
        var$2[cgxgbtp_AssetType_Binary.$ordinal] = 3;
        var$2[cgxgbtp_AssetType_Audio.$ordinal] = 4;
        var$2[cgxgbtp_AssetType_Directory.$ordinal] = 5;
    }
    function ju_HashMap$AbstractMapIterator() {
        var a = this; jl_Object.call(a);
        a.$position3 = 0;
        a.$expectedModCount = 0;
        a.$futureEntry = null;
        a.$currentEntry = null;
        a.$prevEntry = null;
        a.$associatedMap = null;
    }
    function ju_HashMap$AbstractMapIterator_hasNext($this) {
        var var$1, var$2;
        if ($this.$futureEntry !== null)
            return 1;
        while (true) {
            var$1 = $this.$position3;
            var$2 = $this.$associatedMap.$elementData.data;
            if (var$1 >= var$2.length)
                break;
            if (var$2[var$1] !== null)
                return 1;
            $this.$position3 = var$1 + 1 | 0;
        }
        return 0;
    }
    function ju_HashMap$AbstractMapIterator_makeNext($this) {
        var var$1, var$2, var$3, var$4;
        if ($this.$expectedModCount != $this.$associatedMap.$modCount) {
            var$1 = new ju_ConcurrentModificationException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        if (!ju_HashMap$AbstractMapIterator_hasNext($this)) {
            var$1 = new ju_NoSuchElementException;
            var$1.$suppressionEnabled = 1;
            var$1.$writableStackTrace = 1;
            $rt_throw(var$1);
        }
        var$1 = $this.$futureEntry;
        if (var$1 !== null) {
            var$2 = $this.$currentEntry;
            if (var$2 !== null)
                $this.$prevEntry = var$2;
            $this.$currentEntry = var$1;
            $this.$futureEntry = var$1.$next;
        } else {
            var$3 = $this.$associatedMap.$elementData.data;
            var$4 = $this.$position3;
            $this.$position3 = var$4 + 1 | 0;
            var$1 = var$3[var$4];
            $this.$currentEntry = var$1;
            $this.$futureEntry = var$1.$next;
            $this.$prevEntry = null;
        }
    }
    var ju_HashMap$KeyIterator = $rt_classWithoutFields(ju_HashMap$AbstractMapIterator);
    function cgxgbtp_AssetDownloadImpl$4() {
        var a = this; jl_Thread.call(a);
        a.$val$async0 = 0;
        a.$val$url0 = null;
        a.$val$listener1 = null;
        a.$this$02 = null;
    }
    function cgxgbtp_AssetDownloadImpl$4_run($this) {
        var var$1, var$2, var$3, var$4, var$5;
        var$1 = new $rt_globals.XMLHttpRequest();
        var$2 = new cgxgbtp_AssetDownloadImpl$4$1;
        var$2.$this$11 = $this;
        var$2.$val$request1 = var$1;
        var$2 = otji_JS_function(var$2, "handleEvent");
        var$1.onreadystatechange = var$2;
        var$2 = $this.$this$02;
        var$3 = $this.$val$listener1;
        var$4 = new cgxgbtp_AssetDownloadImpl$6;
        var$4.$this$04 = var$2;
        var$4.$val$listener3 = var$3;
        var$2 = otji_JS_function(var$4, "handleEvent");
        var$1.onprogress = var$2;
        var$3 = $this.$val$url0;
        var$5 = $this.$val$async0;
        var$1.open("GET", $rt_ustr(var$3), !!var$5);
        if ($this.$val$async0) {
            var$3 = "arraybuffer";
            var$1.responseType = var$3;
        }
        var$1.send();
    }
    function cgxgbtp_AssetDownloadImpl$3() {
        var a = this; cgxgbt_AssetLoaderListener.call(a);
        a.$val$listener5 = null;
        a.$this$057 = null;
    }
    function cgxgbtp_AssetDownloadImpl$3__init_(var_0, var_1) {
        var var_2 = new cgxgbtp_AssetDownloadImpl$3();
        cgxgbtp_AssetDownloadImpl$3__init_0(var_2, var_0, var_1);
        return var_2;
    }
    function cgxgbtp_AssetDownloadImpl$3__init_0($this, $this$0, var$2) {
        $this.$this$057 = $this$0;
        $this.$val$listener5 = var$2;
    }
    function cgxgbtp_AssetDownloadImpl$3_onProgress($this, $amount) {
        $this.$val$listener5.$val$listener4.$val$asset.$loaded = Long_fromNumber($amount);
    }
    function cgxgbtp_AssetDownloadImpl$3_onFailure($this, $url) {
        $url = $this.$val$listener5.$val$listener4.$val$asset;
        $url.$failed = 1;
        $url.$isLoading = 0;
    }
    function cgxgbtp_AssetDownloadImpl$3_onSuccess($this, var$1, var$2) {
        var$2 = $this.$val$listener5;
        var$1 = null;
        cgxgbtp_Preloader_putAssetInMap(var$2.$this$010, var$2.$val$type, var$2.$val$url2, var$1);
        var$1 = var$2.$val$listener4.$val$asset;
        var$1.$succeed = 1;
        var$1.$isLoading = 0;
        return 0;
    }
    function cgxgbtp_AssetDownloadImpl$5() {
        var a = this; cgxgbt_AssetLoaderListener.call(a);
        a.$val$listener0 = null;
        a.$val$crossOrigin = null;
        a.$val$mimeType = null;
        a.$this$01 = null;
    }
    function cgxgbtp_AssetDownloadImpl$5_onProgress($this, $amount) {
        $this.$val$listener0.$val$listener4.$val$asset.$loaded = Long_fromNumber($amount);
    }
    function cgxgbtp_AssetDownloadImpl$5_onFailure($this, $url) {
        $url = $this.$val$listener0.$val$listener4.$val$asset;
        $url.$failed = 1;
        $url.$isLoading = 0;
    }
    function cgxgbtp_AssetDownloadImpl$5_onSuccess($this, $url, $result) {
        var var$3, var$4, var$5, var$6, var$7, var$8;
        var$3 = $rt_globals.window.document.createElement("img");
        var$4 = $this.$val$crossOrigin;
        if (var$4 !== null)
            var$3.setAttribute("crossOrigin", $rt_ustr(var$4));
        var$4 = $this.$this$01;
        var$4.$queue = var$4.$queue + 1 | 0;
        var$4 = new cgxgbtp_AssetDownloadImpl$5$1;
        var$4.$this$12 = $this;
        var$4.$val$url3 = $url;
        var$4.$val$result = $result;
        var$4.$val$image = var$3;
        var$3.addEventListener("load", otji_JS_function(var$4, "handleEvent"), !!0);
        var$3.addEventListener("error", otji_JS_function(var$4, "handleEvent"), !!0);
        if (!$this.$this$01.$useInlineBase64) {
            $url = $rt_ustr($url);
            var$3.src = $url;
        } else {
            $url = $this.$val$mimeType;
            $result = cgxgbtp_Blob_toBase64($result);
            var$4 = new jl_StringBuilder;
            var$4.$buffer = $rt_createCharArray(16);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(721));
            var$5 = var$4.$length;
            if ($url === null)
                $url = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$4, var$5, $url);
            jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(722));
            var$5 = var$4.$length;
            if ($result === null)
                $result = $rt_s(1);
            jl_AbstractStringBuilder_insert(var$4, var$5, $result);
            $url = new jl_String;
            var$6 = var$4.$buffer;
            var$7 = var$4.$length;
            jl_String_$callClinit();
            var$8 = $rt_createCharArray(var$7);
            $url.$characters = var$8;
            jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
            $url = $rt_ustr($url);
            var$3.src = $url;
        }
        return 0;
    }
    function cgxgbtp_AssetDownloadImpl$5_onSuccess0($this, var$1, var$2) {
        return cgxgbtp_AssetDownloadImpl$5_onSuccess($this, var$1, var$2);
    }
    function cgxgbtp_AssetDownloadImpl$4$1() {
        var a = this; jl_Object.call(a);
        a.$val$request1 = null;
        a.$this$11 = null;
    }
    function cgxgbtp_AssetDownloadImpl$4$1_handleEvent($this, $evt) {
        var var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, $$je, $ptr, $tmp;
        $ptr = 0;
        if ($rt_resuming()) {
            var $thread = $rt_nativeThread();
            $ptr = $thread.pop();var$13 = $thread.pop();var$12 = $thread.pop();var$11 = $thread.pop();var$10 = $thread.pop();var$9 = $thread.pop();var$8 = $thread.pop();var$7 = $thread.pop();var$6 = $thread.pop();var$5 = $thread.pop();var$4 = $thread.pop();var$3 = $thread.pop();var$2 = $thread.pop();$evt = $thread.pop();$this = $thread.pop();
        }
        main: while (true) { switch ($ptr) {
        case 0:
            if ($this.$val$request1.readyState == 4) {
                if ($this.$val$request1.status == 200) {
                    $evt = $this.$this$11;
                    if ($evt.$this$02.$showLogs) {
                        if (jl_System_outCache === null) {
                            var$2 = new ji_PrintStream;
                            var$2.$out = otcic_StdoutOutputStream_INSTANCE;
                            var$3 = new jl_StringBuilder;
                            var$3.$buffer = $rt_createCharArray(16);
                            var$2.$sb = var$3;
                            var$2.$buffer1 = $rt_createCharArray(32);
                            var$2.$autoFlush = 0;
                            jnci_UTF8Charset_$callClinit();
                            var$2.$charset = jnci_UTF8Charset_INSTANCE;
                            jl_System_outCache = var$2;
                        }
                        var$4 = jl_System_outCache;
                        $evt = $evt.$val$url0;
                        var$3 = new jl_StringBuilder;
                        var$3.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert(var$3, var$3.$length, $rt_s(641));
                        var$5 = var$3.$length;
                        if ($evt === null)
                            $evt = $rt_s(1);
                        jl_AbstractStringBuilder_insert(var$3, var$5, $evt);
                        $evt = new jl_String;
                        var$6 = var$3.$buffer;
                        var$7 = var$3.$length;
                        jl_String_$callClinit();
                        var$8 = $rt_createCharArray(var$7);
                        $evt.$characters = var$8;
                        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$7);
                        jl_StringBuilder_append2(jl_StringBuilder_append1(var$4.$sb, $evt), 10);
                        ji_PrintStream_printSB(var$4);
                    }
                    var$4 = $this.$val$request1.response;
                    var$9 = new $rt_globals.Int8Array(var$4);
                    $evt = $this.$this$11;
                    var$3 = $evt.$val$listener1;
                    var$2 = $evt.$val$url0;
                    $evt = new cgxgbtp_Blob;
                    $evt.$data3 = var$9;
                    $evt.$response = var$4;
                    var$3.$onSuccess(var$2, $evt);
                } else if ($this.$val$request1.status != 404 && $this.$val$request1.status != 403) {
                    try {
                        var$10 = Long_fromInt(100);
                        $ptr = 1;
                        continue main;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                        } else {
                            throw $$e;
                        }
                    }
                    $evt = $this.$this$11;
                    var$3 = $evt.$this$02;
                    var$5 = $evt.$val$async0;
                    var$2 = $evt.$val$url0;
                    $evt = $evt.$val$listener1;
                    if (var$3.$showLogs) {
                        if (jl_System_outCache === null) {
                            var$9 = new ji_PrintStream;
                            var$9.$out = otcic_StdoutOutputStream_INSTANCE;
                            var$4 = new jl_StringBuilder;
                            var$4.$buffer = $rt_createCharArray(16);
                            var$9.$sb = var$4;
                            var$9.$buffer1 = $rt_createCharArray(32);
                            var$9.$autoFlush = 0;
                            jnci_UTF8Charset_$callClinit();
                            var$9.$charset = jnci_UTF8Charset_INSTANCE;
                            jl_System_outCache = var$9;
                        }
                        var$9 = jl_System_outCache;
                        var$4 = new jl_StringBuilder;
                        var$4.$buffer = $rt_createCharArray(16);
                        jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(133));
                        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$2 === null ? $rt_s(1) : var$2);
                        var$11 = new jl_String;
                        var$6 = var$4.$buffer;
                        var$12 = var$4.$length;
                        jl_String_$callClinit();
                        var$8 = $rt_createCharArray(var$12);
                        var$11.$characters = var$8;
                        jl_System_fastArraycopy(var$6, 0, var$8, 0, var$12);
                        var$4 = var$9.$sb;
                        jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$11);
                        var$13 = var$4.$length;
                        jl_AbstractStringBuilder_insertSpace(var$4, var$13, var$13 + 1 | 0);
                        var$4.$buffer.data[var$13] = 10;
                        ji_PrintStream_printSB(var$9);
                    }
                    var$3.$queue = var$3.$queue + 1 | 0;
                    var$4 = new cgxgbtp_AssetDownloadImpl$4;
                    var$4.$this$02 = var$3;
                    var$4.$val$async0 = var$5;
                    var$4.$val$url0 = var$2;
                    var$4.$val$listener1 = $evt;
                    $evt = null;
                    var$3 = null;
                    var$4.$finishedLock = new jl_Object;
                    var$4.$alive = 1;
                    var$4.$name2 = var$3;
                    var$4.$target = $evt;
                    var$7 = jl_Thread_nextId;
                    jl_Thread_nextId = var$7 + 1 | 0;
                    var$4.$id1 = Long_fromInt(var$7);
                    $evt = new jl_Thread$start$lambda$_4_0;
                    $evt.$_01 = var$4;
                    otp_Platform_startThread($evt);
                } else {
                    $evt = $this.$this$11;
                    $evt.$val$listener1.$onFailure($evt.$val$url0);
                }
                $evt = $this.$this$11.$this$02;
                $evt.$queue = $evt.$queue - 1 | 0;
            }
            return;
        case 1:
            a: {
                try {
                    jl_Thread_sleep(var$10);
                    if ($rt_suspending()) {
                        break main;
                    }
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_Throwable) {
                    } else {
                        throw $$e;
                    }
                }
            }
            $evt = $this.$this$11;
            var$3 = $evt.$this$02;
            var$5 = $evt.$val$async0;
            var$2 = $evt.$val$url0;
            $evt = $evt.$val$listener1;
            if (var$3.$showLogs) {
                if (jl_System_outCache === null) {
                    var$9 = new ji_PrintStream;
                    var$9.$out = otcic_StdoutOutputStream_INSTANCE;
                    var$4 = new jl_StringBuilder;
                    var$4.$buffer = $rt_createCharArray(16);
                    var$9.$sb = var$4;
                    var$9.$buffer1 = $rt_createCharArray(32);
                    var$9.$autoFlush = 0;
                    jnci_UTF8Charset_$callClinit();
                    var$9.$charset = jnci_UTF8Charset_INSTANCE;
                    jl_System_outCache = var$9;
                }
                var$9 = jl_System_outCache;
                var$4 = new jl_StringBuilder;
                var$4.$buffer = $rt_createCharArray(16);
                jl_AbstractStringBuilder_insert(var$4, var$4.$length, $rt_s(133));
                jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$2 === null ? $rt_s(1) : var$2);
                var$11 = new jl_String;
                var$6 = var$4.$buffer;
                var$12 = var$4.$length;
                jl_String_$callClinit();
                var$8 = $rt_createCharArray(var$12);
                var$11.$characters = var$8;
                jl_System_fastArraycopy(var$6, 0, var$8, 0, var$12);
                var$4 = var$9.$sb;
                jl_AbstractStringBuilder_insert(var$4, var$4.$length, var$11);
                var$13 = var$4.$length;
                jl_AbstractStringBuilder_insertSpace(var$4, var$13, var$13 + 1 | 0);
                var$4.$buffer.data[var$13] = 10;
                ji_PrintStream_printSB(var$9);
            }
            var$3.$queue = var$3.$queue + 1 | 0;
            var$4 = new cgxgbtp_AssetDownloadImpl$4;
            var$4.$this$02 = var$3;
            var$4.$val$async0 = var$5;
            var$4.$val$url0 = var$2;
            var$4.$val$listener1 = $evt;
            $evt = null;
            var$3 = null;
            var$4.$finishedLock = new jl_Object;
            var$4.$alive = 1;
            var$4.$name2 = var$3;
            var$4.$target = $evt;
            var$7 = jl_Thread_nextId;
            jl_Thread_nextId = var$7 + 1 | 0;
            var$4.$id1 = Long_fromInt(var$7);
            $evt = new jl_Thread$start$lambda$_4_0;
            $evt.$_01 = var$4;
            otp_Platform_startThread($evt);
            $evt = $this.$this$11.$this$02;
            $evt.$queue = $evt.$queue - 1 | 0;
            return;
        default: $rt_invalidPointer();
        }}
        $rt_nativeThread().push($this, $evt, var$2, var$3, var$4, var$5, var$6, var$7, var$8, var$9, var$10, var$11, var$12, var$13, $ptr);
    }
    function cgxgbtp_AssetDownloadImpl$4$1_handleEvent$exported$0(var$0, var$1) {
        var $ptr, $tmp;
        $ptr = 0;
        if ($rt_resuming()) {
            var $thread = $rt_nativeThread();
            $ptr = $thread.pop();var$1 = $thread.pop();var$0 = $thread.pop();
        }
        main: while (true) { switch ($ptr) {
        case 0:
            $ptr = 1;
        case 1:
            cgxgbtp_AssetDownloadImpl$4$1_handleEvent(var$0, var$1);
            if ($rt_suspending()) {
                break main;
            }
            return;
        default: $rt_invalidPointer();
        }}
        $rt_nativeThread().push(var$0, var$1, $ptr);
    }
    var jl_InstantiationException = $rt_classWithoutFields(jl_ReflectiveOperationException);
    var jl_IllegalAccessException = $rt_classWithoutFields(jl_ReflectiveOperationException);
    var jlr_InvocationTargetException = $rt_classWithoutFields(jl_ReflectiveOperationException);
    var otcir_Converter = $rt_classWithoutFields();
    var cbgg_Colors = $rt_classWithoutFields();
    var cbgg_Colors_map = null;
    function cbgg_Colors_$callClinit() {
        cbgg_Colors_$callClinit = $rt_eraseClinit(cbgg_Colors);
        cbgg_Colors__clinit_();
    }
    function cbgg_Colors_reset() {
        var var$1, var$2, var$3, var$4, var$5, var$6;
        cbgg_Colors_$callClinit();
        var$1 = cbgg_Colors_map;
        if (var$1.$size2) {
            var$1.$size2 = 0;
            var$2 = var$1.$keyTable.data;
            var$3 = null;
            var$4 = 0;
            var$5 = var$2.length;
            if (var$4 > var$5) {
                var$1 = new jl_IllegalArgumentException;
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                $rt_throw(var$1);
            }
            while (var$4 < var$5) {
                var$6 = var$4 + 1 | 0;
                var$2[var$4] = var$3;
                var$4 = var$6;
            }
            var$2 = var$1.$valueTable.data;
            var$3 = null;
            var$4 = 0;
            var$5 = var$2.length;
            if (var$4 > var$5) {
                var$1 = new jl_IllegalArgumentException;
                var$1.$suppressionEnabled = 1;
                var$1.$writableStackTrace = 1;
                $rt_throw(var$1);
            }
            while (var$4 < var$5) {
                var$6 = var$4 + 1 | 0;
                var$2[var$4] = var$3;
                var$4 = var$6;
            }
        }
        cbgg_Color_$callClinit();
        cbgu_ObjectMap_put(var$1, $rt_s(723), cbgg_Color_CLEAR);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(724), cbgg_Color_BLACK);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(725), cbgg_Color_WHITE);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(726), cbgg_Color_LIGHT_GRAY);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(727), cbgg_Color_GRAY);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(728), cbgg_Color_DARK_GRAY);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(729), cbgg_Color_BLUE);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(730), cbgg_Color_NAVY);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(731), cbgg_Color_ROYAL);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(732), cbgg_Color_SLATE);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(733), cbgg_Color_SKY);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(734), cbgg_Color_CYAN);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(735), cbgg_Color_TEAL);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(736), cbgg_Color_GREEN);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(737), cbgg_Color_CHARTREUSE);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(738), cbgg_Color_LIME);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(739), cbgg_Color_FOREST);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(740), cbgg_Color_OLIVE);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(741), cbgg_Color_YELLOW);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(742), cbgg_Color_GOLD);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(743), cbgg_Color_GOLDENROD);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(744), cbgg_Color_ORANGE);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(745), cbgg_Color_BROWN);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(746), cbgg_Color_TAN);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(747), cbgg_Color_FIREBRICK);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(748), cbgg_Color_RED);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(749), cbgg_Color_SCARLET);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(750), cbgg_Color_CORAL);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(751), cbgg_Color_SALMON);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(752), cbgg_Color_PINK);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(753), cbgg_Color_MAGENTA);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(754), cbgg_Color_PURPLE);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(755), cbgg_Color_VIOLET);
        cbgu_ObjectMap_put(cbgg_Colors_map, $rt_s(756), cbgg_Color_MAROON);
    }
    function cbgg_Colors__clinit_() {
        cbgg_Colors_map = cbgu_ObjectMap__init_(51, 0.800000011920929);
        cbgg_Colors_reset();
    }
    function cgxgbtp_AssetDownloadImpl$5$1() {
        var a = this; jl_Object.call(a);
        a.$val$url3 = null;
        a.$val$result = null;
        a.$val$image = null;
        a.$this$12 = null;
    }
    function cgxgbtp_AssetDownloadImpl$5$1_handleEvent($this, $evt) {
        var var$2;
        if (jl_String_equals($rt_str($evt.type), $rt_s(757))) {
            $evt = $this.$this$12.$val$listener0.$val$listener4.$val$asset;
            $evt.$failed = 1;
            $evt.$isLoading = 0;
        } else {
            $evt = $this.$val$result;
            $evt.$image0 = $this.$val$image;
            var$2 = $this.$this$12.$val$listener0;
            cgxgbtp_Preloader_putAssetInMap(var$2.$this$010, var$2.$val$type, var$2.$val$url2, $evt);
            $evt = var$2.$val$listener4.$val$asset;
            $evt.$succeed = 1;
            $evt.$isLoading = 0;
        }
        $evt = $this.$this$12.$this$01;
        $evt.$queue = $evt.$queue - 1 | 0;
    }
    function cgxgbtp_AssetDownloadImpl$5$1_handleEvent$exported$0(var$0, var$1) {
        cgxgbtp_AssetDownloadImpl$5$1_handleEvent(var$0, var$1);
    }
    $rt_packages([-1, "com", 0, "github", 1, "xpenatan", 2, "gdx", 3, "backends", 4, "teavm", 5, "preloader", 5, "webaudio", 0, "badlogic", 8, "gdx", 9, "utils", 10, "reflect", 9, "scenes", 12, "scene2d", 13, "ui", 9, "graphics", 15, "glutils", 15, "g2d", -1, "java", 18, "util", 19, "regex", 18, "nio", 21, "charset", 18, "io", 18, "lang", 24, "reflect", -1, "org", 26, "teavm", 27, "classlib", 28, "impl", 29, "unicode", -1, "io", 31, "github", 32, "thanosfisherman", 33, "gasket", -1, "kotlin", 35, "jvm", 36,
    "internal"
    ]);
    $rt_metadata([jl_Object, "Object", 24, 0, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(jl_Object_hashCode), "$equals", $rt_wrapFunction1(jl_Object_equals), "$toString", $rt_wrapFunction0(jl_Object_toString)],
    igtgt_TeaVMLauncher, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbgssu_UIUtilsEmu, 0, jl_Object, [], 0, 3, 0, cbgssu_UIUtilsEmu_$callClinit, 0,
    cbg_InputProcessor, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbg_InputAdapter, 0, jl_Object, [cbg_InputProcessor], 0, 3, 0, 0, 0,
    cbgu_Disposable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgss_Stage, 0, cbg_InputAdapter, [cbgu_Disposable], 0, 3, 0, 0, 0,
    cbgu_Pool$Poolable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgss_Event, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, 0,
    jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jl_Enum, 0, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Enum_toString)],
    cbgss_Touchable, 0, jl_Enum, [], 12, 3, 0, cbgss_Touchable_$callClinit, 0,
    cbgss_Actor, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Cullable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgss_Group, 0, cbgss_Actor, [cbgssu_Cullable], 0, 3, 0, 0, 0,
    cbgssu_Disableable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgssu_Selection, 0, jl_Object, [cbgssu_Disableable, jl_Iterable], 0, 3, 0, 0, 0,
    cbgss_EventListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgss_InputListener, 0, jl_Object, [cbgss_EventListener], 0, 3, 0, 0, 0,
    cbgssu_DragListener, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
    cbgssu_DragAndDrop$1, 0, cbgssu_DragListener, [], 0, 0, 0, 0, 0,
    cbgssu_FocusListener$FocusEvent$Type, 0, jl_Enum, [], 12, 3, 0, cbgssu_FocusListener$FocusEvent$Type_$callClinit, 0,
    cbgssu_Drawable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgssu_TransformDrawable, 0, jl_Object, [cbgssu_Drawable], 3, 3, 0, 0, 0,
    jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgu_Timer$Task, 0, jl_Object, [jl_Runnable], 1, 3, 0, 0, 0,
    cbgssu_DragScrollListener$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
    cbgssu_ArraySelection, 0, cbgssu_Selection, [], 0, 3, 0, 0, 0,
    cbgssu_ActorGestureListener, 0, jl_Object, [cbgss_EventListener], 0, 3, 0, 0, 0,
    cbgssu_DragAndDrop$Source, 0, jl_Object, [], 1, 3, 0, 0, 0,
    cbgssu_DragAndDrop$Payload, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgi_GestureDetector$GestureListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgi_GestureDetector$GestureAdapter, 0, jl_Object, [cbgi_GestureDetector$GestureListener], 0, 3, 0, 0, 0,
    cbgssu_ActorGestureListener$1, 0, cbgi_GestureDetector$GestureAdapter, [], 0, 0, 0, 0, 0,
    cbgssu_FocusListener$FocusEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
    cbgssu_FocusListener$1, 0, jl_Object, [], 32, 0, 0, cbgssu_FocusListener$1_$callClinit, 0,
    cbgssu_DragAndDrop$Target, 0, jl_Object, [], 1, 3, 0, 0, 0,
    cbgssu_ActorGestureListener$2, 0, jl_Object, [], 32, 0, 0, cbgssu_ActorGestureListener$2_$callClinit, 0,
    cbgssu_DragScrollListener$2, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
    cbgssu_BaseDrawable, 0, jl_Object, [cbgssu_Drawable], 0, 3, 0, 0, 0,
    cbgssu_NinePatchDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
    cbgssu_UIUtils, 0, jl_Object, [], 4, 3, 0, cbgssu_UIUtils_$callClinit, 0,
    cbgssu_FocusListener, 0, jl_Object, [cbgss_EventListener], 1, 3, 0, 0, 0,
    cbgssu_DragScrollListener, 0, cbgssu_DragListener, [], 0, 3, 0, 0, 0,
    cbgssu_DragAndDrop, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_ScissorStack, 0, jl_Object, [], 0, 3, 0, cbgssu_ScissorStack_$callClinit, 0,
    cbgssu_ChangeListener, 0, jl_Object, [cbgss_EventListener], 1, 3, 0, 0, 0,
    cbgssu_TextureRegionDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0]);
    $rt_metadata([cbgssu_SpriteDrawable, 0, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, 0, 0, 0,
    cbgssu_ClickListener, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
    cbgssu_TiledDrawable, 0, cbgssu_TextureRegionDrawable, [], 0, 3, 0, 0, 0,
    cbgssu_ChangeListener$ChangeEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
    cbgssu_Layout, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgss_InputEvent, 0, cbgss_Event, [], 0, 3, 0, 0, 0,
    cbgss_Stage$TouchFocus, 0, jl_Object, [cbgu_Pool$Poolable], 4, 3, 0, 0, 0,
    cbgss_InputListener$1, 0, jl_Object, [], 32, 0, 0, cbgss_InputListener$1_$callClinit, 0,
    cbgss_InputEvent$Type, 0, jl_Enum, [], 12, 3, 0, cbgss_InputEvent$Type_$callClinit, 0,
    cbgss_Action, 0, jl_Object, [cbgu_Pool$Poolable], 1, 3, 0, 0, 0,
    cbgssa_DelegateAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
    cbgssa_TimeScaleAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
    cbgssa_DelayAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
    cbgssa_TemporalAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
    cbgssa_RelativeTemporalAction, 0, cbgssa_TemporalAction, [], 1, 3, 0, 0, 0,
    cbgssa_SizeByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_EventAction$1, 0, jl_Object, [cbgss_EventListener], 0, 0, 0, 0, 0,
    cbgssa_ParallelAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_SequenceAction, 0, cbgssa_ParallelAction, [], 0, 3, 0, 0, 0,
    cbgssa_RemoveListenerAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_AddListenerAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_TouchableAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_Actions, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssa_EventAction, 0, cbgss_Action, [], 1, 3, 0, 0, 0,
    cbgssa_CountdownEventAction, 0, cbgssa_EventAction, [], 0, 3, 0, 0, 0,
    cbgssa_MoveToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_ScaleToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_RotateByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_VisibleAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_ScaleByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_IntAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_ColorAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_RunnableAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_SizeToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_LayoutAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_RemoveActorAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_AfterAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
    cbgssa_FloatAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_RemoveAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_MoveByAction, 0, cbgssa_RelativeTemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_RepeatAction, 0, cbgssa_DelegateAction, [], 0, 3, 0, 0, 0,
    cbgssa_AddAction, 0, cbgss_Action, [], 0, 3, 0, 0, 0,
    cbgssa_RotateToAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
    cbgssa_AlphaAction, 0, cbgssa_TemporalAction, [], 0, 3, 0, 0, 0,
    cbgssu_Skin, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
    cbgssu_WidgetGroup, 0, cbgss_Group, [cbgssu_Layout], 0, 3, 0, 0, 0,
    cbgssu_Table, 0, cbgssu_WidgetGroup, [], 0, 3, 0, cbgssu_Table_$callClinit, 0,
    cbgssu_Button, 0, cbgssu_Table, [cbgssu_Disableable], 0, 3, 0, 0, 0,
    cbgssu_TextButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
    cbgssu_CheckBox, 0, cbgssu_TextButton, [], 0, 3, 0, 0, 0]);
    $rt_metadata([cbgssu_Dialog$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_Container, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
    cbgu_Json$Serializer, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgu_Json$ReadOnlySerializer, 0, jl_Object, [cbgu_Json$Serializer], 1, 3, 0, 0, 0,
    cbgssu_Skin$2, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
    cbgssu_Widget, 0, cbgss_Actor, [cbgssu_Layout], 0, 3, 0, 0, 0,
    cbgssu_Touchpad, 0, cbgssu_Widget, [], 0, 3, 0, 0, 0,
    cbgssu_Dialog$4, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_Value, 0, jl_Object, [], 1, 3, 0, cbgssu_Value_$callClinit, 0,
    cbgssu_Value$4, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_Value$7, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_TextField$TextFieldClickListener, 0, cbgssu_ClickListener, [], 0, 3, 0, 0, 0,
    cbgssu_TextArea$TextAreaListener, 0, cbgssu_TextField$TextFieldClickListener, [], 0, 3, 0, 0, 0,
    cbgssu_Table$3, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_SelectBox$SelectBoxScrollPane$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_Window, 0, cbgssu_Table, [], 0, 3, 0, 0, 0,
    cbgssu_Value$9, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgm_Shape2D, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgm_Rectangle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
    cbgssu_Table$DebugRect, "Table$DebugRect", 14, cbgm_Rectangle, [], 0, 3, 0, cbgssu_Table$DebugRect_$callClinit, 0,
    cbgssu_Skin$5, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
    cbgssu_TextField, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
    cbgssu_TextArea, 0, cbgssu_TextField, [], 0, 3, 0, 0, 0,
    cbgssu_ScrollPane$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_TextField$OnscreenKeyboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgssu_TextField$DefaultOnscreenKeyboard, 0, jl_Object, [cbgssu_TextField$OnscreenKeyboard], 0, 3, 0, 0, 0,
    cbgssu_Button$ButtonStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_TextButton$TextButtonStyle, 0, cbgssu_Button$ButtonStyle, [], 0, 3, 0, 0, 0,
    cbgssu_ImageTextButton$ImageTextButtonStyle, 0, cbgssu_TextButton$TextButtonStyle, [], 0, 3, 0, 0, 0,
    cbgssu_ProgressBar, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
    cbgssu_Slider, 0, cbgssu_ProgressBar, [], 0, 3, 0, 0, 0,
    cbgssu_Tooltip$1, 0, cbgssu_Container, [], 0, 0, 0, 0, 0,
    cbgssu_ScrollPane, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
    cbgssu_ImageButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
    cbgssu_List, 0, cbgssu_Widget, [cbgssu_Cullable], 0, 3, 0, 0, 0,
    cbgssu_Table$5, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_TextTooltip$TextTooltipStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Dialog$4$1, 0, jl_Object, [jl_Runnable], 0, 0, 0, 0, 0,
    cbgssu_Touchpad$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_TextField$KeyRepeatTask, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
    cbgssu_ButtonGroup, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_SplitPane$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_Tree$2, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
    cbgssu_ScrollPane$2, 0, cbgssu_ActorGestureListener, [], 0, 0, 0, 0, 0,
    cbgssu_Value$6, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_Value$5, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_TextField$TextFieldFilter, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgssu_ProgressBar$ProgressBarStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Slider$SliderStyle, 0, cbgssu_ProgressBar$ProgressBarStyle, [], 0, 3, 0, 0, 0,
    cbgssu_Skin$3, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0]);
    $rt_metadata([cbgssu_Dialog$3, 0, cbgssu_FocusListener, [], 0, 0, 0, 0, 0,
    cbgssu_Dialog$2, 0, cbgssu_ChangeListener, [], 0, 0, 0, 0, 0,
    cbgssu_SelectBox$SelectBoxScrollPane$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_SelectBox$SelectBoxScrollPane$1, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
    cbgssu_Table$4, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_Cell, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbgssu_Cell_$callClinit, 0,
    cbgssu_CheckBox$CheckBoxStyle, 0, cbgssu_TextButton$TextButtonStyle, [], 0, 3, 0, 0, 0,
    cbgssu_List$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_TooltipManager$2, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
    cbgssu_Value$1, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_Stack, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
    cbgssu_ScrollPane$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_Touchpad$TouchpadStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Value$Fixed, 0, cbgssu_Value, [], 0, 3, 0, 0, 0,
    cbgssu_SelectBox$SelectBoxScrollPane, 0, cbgssu_ScrollPane, [], 0, 3, 0, 0, 0,
    cbgssu_Value$3, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_SelectBox, 0, cbgssu_Widget, [cbgssu_Disableable], 0, 3, 0, 0, 0,
    cbgssu_SelectBox$1, 0, cbgssu_ArraySelection, [], 0, 0, 0, 0, 0,
    cbgssu_SplitPane$SplitPaneStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Label, 0, cbgssu_Widget, [], 0, 3, 0, cbgssu_Label_$callClinit, 0,
    cbgssu_Window$WindowStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Value$8, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_Table$2, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_Dialog, 0, cbgssu_Window, [], 0, 3, 0, 0, 0,
    cbgssu_Value$2, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_Label$LabelStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_TooltipManager, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Table$Debug, 0, jl_Enum, [], 12, 3, 0, cbgssu_Table$Debug_$callClinit, 0,
    cbgssu_Value$10, 0, cbgssu_Value, [], 0, 0, 0, 0, 0,
    cbgssu_TextField$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
    cbgu_Pool, 0, jl_Object, [], 1, 3, 0, 0, 0,
    cbgssu_Table$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
    cbgssu_TextField$TextFieldFilter$DigitsOnlyFilter, 0, jl_Object, [cbgssu_TextField$TextFieldFilter], 0, 3, 0, 0, 0,
    cbgssu_List$ListStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Skin$TintedDrawable, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_SelectBox$SelectBoxStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Tooltip, 0, cbgss_InputListener, [], 0, 3, 0, 0, 0,
    cbgssu_TooltipManager$1, 0, cbgu_Timer$Task, [], 0, 0, 0, 0, 0,
    cbgssu_SelectBox$SelectBoxScrollPane$4, 0, cbgssu_List, [], 0, 0, 0, 0, 0,
    cbgssu_TextField$TextFieldListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgssu_List$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_VerticalGroup, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
    cbgssu_SplitPane, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
    cbgssu_SelectBox$2, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
    cbgu_Json, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Skin$1, 0, cbgu_Json, [], 0, 0, 0, 0, 0,
    cbgssu_ParticleEffectActor, 0, cbgss_Actor, [cbgu_Disposable], 0, 3, 0, 0, 0,
    cbgssu_Window$3, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_ImageTextButton, 0, cbgssu_Button, [], 0, 3, 0, 0, 0,
    cbgssu_Slider$1, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0]);
    $rt_metadata([cbgssu_Button$1, 0, cbgssu_ClickListener, [], 0, 0, 0, 0, 0,
    cbgssu_ImageButton$ImageButtonStyle, 0, cbgssu_Button$ButtonStyle, [], 0, 3, 0, 0, 0,
    cbgssu_HorizontalGroup, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
    cbgssu_TextField$TextFieldStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Tree$TreeStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgssu_Image, 0, cbgssu_Widget, [], 0, 3, 0, 0, 0,
    cbgssu_Tree$1, 0, cbgssu_Selection, [], 0, 0, 0, 0, 0,
    cbgssu_Window$2, 0, cbgss_InputListener, [], 0, 0, 0, 0, 0,
    cbgssu_Tree, 0, cbgssu_WidgetGroup, [], 0, 3, 0, 0, 0,
    cbgssu_TextTooltip, 0, cbgssu_Tooltip, [], 0, 3, 0, 0, 0,
    cbgssu_Window$1, 0, cbgssu_Table, [], 0, 0, 0, 0, 0,
    cbgssu_Skin$4, 0, cbgu_Json$ReadOnlySerializer, [], 0, 0, 0, 0, 0,
    cbgssu_Tree$Node, 0, jl_Object, [], 1, 3, 0, 0, 0,
    cbgssu_ScrollPane$ScrollPaneStyle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_Matrix4Emu, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4Emu_$callClinit, 0,
    cbgm_Interpolation, 0, jl_Object, [], 1, 3, 0, cbgm_Interpolation_$callClinit, 0,
    cbgm_Interpolation$SwingIn, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
    cbgm_Bresenham2, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$7, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_ConvexHull, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$Pow, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$PowIn, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$PowOut, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, 0,
    cbgm_Path, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgm_BSpline, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
    cbgm_Interpolation$8, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Polygon, 0, jl_Object, [cbgm_Shape2D], 0, 3, 0, 0, 0,
    cbgm_Interpolation$4, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Interpolation$Elastic, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$5, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Interpolation$2, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_GeometryUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbgm_Bresenham2$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
    cbgm_Vector, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgm_Vector2, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, 0, 0,
    cbgm_Interpolation$13, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Interpolation$Exp, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
    cbgm_CumulativeDistribution, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$1, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Interpolation$ExpOut, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
    cbgm_FloatCounter, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, 0,
    cbgm_Plane$PlaneSide, 0, jl_Enum, [], 12, 3, 0, cbgm_Plane$PlaneSide_$callClinit, 0,
    cbgm_Octree, 0, jl_Object, [], 0, 3, 0, cbgm_Octree_$callClinit, 0,
    cbgm_Interpolation$BounceOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$BounceIn, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$10, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Affine2, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
    cbgm_Interpolation$3, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Vector4, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector4_$callClinit, 0,
    cbgm_Interpolation$ElasticIn, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0]);
    $rt_metadata([cbgm_Interpolation$Swing, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
    cbgm_DelaunayTriangulator, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_Polyline, 0, jl_Object, [cbgm_Shape2D], 0, 3, 0, 0, 0,
    cbgm_Interpolation$6, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Interpolation$SwingOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$14, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Interpolation$ElasticOut, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, 0,
    cbgmc_OrientedBoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_OrientedBoundingBox_$callClinit, 0,
    cbgmc_BoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_BoundingBox_$callClinit, 0,
    cbgmc_Ray, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_Ray_$callClinit, 0,
    cbgmc_Segment, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
    cbgmc_Sphere, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
    cbgm_Ellipse, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
    cbgm_CatmullRomSpline, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
    cbgm_MathUtils, 0, jl_Object, [], 4, 3, 0, cbgm_MathUtils_$callClinit, 0,
    cbgm_Intersector, 0, jl_Object, [], 4, 3, 0, cbgm_Intersector_$callClinit, 0,
    cbgm_WindowedMean, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbgm_Interpolation$Bounce, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, 0,
    cbgm_Matrix4, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4_$callClinit, 0,
    jur_RandomGenerator, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ju_Random, 0, jl_Object, [jur_RandomGenerator, ji_Serializable], 0, 3, 0, 0, 0,
    cbgm_RandomXS128, 0, ju_Random, [], 0, 3, 0, 0, 0,
    cbgm_Interpolation$12, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Interpolation$9, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Frustum, 0, jl_Object, [], 0, 3, 0, cbgm_Frustum_$callClinit, 0,
    cbgm_Quaternion, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Quaternion_$callClinit, 0,
    cbgm_EarClippingTriangulator, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_Octree$RayCastResult, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_Vector3, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector3_$callClinit, 0,
    cbgm_Circle, 0, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, 0, 0,
    cbgm_Octree$1, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
    cbgm_Interpolation$ExpIn, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, 0,
    cbgm_Bezier, 0, jl_Object, [cbgm_Path], 0, 3, 0, 0, 0,
    cbgm_CumulativeDistribution$CumulativeValue, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_GridPoint2, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
    cbgm_Plane, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
    cbgm_Interpolation$11, 0, cbgm_Interpolation, [], 0, 0, 0, 0, 0,
    cbgm_Octree$OctreeNode, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_Intersector$MinimumTranslationVector, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_Intersector$SplitTriangle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgm_GridPoint3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
    cbgm_Octree$Collider, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgm_Matrix3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, 0,
    cbgm_MathUtils$Sin, 0, jl_Object, [], 0, 0, 0, 0, 0,
    cbggg_GlyphLayout, "GlyphLayout", 17, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbggg_GlyphLayout_$callClinit, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout_toString)],
    cbggg_TextureRegion, "TextureRegion", 17, jl_Object, [], 0, 3, 0, 0, 0,
    cbggg_Sprite, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
    cbggg_BitmapFont, "BitmapFont", 17, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, ["$dispose", $rt_wrapFunction0(cbggg_BitmapFont_dispose)],
    cbggg_NinePatch, 0, jl_Object, [], 0, 3, 0, cbggg_NinePatch_$callClinit, 0,
    cbgg_Color, "Color", 15, jl_Object, [], 0, 3, 0, cbgg_Color_$callClinit, ["$equals", $rt_wrapFunction1(cbgg_Color_equals), "$hashCode", $rt_wrapFunction0(cbgg_Color_hashCode), "$toString", $rt_wrapFunction0(cbgg_Color_toString)]]);
    $rt_metadata([cbgg_GLTexture, 0, jl_Object, [cbgu_Disposable], 1, 3, 0, 0, 0,
    cbgg_Texture, "Texture", 15, cbgg_GLTexture, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cbgg_Texture_toString)],
    cbgu_Array, "Array", 10, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_Array_hashCode), "$equals", $rt_wrapFunction1(cbgu_Array_equals), "$toString", $rt_wrapFunction0(cbgu_Array_toString)],
    cbgu_ObjectMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
    cbgu_OrderedMap, 0, cbgu_ObjectMap, [], 0, 3, 0, 0, 0,
    cbgu_Queue, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
    cbgg_VertexAttribute, "VertexAttribute", 15, jl_Object, [], 4, 3, 0, 0, ["$equals", $rt_wrapFunction1(cbgg_VertexAttribute_equals), "$hashCode", $rt_wrapFunction0(cbgg_VertexAttribute_hashCode)],
    cbgggm_Node, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggm_NodePart, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggm_NodeKeyframe, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggm_Animation, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggm_MeshPart, 0, jl_Object, [], 0, 3, 0, cbgggm_MeshPart_$callClinit, 0,
    cbgggmd_ModelAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelMesh, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelMaterial, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelNodePart, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelNode, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelMeshPart, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelData, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelTexture, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelNodeKeyframe, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelNodeAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggmd_ModelMaterial$MaterialType, 0, jl_Enum, [], 12, 3, 0, cbgggmd_ModelMaterial$MaterialType_$callClinit, 0,
    cbgggm_NodeAnimation, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbg_Net, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgm_MapObject, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgmo_RectangleMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
    cbgmo_PolygonMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
    cbgmo_CircleMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
    cbgmo_PolylineMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
    cbgmo_EllipseMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
    cbgmo_TextureMapObject, 0, cbgm_MapObject, [], 0, 3, 0, 0, 0,
    cbgmto_TiledMapTileMapObject, 0, cbgmo_TextureMapObject, [], 0, 3, 0, 0, 0,
    cbgggp_ResourceData$Configurable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgggp_ParticleEffect, 0, jl_Object, [cbgu_Disposable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
    cbgu_Json$Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbgggp_ParticleController, 0, jl_Object, [cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 0, 3, 0, 0, 0,
    cbgggp_ResourceData, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
    cbgggp_ParallelArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggpv_ParticleValue, 0, jl_Object, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
    cbgggpv_NumericValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
    cbgggpv_SpawnShapeValue, 0, cbgggpv_ParticleValue, [cbgggp_ResourceData$Configurable, cbgu_Json$Serializable], 1, 3, 0, 0, 0,
    cbgggpv_PrimitiveSpawnShapeValue, 0, cbgggpv_SpawnShapeValue, [], 1, 3, 0, cbgggpv_PrimitiveSpawnShapeValue_$callClinit, 0,
    cbgggpv_MeshSpawnShapeValue$Triangle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggpv_PointSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
    cbgggpv_RectangleSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
    cbgggpv_GradientColorValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
    cbgggpv_RangedNumericValue, 0, cbgggpv_ParticleValue, [], 0, 3, 0, 0, 0,
    cbgggpv_ScaledNumericValue, 0, cbgggpv_RangedNumericValue, [], 0, 3, 0, 0, 0,
    cbgggpv_EllipseSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0]);
    $rt_metadata([cbgggpv_MeshSpawnShapeValue, 0, cbgggpv_SpawnShapeValue, [], 1, 3, 0, 0, 0,
    cbgggpv_WeightMeshSpawnShapeValue, 0, cbgggpv_MeshSpawnShapeValue, [], 4, 3, 0, 0, 0,
    cbgggpv_LineSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
    cbgggpv_CylinderSpawnShapeValue, 0, cbgggpv_PrimitiveSpawnShapeValue, [], 4, 3, 0, 0, 0,
    cbgggpv_UnweightedMeshSpawnShapeValue, 0, cbgggpv_MeshSpawnShapeValue, [], 4, 3, 0, 0, 0,
    cbgggpv_PrimitiveSpawnShapeValue$SpawnSide, 0, jl_Enum, [], 12, 3, 0, cbgggpv_PrimitiveSpawnShapeValue$SpawnSide_$callClinit, 0,
    cbgggp_ParticleControllerComponent, 0, jl_Object, [cbgu_Disposable, cbgu_Json$Serializable, cbgggp_ResourceData$Configurable], 1, 3, 0, 0, 0,
    cbgggpe_Emitter, 0, cbgggp_ParticleControllerComponent, [cbgu_Json$Serializable], 1, 3, 0, 0, 0,
    cbgggpe_RegularEmitter, 0, cbgggpe_Emitter, [cbgu_Json$Serializable], 0, 3, 0, 0, 0,
    cbgggpe_RegularEmitter$EmissionMode, 0, jl_Enum, [], 12, 3, 0, cbgggpe_RegularEmitter$EmissionMode_$callClinit, 0,
    cbgggpi_Influencer, 0, cbgggp_ParticleControllerComponent, [], 1, 3, 0, 0, 0,
    cbgggpi_ParticleControllerInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
    cbgggpi_RegionInfluencer$AspectTextureRegion, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgggpi_DynamicsModifier, 0, cbgggpi_Influencer, [], 1, 3, 0, cbgggpi_DynamicsModifier_$callClinit, 0,
    cbgggpi_DynamicsModifier$Strength, 0, cbgggpi_DynamicsModifier, [], 1, 3, 0, 0, 0,
    cbgggpi_DynamicsModifier$Angular, 0, cbgggpi_DynamicsModifier$Strength, [], 1, 3, 0, 0, 0,
    cbgggpi_DynamicsModifier$Rotational3D, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
    cbgggpi_ColorInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
    cbgggpi_ColorInfluencer$Random, 0, cbgggpi_ColorInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpi_DynamicsInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
    cbgggpi_RegionInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
    cbgggpi_RegionInfluencer$Single, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpi_ModelInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
    cbgggpi_DynamicsModifier$Rotational2D, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
    cbgggpi_DynamicsModifier$BrownianAcceleration, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
    cbgggpi_SimpleInfluencer, 0, cbgggpi_Influencer, [], 1, 3, 0, 0, 0,
    cbgggpi_ScaleInfluencer, 0, cbgggpi_SimpleInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpi_RegionInfluencer$Random, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpi_DynamicsModifier$TangentialAcceleration, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
    cbgggpi_ParticleControllerFinalizerInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
    cbgggpi_RegionInfluencer$Animated, 0, cbgggpi_RegionInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpi_SpawnInfluencer, 0, cbgggpi_Influencer, [], 0, 3, 0, 0, 0,
    cbgggpi_DynamicsModifier$FaceDirection, 0, cbgggpi_DynamicsModifier, [], 0, 3, 0, 0, 0,
    cbgggpi_ParticleControllerInfluencer$Random$ParticleControllerPool, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
    cbgggpi_ModelInfluencer$Random$ModelInstancePool, 0, cbgu_Pool, [], 0, 0, 0, 0, 0,
    cbgggpi_DynamicsModifier$CentripetalAcceleration, 0, cbgggpi_DynamicsModifier$Strength, [], 0, 3, 0, 0, 0,
    cbgggpi_ModelInfluencer$Single, 0, cbgggpi_ModelInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpi_ParticleControllerInfluencer$Random, 0, cbgggpi_ParticleControllerInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpi_ParticleControllerInfluencer$Single, 0, cbgggpi_ParticleControllerInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpi_ModelInfluencer$Random, 0, cbgggpi_ModelInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpi_DynamicsModifier$PolarAcceleration, 0, cbgggpi_DynamicsModifier$Angular, [], 0, 3, 0, 0, 0,
    cbgggpi_ColorInfluencer$Single, 0, cbgggpi_ColorInfluencer, [], 0, 3, 0, 0, 0,
    cbgggpr_ParticleControllerRenderer, 0, cbgggp_ParticleControllerComponent, [], 1, 3, 0, 0, 0,
    cbgggpr_PointSpriteRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
    cbgggpr_ParticleControllerRenderData, 0, jl_Object, [], 1, 3, 0, 0, 0,
    cbgggpr_BillboardControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
    cbgggpr_ModelInstanceRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
    cbgggpr_ParticleControllerControllerRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0,
    cbgggpr_PointSpriteControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
    cbgggpr_BillboardRenderer, 0, cbgggpr_ParticleControllerRenderer, [], 0, 3, 0, 0, 0]);
    $rt_metadata([cbgggpr_ModelInstanceControllerRenderData, 0, cbgggpr_ParticleControllerRenderData, [], 0, 3, 0, 0, 0,
    jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jlr_Type, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jl_Class, "Class", 24, jl_Object, [jlr_AnnotatedElement, jlr_Type], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Class_toString)],
    otji_JS, 0, jl_Object, [], 4, 0, 0, 0, 0,
    otp_Platform, 0, jl_Object, [], 4, 3, 0, 0, 0,
    jl_Throwable, 0, jl_Object, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jl_Throwable_getMessage)],
    jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
    jl_RuntimeException, "RuntimeException", 24, jl_Exception, [], 0, 3, 0, 0, 0,
    jl_ClassCastException, "ClassCastException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jl_CharSequence, "CharSequence", 24, jl_Object, [], 3, 3, 0, 0, 0,
    jl_String, "String", 24, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, jl_String_$callClinit, ["$toString", $rt_wrapFunction0(jl_String_toString), "$equals", $rt_wrapFunction1(jl_String_equals), "$hashCode", $rt_wrapFunction0(jl_String_hashCode)],
    jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0, 0,
    jl_LinkageError, 0, jl_Error, [], 0, 3, 0, 0, 0,
    jl_NoClassDefFoundError, 0, jl_LinkageError, [], 0, 3, 0, 0, 0,
    jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0, 0,
    jl_Integer, "Integer", 24, jl_Number, [jl_Comparable], 0, 3, 0, 0, ["$floatValue", $rt_wrapFunction0(jl_Integer_floatValue), "$toString", $rt_wrapFunction0(jl_Integer_toString0), "$hashCode", $rt_wrapFunction0(jl_Integer_hashCode), "$equals", $rt_wrapFunction1(jl_Integer_equals)],
    jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, 0, ["$ensureCapacity", $rt_wrapFunction1(jl_AbstractStringBuilder_ensureCapacity), "$toString", $rt_wrapFunction0(jl_AbstractStringBuilder_toString)],
    jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert9", $rt_wrapFunction4(jl_StringBuilder_insert3), "$append9", $rt_wrapFunction3(jl_StringBuilder_append3), "$toString", $rt_wrapFunction0(jl_StringBuilder_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuilder_ensureCapacity), "$insert3", $rt_wrapFunction2(jl_StringBuilder_insert5), "$insert", $rt_wrapFunction2(jl_StringBuilder_insert)],
    jl_IncompatibleClassChangeError, 0, jl_LinkageError, [], 0, 3, 0, 0, 0,
    jl_NoSuchFieldError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0, 0,
    jl_NoSuchMethodError, 0, jl_IncompatibleClassChangeError, [], 0, 3, 0, 0, 0,
    kji_Intrinsics, "Intrinsics", 37, jl_Object, [], 0, 3, 0, 0, 0,
    cgxgbt_TeaApplicationConfiguration, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbg_Application, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbt_TeaApplication, "TeaApplication", 5, jl_Object, [cbg_Application, jl_Runnable], 0, 3, 0, 0, ["$run", $rt_wrapFunction0(cgxgbt_TeaApplication_run)],
    cbg_ApplicationListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ka_KtxApplicationAdapter, 0, jl_Object, [cbg_ApplicationListener, cbgu_Disposable], 3, 3, 0, 0, 0,
    ka_KtxGame, 0, jl_Object, [ka_KtxApplicationAdapter], 0, 3, 0, 0, 0,
    igtg_Game, 0, ka_KtxGame, [], 4, 3, 0, 0, 0,
    jl_System, 0, jl_Object, [], 4, 3, 0, 0, 0,
    otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0, 0,
    igtg_Game$Companion, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cgxgbt_TeaApplication$AppState, 0, jl_Enum, [], 12, 3, 0, cgxgbt_TeaApplication$AppState_$callClinit, 0,
    cgxgbtd_WindowWrapper, 0, jl_Object, [], 3, 3, 0, 0, 0,
    otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0, 0,
    otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
    cgxgbtdi_TeaWindow, 0, jl_Object, [cgxgbtd_WindowWrapper, otjb_AnimationFrameCallback], 0, 3, 0, cgxgbtdi_TeaWindow_$callClinit, ["$onAnimationFrame$exported$0", $rt_wrapFunction1(cgxgbtdi_TeaWindow_onAnimationFrame$exported$0)],
    cgxgbtu_TeaNavigator, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgu_Pools, 0, jl_Object, [], 0, 3, 0, cbgu_Pools_$callClinit, 0,
    jl_Float, "Float", 24, jl_Number, [jl_Comparable], 0, 3, 0, 0, ["$floatValue", $rt_wrapFunction0(jl_Float_floatValue), "$toString", $rt_wrapFunction0(jl_Float_toString), "$equals", $rt_wrapFunction1(jl_Float_equals), "$hashCode", $rt_wrapFunction0(jl_Float_hashCode)],
    cbgu_FloatArray, 0, jl_Object, [], 0, 3, 0, 0, 0,
    jl_Math, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbggg_GlyphLayout$GlyphRun, "GlyphLayout$GlyphRun", 17, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$reset", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_toString)],
    cbgu_IntArray, "IntArray", 10, jl_Object, [], 0, 3, 0, 0, ["$hashCode", $rt_wrapFunction0(cbgu_IntArray_hashCode), "$equals", $rt_wrapFunction1(cbgu_IntArray_equals), "$toString", $rt_wrapFunction0(cbgu_IntArray_toString)],
    ju_Map, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0, 0,
    jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0]);
    $rt_metadata([ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jl_String$_clinit_$lambda$_93_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, 0,
    jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jlr_Array, 0, jl_Object, [], 4, 3, 0, 0, 0,
    jl_NullPointerException, "NullPointerException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jl_ArrayStoreException, "ArrayStoreException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, 0, 0, 0,
    cgxgbta_TeaWebAgent, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cgxgbtp_AssetDownloader$AssetDownload, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbtp_AssetDownloadImpl, 0, jl_Object, [cgxgbtp_AssetDownloader$AssetDownload], 0, 3, 0, 0, 0,
    cgxgbtp_AssetDownloader, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cgxgbt_TeaTool, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbg_Graphics, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbt_TeaGraphics, 0, jl_Object, [cbg_Graphics], 0, 3, 0, cgxgbt_TeaGraphics_$callClinit, 0,
    cgxgbtp_Preloader, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cgxgbt_AssetLoaderListener, 0, jl_Object, [], 0, 3, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbt_AssetLoaderListener_onProgress)],
    cbg_Input, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbtd_EventListenerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
    cgxgbt_TeaInput, 0, jl_Object, [cbg_Input, cgxgbtd_EventListenerWrapper], 0, 3, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbt_TeaInput_handleEvent$exported$0)],
    cbg_Files, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbt_TeaFiles, 0, jl_Object, [cbg_Files], 0, 3, 0, 0, 0,
    cgxgbt_TeaNet, 0, jl_Object, [cbg_Net], 0, 3, 0, 0, 0,
    cbg_ApplicationLogger, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbt_TeaApplicationLogger, 0, jl_Object, [cbg_ApplicationLogger], 0, 3, 0, 0, 0,
    cbgu_Clipboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbt_TeaClipboard, 0, jl_Object, [cbgu_Clipboard], 0, 3, 0, 0, 0,
    cbg_Gdx, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbg_Audio, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbt_TeaAudio, 0, jl_Object, [cbg_Audio], 3, 3, 0, 0, 0,
    cgxgbt_DefaultTeaAudio, 0, jl_Object, [cgxgbt_TeaAudio], 0, 3, 0, 0, 0,
    cgxgbt_TeaApplication$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbt_TeaApplication$1_handleEvent$exported$0)],
    cgxgbt_TeaApplication$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbt_TeaApplication$2_handleEvent$exported$0)],
    jl_IllegalArgumentException, "IllegalArgumentException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, jl_Thread_$callClinit, 0,
    cbgu_ObjectSet, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
    jl_Long, "Long", 24, jl_Number, [jl_Comparable], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Long_toString), "$hashCode", $rt_wrapFunction0(jl_Long_hashCode), "$equals", $rt_wrapFunction1(jl_Long_equals)],
    otjw_WebGLContextAttributes, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    cbgg_GL20, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbt_TeaGL20, "TeaGL20", 5, jl_Object, [cbgg_GL20], 0, 3, 0, 0, ["$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindBuffer), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindTexture), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferSubData), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20_glClear),
    "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20_glClearColor), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCreateShader), "$glDeleteProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glDeleteProgram), "$glDeleteShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glDeleteShader), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisable),
    "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisableVertexAttribArray), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnable), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnableVertexAttribArray), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20_glGenerateMipmap),
    "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetFloatv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetProgramInfoLog), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetProgramiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetShaderInfoLog),
    "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetShaderiv), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetString), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glLinkProgram), "$glLineWidth", $rt_wrapFunction1(cgxgbt_TeaGL20_glLineWidth), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20_glPixelStorei), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20_glShaderSource), "$glTexImage2D", function(var_1,
    var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameterf), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20_glUniform1i), "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20_glVertexAttribPointer(this,
    var_1, var_2, var_3, var_4, var_5, var_6); }, "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20_glViewport)],
    cbgg_GL30, 0, jl_Object, [cbgg_GL20], 3, 3, 0, 0, 0,
    cgxgbt_TeaGL30, "TeaGL30", 5, cgxgbt_TeaGL20, [cbgg_GL30], 0, 3, 0, 0, ["$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30_glBindVertexArray), "$glDeleteVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30_glDeleteVertexArrays), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30_glDrawArraysInstanced), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30_glDrawElementsInstanced(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30_glGenVertexArrays),
    "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30_glGetFloatv)],
    cgxgbt_TeaGL30Debug, "TeaGL30Debug", 5, cgxgbt_TeaGL30, [], 0, 3, 0, 0, ["$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glBindVertexArray), "$glDeleteVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glDeleteVertexArrays), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawArraysInstanced), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30Debug_glDrawElementsInstanced(this, var_1, var_2, var_3, var_4, var_5); }, "$glGenVertexArrays",
    $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGenVertexArrays), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements),
    "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnable), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetString), "$glLineWidth", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glLineWidth), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL30Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameterf),
    "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCompileShader),
    "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL30Debug_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCreateShader), "$glDeleteProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDeleteProgram), "$glDeleteShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDeleteShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements0), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnableVertexAttribArray),
    "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetProgramInfoLog),
    "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glUniform1i),
    "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL30Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
    cbggg_GLVersion, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbg_Application$ApplicationType, 0, jl_Enum, [], 12, 3, 0, cbg_Application$ApplicationType_$callClinit, 0,
    cgxgbt_TeaGraphics$FullscreenChanged, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
    cgxgbt_TeaGraphics$1, 0, jl_Object, [cgxgbt_TeaGraphics$FullscreenChanged], 0, 0, 0, 0, ["$fullscreenChanged$exported$0", $rt_wrapFunction0(cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0)],
    cgxgbt_TeaGL20Debug, "TeaGL20Debug", 5, cgxgbt_TeaGL20, [], 0, 3, 0, 0, ["$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindTexture), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glClearColor), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDepthMask), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements),
    "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnable), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetString), "$glLineWidth", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glLineWidth), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glPixelStorei), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameterf),
    "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glViewport), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCompileShader),
    "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20Debug_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCreateShader), "$glDeleteProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDeleteProgram), "$glDeleteShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDeleteShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements0), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnableVertexAttribArray),
    "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetProgramInfoLog),
    "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameteri), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glUniform1i),
    "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glUseProgram), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
    cbgu_IntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
    cbgu_IntSet, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cgxgbt_TeaPermissions$TeaPermissionResult, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0]);
    $rt_metadata([cgxgbt_TeaClipboard$ClipboardWriteHandler, 0, jl_Object, [cgxgbt_TeaPermissions$TeaPermissionResult], 0, 0, 0, 0, ["$granted$exported$0", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0), "$prompt$exported$1", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1), "$denied$exported$2", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2)],
    cbg_LifecycleListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbtw_WebAudioAPIManager, "WebAudioAPIManager", 7, jl_Object, [cbg_LifecycleListener], 0, 3, 0, 0, 0,
    cgxgbt_TeaApplication$3, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, 0,
    jl_CloneNotSupportedException, "CloneNotSupportedException", 24, jl_Exception, [], 0, 3, 0, 0, 0,
    cbgu_ReflectionPool, "ReflectionPool", 10, cbgu_Pool, [], 0, 3, 0, 0, 0,
    jl_StackTraceElement, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
    ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
    otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
    otjde_FocusEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
    otjde_MouseEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
    otjde_KeyboardEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
    otjde_LoadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
    otjde_GamepadEventTarget, 0, jl_Object, [otjde_EventTarget], 3, 3, 0, 0, 0,
    otjb_WindowEventTarget, 0, jl_Object, [otjde_EventTarget, otjde_FocusEventTarget, otjde_MouseEventTarget, otjde_KeyboardEventTarget, otjde_LoadEventTarget, otjde_GamepadEventTarget], 3, 3, 0, 0, 0,
    otjb_StorageProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
    otjc_JSArrayReader, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
    otjb_Window, 0, jl_Object, [otj_JSObject, otjb_WindowEventTarget, otjb_StorageProvider, otjc_JSArrayReader], 1, 3, 0, 0, ["$get$exported$0", $rt_wrapFunction1(otjb_Window_get$exported$0), "$addEventListener$exported$1", $rt_wrapFunction2(otjb_Window_addEventListener$exported$1), "$removeEventListener$exported$2", $rt_wrapFunction2(otjb_Window_removeEventListener$exported$2), "$removeEventListener$exported$3", $rt_wrapFunction3(otjb_Window_removeEventListener$exported$3), "$dispatchEvent$exported$4", $rt_wrapFunction1(otjb_Window_dispatchEvent$exported$4),
    "$getLength$exported$5", $rt_wrapFunction0(otjb_Window_getLength$exported$5), "$addEventListener$exported$6", $rt_wrapFunction3(otjb_Window_addEventListener$exported$6)],
    ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0, 0,
    ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
    ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, 0, 0,
    cgxgbtdt_TypedArrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbggg_GLVersion$Type, 0, jl_Enum, [], 12, 3, 0, cbggg_GLVersion$Type_$callClinit, 0,
    otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    otjt_Float32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
    otjt_Int32Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
    otjt_Int16Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
    otjt_Int8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
    otjt_Uint8Array, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
    cgxgbtp_Preloader$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$1_handleEvent$exported$0)],
    cgxgbtp_Preloader$2, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$2_handleEvent$exported$0)],
    cgxgbtp_Preloader$3, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$3_handleEvent$exported$0)],
    cgxgbtw_AudioControlGraphPool, 0, cbgu_Pool, [], 0, 3, 0, 0, 0,
    cgxgbtw_WebAudioAPIManager$UnlockFunction, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
    cgxgbtw_WebAudioAPIManager$1, 0, jl_Object, [cgxgbtw_WebAudioAPIManager$UnlockFunction], 0, 0, 0, 0, ["$unlockFunction$exported$0", $rt_wrapFunction0(cgxgbtw_WebAudioAPIManager$1_unlockFunction$exported$0)],
    jl_Thread$UncaughtExceptionHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jl_DefaultUncaughtExceptionHandler, 0, jl_Object, [jl_Thread$UncaughtExceptionHandler], 0, 3, 0, 0, 0,
    cgxgbtdt_Uint32ArrayWrapper, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
    jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, 0,
    cbgur_ClassReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbgur_ReflectionException, "ReflectionException", 11, jl_Exception, [], 0, 3, 0, 0, 0,
    jl_NegativeArraySizeException, "NegativeArraySizeException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    otji_JSWrapper, 0, jl_Object, [], 4, 3, 0, otji_JSWrapper_$callClinit, 0,
    ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 0, 0, 0, 0, 0,
    ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
    jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0, 0,
    jl_NumberFormatException, "NumberFormatException", 24, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0]);
    $rt_metadata([cbgur_Constructor, 0, jl_Object, [], 4, 3, 0, 0, 0,
    jl_SecurityException, 0, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jl_ReflectiveOperationException, 0, jl_Exception, [], 0, 3, 0, 0, 0,
    jl_NoSuchMethodException, "NoSuchMethodException", 24, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
    jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_AbstractSet_find), "$findBack", $rt_wrapFunction4(jur_AbstractSet_findBack), "$getType0", $rt_wrapFunction0(jur_AbstractSet_getType), "$toString", $rt_wrapFunction0(jur_AbstractSet_toString), "$setNext", $rt_wrapFunction1(jur_AbstractSet_setNext), "$first1", $rt_wrapFunction1(jur_AbstractSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_AbstractSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_AbstractSet_processSecondPass)],
    otjc_JSWeakMap, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    otjc_JSWeakRef, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    otjc_JSMap, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    otjc_JSFinalizationRegistryConsumer, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
    otji_JSWrapper$_clinit_$lambda$_30_0, 0, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, ["$accept$exported$0", $rt_wrapFunction1(otji_JSWrapper$_clinit_$lambda$_30_0_accept$exported$0)],
    otjc_JSFinalizationRegistry, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    otji_JSWrapper$_clinit_$lambda$_30_1, 0, jl_Object, [otjc_JSFinalizationRegistryConsumer], 0, 3, 0, 0, ["$accept$exported$0", $rt_wrapFunction1(otji_JSWrapper$_clinit_$lambda$_30_1_accept$exported$0)],
    ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, 0,
    ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
    jur_FSet, "FSet", 20, jur_AbstractSet, [], 0, 0, 0, jur_FSet_$callClinit, ["$matches", $rt_wrapFunction3(jur_FSet_matches), "$getName0", $rt_wrapFunction0(jur_FSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet_hasConsumed)],
    jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0, 0,
    jur_PatternSyntaxException, "PatternSyntaxException", 20, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jur_PatternSyntaxException_getMessage)],
    ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0, 0,
    ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, 0, 0,
    ju_SequencedCollection, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
    ju_List, 0, jl_Object, [ju_SequencedCollection], 3, 3, 0, 0, 0,
    ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, 0, 0,
    ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, 0, 0,
    jur_NonCapFSet, "NonCapFSet", 20, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapFSet_matches), "$getName0", $rt_wrapFunction0(jur_NonCapFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapFSet_hasConsumed)],
    jur_AheadFSet, "AheadFSet", 20, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AheadFSet_matches), "$getName0", $rt_wrapFunction0(jur_AheadFSet_getName)],
    jur_BehindFSet, "BehindFSet", 20, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BehindFSet_matches), "$getName0", $rt_wrapFunction0(jur_BehindFSet_getName)],
    jur_AtomicFSet, "AtomicFSet", 20, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicFSet_matches), "$getName0", $rt_wrapFunction0(jur_AtomicFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_AtomicFSet_hasConsumed)],
    jur_FinalSet, "FinalSet", 20, jur_FSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FinalSet_matches), "$getName0", $rt_wrapFunction0(jur_FinalSet_getName)],
    jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafSet_matches), "$charCount0", $rt_wrapFunction0(jur_LeafSet_charCount), "$hasConsumed", $rt_wrapFunction1(jur_LeafSet_hasConsumed)],
    jur_EmptySet, "EmptySet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_EmptySet_accepts), "$find0", $rt_wrapFunction3(jur_EmptySet_find), "$findBack", $rt_wrapFunction4(jur_EmptySet_findBack), "$getName0", $rt_wrapFunction0(jur_EmptySet_getName), "$hasConsumed", $rt_wrapFunction1(jur_EmptySet_hasConsumed)],
    jur_JointSet, "JointSet", 20, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_JointSet_matches), "$setNext", $rt_wrapFunction1(jur_JointSet_setNext), "$getName0", $rt_wrapFunction0(jur_JointSet_getName), "$first1", $rt_wrapFunction1(jur_JointSet_first), "$hasConsumed", $rt_wrapFunction1(jur_JointSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_JointSet_processSecondPass)],
    jur_NonCapJointSet, "NonCapJointSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NonCapJointSet_matches), "$getName0", $rt_wrapFunction0(jur_NonCapJointSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapJointSet_hasConsumed)],
    jur_AtomicJointSet, "AtomicJointSet", 20, jur_NonCapJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AtomicJointSet_matches), "$setNext", $rt_wrapFunction1(jur_AtomicJointSet_setNext), "$getName0", $rt_wrapFunction0(jur_AtomicJointSet_getName)],
    jur_PositiveLookAhead, "PositiveLookAhead", 20, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookAhead_hasConsumed), "$getName0", $rt_wrapFunction0(jur_PositiveLookAhead_getName)],
    jur_NegativeLookAhead, "NegativeLookAhead", 20, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookAhead_hasConsumed), "$getName0", $rt_wrapFunction0(jur_NegativeLookAhead_getName)],
    jur_PositiveLookBehind, "PositiveLookBehind", 20, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PositiveLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookBehind_hasConsumed), "$getName0", $rt_wrapFunction0(jur_PositiveLookBehind_getName)],
    jur_NegativeLookBehind, "NegativeLookBehind", 20, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_NegativeLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookBehind_hasConsumed), "$getName0", $rt_wrapFunction0(jur_NegativeLookBehind_getName)],
    jur_SingleSet, "SingleSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SingleSet_matches), "$find0", $rt_wrapFunction3(jur_SingleSet_find), "$findBack", $rt_wrapFunction4(jur_SingleSet_findBack), "$first1", $rt_wrapFunction1(jur_SingleSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_SingleSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_SingleSet_processSecondPass)],
    jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0, 0,
    jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, jur_AbstractCharClass_$callClinit, ["$getBits", $rt_wrapFunction0(jur_AbstractCharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getLowHighSurrogates), "$getInstance1", $rt_wrapFunction0(jur_AbstractCharClass_getInstance), "$hasUCI", $rt_wrapFunction0(jur_AbstractCharClass_hasUCI)],
    jur_CharClass, "CharClass", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass_contains), "$getBits", $rt_wrapFunction0(jur_CharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_CharClass_getLowHighSurrogates), "$getInstance1", $rt_wrapFunction0(jur_CharClass_getInstance), "$toString", $rt_wrapFunction0(jur_CharClass_toString), "$hasUCI", $rt_wrapFunction0(jur_CharClass_hasUCI)],
    ju_MissingResourceException, "MissingResourceException", 19, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$first1", $rt_wrapFunction1(jur_QuantifierSet_first), "$hasConsumed", $rt_wrapFunction1(jur_QuantifierSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_QuantifierSet_processSecondPass)],
    jur_LeafQuantifierSet, "LeafQuantifierSet", 20, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_LeafQuantifierSet_matches), "$getName0", $rt_wrapFunction0(jur_LeafQuantifierSet_getName)],
    jur_CompositeQuantifierSet, "CompositeQuantifierSet", 20, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeQuantifierSet_matches), "$getName0", $rt_wrapFunction0(jur_CompositeQuantifierSet_getName)],
    jur_GroupQuantifierSet, "GroupQuantifierSet", 20, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_GroupQuantifierSet_matches), "$getName0", $rt_wrapFunction0(jur_GroupQuantifierSet_getName)],
    jur_AltQuantifierSet, "AltQuantifierSet", 20, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltQuantifierSet_setNext)],
    jur_UnifiedQuantifierSet, "UnifiedQuantifierSet", 20, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UnifiedQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_UnifiedQuantifierSet_find)]]);
    $rt_metadata([jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0, 0,
    jur_Quantifier, "Quantifier", 20, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Quantifier_toString)],
    jur_FSet$PossessiveFSet, "FSet$PossessiveFSet", 20, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_FSet$PossessiveFSet_matches), "$getName0", $rt_wrapFunction0(jur_FSet$PossessiveFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet$PossessiveFSet_hasConsumed)],
    ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
    jur_LowHighSurrogateRangeSet, "LowHighSurrogateRangeSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$getName0", $rt_wrapFunction0(jur_LowHighSurrogateRangeSet_getName)],
    jur_CompositeRangeSet, "CompositeRangeSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeRangeSet_matches), "$setNext", $rt_wrapFunction1(jur_CompositeRangeSet_setNext), "$getName0", $rt_wrapFunction0(jur_CompositeRangeSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CompositeRangeSet_hasConsumed), "$first1", $rt_wrapFunction1(jur_CompositeRangeSet_first)],
    jur_SupplRangeSet, "SupplRangeSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SupplRangeSet_matches), "$getName0", $rt_wrapFunction0(jur_SupplRangeSet_getName), "$contains1", $rt_wrapFunction1(jur_SupplRangeSet_contains), "$first1", $rt_wrapFunction1(jur_SupplRangeSet_first), "$setNext", $rt_wrapFunction1(jur_SupplRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_SupplRangeSet_hasConsumed)],
    jur_UCISupplRangeSet, "UCISupplRangeSet", 20, jur_SupplRangeSet, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_UCISupplRangeSet_contains), "$getName0", $rt_wrapFunction0(jur_UCISupplRangeSet_getName)],
    jur_UCIRangeSet, "UCIRangeSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCIRangeSet_accepts), "$getName0", $rt_wrapFunction0(jur_UCIRangeSet_getName)],
    jur_RangeSet, "RangeSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_RangeSet_accepts), "$getName0", $rt_wrapFunction0(jur_RangeSet_getName), "$first1", $rt_wrapFunction1(jur_RangeSet_first)],
    jur_HangulDecomposedCharSet, "HangulDecomposedCharSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HangulDecomposedCharSet_setNext), "$getName0", $rt_wrapFunction0(jur_HangulDecomposedCharSet_getName), "$matches", $rt_wrapFunction3(jur_HangulDecomposedCharSet_matches), "$first1", $rt_wrapFunction1(jur_HangulDecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HangulDecomposedCharSet_hasConsumed)],
    jur_CharSet, "CharSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$charCount0", $rt_wrapFunction0(jur_CharSet_charCount), "$accepts", $rt_wrapFunction2(jur_CharSet_accepts), "$find0", $rt_wrapFunction3(jur_CharSet_find), "$findBack", $rt_wrapFunction4(jur_CharSet_findBack), "$getName0", $rt_wrapFunction0(jur_CharSet_getName), "$first1", $rt_wrapFunction1(jur_CharSet_first)],
    jur_UCICharSet, "UCICharSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCICharSet_accepts), "$getName0", $rt_wrapFunction0(jur_UCICharSet_getName)],
    jur_CICharSet, "CICharSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CICharSet_accepts), "$getName0", $rt_wrapFunction0(jur_CICharSet_getName)],
    jur_DecomposedCharSet, "DecomposedCharSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_DecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_DecomposedCharSet_matches), "$getName0", $rt_wrapFunction0(jur_DecomposedCharSet_getName), "$first1", $rt_wrapFunction1(jur_DecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_DecomposedCharSet_hasConsumed)],
    jur_UCIDecomposedCharSet, "UCIDecomposedCharSet", 20, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
    jur_CIDecomposedCharSet, "CIDecomposedCharSet", 20, jur_DecomposedCharSet, [], 0, 0, 0, 0, 0,
    jur_PossessiveGroupQuantifierSet, "PossessiveGroupQuantifierSet", 20, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet_matches)],
    jur_PosPlusGroupQuantifierSet, "PosPlusGroupQuantifierSet", 20, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet_matches)],
    jur_AltGroupQuantifierSet, "AltGroupQuantifierSet", 20, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_AltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltGroupQuantifierSet_setNext)],
    jur_PosAltGroupQuantifierSet, "PosAltGroupQuantifierSet", 20, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_PosAltGroupQuantifierSet_setNext)],
    jur_CompositeGroupQuantifierSet, "CompositeGroupQuantifierSet", 20, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CompositeGroupQuantifierSet_matches), "$getName0", $rt_wrapFunction0(jur_CompositeGroupQuantifierSet_getName)],
    jur_PosCompositeGroupQuantifierSet, "PosCompositeGroupQuantifierSet", 20, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PosCompositeGroupQuantifierSet_matches)],
    jur_ReluctantGroupQuantifierSet, "ReluctantGroupQuantifierSet", 20, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet_matches)],
    jur_RelAltGroupQuantifierSet, "RelAltGroupQuantifierSet", 20, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet_matches)],
    jur_RelCompositeGroupQuantifierSet, "RelCompositeGroupQuantifierSet", 20, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_RelCompositeGroupQuantifierSet_matches)],
    jur_DotAllQuantifierSet, "DotAllQuantifierSet", 20, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotAllQuantifierSet_find), "$getName0", $rt_wrapFunction0(jur_DotAllQuantifierSet_getName)],
    jur_DotQuantifierSet, "DotQuantifierSet", 20, jur_QuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotQuantifierSet_matches), "$find0", $rt_wrapFunction3(jur_DotQuantifierSet_find), "$getName0", $rt_wrapFunction0(jur_DotQuantifierSet_getName)],
    jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0, 0,
    jur_PossessiveQuantifierSet, "PossessiveQuantifierSet", 20, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveQuantifierSet_matches)],
    jur_PossessiveAltQuantifierSet, "PossessiveAltQuantifierSet", 20, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet_matches)],
    jur_PossessiveCompositeQuantifierSet, "PossessiveCompositeQuantifierSet", 20, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PossessiveCompositeQuantifierSet_matches)],
    jur_ReluctantQuantifierSet, "ReluctantQuantifierSet", 20, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantQuantifierSet_matches)],
    jur_ReluctantAltQuantifierSet, "ReluctantAltQuantifierSet", 20, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet_matches)],
    jur_ReluctantCompositeQuantifierSet, "ReluctantCompositeQuantifierSet", 20, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_ReluctantCompositeQuantifierSet_matches)],
    jur_SOLSet, "SOLSet", 20, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_SOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_SOLSet_hasConsumed), "$getName0", $rt_wrapFunction0(jur_SOLSet_getName)],
    jur_WordBoundary, "WordBoundary", 20, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_WordBoundary_matches), "$hasConsumed", $rt_wrapFunction1(jur_WordBoundary_hasConsumed), "$getName0", $rt_wrapFunction0(jur_WordBoundary_getName)],
    jur_PreviousMatch, "PreviousMatch", 20, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_PreviousMatch_matches), "$hasConsumed", $rt_wrapFunction1(jur_PreviousMatch_hasConsumed), "$getName0", $rt_wrapFunction0(jur_PreviousMatch_getName)],
    jur_EOLSet, "EOLSet", 20, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOLSet_hasConsumed), "$getName0", $rt_wrapFunction0(jur_EOLSet_getName)],
    jur_EOISet, "EOISet", 20, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_EOISet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOISet_hasConsumed), "$getName0", $rt_wrapFunction0(jur_EOISet_getName)],
    jur_MultiLineSOLSet, "MultiLineSOLSet", 20, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineSOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineSOLSet_hasConsumed), "$getName0", $rt_wrapFunction0(jur_MultiLineSOLSet_getName)],
    jur_DotAllSet, "DotAllSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotAllSet_matches), "$getName0", $rt_wrapFunction0(jur_DotAllSet_getName), "$setNext", $rt_wrapFunction1(jur_DotAllSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotAllSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotAllSet_hasConsumed)],
    jur_DotSet, "DotSet", 20, jur_JointSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_DotSet_matches), "$getName0", $rt_wrapFunction0(jur_DotSet_getName), "$setNext", $rt_wrapFunction1(jur_DotSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotSet_hasConsumed)],
    jur_UEOLSet, "UEOLSet", 20, jur_AbstractSet, [], 4, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UEOLSet_hasConsumed), "$getName0", $rt_wrapFunction0(jur_UEOLSet_getName)],
    jur_UMultiLineEOLSet, "UMultiLineEOLSet", 20, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UMultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UMultiLineEOLSet_hasConsumed), "$getName0", $rt_wrapFunction0(jur_UMultiLineEOLSet_getName)],
    jur_MultiLineEOLSet, "MultiLineEOLSet", 20, jur_AbstractSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_MultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineEOLSet_hasConsumed), "$getName0", $rt_wrapFunction0(jur_MultiLineEOLSet_getName)],
    jur_CIBackReferenceSet, "CIBackReferenceSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_CIBackReferenceSet_matches), "$setNext", $rt_wrapFunction1(jur_CIBackReferenceSet_setNext), "$getName0", $rt_wrapFunction0(jur_CIBackReferenceSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CIBackReferenceSet_hasConsumed)],
    jur_BackReferenceSet, "BackReferenceSet", 20, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_BackReferenceSet_matches), "$find0", $rt_wrapFunction3(jur_BackReferenceSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferenceSet_findBack), "$first1", $rt_wrapFunction1(jur_BackReferenceSet_first), "$getName0", $rt_wrapFunction0(jur_BackReferenceSet_getName)],
    jur_UCIBackReferenceSet, "UCIBackReferenceSet", 20, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$matches", $rt_wrapFunction3(jur_UCIBackReferenceSet_matches), "$getName0", $rt_wrapFunction0(jur_UCIBackReferenceSet_getName)],
    jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$insert9", $rt_wrapFunction4(jl_StringBuffer_insert0), "$append9", $rt_wrapFunction3(jl_StringBuffer_append), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuffer_ensureCapacity), "$insert3", $rt_wrapFunction2(jl_StringBuffer_insert1), "$insert", $rt_wrapFunction2(jl_StringBuffer_insert2)]]);
    $rt_metadata([jur_SequenceSet, "SequenceSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SequenceSet_accepts), "$find0", $rt_wrapFunction3(jur_SequenceSet_find), "$findBack", $rt_wrapFunction4(jur_SequenceSet_findBack), "$getName0", $rt_wrapFunction0(jur_SequenceSet_getName), "$first1", $rt_wrapFunction1(jur_SequenceSet_first)],
    jur_UCISequenceSet, "UCISequenceSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISequenceSet_accepts), "$getName0", $rt_wrapFunction0(jur_UCISequenceSet_getName)],
    jur_CISequenceSet, "CISequenceSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_CISequenceSet_accepts), "$getName0", $rt_wrapFunction0(jur_CISequenceSet_getName)],
    otjc_JSObjects, 0, jl_Object, [], 4, 3, 0, 0, 0,
    jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit, 0,
    jur_UCISupplCharSet, "UCISupplCharSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_UCISupplCharSet_accepts), "$getName0", $rt_wrapFunction0(jur_UCISupplCharSet_getName)],
    jur_LowSurrogateCharSet, "LowSurrogateCharSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_LowSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_LowSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_LowSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_LowSurrogateCharSet_findBack), "$getName0", $rt_wrapFunction0(jur_LowSurrogateCharSet_getName), "$first1", $rt_wrapFunction1(jur_LowSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_LowSurrogateCharSet_hasConsumed)],
    jur_HighSurrogateCharSet, "HighSurrogateCharSet", 20, jur_JointSet, [], 0, 0, 0, 0, ["$setNext", $rt_wrapFunction1(jur_HighSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HighSurrogateCharSet_matches), "$find0", $rt_wrapFunction3(jur_HighSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_HighSurrogateCharSet_findBack), "$getName0", $rt_wrapFunction0(jur_HighSurrogateCharSet_getName), "$first1", $rt_wrapFunction1(jur_HighSurrogateCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HighSurrogateCharSet_hasConsumed)],
    jur_SupplCharSet, "SupplCharSet", 20, jur_LeafSet, [], 0, 0, 0, 0, ["$accepts", $rt_wrapFunction2(jur_SupplCharSet_accepts), "$find0", $rt_wrapFunction3(jur_SupplCharSet_find), "$findBack", $rt_wrapFunction4(jur_SupplCharSet_findBack), "$getName0", $rt_wrapFunction0(jur_SupplCharSet_getName), "$first1", $rt_wrapFunction1(jur_SupplCharSet_first)],
    jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$1_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$1_isAfterLineTerminator)],
    jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$2_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$2_isAfterLineTerminator)],
    jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
    otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0, 0,
    otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
    jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
    otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0, 0,
    otci_Base46, 0, jl_Object, [], 4, 3, 0, 0, 0,
    jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace_computeValue)],
    jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit_computeValue)],
    jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower_computeValue)],
    jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper_computeValue)],
    jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII_computeValue)],
    jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha_computeValue)],
    jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum_computeValue)],
    jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct_computeValue)],
    jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph_computeValue)],
    jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint_computeValue)],
    jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank_computeValue)],
    jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl_computeValue)],
    jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit_computeValue)],
    jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase_computeValue)],
    jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase_computeValue)],
    jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace_computeValue)],
    jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored_computeValue)],
    jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined_computeValue)],
    jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit_computeValue)],
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue)],
    jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl_computeValue)],
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue)],
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue)],
    jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter_computeValue)],
    jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue)],
    jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar_computeValue)],
    jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase_computeValue)],
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue)],
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue)],
    jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord_computeValue)],
    jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord_computeValue)],
    jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace_computeValue)],
    jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit_computeValue)]]);
    $rt_metadata([jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyRange_computeValue)],
    jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock_computeValue)],
    jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategory_computeValue)],
    jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategoryScope_computeValue)],
    otciu_CharMapping, 0, jl_Object, [], 0, 3, 0, 0, 0,
    otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 30, jl_Object, [], 0, 3, 0, 0, 0,
    jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 24, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, 0,
    cbgu_NumberUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cgxgbtp_Preloader$4, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbtp_Preloader$4_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_Preloader$4_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_Preloader$4_onSuccess0)],
    cgxgbtd_StyleWrapper$Unit, 0, jl_Enum, [], 9, 3, 0, cgxgbtd_StyleWrapper$Unit_$callClinit, 0,
    ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0, 0,
    cgxgbtp_AssetFilter, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbtd_EventTargetWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
    cgxgbtd_FileReaderWrapper, 0, jl_Object, [cgxgbtd_EventTargetWrapper, otj_JSObject], 1, 3, 0, 0, ["$removeEventListener$exported$0", $rt_wrapFunction2(cgxgbtd_FileReaderWrapper_removeEventListener$exported$0), "$dispatchEvent$exported$1", $rt_wrapFunction1(cgxgbtd_FileReaderWrapper_dispatchEvent$exported$1), "$addEventListener$exported$2", $rt_wrapFunction2(cgxgbtd_FileReaderWrapper_addEventListener$exported$2), "$addEventListener$exported$3", $rt_wrapFunction3(cgxgbtd_FileReaderWrapper_addEventListener$exported$3),
    "$removeEventListener$exported$4", $rt_wrapFunction3(cgxgbtd_FileReaderWrapper_removeEventListener$exported$4)],
    cgxgbtp_Preloader$3$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_Preloader$3$1_handleEvent$exported$0)],
    cgxgbtp_AssetType, "AssetType", 6, jl_Enum, [], 12, 3, 0, cgxgbtp_AssetType_$callClinit, 0,
    jlr_Modifier, 0, jl_Object, [], 0, 3, 0, 0, 0,
    jlr_AccessibleObject, 0, jl_Object, [jlr_AnnotatedElement], 0, 3, 0, 0, 0,
    jlr_Member, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jlr_Constructor, "Constructor", 25, jlr_AccessibleObject, [jlr_Member], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jlr_Constructor_toString)],
    jur_AbstractCharClass$1, "AbstractCharClass$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$1_contains)],
    jur_AbstractCharClass$2, "AbstractCharClass$2", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$2_contains)],
    jur_CharClass$18, "CharClass$18", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$18_contains), "$toString", $rt_wrapFunction0(jur_CharClass$18_toString)],
    jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$1_contains)],
    jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$3_contains)],
    jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$2_contains)],
    jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$5_contains)],
    jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$4_contains)],
    jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$7_contains)],
    jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$6_contains)],
    jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$9_contains)],
    jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$8_contains)],
    jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$11_contains)],
    jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$10_contains)],
    jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$13_contains)],
    jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$12_contains)],
    jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$15_contains)],
    jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$14_contains)],
    jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$17_contains)],
    jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_CharClass$16_contains)],
    jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0, 0,
    jl_IllegalStateException, "IllegalStateException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jl_IllegalMonitorStateException, "IllegalMonitorStateException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0, 0,
    cgxgbtu_KeyCodes, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgu_TimeUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
    otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$run", $rt_wrapFunction0(jl_Object$monitorExit$lambda$_8_0_run)],
    cgxgbtd_StyleWrapper$Unit$1, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0]);
    $rt_metadata([cgxgbtd_StyleWrapper$Unit$2, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
    cgxgbtd_StyleWrapper$Unit$3, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
    cgxgbtd_StyleWrapper$Unit$4, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
    cgxgbtd_StyleWrapper$Unit$5, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
    cgxgbtd_StyleWrapper$Unit$6, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
    cgxgbtd_StyleWrapper$Unit$7, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
    cgxgbtd_StyleWrapper$Unit$8, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
    cgxgbtd_StyleWrapper$Unit$9, 0, cgxgbtd_StyleWrapper$Unit, [], 12, 0, 0, 0, 0,
    ju_Objects, 0, jl_Object, [], 4, 3, 0, 0, 0,
    ka_GameKt, 0, jl_Object, [], 4, 3, 0, 0, 0,
    otjb_Performance, 0, jl_Object, [otj_JSObject], 4, 3, 0, 0, 0,
    cbg_Screen, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ka_KtxScreen, 0, jl_Object, [cbg_Screen, cbgu_Disposable], 3, 3, 0, 0, 0,
    ka_GameKt$emptyScreen$1, 0, jl_Object, [ka_KtxScreen], 4, 3, 0, 0, ["$show", $rt_wrapFunction0(ka_GameKt$emptyScreen$1_show), "$render0", $rt_wrapFunction1(ka_GameKt$emptyScreen$1_render), "$resize0", $rt_wrapFunction2(ka_GameKt$emptyScreen$1_resize), "$pause", $rt_wrapFunction0(ka_GameKt$emptyScreen$1_pause), "$resume", $rt_wrapFunction0(ka_GameKt$emptyScreen$1_resume), "$hide", $rt_wrapFunction0(ka_GameKt$emptyScreen$1_hide)],
    oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0, 0,
    otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, 0, ["$complete", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_complete), "$error", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_error)],
    jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, 0,
    jur_BackReferencedSingleSet, "BackReferencedSingleSet", 20, jur_SingleSet, [], 0, 0, 0, 0, ["$find0", $rt_wrapFunction3(jur_BackReferencedSingleSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferencedSingleSet_findBack), "$processBackRefReplacement", $rt_wrapFunction0(jur_BackReferencedSingleSet_processBackRefReplacement)],
    ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, 0,
    cgxgbtp_AssetDownloadImpl$1, 0, jl_Thread, [], 0, 0, 0, 0, ["$run", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl$1_run)],
    cgxgbt_TeaApplication$4, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaApplication$4_$callClinit, 0,
    otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject, otjde_EventTarget], 1, 3, 0, 0, ["$addEventListener$exported$0", $rt_wrapFunction2(otja_XMLHttpRequest_addEventListener$exported$0), "$removeEventListener$exported$1", $rt_wrapFunction2(otja_XMLHttpRequest_removeEventListener$exported$1), "$removeEventListener$exported$20", $rt_wrapFunction3(otja_XMLHttpRequest_removeEventListener$exported$2), "$dispatchEvent$exported$3", $rt_wrapFunction1(otja_XMLHttpRequest_dispatchEvent$exported$3), "$addEventListener$exported$4",
    $rt_wrapFunction3(otja_XMLHttpRequest_addEventListener$exported$4)],
    cgxgbtd_EventHandlerWrapper, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
    cgxgbtp_AssetDownloadImpl$2, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$2_handleEvent$exported$0)],
    cbgu_Collections, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgu_Array$ArrayIterator, 0, jl_Object, [ju_Iterator, jl_Iterable], 0, 3, 0, 0, 0,
    cbgu_Array$ArrayIterable, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
    cgxgbtp_Blob, "Blob", 6, jl_Object, [], 4, 3, 0, 0, 0,
    cgxgbtp_Preloader$3$1$1, "Preloader$3$1$1", 6, jl_Object, [jl_Runnable], 0, 0, 0, 0, ["$run", $rt_wrapFunction0(cgxgbtp_Preloader$3$1$1_run)],
    jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
    ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, 0, 0,
    ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, 0,
    ji_PrintStream, 0, ji_FilterOutputStream, [], 0, 3, 0, 0, 0,
    otcic_ConsoleOutputStream, 0, ji_OutputStream, [], 1, 3, 0, 0, 0,
    otcic_StdoutOutputStream, 0, otcic_ConsoleOutputStream, [], 0, 3, 0, 0, ["$write", $rt_wrapFunction3(otcic_StdoutOutputStream_write)],
    cgxgbtp_AssetDownloadImpl$6, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$6_handleEvent$exported$0)],
    jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, 0,
    jnci_UTF8Charset, 0, jnc_Charset, [], 0, 3, 0, jnci_UTF8Charset_$callClinit, ["$newEncoder", $rt_wrapFunction0(jnci_UTF8Charset_newEncoder)],
    jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 22, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
    igtg_FirstScreen, "FirstScreen", 34, jl_Object, [ka_KtxScreen], 4, 3, 0, igtg_FirstScreen_$callClinit, ["$show", $rt_wrapFunction0(igtg_FirstScreen_show), "$render0", $rt_wrapFunction1(igtg_FirstScreen_render), "$resize0", $rt_wrapFunction2(igtg_FirstScreen_resize), "$hide", $rt_wrapFunction0(igtg_FirstScreen_hide), "$pause", $rt_wrapFunction0(igtg_FirstScreen_pause), "$resume", $rt_wrapFunction0(igtg_FirstScreen_resume)],
    cbgu_ScreenUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
    ju_NoSuchElementException, "NoSuchElementException", 19, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    cbgu_GdxRuntimeException, "GdxRuntimeException", 10, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    otcir_Flags, 0, jl_Object, [], 4, 3, 0, 0, 0,
    jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1_contains)],
    jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1_contains)],
    jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1_contains)],
    jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1_contains)]]);
    $rt_metadata([jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1_contains)],
    jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1_contains)],
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains)],
    jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1_contains)],
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains)],
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains)],
    jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1_contains)],
    jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains)],
    jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1_contains)],
    jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1_contains)],
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains)],
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains)],
    jur_UnicodeCategory, "UnicodeCategory", 20, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_UnicodeCategory_contains)],
    jur_UnicodeCategoryScope, "UnicodeCategoryScope", 20, jur_UnicodeCategory, [], 0, 0, 0, 0, ["$contains1", $rt_wrapFunction1(jur_UnicodeCategoryScope_contains)],
    jl_Thread$start$lambda$_4_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$run", $rt_wrapFunction0(jl_Thread$start$lambda$_4_0_run)],
    cbgur_ArrayReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cgxgbtp_Preloader$12, 0, jl_Object, [], 32, 0, 0, cgxgbtp_Preloader$12_$callClinit, 0,
    ju_ConcurrentModificationException, "ConcurrentModificationException", 19, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    igtg_FrameRate, 0, jl_Object, [cbgu_Disposable], 4, 3, 0, 0, 0,
    otcic_StderrOutputStream, 0, otcic_ConsoleOutputStream, [], 0, 3, 0, 0, ["$write", $rt_wrapFunction3(otcic_StderrOutputStream_write)],
    jl_Double, 0, jl_Number, [jl_Comparable], 0, 3, 0, 0, 0,
    jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, 0, 0,
    otcit_DoubleAnalyzer, 0, jl_Object, [], 4, 3, 0, 0, 0,
    otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbggg_Batch, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
    cbggg_SpriteBatch, 0, jl_Object, [cbggg_Batch], 0, 3, 0, cbggg_SpriteBatch_$callClinit, ["$dispose", $rt_wrapFunction0(cbggg_SpriteBatch_dispose)],
    cbgg_Camera, 0, jl_Object, [], 1, 3, 0, 0, 0,
    cbgg_OrthographicCamera, "OrthographicCamera", 15, cbgg_Camera, [], 0, 3, 0, 0, 0,
    igtg_FirstScreen$Companion, 0, jl_Object, [], 4, 3, 0, 0, 0,
    jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0, 0,
    jl_Readable, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0, 0,
    jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$limit0", $rt_wrapFunction1(jn_ByteBuffer_limit), "$position0", $rt_wrapFunction1(jn_ByteBuffer_position)],
    jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, jnc_CodingErrorAction_$callClinit, 0,
    otr_EventQueue$Event, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jl_ThreadInterruptHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jl_Thread$SleepHandler, 0, jl_Object, [otp_PlatformRunnable, otr_EventQueue$Event, jl_ThreadInterruptHandler], 0, 0, 0, 0, ["$run", $rt_wrapFunction0(jl_Thread$SleepHandler_run)],
    jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0, 0,
    jn_CharBufferOverArray, 0, jn_CharBufferImpl, [], 0, 0, 0, 0, 0,
    jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
    jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, 0, 0,
    otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbggg_BitmapFont$BitmapFontData, "BitmapFont$BitmapFontData", 17, jl_Object, [], 0, 3, 0, 0, 0,
    cbgg_Mesh$VertexDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_Mesh$VertexDataType_$callClinit, 0,
    cbgg_Mesh, "Mesh", 15, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
    otcjn_HasArrayBufferView, 0, jl_Object, [], 3, 3, 0, 0, 0,
    jn_ByteBufferImpl, 0, jn_ByteBuffer, [otcjn_HasArrayBufferView], 0, 0, 0, 0, ["$getTypedArray", $rt_wrapFunction0(jn_ByteBufferImpl_getTypedArray)],
    cbggg_BitmapFont$Glyph, "BitmapFont$Glyph", 17, jl_Object, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cbggg_BitmapFont$Glyph_toString)],
    cbgg_VertexAttributes, 0, jl_Object, [jl_Iterable, jl_Comparable], 4, 3, 0, 0, 0,
    cbggg_ShaderProgram, "ShaderProgram", 16, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_ShaderProgram_$callClinit, 0]);
    $rt_metadata([cbgg_TextureData$Factory, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgg_Mesh$1, 0, jl_Object, [], 32, 0, 0, cbgg_Mesh$1_$callClinit, 0,
    cbggg_VertexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
    cbggg_VertexBufferObject, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObject_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObject_getNumVertices), "$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObject_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObject_bind), "$unbind", $rt_wrapFunction2(cbggg_VertexBufferObject_unbind), "$dispose", $rt_wrapFunction0(cbggg_VertexBufferObject_dispose)],
    cbggg_IndexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
    cbggg_IndexBufferObject, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumMaxIndices), "$setIndices", $rt_wrapFunction3(cbggg_IndexBufferObject_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObject_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObject_bind), "$unbind0", $rt_wrapFunction0(cbggg_IndexBufferObject_unbind), "$dispose", $rt_wrapFunction0(cbggg_IndexBufferObject_dispose)],
    cbggg_VertexBufferObjectSubData, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getNumVertices), "$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_bind), "$unbind", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_unbind), "$dispose", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_dispose)],
    cbggg_IndexBufferObjectSubData, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumMaxIndices), "$setIndices", $rt_wrapFunction3(cbggg_IndexBufferObjectSubData_setIndices), "$getBuffer", $rt_wrapFunction1(cbggg_IndexBufferObjectSubData_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_bind), "$unbind0", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_unbind),
    "$dispose", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_dispose)],
    cbggg_VertexBufferObjectWithVAO, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, cbggg_VertexBufferObjectWithVAO_$callClinit, ["$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getNumVertices), "$setVertices", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO_setVertices), "$bind0", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_bind), "$unbind", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_unbind),
    "$dispose", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_dispose)],
    cbggg_VertexArray, 0, cbggg_VertexBufferObject, [], 0, 3, 0, 0, 0,
    cbggg_IndexArray, 0, cbggg_IndexBufferObject, [], 0, 3, 0, 0, 0,
    cbgu_ObjectIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
    cbgu_BufferUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
    jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, jn_ByteOrder_$callClinit, 0,
    cbgg_TextureData, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbggg_FileTextureData, "FileTextureData", 16, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, 0,
    cbgg_Pixmap, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgg_Pixmap_$callClinit, 0,
    cbgf_FileHandle, 0, jl_Object, [], 0, 3, 0, 0, 0,
    jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
    jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$limit0", $rt_wrapFunction1(jn_FloatBuffer_limit0), "$position0", $rt_wrapFunction1(jn_FloatBuffer_position0)],
    cbgg_Pixmap$Blending, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Blending_$callClinit, 0,
    cbgg_Pixmap$Filter, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Filter_$callClinit, 0,
    cgxgbt_TeaFileHandle, "TeaFileHandle", 5, cbgf_FileHandle, [], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(cgxgbt_TeaFileHandle_toString)],
    cbggg_Gdx2DPixmapEmu, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
    jn_ShortBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, 0,
    otjt_ArrayBuffer, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    otjc_JSNumber, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    cbgg_Texture$TextureFilter, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureFilter_$callClinit, 0,
    cbgg_Texture$TextureWrap, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureWrap_$callClinit, 0,
    jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, 0, 0,
    jn_IntBufferOverArray, 0, jn_IntBufferImpl, [], 0, 0, 0, 0, ["$getElement", $rt_wrapFunction1(jn_IntBufferOverArray_getElement), "$putElement1", $rt_wrapFunction2(jn_IntBufferOverArray_putElement), "$readOnly7", $rt_wrapFunction0(jn_IntBufferOverArray_readOnly)],
    jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, 0, 0,
    jn_FloatBufferOverArray, 0, jn_FloatBufferImpl, [], 0, 0, 0, 0, ["$getElement0", $rt_wrapFunction1(jn_FloatBufferOverArray_getElement), "$putElement", $rt_wrapFunction2(jn_FloatBufferOverArray_putElement), "$readOnly7", $rt_wrapFunction0(jn_FloatBufferOverArray_readOnly)],
    otjc_JSArray, 0, jl_Object, [otjc_JSArrayReader], 1, 3, 0, 0, ["$get$exported$0", $rt_wrapFunction1(otjc_JSArray_get$exported$0), "$getLength$exported$1", $rt_wrapFunction0(otjc_JSArray_getLength$exported$1)],
    jn_ShortBufferImpl, 0, jn_ShortBuffer, [], 1, 0, 0, 0, 0,
    jn_ShortBufferOverArray, 0, jn_ShortBufferImpl, [], 0, 0, 0, 0, ["$getElement1", $rt_wrapFunction1(jn_ShortBufferOverArray_getElement), "$putElement0", $rt_wrapFunction2(jn_ShortBufferOverArray_putElement), "$readOnly7", $rt_wrapFunction0(jn_ShortBufferOverArray_readOnly)],
    jn_FloatBufferOverByteBuffer, 0, jn_FloatBufferImpl, [otcjn_HasArrayBufferView], 1, 0, 0, 0, ["$readOnly7", $rt_wrapFunction0(jn_FloatBufferOverByteBuffer_readOnly), "$getTypedArray", $rt_wrapFunction0(jn_FloatBufferOverByteBuffer_getTypedArray)],
    jn_FloatBufferOverByteBufferLittleEndian, 0, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement0", $rt_wrapFunction1(jn_FloatBufferOverByteBufferLittleEndian_getElement), "$putElement", $rt_wrapFunction2(jn_FloatBufferOverByteBufferLittleEndian_putElement)],
    jn_FloatBufferOverByteBufferBigEndian, 0, jn_FloatBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement0", $rt_wrapFunction1(jn_FloatBufferOverByteBufferBigEndian_getElement), "$putElement", $rt_wrapFunction2(jn_FloatBufferOverByteBufferBigEndian_putElement)],
    jn_ShortBufferOverByteBuffer, 0, jn_ShortBufferImpl, [otcjn_HasArrayBufferView], 1, 0, 0, 0, ["$readOnly7", $rt_wrapFunction0(jn_ShortBufferOverByteBuffer_readOnly), "$getTypedArray", $rt_wrapFunction0(jn_ShortBufferOverByteBuffer_getTypedArray)],
    jn_ShortBufferOverByteBufferLittleEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement1", $rt_wrapFunction1(jn_ShortBufferOverByteBufferLittleEndian_getElement), "$putElement0", $rt_wrapFunction2(jn_ShortBufferOverByteBufferLittleEndian_putElement)],
    jn_ShortBufferOverByteBufferBigEndian, 0, jn_ShortBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement1", $rt_wrapFunction1(jn_ShortBufferOverByteBufferBigEndian_getElement), "$putElement0", $rt_wrapFunction2(jn_ShortBufferOverByteBufferBigEndian_putElement)],
    jl_UnsupportedOperationException, "UnsupportedOperationException", 24, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jn_ReadOnlyBufferException, "ReadOnlyBufferException", 21, jl_UnsupportedOperationException, [], 0, 3, 0, 0, 0,
    jn_IntBufferOverByteBuffer, 0, jn_IntBufferImpl, [otcjn_HasArrayBufferView], 1, 0, 0, 0, ["$readOnly7", $rt_wrapFunction0(jn_IntBufferOverByteBuffer_readOnly)],
    jn_IntBufferOverByteBufferLittleEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferLittleEndian_getElement), "$putElement1", $rt_wrapFunction2(jn_IntBufferOverByteBufferLittleEndian_putElement)],
    jn_IntBufferOverByteBufferBigEndian, 0, jn_IntBufferOverByteBuffer, [], 0, 0, 0, 0, ["$getElement", $rt_wrapFunction1(jn_IntBufferOverByteBufferBigEndian_getElement), "$putElement1", $rt_wrapFunction2(jn_IntBufferOverByteBufferBigEndian_putElement)],
    jn_BufferUnderflowException, "BufferUnderflowException", 21, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    ka_KtxScreen$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbgu_ObjectMap$MapIterator, 0, jl_Object, [jl_Iterable, ju_Iterator], 1, 0, 0, 0, 0]);
    $rt_metadata([cbgu_ObjectMap$Values, 0, cbgu_ObjectMap$MapIterator, [], 0, 3, 0, 0, ["$reset", $rt_wrapFunction0(cbgu_ObjectMap$Values_reset)],
    jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0, 0,
    jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
    ji_IOException, "IOException", 23, jl_Exception, [], 0, 3, 0, 0, 0,
    cbg_Files$FileType, "Files$FileType", 9, jl_Enum, [], 12, 3, 0, cbg_Files$FileType_$callClinit, 0,
    ji_Reader, 0, jl_Object, [ji_Closeable, jl_Readable], 1, 3, 0, 0, 0,
    ji_BufferedReader, 0, ji_Reader, [], 0, 3, 0, 0, 0,
    ji_InputStreamReader, 0, ji_Reader, [], 0, 3, 0, 0, 0,
    ju_StringTokenizer, 0, jl_Object, [ju_Enumeration], 0, 3, 0, 0, 0,
    cbgu_StreamUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbggg_BitmapFontCache, 0, jl_Object, [], 0, 3, 0, cbggg_BitmapFontCache_$callClinit, 0,
    cbgg_Pixmap$Format, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Format_$callClinit, 0,
    otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, 0, 0,
    otcit_FloatSynthesizer, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbgg_PixmapEmu$DrawType, 0, jl_Enum, [], 12, 0, 0, cbgg_PixmapEmu$DrawType_$callClinit, 0,
    cbgg_Composite, 0, jl_Enum, [], 12, 3, 0, cbgg_Composite_$callClinit, 0,
    cbgg_TextureData$TextureDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_TextureData$TextureDataType_$callClinit, 0,
    cbggg_MipMapGenerator, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cbgg_PixmapEmu$2, 0, jl_Object, [], 32, 0, 0, cbgg_PixmapEmu$2_$callClinit, 0,
    jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, 0, 0,
    jn_BufferOverflowException, "BufferOverflowException", 21, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    cgxgbtf_FileDB, 0, jl_Object, [], 1, 3, 0, 0, 0,
    otcic_Console, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbggg_TextureAtlas$AtlasRegion, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
    otcjn_ArrayBufferUtil, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cgxgbtp_AssetDownloadImpl$1$1, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$1$1_handleEvent$exported$0)],
    jl_Object$NotifyListener, 0, jl_Object, [otp_PlatformRunnable, otr_EventQueue$Event], 3, 0, 0, 0, 0,
    jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, 0, 0,
    jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, 0,
    cgxgbtf_FileDBManager, 0, cgxgbtf_FileDB, [], 4, 3, 0, 0, 0,
    cgxgbtf_FileDBStorage, 0, cgxgbtf_FileDB, [], 4, 0, 0, cgxgbtf_FileDBStorage_$callClinit, 0,
    cgxgbtf_Store, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbtf_StoreLocal, 0, jl_Object, [cgxgbtf_Store], 0, 0, 0, 0, ["$getItem", $rt_wrapFunction1(cgxgbtf_StoreLocal_getItem), "$removeItem", $rt_wrapFunction1(cgxgbtf_StoreLocal_removeItem)],
    cgxgbtf_StoreMemory, 0, jl_Object, [cgxgbtf_Store], 0, 0, 0, 0, ["$getItem", $rt_wrapFunction1(cgxgbtf_StoreMemory_getItem), "$removeItem", $rt_wrapFunction1(cgxgbtf_StoreMemory_removeItem)],
    jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
    otjb_Storage, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
    ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, ["$read3", $rt_wrapFunction3(ji_InputStream_read), "$close", $rt_wrapFunction0(ji_InputStream_close)],
    ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$read4", $rt_wrapFunction0(ji_ByteArrayInputStream_read), "$read3", $rt_wrapFunction3(ji_ByteArrayInputStream_read0), "$close", $rt_wrapFunction0(ji_ByteArrayInputStream_close)],
    ji_UnsupportedEncodingException, 0, ji_IOException, [], 0, 3, 0, 0, 0,
    ka_KtxInputAdapter, 0, jl_Object, [cbg_InputProcessor], 3, 3, 0, 0, 0,
    igtg_FirstScreen$show$1, 0, jl_Object, [ka_KtxInputAdapter], 4, 3, 0, 0, 0,
    igtg_Gasket, 0, jl_Object, [], 4, 3, 0, 0, 0,
    igtg_ColorRandomizer, 0, jl_Object, [], 4, 3, 0, 0, 0,
    igtg_Circle, "Circle", 34, jl_Object, [], 4, 3, 0, igtg_Circle_$callClinit, ["$toString", $rt_wrapFunction0(igtg_Circle_toString), "$hashCode", $rt_wrapFunction0(igtg_Circle_hashCode), "$equals", $rt_wrapFunction1(igtg_Circle_equals)],
    igtg_GasketKt, 0, jl_Object, [], 4, 3, 0, igtg_GasketKt_$callClinit, 0,
    km_Vector2Kt, 0, jl_Object, [], 4, 3, 0, 0, 0,
    igtg_Triplet, "Triplet", 34, jl_Object, [], 4, 3, 0, 0, ["$toString", $rt_wrapFunction0(igtg_Triplet_toString), "$hashCode", $rt_wrapFunction0(igtg_Triplet_hashCode), "$equals", $rt_wrapFunction1(igtg_Triplet_equals)],
    k_UninitializedPropertyAccessException, "UninitializedPropertyAccessException", 35, jl_RuntimeException, [], 4, 3, 0, 0, 0,
    igtg_ColorRandomizerKt, 0, jl_Object, [], 4, 3, 0, igtg_ColorRandomizerKt_$callClinit, 0,
    igtg_Complex, "Complex", 34, jl_Object, [], 4, 3, 0, igtg_Complex_$callClinit, ["$equals", $rt_wrapFunction1(igtg_Complex_equals), "$toString", $rt_wrapFunction0(igtg_Complex_toString)]]);
    $rt_metadata([igtg_Circle$Companion, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbggg_ShapeRenderer, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, 0,
    igtg_Complex$Companion, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbggg_ImmediateModeRenderer, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cbggg_ImmediateModeRenderer20, 0, jl_Object, [cbggg_ImmediateModeRenderer], 0, 3, 0, 0, 0,
    jnc_CoderMalfunctionError, "CoderMalfunctionError", 22, jl_Error, [], 0, 3, 0, 0, 0,
    cgxgbtf_HEXCoder, 0, jl_Object, [], 0, 3, 0, 0, 0,
    cgxgbtp_Blob$1, 0, ji_InputStream, [], 0, 0, 0, 0, ["$read4", $rt_wrapFunction0(cgxgbtp_Blob$1_read)],
    ka_KtxInputAdapter$DefaultImpls, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbg_Preferences, 0, jl_Object, [], 3, 3, 0, 0, 0,
    cgxgbt_TeaPreferences, "TeaPreferences", 5, jl_Object, [cbg_Preferences], 0, 3, 0, 0, 0,
    jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, 0, jnc_Charset$Charsets_$callClinit, 0,
    jnc_UnsupportedCharsetException, "UnsupportedCharsetException", 22, jl_IllegalArgumentException, [], 0, 3, 0, 0, 0,
    jl_Boolean, "Boolean", 24, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Boolean_toString), "$hashCode", $rt_wrapFunction0(jl_Boolean_hashCode), "$equals", $rt_wrapFunction1(jl_Boolean_equals)],
    jnc_StandardCharsets, 0, jl_Object, [], 4, 3, 0, jnc_StandardCharsets_$callClinit, 0,
    jnci_AsciiCharset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$newEncoder", $rt_wrapFunction0(jnci_AsciiCharset_newEncoder)],
    jnci_Iso8859Charset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$newEncoder", $rt_wrapFunction0(jnci_Iso8859Charset_newEncoder)],
    jnci_UTF16Charset, 0, jnc_Charset, [], 0, 3, 0, 0, ["$newEncoder", $rt_wrapFunction0(jnci_UTF16Charset_newEncoder)],
    jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
    igtg_Descartes, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbggg_ShapeRenderer$ShapeType, "ShapeRenderer$ShapeType", 16, jl_Enum, [], 12, 3, 0, cbggg_ShapeRenderer$ShapeType_$callClinit, 0,
    cgxgbtp_Preloader$Asset, "Preloader$Asset", 6, jl_Object, [], 0, 3, 0, 0, 0,
    cbgu_ObjectMap$Keys, 0, cbgu_ObjectMap$MapIterator, [], 0, 3, 0, 0, ["$reset", $rt_wrapFunction0(cbgu_ObjectMap$Keys_reset)],
    igtg_ComplexKt, 0, jl_Object, [], 4, 3, 0, igtg_ComplexKt_$callClinit, 0,
    kc_CollectionsKt__CollectionsJVMKt, 0, jl_Object, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt__CollectionsKt, 0, kc_CollectionsKt__CollectionsJVMKt, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt__IterablesKt, 0, kc_CollectionsKt__CollectionsKt, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt__IteratorsJVMKt, 0, kc_CollectionsKt__IterablesKt, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt__IteratorsKt, 0, kc_CollectionsKt__IteratorsJVMKt, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt__MutableCollectionsJVMKt, 0, kc_CollectionsKt__IteratorsKt, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt__MutableCollectionsKt, 0, kc_CollectionsKt__MutableCollectionsJVMKt, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt__ReversedViewsKt, 0, kc_CollectionsKt__MutableCollectionsKt, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt___CollectionsJvmKt, 0, kc_CollectionsKt__ReversedViewsKt, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt___CollectionsKt, 0, kc_CollectionsKt___CollectionsJvmKt, [], 0, 0, 0, 0, 0,
    kc_CollectionsKt, 0, kc_CollectionsKt___CollectionsKt, [], 4, 3, 0, 0, 0,
    k_TuplesKt, 0, jl_Object, [], 4, 3, 0, 0, 0,
    k_Pair, "Pair", 35, jl_Object, [ji_Serializable], 4, 3, 0, 0, ["$toString", $rt_wrapFunction0(k_Pair_toString), "$hashCode", $rt_wrapFunction0(k_Pair_hashCode), "$equals", $rt_wrapFunction1(k_Pair_equals)],
    ju_Set, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
    jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, 0,
    ka_DisposablesKt, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbgu_StringBuilder, 0, jl_Object, [jl_Appendable, jl_CharSequence], 0, 3, 0, 0, 0,
    jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0, 0,
    jl_AssertionError, "AssertionError", 24, jl_Error, [], 0, 3, 0, 0, 0,
    cgxgbtp_Preloader$5, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, 0,
    ju_AbstractSet, 0, ju_AbstractCollection, [ju_Set], 1, 3, 0, 0, 0,
    ju_HashSet, 0, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, 0,
    kc_MapsKt__MapWithDefaultKt, 0, jl_Object, [], 0, 0, 0, 0, 0,
    kc_MapsKt__MapsJVMKt, 0, kc_MapsKt__MapWithDefaultKt, [], 0, 0, 0, 0, 0,
    kc_MapsKt__MapsKt, 0, kc_MapsKt__MapsJVMKt, [], 0, 0, 0, 0, 0,
    kc_MapsKt___MapsJvmKt, 0, kc_MapsKt__MapsKt, [], 0, 0, 0, 0, 0]);
    $rt_metadata([kc_MapsKt___MapsKt, 0, kc_MapsKt___MapsJvmKt, [], 0, 0, 0, 0, 0,
    kc_MapsKt, 0, kc_MapsKt___MapsKt, [], 4, 3, 0, 0, 0,
    jur_Matcher$1, "Matcher$1", 20, jl_Object, [], 0, 0, 0, 0, ["$toString", $rt_wrapFunction0(jur_Matcher$1_toString)],
    jnci_AsciiEncoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_AsciiEncoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
    jnci_Iso8859Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_Iso8859Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
    jnci_UTF16Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF16Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
    cgxgbtp_Preloader$7, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbtp_Preloader$7_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_Preloader$7_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_Preloader$7_onSuccess)],
    jnc_BufferUnderflowException, "BufferUnderflowException", 22, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jnc_BufferOverflowException, "BufferOverflowException", 22, jl_RuntimeException, [], 0, 3, 0, 0, 0,
    jnc_MalformedInputException, "MalformedInputException", 22, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_MalformedInputException_getMessage)],
    jnc_UnmappableCharacterException, "UnmappableCharacterException", 22, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$getMessage", $rt_wrapFunction0(jnc_UnmappableCharacterException_getMessage)],
    ju_HashMap$1, 0, ju_AbstractSet, [], 0, 0, 0, 0, 0,
    cgxgbtp_AssetDownloadImpl$7, 0, jl_Object, [], 32, 0, 0, cgxgbtp_AssetDownloadImpl$7_$callClinit, 0,
    ju_HashMap$AbstractMapIterator, 0, jl_Object, [], 0, 0, 0, 0, 0,
    ju_HashMap$KeyIterator, 0, ju_HashMap$AbstractMapIterator, [ju_Iterator], 0, 0, 0, 0, 0,
    cgxgbtp_AssetDownloadImpl$4, 0, jl_Thread, [], 0, 0, 0, 0, ["$run", $rt_wrapFunction0(cgxgbtp_AssetDownloadImpl$4_run)],
    cgxgbtp_AssetDownloadImpl$3, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$3_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$3_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$3_onSuccess)],
    cgxgbtp_AssetDownloadImpl$5, 0, cgxgbt_AssetLoaderListener, [], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5_onProgress), "$onFailure", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbtp_AssetDownloadImpl$5_onSuccess0)],
    cgxgbtp_AssetDownloadImpl$4$1, 0, jl_Object, [cgxgbtd_EventHandlerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$4$1_handleEvent$exported$0)],
    jl_InstantiationException, "InstantiationException", 24, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
    jl_IllegalAccessException, "IllegalAccessException", 24, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
    jlr_InvocationTargetException, 0, jl_ReflectiveOperationException, [], 0, 3, 0, 0, 0,
    otcir_Converter, 0, jl_Object, [], 4, 3, 0, 0, 0,
    cbgg_Colors, 0, jl_Object, [], 4, 3, 0, cbgg_Colors_$callClinit, 0,
    cgxgbtp_AssetDownloadImpl$5$1, 0, jl_Object, [cgxgbtd_EventListenerWrapper], 0, 0, 0, 0, ["$handleEvent$exported$0", $rt_wrapFunction1(cgxgbtp_AssetDownloadImpl$5$1_handleEvent$exported$0)]]);
    function $rt_array(cls, data) {
        this.$monitor = null;
        this.$id$ = 0;
        this.type = cls;
        this.data = data;
        this.constructor = $rt_arraycls(cls);
    }
    $rt_array.prototype = $rt_globals.Object.create(($rt_objcls()).prototype);
    $rt_array.prototype.toString = function() {
        var str = "[";
        for (var i = 0;i < this.data.length;++i) {
            if (i > 0) {
                str += ", ";
            }
            str += this.data[i].toString();
        }
        str += "]";
        return str;
    };
    $rt_setCloneMethod($rt_array.prototype, function() {
        var dataCopy;
        if ('slice' in this.data) {
            dataCopy = this.data.slice();
        } else {
            dataCopy = new this.data.constructor(this.data.length);
            for (var i = 0;i < dataCopy.length;++i) {
                dataCopy[i] = this.data[i];
            }
        }
        return new $rt_array(this.type, dataCopy);
    });
    $rt_stringPool(["Can\'t enter monitor from another thread synchronously", "null", "canvas", "app:", "args", "Android", "Mac", "Win", "Linux", "FreeBSD", "iPhone", "iPod", "iPad", "enabled", "disabled", "childrenOnly", "keyboard", "scroll", "touchDown", "touchUp", "touchDragged", "mouseMoved", "enter", "exit", "scrolled", "keyDown", "keyUp", "keyTyped", "Class cannot be created (missing no-arg constructor): ", "none", "all", "table", "cell", "actor", "object cannot be null.", "objects cannot be null.", "index can\'t be >= size: ",
    " >= ", "OnPlane", "Back", "Front", "bounces cannot be < 2 or > 5: ", "n must be positive", "Array is empty.", "Unable to create new instance: ", "", "If no regions are specified, the font data must have an images path.", "0", "This TextureData implementation does not upload data itself", "Call prepare() before calling getPixmap()", "Pixmap already disposed!", "unknown format: ", "start + count must be <= size: ", " + ", " <= ", "end can\'t be >= size: ", "start can\'t be > end: ", " > ", "additionalCapacity must be >= 0: ",
    "newSize must be >= 0: ", "[]", ", ", "loadFactor must be > 0 and < 1: ", "key cannot be null.", "Lambert", "Phong", "both", "top", "bottom", "Enabled", "EnabledUntilCycleEnd", "Disabled", "interface ", "class ", "<init>", ": ", "\tat ", "Caused by: ", "charsetName is null", "Should never been thrown", "String is null", "String is empty", "String contains invalid digits: ", "String contains digits out of radix ", "The value is too big for int type: ", "Illegal radix: ", "lateinit property ", " has not been initialized",
    " must not be null", "Parameter specified as non-null is null: method ", ".", ", parameter ", "java.runtime.name", "userAgent", "os.name", "Windows", "OS X", "no OS", ".html", "index.html", "index-debug.html", "assets/", "assets.txt", "resize", "Screen already registered to type: ", "gdx.wasm.js", "Missing screen instance of type: ", "type", "#iterator() cannot be used nested.", "values(...)", "Unable to dispose of ", "KTX", " screen.", "exception", "screen", "Either src or dest is null", "java.version",
    "1.8", "TeaVM", "file.separator", "/", "path.separator", ":", "line.separator", "\n", "java.io.tmpdir", "/tmp", "java.vm.version", "user.home", "LOAD_ASSETS", "APP_CREATE", "APP_LOOP", "offset + length must be <= size: ", "Loading asset : ", "Unsupported asset type ", "Loading script : ", "px", "UTF-8", "mousedown", "mouseup", "mousemove", "wheel", "touchstart", "touchmove", "touchcancel", "touchend", "keydown", "keypress", "keyup", "CSS1Compat", "hidden", "main", "capacity must be >= 0: ", "The required capacity is too large: ",
    "Can only cope with FloatBuffer and ShortBuffer at the moment", "glGetFloat not supported by WebGL backend", "GL error: ", "GLVersion", "OpenGL ES (\\d(\\.\\d){0,2})", "WebGL (\\d(\\.\\d){0,2})", "(\\d(\\.\\d){0,2})", "\\.", "Invalid version string: ", "Error parsing number: ", ", assuming: ", "libGDX GL", "Desktop", "HeadlessDesktop", "Applet", "WebGL", "iOS", "Webaudio", "Audiocontext unlocked", "OpenGL", "GLES", "NONE", "mp3", "ogg", "wav", "Patter is null", "Constructor not found for class: ", "Security violation occurred while getting constructor for class: \'",
    "\'.", "Security violation while getting constructor for class: ", "object", "function", "string", "number", "undefined", "Exception occurred in constructor for class: ", "Could not instantiate instance of class: ", "Illegal argument(s) supplied to constructor for class: ", "fSet", "\\Q", "\\E", "\\\\E\\Q", "Is", "In", "NonCapFSet", "AheadFSet", "BehindFSet", "AtomicFSet", "FinalSet", "<Empty set>", "JointSet", "NonCapJointSet", "PosLookaheadJointSet", "NegLookaheadJointSet", "PosBehindJointSet", "NegBehindJointSet",
    "<Quant>", "<GroupQuant>", "posFSet", " ", "^ ", "range:", "CompositeRangeSet:  <nonsurrogate> ", " <surrogate> ", "UCI range:", "decomposed Hangul syllable:", "UCI ", "CI ", "decomposed char:", "<DotAllQuant>", "<DotQuant>", "<SOL>", "WordBoundary", "PreviousMatch", "<EOL>", "EOI", "^", "DotAll", "<Unix MultiLine $>", "<MultiLine $>", "CI back reference: ", "back reference: ", "UCI back reference: ", "sequence: ", "UCI sequence: ", "CI sequence: ", "Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct",
    "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar", "javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions", "SpacingModifierLetters",
    "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan", "Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue",
    "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols", "NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols",
    "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended", "SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun",
    "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates", "LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks",
    "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc", "Sk", "So", "Pi", "Pf", "ErrorLoading: ", "i", "b", "a", "Invalid assets description file.", "PX", "PCT", "EM", "EX", "PT", "PC", "IN", "CM", "MM", "jpg", "jpeg", "png", "bmp", "gif", "json",
    "xml", "txt", "glsl", "fnt", "pack", "obj", "atlas", "g3dj", "Image", "Audio", "Text", "t", "Binary", "Directory", "public", "protected", "private", "abstract", "static", "final", "transient", "volatile", "synchronized", "native", "strictfp", "interface", "Script loaded: ", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "=", "==", "Action must be non-null", "Index out of bounds", "Replacement preconditions do not hold", "Gasker", "seed0", "preference", "seed1", "gasket", "com/badlogic/gdx/utils/lsans-15.fnt",
    "com/badlogic/gdx/utils/lsans-15.png", " fps", "Can\'t have more than 8191 sprites per batch: ", "a_position", "a_color", "a_texCoord0", "attribute vec4 a_position;\nattribute vec4 a_color;\nattribute vec2 a_texCoord0;\nuniform mat4 u_projTrans;\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main()\n{\n   v_color = a_color;\n   v_color.a = v_color.a * (255.0/254.0);\n   v_texCoords = a_texCoord0;\n   gl_Position =  u_projTrans * a_position;\n}\n", "#ifdef GL_ES\n#define LOWP lowp\nprecision mediump float;\n#else\n#define LOWP \n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\nvoid main()\n{\n  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}",
    "Error compiling shader: ", "SpriteBatch.end must be called before begin.", "SpriteBatch.begin must be called before end.", "SpriteBatch.begin must be called before draw.", "u_projTrans", "u_texture", "New position ", " is outside of range [0;", "New limit ", "The last char in dst ", " is outside of array of size ", "Length ", " must be non-negative", "Offset ", "The last char in src ", " is outside of string of size ", "Start ", " must be before end ", "The last byte in dst ", "The last byte in src ", "IGNORE",
    "REPLACE", "REPORT", "Capacity is negative: ", "Already loaded.", "File is empty.", "padding=", ",", "Invalid padding.", "Missing common header.", "Invalid common header.", "lineHeight=", "Missing: lineHeight", "base=", "Missing: base", "pages=", "Missing additional page definitions.", ".*id=(\\d+)", ".*file=\"?([^\"]+)\"?", "\\\\", "Missing: file", "Page IDs must be indices starting at 0: ", "Invalid page id: ", "kernings ", "metrics ", "char ", " =", "kerning ", "Error loading font file: ", "No glyphs found.",
    "VertexArray", "VertexBufferObject", "VertexBufferObjectSubData", "VertexBufferObjectWithVAO", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", ")", "Index ", "attributes must be >= 1", "vertex shader must not be null", "fragment shader must not be null", "Fragment shader:\n", "Vertex shader\n", "No uniform with name \'", "\' in shader", "An attempted fetch uniform from uncompiled shader \n", "data must be a ByteBuffer or FloatBuffer", "No buffer allocated!",
    "IndexBufferObject cannot be used after it has been disposed.", "BIG_ENDIAN", "LITTLE_ENDIAN", "Already prepared", "Couldn\'t load image \'", "\', file does not exist", "rgba(", "The last float in src ", "None", "SourceOver", "NearestNeighbour", "BiLinear", "FileType \'", "\' Not supported in web backend", "\\", " does not exist", "The last short in src ", "Nearest", "Linear", "MipMap", "MipMapNearestNearest", "MipMapLinearNearest", "MipMapNearestLinear", "MipMapLinearLinear", "MirroredRepeat", "ClampToEdge",
    "Repeat", "Classpath", "Internal", "External", "Absolute", "Local", "newAction must be non-null", "The specified font must contain at least one texture page.", "Unknown Gdx2DPixmap Format: ", "Intensity", "LuminanceAlpha", "RGB565", "RGBA4444", "RGB888", "RGBA8888", "FILL", "STROKE", "COPY", "copy", "DESTINATION_ATOP", "destination-atop", "DESTINATION_IN", "destination-in", "DESTINATION_OUT", "destination-out", "DESTINATION_OVER", "destination-over", "LIGHTER", "lighter", "SOURCE_ATOP", "source-atop", "SOURCE_IN",
    "source-in", "SOURCE_OUT", "source-out", "SOURCE_OVER", "source-over", "XOR", "xor", "Pixmap", "Custom", "com.badlogic.gdx.backends.lwjgl3.Lwjgl3GLES20", "texture width and height must be square when using mipmapping.", "�", "averageCharsPerByte must be positive. Actual value is ", "maxCharsPerByte must be positive. Actual value is ", "Asset loaded: ", "file-f:", "file-d:", "get(...)", "fixedColor", "color", "other", "max must be greater than min", "camera", "Circle(x=", ", y=", ", bend=", ", color=", ", segments=",
    ", isCone=", "false", "true", ", camera=", "c3", "c2", "c1", "Triplet(c1=", ", c2=", ", c3=", "img", "real", "c", "n", "Call end() before beginning a new shape batch.", "segments must be > 0.", "begin must be called first.", "Must call begin(ShapeType.", ").", ") or begin(ShapeType.", "u_sampler", "a_normal", "a_texCoord", "u_projModelView", "attribute vec4 a_position;\n", "attribute vec3 a_normal;\n", "attribute vec4 a_color;\n", "attribute vec2 a_texCoord", ";\n", "uniform mat4 u_projModelView;\n", "varying vec4 v_col;\n",
    "varying vec2 v_tex", "void main() {\n   gl_Position = u_projModelView * a_position;\n", "   v_col = a_color;\n   v_col.a *= 255.0 / 254.0;\n", "   v_tex", " = ", "   gl_PointSize = 1.0;\n}\n", "#ifdef GL_ES\nprecision mediump float;\n#endif\n", "uniform sampler2D u_sampler", "void main() {\n   gl_FragColor = ", "vec4(1, 1, 1, 1)", "v_col", " * ", " texture2D(u_sampler", ",  v_tex", ") *", ";\n}", "pref:", "l", "f", "Couldn\'t flush preferences", "US-ASCII", "ISO-8859-1", "UTF-16", "UTF-16BE", "UTF-16LE",
    "k4", "Point", "Line", "Filled", "<this>", "elements", "destination", "-2147483648", "Malformed input of length ", "Unmappable characters of length ", "data:", ";base64,", "CLEAR", "BLACK", "WHITE", "LIGHT_GRAY", "GRAY", "DARK_GRAY", "BLUE", "NAVY", "ROYAL", "SLATE", "SKY", "CYAN", "TEAL", "GREEN", "CHARTREUSE", "LIME", "FOREST", "OLIVE", "YELLOW", "GOLD", "GOLDENROD", "ORANGE", "BROWN", "TAN", "FIREBRICK", "RED", "SCARLET", "CORAL", "SALMON", "PINK", "MAGENTA", "PURPLE", "VIOLET", "MAROON", "error"]);
    jl_String.prototype.toString = function() {
        return $rt_ustr(this);
    };
    jl_String.prototype.valueOf = jl_String.prototype.toString;
    jl_Object.prototype.toString = function() {
        return $rt_ustr(jl_Object_toString(this));
    };
    jl_Object.prototype.__teavm_class__ = function() {
        return $dbg_class(this);
    };
    var Long_eq;
    var Long_ne;
    var Long_gt;
    var Long_ge;
    var Long_lt;
    var Long_le;
    var Long_compare;
    var Long_ucompare;
    var Long_add;
    var Long_sub;
    var Long_inc;
    var Long_dec;
    var Long_mul;
    var Long_div;
    var Long_rem;
    var Long_udiv;
    var Long_urem;
    var Long_neg;
    var Long_and;
    var Long_or;
    var Long_xor;
    var Long_shl;
    var Long_shr;
    var Long_shru;
    var Long_not;
    if (typeof $rt_globals.BigInt !== 'function') {
        Long_eq = function(a, b) {
            return a.hi === b.hi && a.lo === b.lo;
        };
        Long_ne = function(a, b) {
            return a.hi !== b.hi || a.lo !== b.lo;
        };
        Long_gt = function(a, b) {
            if (a.hi < b.hi) {
                return false;
            }
            if (a.hi > b.hi) {
                return true;
            }
            var x = a.lo >>> 1;
            var y = b.lo >>> 1;
            if (x !== y) {
                return x > y;
            }
            return (a.lo & 1) > (b.lo & 1);
        };
        Long_ge = function(a, b) {
            if (a.hi < b.hi) {
                return false;
            }
            if (a.hi > b.hi) {
                return true;
            }
            var x = a.lo >>> 1;
            var y = b.lo >>> 1;
            if (x !== y) {
                return x >= y;
            }
            return (a.lo & 1) >= (b.lo & 1);
        };
        Long_lt = function(a, b) {
            if (a.hi > b.hi) {
                return false;
            }
            if (a.hi < b.hi) {
                return true;
            }
            var x = a.lo >>> 1;
            var y = b.lo >>> 1;
            if (x !== y) {
                return x < y;
            }
            return (a.lo & 1) < (b.lo & 1);
        };
        Long_le = function(a, b) {
            if (a.hi > b.hi) {
                return false;
            }
            if (a.hi < b.hi) {
                return true;
            }
            var x = a.lo >>> 1;
            var y = b.lo >>> 1;
            if (x !== y) {
                return x <= y;
            }
            return (a.lo & 1) <= (b.lo & 1);
        };
        Long_add = function(a, b) {
            if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
                return Long_fromNumber(a.lo + b.lo);
            } else if ($rt_globals.Math.abs(a.hi) < Long_MAX_NORMAL && $rt_globals.Math.abs(b.hi) < Long_MAX_NORMAL) {
                return Long_fromNumber(Long_toNumber(a) + Long_toNumber(b));
            }
            var a_lolo = a.lo & 0xFFFF;
            var a_lohi = a.lo >>> 16;
            var a_hilo = a.hi & 0xFFFF;
            var a_hihi = a.hi >>> 16;
            var b_lolo = b.lo & 0xFFFF;
            var b_lohi = b.lo >>> 16;
            var b_hilo = b.hi & 0xFFFF;
            var b_hihi = b.hi >>> 16;
            var lolo = a_lolo + b_lolo | 0;
            var lohi = a_lohi + b_lohi + (lolo >> 16) | 0;
            var hilo = a_hilo + b_hilo + (lohi >> 16) | 0;
            var hihi = a_hihi + b_hihi + (hilo >> 16) | 0;
            return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
        };
        Long_inc = function(a) {
            var lo = a.lo + 1 | 0;
            var hi = a.hi;
            if (lo === 0) {
                hi = hi + 1 | 0;
            }
            return new Long(lo, hi);
        };
        Long_dec = function(a) {
            var lo = a.lo - 1 | 0;
            var hi = a.hi;
            if (lo ===  -1) {
                hi = hi - 1 | 0;
            }
            return new Long(lo, hi);
        };
        Long_neg = function(a) {
            return Long_inc(new Long(a.lo ^ 0xFFFFFFFF, a.hi ^ 0xFFFFFFFF));
        };
        Long_sub = function(a, b) {
            if (a.hi === a.lo >> 31 && b.hi === b.lo >> 31) {
                return Long_fromNumber(a.lo - b.lo);
            }
            var a_lolo = a.lo & 0xFFFF;
            var a_lohi = a.lo >>> 16;
            var a_hilo = a.hi & 0xFFFF;
            var a_hihi = a.hi >>> 16;
            var b_lolo = b.lo & 0xFFFF;
            var b_lohi = b.lo >>> 16;
            var b_hilo = b.hi & 0xFFFF;
            var b_hihi = b.hi >>> 16;
            var lolo = a_lolo - b_lolo | 0;
            var lohi = a_lohi - b_lohi + (lolo >> 16) | 0;
            var hilo = a_hilo - b_hilo + (lohi >> 16) | 0;
            var hihi = a_hihi - b_hihi + (hilo >> 16) | 0;
            return new Long(lolo & 0xFFFF | (lohi & 0xFFFF) << 16, hilo & 0xFFFF | (hihi & 0xFFFF) << 16);
        };
        Long_compare = function(a, b) {
            var r = a.hi - b.hi;
            if (r !== 0) {
                return r;
            }
            r = (a.lo >>> 1) - (b.lo >>> 1);
            if (r !== 0) {
                return r;
            }
            return (a.lo & 1) - (b.lo & 1);
        };
        Long_ucompare = function(a, b) {
            var r = $rt_ucmp(a.hi, b.hi);
            if (r !== 0) {
                return r;
            }
            r = (a.lo >>> 1) - (b.lo >>> 1);
            if (r !== 0) {
                return r;
            }
            return (a.lo & 1) - (b.lo & 1);
        };
        Long_mul = function(a, b) {
            var positive = Long_isNegative(a) === Long_isNegative(b);
            if (Long_isNegative(a)) {
                a = Long_neg(a);
            }
            if (Long_isNegative(b)) {
                b = Long_neg(b);
            }
            var a_lolo = a.lo & 0xFFFF;
            var a_lohi = a.lo >>> 16;
            var a_hilo = a.hi & 0xFFFF;
            var a_hihi = a.hi >>> 16;
            var b_lolo = b.lo & 0xFFFF;
            var b_lohi = b.lo >>> 16;
            var b_hilo = b.hi & 0xFFFF;
            var b_hihi = b.hi >>> 16;
            var lolo = 0;
            var lohi = 0;
            var hilo = 0;
            var hihi = 0;
            lolo = a_lolo * b_lolo | 0;
            lohi = lolo >>> 16;
            lohi = (lohi & 0xFFFF) + a_lohi * b_lolo | 0;
            hilo = hilo + (lohi >>> 16) | 0;
            lohi = (lohi & 0xFFFF) + a_lolo * b_lohi | 0;
            hilo = hilo + (lohi >>> 16) | 0;
            hihi = hilo >>> 16;
            hilo = (hilo & 0xFFFF) + a_hilo * b_lolo | 0;
            hihi = hihi + (hilo >>> 16) | 0;
            hilo = (hilo & 0xFFFF) + a_lohi * b_lohi | 0;
            hihi = hihi + (hilo >>> 16) | 0;
            hilo = (hilo & 0xFFFF) + a_lolo * b_hilo | 0;
            hihi = hihi + (hilo >>> 16) | 0;
            hihi = hihi + a_hihi * b_lolo + a_hilo * b_lohi + a_lohi * b_hilo + a_lolo * b_hihi | 0;
            var result = new Long(lolo & 0xFFFF | lohi << 16, hilo & 0xFFFF | hihi << 16);
            return positive ? result : Long_neg(result);
        };
        Long_div = function(a, b) {
            if ($rt_globals.Math.abs(a.hi) < Long_MAX_NORMAL && $rt_globals.Math.abs(b.hi) < Long_MAX_NORMAL) {
                return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
            }
            return (Long_divRem(a, b))[0];
        };
        Long_udiv = function(a, b) {
            if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
                return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
            }
            return (Long_udivRem(a, b))[0];
        };
        Long_rem = function(a, b) {
            if ($rt_globals.Math.abs(a.hi) < Long_MAX_NORMAL && $rt_globals.Math.abs(b.hi) < Long_MAX_NORMAL) {
                return Long_fromNumber(Long_toNumber(a) % Long_toNumber(b));
            }
            return (Long_divRem(a, b))[1];
        };
        Long_urem = function(a, b) {
            if (a.hi >= 0 && a.hi < Long_MAX_NORMAL && b.hi >= 0 && b.hi < Long_MAX_NORMAL) {
                return Long_fromNumber(Long_toNumber(a) / Long_toNumber(b));
            }
            return (Long_udivRem(a, b))[1];
        };
        function Long_divRem(a, b) {
            if (b.lo === 0 && b.hi === 0) {
                throw new $rt_globals.Error("Division by zero");
            }
            var positive = Long_isNegative(a) === Long_isNegative(b);
            if (Long_isNegative(a)) {
                a = Long_neg(a);
            }
            if (Long_isNegative(b)) {
                b = Long_neg(b);
            }
            a = new LongInt(a.lo, a.hi, 0);
            b = new LongInt(b.lo, b.hi, 0);
            var q = LongInt_div(a, b);
            a = new Long(a.lo, a.hi);
            q = new Long(q.lo, q.hi);
            return positive ? [q, a] : [Long_neg(q), Long_neg(a)];
        }
        function Long_udivRem(a, b) {
            if (b.lo === 0 && b.hi === 0) {
                throw new $rt_globals.Error("Division by zero");
            }
            a = new LongInt(a.lo, a.hi, 0);
            b = new LongInt(b.lo, b.hi, 0);
            var q = LongInt_div(a, b);
            a = new Long(a.lo, a.hi);
            q = new Long(q.lo, q.hi);
            return [q, a];
        }
        function Long_shiftLeft16(a) {
            return new Long(a.lo << 16, a.lo >>> 16 | a.hi << 16);
        }
        function Long_shiftRight16(a) {
            return new Long(a.lo >>> 16 | a.hi << 16, a.hi >>> 16);
        }
        Long_and = function(a, b) {
            return new Long(a.lo & b.lo, a.hi & b.hi);
        };
        Long_or = function(a, b) {
            return new Long(a.lo | b.lo, a.hi | b.hi);
        };
        Long_xor = function(a, b) {
            return new Long(a.lo ^ b.lo, a.hi ^ b.hi);
        };
        Long_shl = function(a, b) {
            b &= 63;
            if (b === 0) {
                return a;
            } else if (b < 32) {
                return new Long(a.lo << b, a.lo >>> 32 - b | a.hi << b);
            } else if (b === 32) {
                return new Long(0, a.lo);
            } else {
                return new Long(0, a.lo << b - 32);
            }
        };
        Long_shr = function(a, b) {
            b &= 63;
            if (b === 0) {
                return a;
            } else if (b < 32) {
                return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >> b);
            } else if (b === 32) {
                return new Long(a.hi, a.hi >> 31);
            } else {
                return new Long(a.hi >> b - 32, a.hi >> 31);
            }
        };
        Long_shru = function(a, b) {
            b &= 63;
            if (b === 0) {
                return a;
            } else if (b < 32) {
                return new Long(a.lo >>> b | a.hi << 32 - b, a.hi >>> b);
            } else if (b === 32) {
                return new Long(a.hi, 0);
            } else {
                return new Long(a.hi >>> b - 32, 0);
            }
        };
        Long_not = function(a) {
            return new Long(~a.hi, ~a.lo);
        };
        function LongInt(lo, hi, sup) {
            this.lo = lo;
            this.hi = hi;
            this.sup = sup;
        }
        function LongInt_mul(a, b) {
            var a_lolo = (a.lo & 0xFFFF) * b | 0;
            var a_lohi = (a.lo >>> 16) * b | 0;
            var a_hilo = (a.hi & 0xFFFF) * b | 0;
            var a_hihi = (a.hi >>> 16) * b | 0;
            var sup = a.sup * b | 0;
            a_lohi = a_lohi + (a_lolo >>> 16) | 0;
            a_hilo = a_hilo + (a_lohi >>> 16) | 0;
            a_hihi = a_hihi + (a_hilo >>> 16) | 0;
            sup = sup + (a_hihi >>> 16) | 0;
            a.lo = a_lolo & 0xFFFF | a_lohi << 16;
            a.hi = a_hilo & 0xFFFF | a_hihi << 16;
            a.sup = sup & 0xFFFF;
        }
        function LongInt_sub(a, b) {
            var a_lolo = a.lo & 0xFFFF;
            var a_lohi = a.lo >>> 16;
            var a_hilo = a.hi & 0xFFFF;
            var a_hihi = a.hi >>> 16;
            var b_lolo = b.lo & 0xFFFF;
            var b_lohi = b.lo >>> 16;
            var b_hilo = b.hi & 0xFFFF;
            var b_hihi = b.hi >>> 16;
            a_lolo = a_lolo - b_lolo | 0;
            a_lohi = a_lohi - b_lohi + (a_lolo >> 16) | 0;
            a_hilo = a_hilo - b_hilo + (a_lohi >> 16) | 0;
            a_hihi = a_hihi - b_hihi + (a_hilo >> 16) | 0;
            var sup = a.sup - b.sup + (a_hihi >> 16) | 0;
            a.lo = a_lolo & 0xFFFF | a_lohi << 16;
            a.hi = a_hilo & 0xFFFF | a_hihi << 16;
            a.sup = sup;
        }
        function LongInt_add(a, b) {
            var a_lolo = a.lo & 0xFFFF;
            var a_lohi = a.lo >>> 16;
            var a_hilo = a.hi & 0xFFFF;
            var a_hihi = a.hi >>> 16;
            var b_lolo = b.lo & 0xFFFF;
            var b_lohi = b.lo >>> 16;
            var b_hilo = b.hi & 0xFFFF;
            var b_hihi = b.hi >>> 16;
            a_lolo = a_lolo + b_lolo | 0;
            a_lohi = a_lohi + b_lohi + (a_lolo >> 16) | 0;
            a_hilo = a_hilo + b_hilo + (a_lohi >> 16) | 0;
            a_hihi = a_hihi + b_hihi + (a_hilo >> 16) | 0;
            var sup = a.sup + b.sup + (a_hihi >> 16) | 0;
            a.lo = a_lolo & 0xFFFF | a_lohi << 16;
            a.hi = a_hilo & 0xFFFF | a_hihi << 16;
            a.sup = sup;
        }
        function LongInt_inc(a) {
            a.lo = a.lo + 1 | 0;
            if (a.lo === 0) {
                a.hi = a.hi + 1 | 0;
                if (a.hi === 0) {
                    a.sup = a.sup + 1 & 0xFFFF;
                }
            }
        }
        function LongInt_dec(a) {
            a.lo = a.lo - 1 | 0;
            if (a.lo ===  -1) {
                a.hi = a.hi - 1 | 0;
                if (a.hi ===  -1) {
                    a.sup = a.sup - 1 & 0xFFFF;
                }
            }
        }
        function LongInt_ucompare(a, b) {
            var r = a.sup - b.sup;
            if (r !== 0) {
                return r;
            }
            r = (a.hi >>> 1) - (b.hi >>> 1);
            if (r !== 0) {
                return r;
            }
            r = (a.hi & 1) - (b.hi & 1);
            if (r !== 0) {
                return r;
            }
            r = (a.lo >>> 1) - (b.lo >>> 1);
            if (r !== 0) {
                return r;
            }
            return (a.lo & 1) - (b.lo & 1);
        }
        function LongInt_numOfLeadingZeroBits(a) {
            var n = 0;
            var d = 16;
            while (d > 0) {
                if (a >>> d !== 0) {
                    a >>>= d;
                    n = n + d | 0;
                }
                d = d / 2 | 0;
            }
            return 31 - n;
        }
        function LongInt_shl(a, b) {
            if (b === 0) {
                return;
            }
            if (b < 32) {
                a.sup = (a.hi >>> 32 - b | a.sup << b) & 0xFFFF;
                a.hi = a.lo >>> 32 - b | a.hi << b;
                a.lo <<= b;
            } else if (b === 32) {
                a.sup = a.hi & 0xFFFF;
                a.hi = a.lo;
                a.lo = 0;
            } else if (b < 64) {
                a.sup = (a.lo >>> 64 - b | a.hi << b - 32) & 0xFFFF;
                a.hi = a.lo << b;
                a.lo = 0;
            } else if (b === 64) {
                a.sup = a.lo & 0xFFFF;
                a.hi = 0;
                a.lo = 0;
            } else {
                a.sup = a.lo << b - 64 & 0xFFFF;
                a.hi = 0;
                a.lo = 0;
            }
        }
        function LongInt_shr(a, b) {
            if (b === 0) {
                return;
            }
            if (b === 32) {
                a.lo = a.hi;
                a.hi = a.sup;
                a.sup = 0;
            } else if (b < 32) {
                a.lo = a.lo >>> b | a.hi << 32 - b;
                a.hi = a.hi >>> b | a.sup << 32 - b;
                a.sup >>>= b;
            } else if (b === 64) {
                a.lo = a.sup;
                a.hi = 0;
                a.sup = 0;
            } else if (b < 64) {
                a.lo = a.hi >>> b - 32 | a.sup << 64 - b;
                a.hi = a.sup >>> b - 32;
                a.sup = 0;
            } else {
                a.lo = a.sup >>> b - 64;
                a.hi = 0;
                a.sup = 0;
            }
        }
        function LongInt_copy(a) {
            return new LongInt(a.lo, a.hi, a.sup);
        }
        function LongInt_div(a, b) {
            var bits = b.hi !== 0 ? LongInt_numOfLeadingZeroBits(b.hi) : LongInt_numOfLeadingZeroBits(b.lo) + 32;
            var sz = 1 + (bits / 16 | 0);
            var dividentBits = bits % 16;
            LongInt_shl(b, bits);
            LongInt_shl(a, dividentBits);
            var q = new LongInt(0, 0, 0);
            while (sz-- > 0) {
                LongInt_shl(q, 16);
                var digitA = (a.hi >>> 16) + 0x10000 * a.sup;
                var digitB = b.hi >>> 16;
                var digit = digitA / digitB | 0;
                var t = LongInt_copy(b);
                LongInt_mul(t, digit);
                if (LongInt_ucompare(t, a) >= 0) {
                    while (LongInt_ucompare(t, a) > 0) {
                        LongInt_sub(t, b);
                         --digit;
                    }
                } else {
                    while (true) {
                        var nextT = LongInt_copy(t);
                        LongInt_add(nextT, b);
                        if (LongInt_ucompare(nextT, a) > 0) {
                            break;
                        }
                        t = nextT;
                        ++digit;
                    }
                }
                LongInt_sub(a, t);
                q.lo |= digit;
                LongInt_shl(a, 16);
            }
            LongInt_shr(a, bits + 16);
            return q;
        }
    } else {
        Long_eq = function(a, b) {
            return a === b;
        };
        Long_ne = function(a, b) {
            return a !== b;
        };
        Long_gt = function(a, b) {
            return a > b;
        };
        Long_ge = function(a, b) {
            return a >= b;
        };
        Long_lt = function(a, b) {
            return a < b;
        };
        Long_le = function(a, b) {
            return a <= b;
        };
        Long_add = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a + b);
        };
        Long_inc = function(a) {
            return $rt_globals.BigInt.asIntN(64, a + 1);
        };
        Long_dec = function(a) {
            return $rt_globals.BigInt.asIntN(64, a - 1);
        };
        Long_neg = function(a) {
            return $rt_globals.BigInt.asIntN(64,  -a);
        };
        Long_sub = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a - b);
        };
        Long_compare = function(a, b) {
            return a < b ?  -1 : a > b ? 1 : 0;
        };
        Long_ucompare = function(a, b) {
            a = $rt_globals.BigInt.asUintN(64, a);
            b = $rt_globals.BigInt.asUintN(64, b);
            return a < b ?  -1 : a > b ? 1 : 0;
        };
        Long_mul = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a * b);
        };
        Long_div = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a / b);
        };
        Long_udiv = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, a) / $rt_globals.BigInt.asUintN(64, b));
        };
        Long_rem = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a % b);
        };
        Long_urem = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, a) % $rt_globals.BigInt.asUintN(64, b));
        };
        Long_and = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a & b);
        };
        Long_or = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a | b);
        };
        Long_xor = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a ^ b);
        };
        Long_shl = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a << $rt_globals.BigInt(b & 63));
        };
        Long_shr = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, a >> $rt_globals.BigInt(b & 63));
        };
        Long_shru = function(a, b) {
            return $rt_globals.BigInt.asIntN(64, $rt_globals.BigInt.asUintN(64, a) >> $rt_globals.BigInt(b & 63));
        };
        Long_not = function(a) {
            return $rt_globals.BigInt.asIntN(64, ~a);
        };
    }
    var Long_add = Long_add;

    var Long_sub = Long_sub;

    var Long_mul = Long_mul;

    var Long_div = Long_div;

    var Long_rem = Long_rem;

    var Long_or = Long_or;

    var Long_and = Long_and;

    var Long_xor = Long_xor;

    var Long_shl = Long_shl;

    var Long_shr = Long_shr;

    var Long_shru = Long_shru;

    var Long_compare = Long_compare;

    var Long_eq = Long_eq;

    var Long_ne = Long_ne;

    var Long_lt = Long_lt;

    var Long_le = Long_le;

    var Long_gt = Long_gt;

    var Long_ge = Long_ge;

    var Long_not = Long_not;

    var Long_neg = Long_neg;

    function TeaVMThread(runner) {
        this.status = 3;
        this.stack = [];
        this.suspendCallback = null;
        this.runner = runner;
        this.attribute = null;
        this.completeCallback = null;
    }
    TeaVMThread.prototype.push = function() {
        for (var i = 0;i < arguments.length;++i) {
            this.stack.push(arguments[i]);
        }
        return this;
    };
    TeaVMThread.prototype.s = TeaVMThread.prototype.push;
    TeaVMThread.prototype.pop = function() {
        return this.stack.pop();
    };
    TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
    TeaVMThread.prototype.isResuming = function() {
        return this.status === 2;
    };
    TeaVMThread.prototype.isSuspending = function() {
        return this.status === 1;
    };
    TeaVMThread.prototype.suspend = function(callback) {
        this.suspendCallback = callback;
        this.status = 1;
    };
    TeaVMThread.prototype.start = function(callback) {
        if (this.status !== 3) {
            throw new $rt_globals.Error("Thread already started");
        }
        if ($rt_currentNativeThread !== null) {
            throw new $rt_globals.Error("Another thread is running");
        }
        this.status = 0;
        this.completeCallback = callback ? callback : function(result) {
            if (result instanceof $rt_globals.Error) {
                throw result;
            }
        };
        this.run();
    };
    TeaVMThread.prototype.resume = function() {
        if ($rt_currentNativeThread !== null) {
            throw new $rt_globals.Error("Another thread is running");
        }
        this.status = 2;
        this.run();
    };
    TeaVMThread.prototype.run = function() {
        $rt_currentNativeThread = this;
        var result;
        try {
            result = this.runner();
        } catch (e){
            result = e;
        } finally {
            $rt_currentNativeThread = null;
        }
        if (this.suspendCallback !== null) {
            var self = this;
            var callback = this.suspendCallback;
            this.suspendCallback = null;
            callback(function() {
                self.resume();
            });
        } else if (this.status === 0) {
            this.completeCallback(result);
        }
    };
    function $rt_suspending() {
        var thread = $rt_nativeThread();
        return thread != null && thread.isSuspending();
    }
    function $rt_resuming() {
        var thread = $rt_nativeThread();
        return thread != null && thread.isResuming();
    }
    function $rt_suspend(callback) {
        var nativeThread = $rt_nativeThread();
        if (nativeThread === null) {
            throw new $rt_globals.Error("Suspension point reached from non-threading context (perhaps, from native JS method).");
        }
        return nativeThread.suspend(callback);
    }
    function $rt_startThread(runner, callback) {
        (new TeaVMThread(runner)).start(callback);
    }
    var $rt_currentNativeThread = null;
    function $rt_nativeThread() {
        return $rt_currentNativeThread;
    }
    function $rt_invalidPointer() {
        throw new $rt_globals.Error("Invalid recorded state");
    }
    $rt_exports.main = $rt_mainStarter(igtgt_TeaVMLauncher_main);
    $rt_exports.main.javaException = $rt_javaException;
    let $rt_jso_marker = $rt_globals.Symbol('jsoClass');
    (function() {
        var c;
        c = cgxgbtdi_TeaWindow.prototype;
        c[$rt_jso_marker] = true;
        c.onAnimationFrame = c.$onAnimationFrame$exported$0;
        c = cgxgbt_TeaInput.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = cgxgbt_TeaApplication$1.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = cgxgbt_TeaApplication$2.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = cgxgbt_TeaGraphics$1.prototype;
        c[$rt_jso_marker] = true;
        c.fullscreenChanged = c.$fullscreenChanged$exported$0;
        c = cgxgbt_TeaClipboard$ClipboardWriteHandler.prototype;
        c[$rt_jso_marker] = true;
        c.denied = c.$denied$exported$2;
        c.prompt = c.$prompt$exported$1;
        c.granted = c.$granted$exported$0;
        c = otjb_Window.prototype;
        c.removeEventListener = c.$removeEventListener$exported$3;
        c.dispatchEvent = c.$dispatchEvent$exported$4;
        c.get = c.$get$exported$0;
        c.addEventListener = c.$addEventListener$exported$6;
        Object.defineProperty(c, "length", {
            get: c.$getLength$exported$5
        });
        c = cgxgbtp_Preloader$1.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = cgxgbtp_Preloader$2.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = cgxgbtp_Preloader$3.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = cgxgbtw_WebAudioAPIManager$1.prototype;
        c[$rt_jso_marker] = true;
        c.unlockFunction = c.$unlockFunction$exported$0;
        c = otji_JSWrapper$_clinit_$lambda$_30_0.prototype;
        c[$rt_jso_marker] = true;
        c.accept = c.$accept$exported$0;
        c = otji_JSWrapper$_clinit_$lambda$_30_1.prototype;
        c[$rt_jso_marker] = true;
        c.accept = c.$accept$exported$0;
        c = cgxgbtd_FileReaderWrapper.prototype;
        c.removeEventListener = c.$removeEventListener$exported$4;
        c.dispatchEvent = c.$dispatchEvent$exported$1;
        c.addEventListener = c.$addEventListener$exported$3;
        c = cgxgbtp_Preloader$3$1.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = otjb_Performance.prototype;
        c[$rt_jso_marker] = true;
        c = otja_XMLHttpRequest.prototype;
        c.removeEventListener = c.$removeEventListener$exported$20;
        c.dispatchEvent = c.$dispatchEvent$exported$3;
        c.addEventListener = c.$addEventListener$exported$4;
        c = cgxgbtp_AssetDownloadImpl$2.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = cgxgbtp_AssetDownloadImpl$6.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = otjc_JSArray.prototype;
        c.get = c.$get$exported$0;
        Object.defineProperty(c, "length", {
            get: c.$getLength$exported$1
        });
        c = cgxgbtp_AssetDownloadImpl$1$1.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = cgxgbtp_AssetDownloadImpl$4$1.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
        c = cgxgbtp_AssetDownloadImpl$5$1.prototype;
        c[$rt_jso_marker] = true;
        c.handleEvent = c.$handleEvent$exported$0;
    })();
}));
